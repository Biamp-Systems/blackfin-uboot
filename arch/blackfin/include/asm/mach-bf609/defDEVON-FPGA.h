/* ================================================================================

     Project      :   ADSP-DEVON-FPGA
     File         :   defDEVON-FPGA.h
     Description  :   Register Definitions

     SVN Version  :   1358
     Date         :   2011-02-25
     

     Copyright (c) 2009-2011 Analog Devices, Inc.  All Rights Reserved.
     This software is proprietary and confidential to Analog Devices, Inc. and
     its licensors.

     This file was auto-generated. Do not make local changes to this file.

   ================================================================================ */

#ifndef _DEF_DEVON_FPGA_H
#define _DEF_DEVON_FPGA_H


/* =========================
        REGFILE
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        REGFILE_ASTAT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ASTAT_VS                        25            /* Sticky version of ASTAT_V */
#define BITP_ASTAT_V                         24            /* Overflow Flag */
#define BITP_ASTAT_AV1S                      19            /* Sticky Overflow Flag 1 */
#define BITP_ASTAT_AV1                       18            /* Overflow Flag 1 */
#define BITP_ASTAT_AV0S                      17            /* Sticky Overflow Flag 0 */
#define BITP_ASTAT_AV0                       16            /* Overflow Flag 0 */
#define BITP_ASTAT_AC1                       13            /* Carry Flag 1 */
#define BITP_ASTAT_AC0                       12            /* Carry Flag 0 */
#define BITP_ASTAT_RND_MOD                    8            /* Rounding Mode */
#define BITP_ASTAT_AQ                         6            /* Quotient Bit */
#define BITP_ASTAT_CC                         5            /* Condition Code */
#define BITP_ASTAT_V_COPY                     3            /* Overflow Flag */
#define BITP_ASTAT_AC0_COPY                   2            /* Carry Flag 0 */
#define BITP_ASTAT_AN                         1            /* Negative Flag */
#define BITP_ASTAT_AZ                         0            /* Zero Flag */
#define BITM_ASTAT_VS                        0x02000000    /* Sticky version of ASTAT_V */
#define BITM_ASTAT_V                         0x01000000    /* Overflow Flag */
#define BITM_ASTAT_AV1S                      0x00080000    /* Sticky Overflow Flag 1 */
#define BITM_ASTAT_AV1                       0x00040000    /* Overflow Flag 1 */
#define BITM_ASTAT_AV0S                      0x00020000    /* Sticky Overflow Flag 0 */
#define BITM_ASTAT_AV0                       0x00010000    /* Overflow Flag 0 */
#define BITM_ASTAT_AC1                       0x00002000    /* Carry Flag 1 */
#define BITM_ASTAT_AC0                       0x00001000    /* Carry Flag 0 */
#define BITM_ASTAT_RND_MOD                   0x00000100    /* Rounding Mode */
#define BITM_ASTAT_AQ                        0x00000040    /* Quotient Bit */
#define BITM_ASTAT_CC                        0x00000020    /* Condition Code */
#define BITM_ASTAT_V_COPY                    0x00000008    /* Overflow Flag */
#define BITM_ASTAT_AC0_COPY                  0x00000004    /* Carry Flag 0 */
#define BITM_ASTAT_AN                        0x00000002    /* Negative Flag */
#define BITM_ASTAT_AZ                        0x00000001    /* Zero Flag */

/* ------------------------------------------------------------------------------------------------------------------------
        REGFILE_LT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_LT_ADDR                          1            /* Loop Top Address */
#define BITP_LT_LSB                           0
#define BITM_LT_ADDR                         0xFFFFFFFE    /* Loop Top Address */
#define BITM_LT_LSB                          0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        REGFILE_SEQSTAT                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEQSTAT_NSPECABT                19            /* Nonspeculative access was aborted */
#define BITP_SEQSTAT_HWERRCAUSE              14            /* Holds cause of last hardware error generated by the core */
#define BITP_SEQSTAT_SFTRESET                13            /* Indicates whether the last reset was a software reset */
#define BITP_SEQSTAT_ITESTABT                12            /* ITEST_COMMAND was aborted */
#define BITP_SEQSTAT_DTESTABT                11            /* DTEST_COMMAND was aborted */
#define BITP_SEQSTAT_SYSNMI                  10            /* System NMI Input Active */
#define BITP_SEQSTAT_PEIC                     9            /* Parity Error on Instruction L1 Read for Core */
#define BITP_SEQSTAT_PEDC                     8            /* Parity Error on Data L1 Read for Core */
#define BITP_SEQSTAT_PEIX                     7            /* Parity Error on Instruction L1 Read for L2 Transfer */
#define BITP_SEQSTAT_PEDX                     6            /* Parity Error on Data L1 Read for L2 Transfer */
#define BITP_SEQSTAT_EXCAUSE                  0            /* Holds cause of last-executed exception */
#define BITM_SEQSTAT_NSPECABT                0x00080000    /* Nonspeculative access was aborted */
#define BITM_SEQSTAT_HWERRCAUSE              0x0007C000    /* Holds cause of last hardware error generated by the core */
#define BITM_SEQSTAT_SFTRESET                0x00002000    /* Indicates whether the last reset was a software reset */
#define BITM_SEQSTAT_ITESTABT                0x00001000    /* ITEST_COMMAND was aborted */
#define BITM_SEQSTAT_DTESTABT                0x00000800    /* DTEST_COMMAND was aborted */
#define BITM_SEQSTAT_SYSNMI                  0x00000400    /* System NMI Input Active */
#define BITM_SEQSTAT_PEIC                    0x00000200    /* Parity Error on Instruction L1 Read for Core */
#define BITM_SEQSTAT_PEDC                    0x00000100    /* Parity Error on Data L1 Read for Core */
#define BITM_SEQSTAT_PEIX                    0x00000080    /* Parity Error on Instruction L1 Read for L2 Transfer */
#define BITM_SEQSTAT_PEDX                    0x00000040    /* Parity Error on Data L1 Read for L2 Transfer */

#define BITM_SEQSTAT_EXCAUSE                 0x0000003F    /* Holds cause of last-executed exception */
#define ENUM_SEQSTAT_EXINST                  0x00000000    /* EXCAUSE: EXCPT Instruction */
#define ENUM_SEQSTAT_SSTEP                   0x00000010    /* EXCAUSE: Single Step */
#define ENUM_SEQSTAT_EMUTROV                 0x00000011    /* EXCAUSE: Trace Buffer */
#define ENUM_SEQSTAT_UNDEFINST               0x00000021    /* EXCAUSE: Undefined Instruction */
#define ENUM_SEQSTAT_ILLCOMB                 0x00000022    /* EXCAUSE: Illegal Combination */
#define ENUM_SEQSTAT_DAGPROTVIOL             0x00000023    /* EXCAUSE: DAG Protection Violation */
#define ENUM_SEQSTAT_DAGALGN                 0x00000024    /* EXCAUSE: DAG Misaligned Access */
#define ENUM_SEQSTAT_UNRECOVER               0x00000025    /* EXCAUSE: Unrecoverable Event */
#define ENUM_SEQSTAT_DAGCPLBMISS             0x00000026    /* EXCAUSE: DAG CPLB Miss */
#define ENUM_SEQSTAT_DAGMCPLBH               0x00000027    /* EXCAUSE: DAG Multiple CPLB Hits */
#define ENUM_SEQSTAT_EMUWPMATCH              0x00000028    /* EXCAUSE: Watchpoint Match */
#define ENUM_SEQSTAT_IFEXCPT                 0x00000029    /* EXCAUSE: I-Fetch Access Exception */
#define ENUM_SEQSTAT_IFALGN                  0x0000002A    /* EXCAUSE: I-Fetch Misaligned Access */
#define ENUM_SEQSTAT_IFPROTVIOL              0x0000002B    /* EXCAUSE: I-Fetch Protection Violation */
#define ENUM_SEQSTAT_IFCPLBMISS              0x0000002C    /* EXCAUSE: I-Fetch CPLB Miss */
#define ENUM_SEQSTAT_IFMCPLBH                0x0000002D    /* EXCAUSE: I-Fetch Multiple CPLB Hits */
#define ENUM_SEQSTAT_PROTVIOL                0x0000002E    /* EXCAUSE: Illegal use superv. res */

/* ------------------------------------------------------------------------------------------------------------------------
        REGFILE_SYSCFG                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SYSCFG_SNEN                      2            /* Self-Nesting Interrupt Enable */
#define BITP_SYSCFG_CCEN                      1            /* Enable cycle counter */
#define BITP_SYSCFG_SSSTEP                    0            /* Supervisor single step */
#define BITM_SYSCFG_SNEN                     0x00000004    /* Self-Nesting Interrupt Enable */
#define BITM_SYSCFG_CCEN                     0x00000002    /* Enable cycle counter */
#define BITM_SYSCFG_SSSTEP                   0x00000001    /* Supervisor single step */

/* =========================
        CNT Registers
   ========================= */

/* =========================
        CNT0
   ========================= */
#define REG_CNT0_CFG                    0xFFC00400         /* CNT0 Configuration Register */
#define REG_CNT0_IMSK                   0xFFC00404         /* CNT0 Interrupt Mask Register */
#define REG_CNT0_STAT                   0xFFC00408         /* CNT0 Status Register */
#define REG_CNT0_CMD                    0xFFC0040C         /* CNT0 Command Register */
#define REG_CNT0_DEBNCE                 0xFFC00410         /* CNT0 Debounce Register */
#define REG_CNT0_CNTR                   0xFFC00414         /* CNT0 Counter Register */
#define REG_CNT0_MAX                    0xFFC00418         /* CNT0 Maximum Count Register */
#define REG_CNT0_MIN                    0xFFC0041C         /* CNT0 Minimum Count Register */

/* =========================
        CNT
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        CNT_CFG                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CNT_CFG_INPDIS                  15
#define BITP_CNT_CFG_BNDMODE                 12
#define BITP_CNT_CFG_ZMZC                    11
#define BITP_CNT_CFG_CNTMODE                  8
#define BITP_CNT_CFG_CZMINV                   6
#define BITP_CNT_CFG_CUDINV                   5
#define BITP_CNT_CFG_CDGINV                   4
#define BITP_CNT_CFG_DEBEN                    1
#define BITP_CNT_CFG_EN                       0
#define BITM_CNT_CFG_INPDIS                  0x00008000
#define BITM_CNT_CFG_BNDMODE                 0x00003000
#define BITM_CNT_CFG_ZMZC                    0x00000800
#define BITM_CNT_CFG_CNTMODE                 0x00000700
#define BITM_CNT_CFG_CZMINV                  0x00000040
#define BITM_CNT_CFG_CUDINV                  0x00000020
#define BITM_CNT_CFG_CDGINV                  0x00000010
#define BITM_CNT_CFG_DEBEN                   0x00000002
#define BITM_CNT_CFG_EN                      0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        CNT_IMSK                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CNT_IMSK_CZMZ                   10            /* Counter Zeroed by Zero Marker Interrupt Enable */
#define BITP_CNT_IMSK_CZME                    9            /* Zero Marker Error Interrupt Enable */
#define BITP_CNT_IMSK_CZM                     8            /* CZM Pin Interrupt Enable */
#define BITP_CNT_IMSK_CZERO                   7            /* Counts to Zero Interrupt Enable */
#define BITP_CNT_IMSK_COV15                   6            /* Bit 15 Overflow Interrupt Enable */
#define BITP_CNT_IMSK_COV31                   5            /* Bit 31 Overflow Interrupt Enable */
#define BITP_CNT_IMSK_MAXC                    4            /* Max Count Interrupt Enable */
#define BITP_CNT_IMSK_MINC                    3            /* Min Count Interrupt Enable */
#define BITP_CNT_IMSK_DC                      2            /* Downcount Interrupt enable */
#define BITP_CNT_IMSK_UC                      1            /* Upcount Interrupt Enable */
#define BITP_CNT_IMSK_IC                      0            /* Illegal Gray/Binary Code Interrupt Enable */
#define BITM_CNT_IMSK_CZMZ                   0x00000400    /* Counter Zeroed by Zero Marker Interrupt Enable */
#define BITM_CNT_IMSK_CZME                   0x00000200    /* Zero Marker Error Interrupt Enable */
#define BITM_CNT_IMSK_CZM                    0x00000100    /* CZM Pin Interrupt Enable */
#define BITM_CNT_IMSK_CZERO                  0x00000080    /* Counts to Zero Interrupt Enable */
#define BITM_CNT_IMSK_COV15                  0x00000040    /* Bit 15 Overflow Interrupt Enable */
#define BITM_CNT_IMSK_COV31                  0x00000020    /* Bit 31 Overflow Interrupt Enable */
#define BITM_CNT_IMSK_MAXC                   0x00000010    /* Max Count Interrupt Enable */
#define BITM_CNT_IMSK_MINC                   0x00000008    /* Min Count Interrupt Enable */
#define BITM_CNT_IMSK_DC                     0x00000004    /* Downcount Interrupt enable */
#define BITM_CNT_IMSK_UC                     0x00000002    /* Upcount Interrupt Enable */
#define BITM_CNT_IMSK_IC                     0x00000001    /* Illegal Gray/Binary Code Interrupt Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        CNT_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CNT_STAT_CZMZ                   10            /* Counter zeroed by zero marker */
#define BITP_CNT_STAT_CZME                    9            /* Zero marker error interrupt */
#define BITP_CNT_STAT_CZM                     8            /* CZM pin interrupt */
#define BITP_CNT_STAT_CZERO                   7            /* Counts to zero interrupt */
#define BITP_CNT_STAT_COV15                   6            /* Bit 15 overflow interrupt */
#define BITP_CNT_STAT_COV31                   5            /* Bit 31 overflow interrupt */
#define BITP_CNT_STAT_MAXC                    4            /* Max interrupt */
#define BITP_CNT_STAT_MINC                    3            /* Min interrupt */
#define BITP_CNT_STAT_DC                      2            /* Downcount interrupt */
#define BITP_CNT_STAT_UC                      1            /* Upcount interrupt */
#define BITP_CNT_STAT_IC                      0            /* Illegal gray/binary code interrupt */
#define BITM_CNT_STAT_CZMZ                   0x00000400    /* Counter zeroed by zero marker */
#define BITM_CNT_STAT_CZME                   0x00000200    /* Zero marker error interrupt */
#define BITM_CNT_STAT_CZM                    0x00000100    /* CZM pin interrupt */
#define BITM_CNT_STAT_CZERO                  0x00000080    /* Counts to zero interrupt */
#define BITM_CNT_STAT_COV15                  0x00000040    /* Bit 15 overflow interrupt */
#define BITM_CNT_STAT_COV31                  0x00000020    /* Bit 31 overflow interrupt */
#define BITM_CNT_STAT_MAXC                   0x00000010    /* Max interrupt */
#define BITM_CNT_STAT_MINC                   0x00000008    /* Min interrupt */
#define BITM_CNT_STAT_DC                     0x00000004    /* Downcount interrupt */
#define BITM_CNT_STAT_UC                     0x00000002    /* Upcount interrupt */
#define BITM_CNT_STAT_IC                     0x00000001    /* Illegal gray/binary code interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        CNT_CMD                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CNT_CMD_W1ZMONCE                12            /* Write 1 to enable single Zero Marker clear COUNTER action */
#define BITP_CNT_CMD_W1LMAXMIN               10            /* Write 1 to copy former MIN to new MAX */
#define BITP_CNT_CMD_W1LMAXCNT                9            /* Write 1 to capture COUNTER to MAX */
#define BITP_CNT_CMD_W1LMAXZERO               8            /* Write 1 to zero MAX */
#define BITP_CNT_CMD_W1LMINMAX                7            /* Write 1 to copy  former MAX to new MIN */
#define BITP_CNT_CMD_W1LMINCNT                5            /* Write 1 to capture COUNTER to MIN */
#define BITP_CNT_CMD_W1LMINZERO               4            /* Write 1 to zero MIN */
#define BITP_CNT_CMD_W1LCNTMAX                3            /* Write 1 to load COUNTER from MAX */
#define BITP_CNT_CMD_W1LCNTMIN                2            /* Write 1 to load COUNTER from MIN */
#define BITP_CNT_CMD_W1LCNTZERO               0            /* Write 1 to zero COUNTER */
#define BITM_CNT_CMD_W1ZMONCE                0x00001000    /* Write 1 to enable single Zero Marker clear COUNTER action */
#define BITM_CNT_CMD_W1LMAXMIN               0x00000400    /* Write 1 to copy former MIN to new MAX */
#define BITM_CNT_CMD_W1LMAXCNT               0x00000200    /* Write 1 to capture COUNTER to MAX */
#define BITM_CNT_CMD_W1LMAXZERO              0x00000100    /* Write 1 to zero MAX */
#define BITM_CNT_CMD_W1LMINMAX               0x00000080    /* Write 1 to copy  former MAX to new MIN */
#define BITM_CNT_CMD_W1LMINCNT               0x00000020    /* Write 1 to capture COUNTER to MIN */
#define BITM_CNT_CMD_W1LMINZERO              0x00000010    /* Write 1 to zero MIN */
#define BITM_CNT_CMD_W1LCNTMAX               0x00000008    /* Write 1 to load COUNTER from MAX */
#define BITM_CNT_CMD_W1LCNTMIN               0x00000004    /* Write 1 to load COUNTER from MIN */
#define BITM_CNT_CMD_W1LCNTZERO              0x00000001    /* Write 1 to zero COUNTER */

/* ------------------------------------------------------------------------------------------------------------------------
        CNT_DEBNCE                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CNT_DEBNCE_DPRESCALE             0            /* Debounce Prescale Register */
#define BITM_CNT_DEBNCE_DPRESCALE            0x0000001F    /* Debounce Prescale Register */

/* =========================
        RSI Registers
   ========================= */

/* =========================
        RSI0
   ========================= */
#define REG_RSI0_CTL                    0xFFC00604         /* RSI0 Clock Control Register */
#define REG_RSI0_ARG                    0xFFC00608         /* RSI0 Argument Register */
#define REG_RSI0_CMD                    0xFFC0060C         /* RSI0 Command Register */
#define REG_RSI0_RESP_CMD               0xFFC00610         /* RSI0 Response Command Register */
#define REG_RSI0_RESP0                  0xFFC00614         /* RSI0 Response 0 Register */
#define REG_RSI0_RESP1                  0xFFC00618         /* RSI0 Response 1 Register */
#define REG_RSI0_RESP2                  0xFFC0061C         /* RSI0 Response 2 Register */
#define REG_RSI0_RESP3                  0xFFC00620         /* RSI0 Response 3 Register */
#define REG_RSI0_DATA_TMR               0xFFC00624         /* RSI0 Data Timer Register */
#define REG_RSI0_DATA_LEN               0xFFC00628         /* RSI0 Data Length Register */
#define REG_RSI0_DATA_CTL               0xFFC0062C         /* RSI0 Data Control Register */
#define REG_RSI0_DATA_CNT               0xFFC00630         /* RSI0 Data Count Register */
#define REG_RSI0_XFRSTAT                0xFFC00634         /* RSI0 Status Register */
#define REG_RSI0_XFRSTAT_CLR            0xFFC00638         /* RSI0 Status Clear Register */
#define REG_RSI0_XFR_IMSK0              0xFFC0063C         /* RSI0 Interrupt 0 Mask Register */
#define REG_RSI0_XFR_IMSK1              0xFFC00640         /* RSI0 Interrupt 1 Mask Register */
#define REG_RSI0_FIFO_CNT               0xFFC00648         /* RSI0 FIFO Counter Register */
#define REG_RSI0_CEATA                  0xFFC0064C         /* RSI0 This register contains bit to dis CCS gen */
#define REG_RSI0_BOOT_TCNTR             0xFFC00650         /* RSI0 Boot Timing Counter Register */
#define REG_RSI0_BACK_TOUT              0xFFC00654         /* RSI0 Boot Acknowledge Timeout Register */
#define REG_RSI0_SLP_WKUP_TOUT          0xFFC00658         /* RSI0 Sleep Wakeup Timeout Register */
#define REG_RSI0_BLKSZ                  0xFFC0065C         /* RSI0 Block Size Register */
#define REG_RSI0_FIFO                   0xFFC00680         /* RSI0 Data FIFO Register */
#define REG_RSI0_STAT0                  0xFFC006C0         /* RSI0 Exception Status Register */
#define REG_RSI0_IMSK0                  0xFFC006C4         /* RSI0 Exception Mask Register */
#define REG_RSI0_CFG                    0xFFC006C8         /* RSI0 Configuration Register */
#define REG_RSI0_RD_WAIT                0xFFC006CC         /* RSI0 Read Wait Enable Register */
#define REG_RSI0_PID0                   0xFFC006D0         /* RSI0 Peripheral Identification Register */
#define REG_RSI0_PID1                   0xFFC006D4         /* RSI0 Peripheral Identification Register */
#define REG_RSI0_PID2                   0xFFC006D8         /* RSI0 Peripheral Identification Register */
#define REG_RSI0_PID3                   0xFFC006DC         /* RSI0 Peripheral Identification Register */

/* =========================
        RSI
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        RSI_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_CTL_CARDTYPE                13            /* Type of Card */
#define BITP_RSI_CTL_BUSWID                  11            /* Wide Bus Mode Enable */
#define BITP_RSI_CTL_BYPASS                  10            /* Bypass clock divisor */
#define BITP_RSI_CTL_PWRSAVE                  9            /* Power Save Enable */
#define BITP_RSI_CTL_CLKEN                    8            /* SD_CLK Bus Clock Enable */
#define BITP_RSI_CTL_CLKDIV                   0            /* SD_CLK Divisor */
#define BITM_RSI_CTL_CARDTYPE                0x0000E000    /* Type of Card */
#define BITM_RSI_CTL_BUSWID                  0x00001800    /* Wide Bus Mode Enable */
#define BITM_RSI_CTL_BYPASS                  0x00000400    /* Bypass clock divisor */
#define BITM_RSI_CTL_PWRSAVE                 0x00000200    /* Power Save Enable */
#define BITM_RSI_CTL_CLKEN                   0x00000100    /* SD_CLK Bus Clock Enable */
#define BITM_RSI_CTL_CLKDIV                  0x000000FF    /* SD_CLK Divisor */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_CMD                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_CMD_CHKBUSY                 12            /* Check Busy Condition */
#define BITP_RSI_CMD_CRCDIS                  11            /* Disable CRC Check */
#define BITP_RSI_CMD_EN                      10            /* Command Enable */
#define BITP_RSI_CMD_PNDEN                    9            /* Command Pending enabled */
#define BITP_RSI_CMD_IEN                      8            /* Command Interrupt Enabled */
#define BITP_RSI_CMD_LRSP                     7            /* Long Response */
#define BITP_RSI_CMD_RSP                      6            /* Response */
#define BITP_RSI_CMD_IDX                      0            /* Command Index */
#define BITM_RSI_CMD_CHKBUSY                 0x00001000    /* Check Busy Condition */
#define BITM_RSI_CMD_CRCDIS                  0x00000800    /* Disable CRC Check */
#define BITM_RSI_CMD_EN                      0x00000400    /* Command Enable */
#define BITM_RSI_CMD_PNDEN                   0x00000200    /* Command Pending enabled */
#define BITM_RSI_CMD_IEN                     0x00000100    /* Command Interrupt Enabled */
#define BITM_RSI_CMD_LRSP                    0x00000080    /* Long Response */
#define BITM_RSI_CMD_RSP                     0x00000040    /* Response */
#define BITM_RSI_CMD_IDX                     0x0000003F    /* Command Index */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_RESP_CMD                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_RESP_CMD_VALUE               0            /* Response Command */
#define BITM_RSI_RESP_CMD_VALUE              0x0000003F    /* Response Command */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_DATA_CTL                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_DATA_CTL_CEATAIEN            9            /* Ceata Command Completion Interrupt Enable */
#define BITP_RSI_DATA_CTL_CEATAMODE           8            /* Ceata Mode enable */
#define BITP_RSI_DATA_CTL_DMAEN               3            /* Data Transfer DMA Enable */
#define BITP_RSI_DATA_CTL_DATMODE             2            /* Data Transfer Mode */
#define BITP_RSI_DATA_CTL_DATDIR              1            /* Data Transfer Direction */
#define BITP_RSI_DATA_CTL_DATEN               0            /* Data Transfer Enable */
#define BITM_RSI_DATA_CTL_CEATAIEN           0x00000200    /* Ceata Command Completion Interrupt Enable */
#define BITM_RSI_DATA_CTL_CEATAMODE          0x00000100    /* Ceata Mode enable */
#define BITM_RSI_DATA_CTL_DMAEN              0x00000008    /* Data Transfer DMA Enable */
#define BITM_RSI_DATA_CTL_DATMODE            0x00000004    /* Data Transfer Mode */
#define BITM_RSI_DATA_CTL_DATDIR             0x00000002    /* Data Transfer Direction */
#define BITM_RSI_DATA_CTL_DATEN              0x00000001    /* Data Transfer Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_XFRSTAT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_XFRSTAT_RXFIFORDY           21            /* Receive FIFO Available */
#define BITP_RSI_XFRSTAT_TXFIFORDY           20            /* Transmit FIFO Available */
#define BITP_RSI_XFRSTAT_RXFIFOZERO          19            /* Receive FIFO Empty */
#define BITP_RSI_XFRSTAT_TXFIFOZERO          18            /* Transmit FIFO Empty */
#define BITP_RSI_XFRSTAT_RXFIFOFULL          17            /* Receive FIFO Full */
#define BITP_RSI_XFRSTAT_TXFIFOFULL          16            /* Transmit FIFO Full */
#define BITP_RSI_XFRSTAT_RXFIFOSTAT          15            /* Receive FIFO Status */
#define BITP_RSI_XFRSTAT_TXFIFOSTAT          14            /* Transmit FIFO Status */
#define BITP_RSI_XFRSTAT_RXACT               13            /* Receive Active */
#define BITP_RSI_XFRSTAT_TXACT               12            /* Transmit Active */
#define BITP_RSI_XFRSTAT_CMDACT              11            /* Command Active */
#define BITP_RSI_XFRSTAT_DATBLKEND           10            /* Data Block End */
#define BITP_RSI_XFRSTAT_SBITERR              9            /* Start Bit Error */
#define BITP_RSI_XFRSTAT_DATEND               8            /* Data End */
#define BITP_RSI_XFRSTAT_CMDSENT              7            /* Command Sent */
#define BITP_RSI_XFRSTAT_RESPEND              6            /* Command Response End */
#define BITP_RSI_XFRSTAT_RXOVER               5            /* Receive Over run */
#define BITP_RSI_XFRSTAT_TXUNDR               4            /* Transmit Under run */
#define BITP_RSI_XFRSTAT_DATTO                3            /* Data Timeout */
#define BITP_RSI_XFRSTAT_CMDTO                2            /* CMD Timeout */
#define BITP_RSI_XFRSTAT_DATCRCFAIL           1            /* Data CRC Fail */
#define BITP_RSI_XFRSTAT_CMDCRCFAIL           0            /* CMD CRC Fail */
#define BITM_RSI_XFRSTAT_RXFIFORDY           0x00200000    /* Receive FIFO Available */
#define BITM_RSI_XFRSTAT_TXFIFORDY           0x00100000    /* Transmit FIFO Available */
#define BITM_RSI_XFRSTAT_RXFIFOZERO          0x00080000    /* Receive FIFO Empty */
#define BITM_RSI_XFRSTAT_TXFIFOZERO          0x00040000    /* Transmit FIFO Empty */
#define BITM_RSI_XFRSTAT_RXFIFOFULL          0x00020000    /* Receive FIFO Full */
#define BITM_RSI_XFRSTAT_TXFIFOFULL          0x00010000    /* Transmit FIFO Full */
#define BITM_RSI_XFRSTAT_RXFIFOSTAT          0x00008000    /* Receive FIFO Status */
#define BITM_RSI_XFRSTAT_TXFIFOSTAT          0x00004000    /* Transmit FIFO Status */
#define BITM_RSI_XFRSTAT_RXACT               0x00002000    /* Receive Active */
#define BITM_RSI_XFRSTAT_TXACT               0x00001000    /* Transmit Active */
#define BITM_RSI_XFRSTAT_CMDACT              0x00000800    /* Command Active */
#define BITM_RSI_XFRSTAT_DATBLKEND           0x00000400    /* Data Block End */
#define BITM_RSI_XFRSTAT_SBITERR             0x00000200    /* Start Bit Error */
#define BITM_RSI_XFRSTAT_DATEND              0x00000100    /* Data End */
#define BITM_RSI_XFRSTAT_CMDSENT             0x00000080    /* Command Sent */
#define BITM_RSI_XFRSTAT_RESPEND             0x00000040    /* Command Response End */
#define BITM_RSI_XFRSTAT_RXOVER              0x00000020    /* Receive Over run */
#define BITM_RSI_XFRSTAT_TXUNDR              0x00000010    /* Transmit Under run */
#define BITM_RSI_XFRSTAT_DATTO               0x00000008    /* Data Timeout */
#define BITM_RSI_XFRSTAT_CMDTO               0x00000004    /* CMD Timeout */
#define BITM_RSI_XFRSTAT_DATCRCFAIL          0x00000002    /* Data CRC Fail */
#define BITM_RSI_XFRSTAT_CMDCRCFAIL          0x00000001    /* CMD CRC Fail */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_XFRSTAT_CLR                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_XFRSTAT_CLR_DATBLKEND       10            /* Data Block End Status */
#define BITP_RSI_XFRSTAT_CLR_STRTBITERR       9            /* Start Bit Error Status */
#define BITP_RSI_XFRSTAT_CLR_DATEND           8            /* Data End Status */
#define BITP_RSI_XFRSTAT_CLR_CMDSENT          7            /* Command Sent Status */
#define BITP_RSI_XFRSTAT_CLR_RESPEND          6            /* Command Response End Status */
#define BITP_RSI_XFRSTAT_CLR_RXOVER           5            /* Receive Over run Status */
#define BITP_RSI_XFRSTAT_CLR_TXUNDR           4            /* Transmit Under run Status */
#define BITP_RSI_XFRSTAT_CLR_DATTO            3            /* Data Timeout Status */
#define BITP_RSI_XFRSTAT_CLR_CMDTO            2            /* CMD Timeout Status */
#define BITP_RSI_XFRSTAT_CLR_DATCRCFAIL       1            /* Data CRC Fail Status */
#define BITP_RSI_XFRSTAT_CLR_CMDCRCFAIL       0            /* CMD CRC Fail Status */
#define BITM_RSI_XFRSTAT_CLR_DATBLKEND       0x00000400    /* Data Block End Status */
#define BITM_RSI_XFRSTAT_CLR_STRTBITERR      0x00000200    /* Start Bit Error Status */
#define BITM_RSI_XFRSTAT_CLR_DATEND          0x00000100    /* Data End Status */
#define BITM_RSI_XFRSTAT_CLR_CMDSENT         0x00000080    /* Command Sent Status */
#define BITM_RSI_XFRSTAT_CLR_RESPEND         0x00000040    /* Command Response End Status */
#define BITM_RSI_XFRSTAT_CLR_RXOVER          0x00000020    /* Receive Over run Status */
#define BITM_RSI_XFRSTAT_CLR_TXUNDR          0x00000010    /* Transmit Under run Status */
#define BITM_RSI_XFRSTAT_CLR_DATTO           0x00000008    /* Data Timeout Status */
#define BITM_RSI_XFRSTAT_CLR_CMDTO           0x00000004    /* CMD Timeout Status */
#define BITM_RSI_XFRSTAT_CLR_DATCRCFAIL      0x00000002    /* Data CRC Fail Status */
#define BITM_RSI_XFRSTAT_CLR_CMDCRCFAIL      0x00000001    /* CMD CRC Fail Status */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_XFR_IMSK0                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_XFR_IMSK0_RXFIFORDY         21            /* Enable Interrupt for Receive FIFO Available */
#define BITP_RSI_XFR_IMSK0_TXFIFORDY         20            /* Enable Interrupt for Transmit FIFO Available */
#define BITP_RSI_XFR_IMSK0_RXFIFOZERO        19            /* Enable Interrupt for Receive FIFO Empty */
#define BITP_RSI_XFR_IMSK0_TXFIFOZERO        18            /* Enable Interrupt for Transmit FIFO Empty */
#define BITP_RSI_XFR_IMSK0_RXFIFOFULL        17            /* Enable Interrupt for Receive FIFO Full */
#define BITP_RSI_XFR_IMSK0_TXFIFOFULL        16            /* Enable Interrupt for Transmit FIFO Full */
#define BITP_RSI_XFR_IMSK0_RXFIFOSTAT        15            /* Enable Interrupt for Receive FIFO Status */
#define BITP_RSI_XFR_IMSK0_TXFIFOSTAT        14            /* Enable Interrupt for Transmit FIFO Status */
#define BITP_RSI_XFR_IMSK0_RXACT             13            /* Enable Interrupt for Receive Active */
#define BITP_RSI_XFR_IMSK0_TXACT             12            /* Enable Interrupt for Transmit Active */
#define BITP_RSI_XFR_IMSK0_CMDACT            11            /* Enable Interrupt for Command Active */
#define BITP_RSI_XFR_IMSK0_DATBLKEND         10            /* Enable Interrupt for Data Block End */
#define BITP_RSI_XFR_IMSK0_STRTBITERR         9            /* Enable Interrupt for Start Bit Error */
#define BITP_RSI_XFR_IMSK0_DATEND             8            /* Enable Interrupt for Data End */
#define BITP_RSI_XFR_IMSK0_CMDSENT            7            /* Enable Interrupt for Command Sent */
#define BITP_RSI_XFR_IMSK0_RESPEND            6            /* Enable Interrupt for Command Response End */
#define BITP_RSI_XFR_IMSK0_RXOVER             5            /* Enable Interrupt for Receive Over run */
#define BITP_RSI_XFR_IMSK0_TXUNDR             4            /* Enable Interrupt for Transmit Under run */
#define BITP_RSI_XFR_IMSK0_DATTO              3            /* Enable Interrupt for Data Timeout */
#define BITP_RSI_XFR_IMSK0_CMDTO              2            /* Enable Interrupt for CMD Timeout */
#define BITP_RSI_XFR_IMSK0_DATCRCFAIL         1            /* Enable Interrupt for Data CRC Fail */
#define BITP_RSI_XFR_IMSK0_CMDCRCFAIL         0            /* Enable Interrupt for CMD CRC Fail */
#define BITM_RSI_XFR_IMSK0_RXFIFORDY         0x00200000    /* Enable Interrupt for Receive FIFO Available */
#define BITM_RSI_XFR_IMSK0_TXFIFORDY         0x00100000    /* Enable Interrupt for Transmit FIFO Available */
#define BITM_RSI_XFR_IMSK0_RXFIFOZERO        0x00080000    /* Enable Interrupt for Receive FIFO Empty */
#define BITM_RSI_XFR_IMSK0_TXFIFOZERO        0x00040000    /* Enable Interrupt for Transmit FIFO Empty */
#define BITM_RSI_XFR_IMSK0_RXFIFOFULL        0x00020000    /* Enable Interrupt for Receive FIFO Full */
#define BITM_RSI_XFR_IMSK0_TXFIFOFULL        0x00010000    /* Enable Interrupt for Transmit FIFO Full */
#define BITM_RSI_XFR_IMSK0_RXFIFOSTAT        0x00008000    /* Enable Interrupt for Receive FIFO Status */
#define BITM_RSI_XFR_IMSK0_TXFIFOSTAT        0x00004000    /* Enable Interrupt for Transmit FIFO Status */
#define BITM_RSI_XFR_IMSK0_RXACT             0x00002000    /* Enable Interrupt for Receive Active */
#define BITM_RSI_XFR_IMSK0_TXACT             0x00001000    /* Enable Interrupt for Transmit Active */
#define BITM_RSI_XFR_IMSK0_CMDACT            0x00000800    /* Enable Interrupt for Command Active */
#define BITM_RSI_XFR_IMSK0_DATBLKEND         0x00000400    /* Enable Interrupt for Data Block End */
#define BITM_RSI_XFR_IMSK0_STRTBITERR        0x00000200    /* Enable Interrupt for Start Bit Error */
#define BITM_RSI_XFR_IMSK0_DATEND            0x00000100    /* Enable Interrupt for Data End */
#define BITM_RSI_XFR_IMSK0_CMDSENT           0x00000080    /* Enable Interrupt for Command Sent */
#define BITM_RSI_XFR_IMSK0_RESPEND           0x00000040    /* Enable Interrupt for Command Response End */
#define BITM_RSI_XFR_IMSK0_RXOVER            0x00000020    /* Enable Interrupt for Receive Over run */
#define BITM_RSI_XFR_IMSK0_TXUNDR            0x00000010    /* Enable Interrupt for Transmit Under run */
#define BITM_RSI_XFR_IMSK0_DATTO             0x00000008    /* Enable Interrupt for Data Timeout */
#define BITM_RSI_XFR_IMSK0_CMDTO             0x00000004    /* Enable Interrupt for CMD Timeout */
#define BITM_RSI_XFR_IMSK0_DATCRCFAIL        0x00000002    /* Enable Interrupt for Data CRC Fail */
#define BITM_RSI_XFR_IMSK0_CMDCRCFAIL        0x00000001    /* Enable Interrupt for CMD CRC Fail */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_XFR_IMSK1                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_XFR_IMSK1_RXFIFORDY         21            /* Enable Interrupt for Receive FIFO Available */
#define BITP_RSI_XFR_IMSK1_TXFIFORDY         20            /* Enable Interrupt for Transmit FIFO Available */
#define BITP_RSI_XFR_IMSK1_RXFIFOZERO        19            /* Enable Interrupt for Receive FIFO Empty */
#define BITP_RSI_XFR_IMSK1_TXFIFOZERO        18            /* Enable Interrupt for Transmit FIFO Empty */
#define BITP_RSI_XFR_IMSK1_RXFIFOFULL        17            /* Enable Interrupt for Receive FIFO Full */
#define BITP_RSI_XFR_IMSK1_TXFIFOFULL        16            /* Enable Interrupt for Transmit FIFO Full */
#define BITP_RSI_XFR_IMSK1_RXFIFOSTAT        15            /* Enable Interrupt for Receive FIFO Status */
#define BITP_RSI_XFR_IMSK1_TXFIFOSTAT        14            /* Enable Interrupt for Transmit FIFO Status */
#define BITP_RSI_XFR_IMSK1_RXACT             13            /* Enable Interrupt for Receive Active */
#define BITP_RSI_XFR_IMSK1_TXACT             12            /* Enable Interrupt for Transmit Active */
#define BITP_RSI_XFR_IMSK1_CMDACT            11            /* Enable Interrupt for Command Active */
#define BITP_RSI_XFR_IMSK1_DATBLKEND         10            /* Enable Interrupt for Data Block End */
#define BITP_RSI_XFR_IMSK1_STRTBITERR         9            /* Enable Interrupt for Start Bit Error */
#define BITP_RSI_XFR_IMSK1_DATEND             8            /* Enable Interrupt for Data End */
#define BITP_RSI_XFR_IMSK1_CMDSENT            7            /* Enable Interrupt for Command Sent */
#define BITP_RSI_XFR_IMSK1_RESPEND            6            /* Enable Interrupt for Command Response End */
#define BITP_RSI_XFR_IMSK1_RXOVER             5            /* Enable Interrupt for Receive Over run */
#define BITP_RSI_XFR_IMSK1_TXUNDR             4            /* Enable Interrupt for Transmit Under run */
#define BITP_RSI_XFR_IMSK1_DATTO              3            /* Enable Interrupt for Data Timeout */
#define BITP_RSI_XFR_IMSK1_CMDTO              2            /* Enable Interrupt for CMD Timeout */
#define BITP_RSI_XFR_IMSK1_DATCRCFAIL         1            /* Enable Interrupt for Data CRC Fail */
#define BITP_RSI_XFR_IMSK1_CMDCRCFAIL         0            /* Enable Interrupt for CMD CRC Fail */
#define BITM_RSI_XFR_IMSK1_RXFIFORDY         0x00200000    /* Enable Interrupt for Receive FIFO Available */
#define BITM_RSI_XFR_IMSK1_TXFIFORDY         0x00100000    /* Enable Interrupt for Transmit FIFO Available */
#define BITM_RSI_XFR_IMSK1_RXFIFOZERO        0x00080000    /* Enable Interrupt for Receive FIFO Empty */
#define BITM_RSI_XFR_IMSK1_TXFIFOZERO        0x00040000    /* Enable Interrupt for Transmit FIFO Empty */
#define BITM_RSI_XFR_IMSK1_RXFIFOFULL        0x00020000    /* Enable Interrupt for Receive FIFO Full */
#define BITM_RSI_XFR_IMSK1_TXFIFOFULL        0x00010000    /* Enable Interrupt for Transmit FIFO Full */
#define BITM_RSI_XFR_IMSK1_RXFIFOSTAT        0x00008000    /* Enable Interrupt for Receive FIFO Status */
#define BITM_RSI_XFR_IMSK1_TXFIFOSTAT        0x00004000    /* Enable Interrupt for Transmit FIFO Status */
#define BITM_RSI_XFR_IMSK1_RXACT             0x00002000    /* Enable Interrupt for Receive Active */
#define BITM_RSI_XFR_IMSK1_TXACT             0x00001000    /* Enable Interrupt for Transmit Active */
#define BITM_RSI_XFR_IMSK1_CMDACT            0x00000800    /* Enable Interrupt for Command Active */
#define BITM_RSI_XFR_IMSK1_DATBLKEND         0x00000400    /* Enable Interrupt for Data Block End */
#define BITM_RSI_XFR_IMSK1_STRTBITERR        0x00000200    /* Enable Interrupt for Start Bit Error */
#define BITM_RSI_XFR_IMSK1_DATEND            0x00000100    /* Enable Interrupt for Data End */
#define BITM_RSI_XFR_IMSK1_CMDSENT           0x00000080    /* Enable Interrupt for Command Sent */
#define BITM_RSI_XFR_IMSK1_RESPEND           0x00000040    /* Enable Interrupt for Command Response End */
#define BITM_RSI_XFR_IMSK1_RXOVER            0x00000020    /* Enable Interrupt for Receive Over run */
#define BITM_RSI_XFR_IMSK1_TXUNDR            0x00000010    /* Enable Interrupt for Transmit Under run */
#define BITM_RSI_XFR_IMSK1_DATTO             0x00000008    /* Enable Interrupt for Data Timeout */
#define BITM_RSI_XFR_IMSK1_CMDTO             0x00000004    /* Enable Interrupt for CMD Timeout */
#define BITM_RSI_XFR_IMSK1_DATCRCFAIL        0x00000002    /* Enable Interrupt for Data CRC Fail */
#define BITM_RSI_XFR_IMSK1_CMDCRCFAIL        0x00000001    /* Enable Interrupt for CMD CRC Fail */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_FIFO_CNT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_FIFO_CNT_VALUE               0            /* FIFO Count */
#define BITM_RSI_FIFO_CNT_VALUE              0x00007FFF    /* FIFO Count */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_CEATA                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_CEATA_INT_DIS                0            /* CEATA disable interrupt */
#define BITM_RSI_CEATA_INT_DIS               0x00000001    /* CEATA disable interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_BOOT_TCNTR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_BOOT_TCNTR_HOLD              8            /* Boot Hold Time */
#define BITP_RSI_BOOT_TCNTR_SETUP             0            /* Boot Setup Time */
#define BITM_RSI_BOOT_TCNTR_HOLD             0x0000FF00    /* Boot Hold Time */
#define BITM_RSI_BOOT_TCNTR_SETUP            0x000000FF    /* Boot Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_BLKSZ                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_BLKSZ_VALUE                  0            /* Size of Each Block of Data */
#define BITM_RSI_BLKSZ_VALUE                 0x00001FFF    /* Size of Each Block of Data */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_STAT0                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_STAT0_BUSYMODE              31            /* Card is in Busy mode */
#define BITP_RSI_STAT0_SLPMODE               30            /* Card in Sleep Mode */
#define BITP_RSI_STAT0_CARDRDY               17            /* Card Ready */
#define BITP_RSI_STAT0_SLPWKPTOUT            16            /* Sleep Wakeup Timer Expired */
#define BITP_RSI_STAT0_WKPDONE               15            /* Card Entered Standby state */
#define BITP_RSI_STAT0_SLPDONE               14            /* Card Entered Sleep State */
#define BITP_RSI_STAT0_BACKDONE              13            /* Correct Boot Ack is received */
#define BITP_RSI_STAT0_BACKBAD               12            /* Boot Ack received is corrupted */
#define BITP_RSI_STAT0_BACKTO                11            /* Boot Acknowledge Timeout */
#define BITP_RSI_STAT0_BDATTO                10            /* Boot Data Timeout */
#define BITP_RSI_STAT0_BHOLDEXP               9            /* Boot Hold Time Expiry */
#define BITP_RSI_STAT0_BSETUPEXP              8            /* Boot Setup Time Expiry */
#define BITP_RSI_STAT0_CEATAINT               5            /* CEATA Interrupt */
#define BITP_RSI_STAT0_SDCARD                 4            /* SD Card Detected */
#define BITP_RSI_STAT0_SDIOINT                1            /* SDIO Interrupt */
#define BITM_RSI_STAT0_BUSYMODE              0x80000000    /* Card is in Busy mode */
#define BITM_RSI_STAT0_SLPMODE               0x40000000    /* Card in Sleep Mode */
#define BITM_RSI_STAT0_CARDRDY               0x00020000    /* Card Ready */
#define BITM_RSI_STAT0_SLPWKPTOUT            0x00010000    /* Sleep Wakeup Timer Expired */
#define BITM_RSI_STAT0_WKPDONE               0x00008000    /* Card Entered Standby state */
#define BITM_RSI_STAT0_SLPDONE               0x00004000    /* Card Entered Sleep State */
#define BITM_RSI_STAT0_BACKDONE              0x00002000    /* Correct Boot Ack is received */
#define BITM_RSI_STAT0_BACKBAD               0x00001000    /* Boot Ack received is corrupted */
#define BITM_RSI_STAT0_BACKTO                0x00000800    /* Boot Acknowledge Timeout */
#define BITM_RSI_STAT0_BDATTO                0x00000400    /* Boot Data Timeout */
#define BITM_RSI_STAT0_BHOLDEXP              0x00000200    /* Boot Hold Time Expiry */
#define BITM_RSI_STAT0_BSETUPEXP             0x00000100    /* Boot Setup Time Expiry */
#define BITM_RSI_STAT0_CEATAINT              0x00000020    /* CEATA Interrupt */
#define BITM_RSI_STAT0_SDCARD                0x00000010    /* SD Card Detected */
#define BITM_RSI_STAT0_SDIOINT               0x00000002    /* SDIO Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_IMSK0                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_IMSK0_CARDRDY               17            /* Mask Interrupt for Card Ready */
#define BITP_RSI_IMSK0_SLPWKPTOUT            16            /* Mask Interrupt for Sleep Wakeup Timer Expired */
#define BITP_RSI_IMSK0_WKPDONE               15            /* Mask Interrupt for Card Entered Standby state */
#define BITP_RSI_IMSK0_SLPDONE               14            /* Mask Interrupt for Card Entered Sleep State */
#define BITP_RSI_IMSK0_BACKDONE              13            /* Mask Interrupt for Correct Boot Ack is received */
#define BITP_RSI_IMSK0_BACKBAD               12            /* Mask Interrupt for Boot Ack received is corrupted */
#define BITP_RSI_IMSK0_BACKTO                11            /* Mask Interrupt for Boot Acknowledge Timeout */
#define BITP_RSI_IMSK0_BDATTO                10            /* Mask Interrupt for Boot Data Timeout */
#define BITP_RSI_IMSK0_BHOLDEXP               9            /* Mask Interrupt for Boot Hold Time Expiry */
#define BITP_RSI_IMSK0_BSETUPEXP              8            /* Mask Interrupt for Boot Setup Time Expiry */
#define BITP_RSI_IMSK0_CEATAINT               5            /* Mask CEATA Interrupt */
#define BITP_RSI_IMSK0_SDCARD                 4            /* Mask Interrupt for SD Card Detected */
#define BITP_RSI_IMSK0_SDIOINT                1            /* Mask SDIO Interrupt */
#define BITM_RSI_IMSK0_CARDRDY               0x00020000    /* Mask Interrupt for Card Ready */
#define BITM_RSI_IMSK0_SLPWKPTOUT            0x00010000    /* Mask Interrupt for Sleep Wakeup Timer Expired */
#define BITM_RSI_IMSK0_WKPDONE               0x00008000    /* Mask Interrupt for Card Entered Standby state */
#define BITM_RSI_IMSK0_SLPDONE               0x00004000    /* Mask Interrupt for Card Entered Sleep State */
#define BITM_RSI_IMSK0_BACKDONE              0x00002000    /* Mask Interrupt for Correct Boot Ack is received */
#define BITM_RSI_IMSK0_BACKBAD               0x00001000    /* Mask Interrupt for Boot Ack received is corrupted */
#define BITM_RSI_IMSK0_BACKTO                0x00000800    /* Mask Interrupt for Boot Acknowledge Timeout */
#define BITM_RSI_IMSK0_BDATTO                0x00000400    /* Mask Interrupt for Boot Data Timeout */
#define BITM_RSI_IMSK0_BHOLDEXP              0x00000200    /* Mask Interrupt for Boot Hold Time Expiry */
#define BITM_RSI_IMSK0_BSETUPEXP             0x00000100    /* Mask Interrupt for Boot Setup Time Expiry */
#define BITM_RSI_IMSK0_CEATAINT              0x00000020    /* Mask CEATA Interrupt */
#define BITM_RSI_IMSK0_SDCARD                0x00000010    /* Mask Interrupt for SD Card Detected */
#define BITM_RSI_IMSK0_SDIOINT               0x00000002    /* Mask SDIO Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_CFG                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_CFG_BACKEN                  14            /* Boot Acknowledge enabled */
#define BITP_RSI_CFG_MMCBMODE                13            /* MMC Boot Mode select */
#define BITP_RSI_CFG_MMCBEN                  12            /* MMC Boot Enabled */
#define BITP_RSI_CFG_OPENDRAIN               11            /* MC_CMD Output Control */
#define BITP_RSI_CFG_PWRON                    9            /* 11 - RSI Enabled */
#define BITP_RSI_CFG_IEBYPDIS                 8            /* Disabled IE Bypass */
#define BITP_RSI_CFG_DAT3PUP                  6            /* Pull-Up SD_DAT3 */
#define BITP_RSI_CFG_DATPUP                   5            /* Pull-Up SD_DAT */
#define BITP_RSI_CFG_RST                      4            /* SDMMC Reset */
#define BITP_RSI_CFG_MWINEN                   3            /* Moving Window Enable */
#define BITP_RSI_CFG_SD4EN                    2            /* SDIO 4-Bit Enable */
#define BITP_RSI_CFG_CLKSEN                   0            /* Clocks Enable */
#define BITM_RSI_CFG_BACKEN                  0x00004000    /* Boot Acknowledge enabled */
#define BITM_RSI_CFG_MMCBMODE                0x00002000    /* MMC Boot Mode select */
#define BITM_RSI_CFG_MMCBEN                  0x00001000    /* MMC Boot Enabled */
#define BITM_RSI_CFG_OPENDRAIN               0x00000800    /* MC_CMD Output Control */
#define BITM_RSI_CFG_PWRON                   0x00000600    /* 11 - RSI Enabled */
#define BITM_RSI_CFG_IEBYPDIS                0x00000100    /* Disabled IE Bypass */
#define BITM_RSI_CFG_DAT3PUP                 0x00000040    /* Pull-Up SD_DAT3 */
#define BITM_RSI_CFG_DATPUP                  0x00000020    /* Pull-Up SD_DAT */
#define BITM_RSI_CFG_RST                     0x00000010    /* SDMMC Reset */
#define BITM_RSI_CFG_MWINEN                  0x00000008    /* Moving Window Enable */
#define BITM_RSI_CFG_SD4EN                   0x00000004    /* SDIO 4-Bit Enable */
#define BITM_RSI_CFG_CLKSEN                  0x00000001    /* Clocks Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_RD_WAIT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_RD_WAIT_REQUEST              0            /* Read Wait Request */
#define BITM_RSI_RD_WAIT_REQUEST             0x00000001    /* Read Wait Request */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_PID0                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_PID0_VALUE                   0            /* Peripheral Identification */
#define BITM_RSI_PID0_VALUE                  0x000000FF    /* Peripheral Identification */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_PID1                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_PID1_VALUE                   0            /* Peripheral Identification */
#define BITM_RSI_PID1_VALUE                  0x000000FF    /* Peripheral Identification */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_PID2                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_PID2_VALUE                   0            /* Peripheral Identification */
#define BITM_RSI_PID2_VALUE                  0x000000FF    /* Peripheral Identification */

/* ------------------------------------------------------------------------------------------------------------------------
        RSI_PID3                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RSI_PID3_VALUE                   0            /* Peripheral Identification */
#define BITM_RSI_PID3_VALUE                  0x000000FF    /* Peripheral Identification */

/* =========================
        CAN Registers
   ========================= */

/* =========================
        CAN0
   ========================= */
#define REG_CAN0_MC1                    0xFFC00A00         /* CAN0 Mailbox Configuration Register 1 */
#define REG_CAN0_MD1                    0xFFC00A04         /* CAN0 Mailbox Direction Register 1 */
#define REG_CAN0_TRS1                   0xFFC00A08         /* CAN0 Transmission Request Set Register 1 */
#define REG_CAN0_TRR1                   0xFFC00A0C         /* CAN0 Transmission Request Reset Register 1 */
#define REG_CAN0_TA1                    0xFFC00A10         /* CAN0 Transmission Acknowledge Register 1 */
#define REG_CAN0_AA1                    0xFFC00A14         /* CAN0 Abort Acknowledge Register 1 */
#define REG_CAN0_RMP1                   0xFFC00A18         /* CAN0 Receive Message Pending Register 1 */
#define REG_CAN0_RML1                   0xFFC00A1C         /* CAN0 Receive Message Lost Register 1 */
#define REG_CAN0_MBTIF1                 0xFFC00A20         /* CAN0 Mailbox Transmit Interrupt Flag Register 1 */
#define REG_CAN0_MBRIF1                 0xFFC00A24         /* CAN0 Mailbox Receive Interrupt Flag Register 1 */
#define REG_CAN0_MBIM1                  0xFFC00A28         /* CAN0 Mailbox Interrupt Mask Register 1 */
#define REG_CAN0_RFH1                   0xFFC00A2C         /* CAN0 Remote Frame Handling Register 1 */
#define REG_CAN0_OPSS1                  0xFFC00A30         /* CAN0 Overwrite Protection/Single Shot Transmission Register 1 */
#define REG_CAN0_MC2                    0xFFC00A40         /* CAN0 Mailbox Configuration Register 2 */
#define REG_CAN0_MD2                    0xFFC00A44         /* CAN0 Mailbox Direction Register 2 */
#define REG_CAN0_TRS2                   0xFFC00A48         /* CAN0 Transmission Request Set Register 2 */
#define REG_CAN0_TRR2                   0xFFC00A4C         /* CAN0 Transmission Request Reset Register 2 */
#define REG_CAN0_TA2                    0xFFC00A50         /* CAN0 Transmission Acknowledge Register 2 */
#define REG_CAN0_AA2                    0xFFC00A54         /* CAN0 Abort Acknowledge Register 2 */
#define REG_CAN0_RMP2                   0xFFC00A58         /* CAN0 Receive Message Pending Register 2 */
#define REG_CAN0_RML2                   0xFFC00A5C         /* CAN0 Receive Message Lost Register 2 */
#define REG_CAN0_MBTIF2                 0xFFC00A60         /* CAN0 Mailbox Transmit Interrupt Flag Register 2 */
#define REG_CAN0_MBRIF2                 0xFFC00A64         /* CAN0 Mailbox Receive Interrupt Flag Register 2 */
#define REG_CAN0_MBIM2                  0xFFC00A68         /* CAN0 Mailbox Interrupt Mask Register 2 */
#define REG_CAN0_RFH2                   0xFFC00A6C         /* CAN0 Remote Frame Handling Register 2 */
#define REG_CAN0_OPSS2                  0xFFC00A70         /* CAN0 Overwrite Protection/Single Shot Transmission Register 2 */
#define REG_CAN0_CLK                    0xFFC00A80         /* CAN0 Clock Register */
#define REG_CAN0_TIMING                 0xFFC00A84         /* CAN0 Timing Register */
#define REG_CAN0_DBG                    0xFFC00A88         /* CAN0 Debug Register */
#define REG_CAN0_STAT                   0xFFC00A8C         /* CAN0 Status Register */
#define REG_CAN0_CEC                    0xFFC00A90         /* CAN0 Error Counter Register */
#define REG_CAN0_GIS                    0xFFC00A94         /* CAN0 Global CAN Interrupt Status */
#define REG_CAN0_GIM                    0xFFC00A98         /* CAN0 Global CAN Interrupt Mask */
#define REG_CAN0_GIF                    0xFFC00A9C         /* CAN0 Global CAN Interrupt Flag */
#define REG_CAN0_CTL                    0xFFC00AA0         /* CAN0 CAN Master Control Register */
#define REG_CAN0_INT                    0xFFC00AA4         /* CAN0 Interrupt Pending Register */
#define REG_CAN0_MBTD                   0xFFC00AAC         /* CAN0 Temporary Mailbox Disable Register */
#define REG_CAN0_EWR                    0xFFC00AB0         /* CAN0 Error Counter Warning Level Register */
#define REG_CAN0_ESR                    0xFFC00AB4         /* CAN0 Error Status Register */
#define REG_CAN0_UCCNT                  0xFFC00AC4         /* CAN0 Universal Counter Register */
#define REG_CAN0_UCRC                   0xFFC00AC8         /* CAN0 Universal Counter Reload/Capture Register */
#define REG_CAN0_UCCNF                  0xFFC00ACC         /* CAN0 Universal Counter Configuration Mode Register */
#define REG_CAN0_AM00L                  0xFFC00B00         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM01L                  0xFFC00B08         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM02L                  0xFFC00B10         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM03L                  0xFFC00B18         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM04L                  0xFFC00B20         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM05L                  0xFFC00B28         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM06L                  0xFFC00B30         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM07L                  0xFFC00B38         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM08L                  0xFFC00B40         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM09L                  0xFFC00B48         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM10L                  0xFFC00B50         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM11L                  0xFFC00B58         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM12L                  0xFFC00B60         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM13L                  0xFFC00B68         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM14L                  0xFFC00B70         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM15L                  0xFFC00B78         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM16L                  0xFFC00B80         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM17L                  0xFFC00B88         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM18L                  0xFFC00B90         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM19L                  0xFFC00B98         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM20L                  0xFFC00BA0         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM21L                  0xFFC00BA8         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM22L                  0xFFC00BB0         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM23L                  0xFFC00BB8         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM24L                  0xFFC00BC0         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM25L                  0xFFC00BC8         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM26L                  0xFFC00BD0         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM27L                  0xFFC00BD8         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM28L                  0xFFC00BE0         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM29L                  0xFFC00BE8         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM30L                  0xFFC00BF0         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM31L                  0xFFC00BF8         /* CAN0 Acceptance Mask Register (L) */
#define REG_CAN0_AM00H                  0xFFC00B04         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM01H                  0xFFC00B0C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM02H                  0xFFC00B14         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM03H                  0xFFC00B1C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM04H                  0xFFC00B24         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM05H                  0xFFC00B2C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM06H                  0xFFC00B34         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM07H                  0xFFC00B3C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM08H                  0xFFC00B44         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM09H                  0xFFC00B4C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM10H                  0xFFC00B54         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM11H                  0xFFC00B5C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM12H                  0xFFC00B64         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM13H                  0xFFC00B6C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM14H                  0xFFC00B74         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM15H                  0xFFC00B7C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM16H                  0xFFC00B84         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM17H                  0xFFC00B8C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM18H                  0xFFC00B94         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM19H                  0xFFC00B9C         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM20H                  0xFFC00BA4         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM21H                  0xFFC00BAC         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM22H                  0xFFC00BB4         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM23H                  0xFFC00BBC         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM24H                  0xFFC00BC4         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM25H                  0xFFC00BCC         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM26H                  0xFFC00BD4         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM27H                  0xFFC00BDC         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM28H                  0xFFC00BE4         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM29H                  0xFFC00BEC         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM30H                  0xFFC00BF4         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_AM31H                  0xFFC00BFC         /* CAN0 Acceptance Mask Register (H) */
#define REG_CAN0_MB00_DATA0             0xFFC00C00         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB01_DATA0             0xFFC00C20         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB02_DATA0             0xFFC00C40         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB03_DATA0             0xFFC00C60         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB04_DATA0             0xFFC00C80         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB05_DATA0             0xFFC00CA0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB06_DATA0             0xFFC00CC0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB07_DATA0             0xFFC00CE0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB08_DATA0             0xFFC00D00         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB09_DATA0             0xFFC00D20         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB10_DATA0             0xFFC00D40         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB11_DATA0             0xFFC00D60         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB12_DATA0             0xFFC00D80         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB13_DATA0             0xFFC00DA0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB14_DATA0             0xFFC00DC0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB15_DATA0             0xFFC00DE0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB16_DATA0             0xFFC00E00         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB17_DATA0             0xFFC00E20         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB18_DATA0             0xFFC00E40         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB19_DATA0             0xFFC00E60         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB20_DATA0             0xFFC00E80         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB21_DATA0             0xFFC00EA0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB22_DATA0             0xFFC00EC0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB23_DATA0             0xFFC00EE0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB24_DATA0             0xFFC00F00         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB25_DATA0             0xFFC00F20         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB26_DATA0             0xFFC00F40         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB27_DATA0             0xFFC00F60         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB28_DATA0             0xFFC00F80         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB29_DATA0             0xFFC00FA0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB30_DATA0             0xFFC00FC0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB31_DATA0             0xFFC00FE0         /* CAN0 Mailbox Word 0 Register */
#define REG_CAN0_MB00_DATA1             0xFFC00C04         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB01_DATA1             0xFFC00C24         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB02_DATA1             0xFFC00C44         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB03_DATA1             0xFFC00C64         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB04_DATA1             0xFFC00C84         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB05_DATA1             0xFFC00CA4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB06_DATA1             0xFFC00CC4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB07_DATA1             0xFFC00CE4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB08_DATA1             0xFFC00D04         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB09_DATA1             0xFFC00D24         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB10_DATA1             0xFFC00D44         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB11_DATA1             0xFFC00D64         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB12_DATA1             0xFFC00D84         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB13_DATA1             0xFFC00DA4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB14_DATA1             0xFFC00DC4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB15_DATA1             0xFFC00DE4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB16_DATA1             0xFFC00E04         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB17_DATA1             0xFFC00E24         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB18_DATA1             0xFFC00E44         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB19_DATA1             0xFFC00E64         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB20_DATA1             0xFFC00E84         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB21_DATA1             0xFFC00EA4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB22_DATA1             0xFFC00EC4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB23_DATA1             0xFFC00EE4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB24_DATA1             0xFFC00F04         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB25_DATA1             0xFFC00F24         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB26_DATA1             0xFFC00F44         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB27_DATA1             0xFFC00F64         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB28_DATA1             0xFFC00F84         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB29_DATA1             0xFFC00FA4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB30_DATA1             0xFFC00FC4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB31_DATA1             0xFFC00FE4         /* CAN0 Mailbox Word 1 Register */
#define REG_CAN0_MB00_DATA2             0xFFC00C08         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB01_DATA2             0xFFC00C28         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB02_DATA2             0xFFC00C48         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB03_DATA2             0xFFC00C68         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB04_DATA2             0xFFC00C88         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB05_DATA2             0xFFC00CA8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB06_DATA2             0xFFC00CC8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB07_DATA2             0xFFC00CE8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB08_DATA2             0xFFC00D08         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB09_DATA2             0xFFC00D28         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB10_DATA2             0xFFC00D48         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB11_DATA2             0xFFC00D68         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB12_DATA2             0xFFC00D88         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB13_DATA2             0xFFC00DA8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB14_DATA2             0xFFC00DC8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB15_DATA2             0xFFC00DE8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB16_DATA2             0xFFC00E08         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB17_DATA2             0xFFC00E28         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB18_DATA2             0xFFC00E48         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB19_DATA2             0xFFC00E68         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB20_DATA2             0xFFC00E88         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB21_DATA2             0xFFC00EA8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB22_DATA2             0xFFC00EC8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB23_DATA2             0xFFC00EE8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB24_DATA2             0xFFC00F08         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB25_DATA2             0xFFC00F28         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB26_DATA2             0xFFC00F48         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB27_DATA2             0xFFC00F68         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB28_DATA2             0xFFC00F88         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB29_DATA2             0xFFC00FA8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB30_DATA2             0xFFC00FC8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB31_DATA2             0xFFC00FE8         /* CAN0 Mailbox Word 2 Register */
#define REG_CAN0_MB00_DATA3             0xFFC00C0C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB01_DATA3             0xFFC00C2C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB02_DATA3             0xFFC00C4C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB03_DATA3             0xFFC00C6C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB04_DATA3             0xFFC00C8C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB05_DATA3             0xFFC00CAC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB06_DATA3             0xFFC00CCC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB07_DATA3             0xFFC00CEC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB08_DATA3             0xFFC00D0C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB09_DATA3             0xFFC00D2C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB10_DATA3             0xFFC00D4C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB11_DATA3             0xFFC00D6C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB12_DATA3             0xFFC00D8C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB13_DATA3             0xFFC00DAC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB14_DATA3             0xFFC00DCC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB15_DATA3             0xFFC00DEC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB16_DATA3             0xFFC00E0C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB17_DATA3             0xFFC00E2C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB18_DATA3             0xFFC00E4C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB19_DATA3             0xFFC00E6C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB20_DATA3             0xFFC00E8C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB21_DATA3             0xFFC00EAC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB22_DATA3             0xFFC00ECC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB23_DATA3             0xFFC00EEC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB24_DATA3             0xFFC00F0C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB25_DATA3             0xFFC00F2C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB26_DATA3             0xFFC00F4C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB27_DATA3             0xFFC00F6C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB28_DATA3             0xFFC00F8C         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB29_DATA3             0xFFC00FAC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB30_DATA3             0xFFC00FCC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB31_DATA3             0xFFC00FEC         /* CAN0 Mailbox Word 3 Register */
#define REG_CAN0_MB00_LENGTH            0xFFC00C10         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB01_LENGTH            0xFFC00C30         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB02_LENGTH            0xFFC00C50         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB03_LENGTH            0xFFC00C70         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB04_LENGTH            0xFFC00C90         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB05_LENGTH            0xFFC00CB0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB06_LENGTH            0xFFC00CD0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB07_LENGTH            0xFFC00CF0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB08_LENGTH            0xFFC00D10         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB09_LENGTH            0xFFC00D30         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB10_LENGTH            0xFFC00D50         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB11_LENGTH            0xFFC00D70         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB12_LENGTH            0xFFC00D90         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB13_LENGTH            0xFFC00DB0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB14_LENGTH            0xFFC00DD0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB15_LENGTH            0xFFC00DF0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB16_LENGTH            0xFFC00E10         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB17_LENGTH            0xFFC00E30         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB18_LENGTH            0xFFC00E50         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB19_LENGTH            0xFFC00E70         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB20_LENGTH            0xFFC00E90         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB21_LENGTH            0xFFC00EB0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB22_LENGTH            0xFFC00ED0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB23_LENGTH            0xFFC00EF0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB24_LENGTH            0xFFC00F10         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB25_LENGTH            0xFFC00F30         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB26_LENGTH            0xFFC00F50         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB27_LENGTH            0xFFC00F70         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB28_LENGTH            0xFFC00F90         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB29_LENGTH            0xFFC00FB0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB30_LENGTH            0xFFC00FD0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB31_LENGTH            0xFFC00FF0         /* CAN0 Mailbox Word 4 Register */
#define REG_CAN0_MB00_TIMESTAMP         0xFFC00C14         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB01_TIMESTAMP         0xFFC00C34         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB02_TIMESTAMP         0xFFC00C54         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB03_TIMESTAMP         0xFFC00C74         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB04_TIMESTAMP         0xFFC00C94         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB05_TIMESTAMP         0xFFC00CB4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB06_TIMESTAMP         0xFFC00CD4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB07_TIMESTAMP         0xFFC00CF4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB08_TIMESTAMP         0xFFC00D14         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB09_TIMESTAMP         0xFFC00D34         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB10_TIMESTAMP         0xFFC00D54         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB11_TIMESTAMP         0xFFC00D74         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB12_TIMESTAMP         0xFFC00D94         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB13_TIMESTAMP         0xFFC00DB4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB14_TIMESTAMP         0xFFC00DD4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB15_TIMESTAMP         0xFFC00DF4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB16_TIMESTAMP         0xFFC00E14         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB17_TIMESTAMP         0xFFC00E34         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB18_TIMESTAMP         0xFFC00E54         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB19_TIMESTAMP         0xFFC00E74         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB20_TIMESTAMP         0xFFC00E94         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB21_TIMESTAMP         0xFFC00EB4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB22_TIMESTAMP         0xFFC00ED4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB23_TIMESTAMP         0xFFC00EF4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB24_TIMESTAMP         0xFFC00F14         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB25_TIMESTAMP         0xFFC00F34         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB26_TIMESTAMP         0xFFC00F54         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB27_TIMESTAMP         0xFFC00F74         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB28_TIMESTAMP         0xFFC00F94         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB29_TIMESTAMP         0xFFC00FB4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB30_TIMESTAMP         0xFFC00FD4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB31_TIMESTAMP         0xFFC00FF4         /* CAN0 Mailbox Word 5 Register */
#define REG_CAN0_MB00_ID0               0xFFC00C18         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB01_ID0               0xFFC00C38         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB02_ID0               0xFFC00C58         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB03_ID0               0xFFC00C78         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB04_ID0               0xFFC00C98         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB05_ID0               0xFFC00CB8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB06_ID0               0xFFC00CD8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB07_ID0               0xFFC00CF8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB08_ID0               0xFFC00D18         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB09_ID0               0xFFC00D38         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB10_ID0               0xFFC00D58         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB11_ID0               0xFFC00D78         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB12_ID0               0xFFC00D98         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB13_ID0               0xFFC00DB8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB14_ID0               0xFFC00DD8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB15_ID0               0xFFC00DF8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB16_ID0               0xFFC00E18         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB17_ID0               0xFFC00E38         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB18_ID0               0xFFC00E58         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB19_ID0               0xFFC00E78         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB20_ID0               0xFFC00E98         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB21_ID0               0xFFC00EB8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB22_ID0               0xFFC00ED8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB23_ID0               0xFFC00EF8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB24_ID0               0xFFC00F18         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB25_ID0               0xFFC00F38         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB26_ID0               0xFFC00F58         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB27_ID0               0xFFC00F78         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB28_ID0               0xFFC00F98         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB29_ID0               0xFFC00FB8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB30_ID0               0xFFC00FD8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB31_ID0               0xFFC00FF8         /* CAN0 Mailbox Word 6 Register */
#define REG_CAN0_MB00_ID1               0xFFC00C1C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB01_ID1               0xFFC00C3C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB02_ID1               0xFFC00C5C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB03_ID1               0xFFC00C7C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB04_ID1               0xFFC00C9C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB05_ID1               0xFFC00CBC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB06_ID1               0xFFC00CDC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB07_ID1               0xFFC00CFC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB08_ID1               0xFFC00D1C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB09_ID1               0xFFC00D3C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB10_ID1               0xFFC00D5C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB11_ID1               0xFFC00D7C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB12_ID1               0xFFC00D9C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB13_ID1               0xFFC00DBC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB14_ID1               0xFFC00DDC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB15_ID1               0xFFC00DFC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB16_ID1               0xFFC00E1C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB17_ID1               0xFFC00E3C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB18_ID1               0xFFC00E5C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB19_ID1               0xFFC00E7C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB20_ID1               0xFFC00E9C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB21_ID1               0xFFC00EBC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB22_ID1               0xFFC00EDC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB23_ID1               0xFFC00EFC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB24_ID1               0xFFC00F1C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB25_ID1               0xFFC00F3C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB26_ID1               0xFFC00F5C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB27_ID1               0xFFC00F7C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB28_ID1               0xFFC00F9C         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB29_ID1               0xFFC00FBC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB30_ID1               0xFFC00FDC         /* CAN0 Mailbox Word 7 Register */
#define REG_CAN0_MB31_ID1               0xFFC00FFC         /* CAN0 Mailbox Word 7 Register */

/* =========================
        CAN
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        CAN_CLK                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_CLK_BRP                      0            /* Bit Rate Prescaler */
#define BITM_CAN_CLK_BRP                     0x000003FF    /* Bit Rate Prescaler */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_TIMING                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_TIMING_SJW                   8            /* Synchronization Jump Width */
#define BITP_CAN_TIMING_SAM                   7            /* Sampling */
#define BITP_CAN_TIMING_TSEG2                 4            /* Time Segment 2 */
#define BITP_CAN_TIMING_TSEG1                 0            /* Time Segment 1 */
#define BITM_CAN_TIMING_SJW                  0x00000300    /* Synchronization Jump Width */
#define BITM_CAN_TIMING_SAM                  0x00000080    /* Sampling */
#define BITM_CAN_TIMING_TSEG2                0x00000070    /* Time Segment 2 */
#define BITM_CAN_TIMING_TSEG1                0x0000000F    /* Time Segment 1 */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_DBG                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_DBG_CDE                     15            /* CAN Debug Mode Enable */
#define BITP_CAN_DBG_MRB                      5            /* Mode Read Back */
#define BITP_CAN_DBG_MAA                      4            /* Mode Auto Acknowledge */
#define BITP_CAN_DBG_DIL                      3            /* Disable Internal Loop */
#define BITP_CAN_DBG_DTO                      2            /* Disable Transmit Output Pin */
#define BITP_CAN_DBG_DRI                      1            /* Disable Receive Input Pin */
#define BITP_CAN_DBG_DEC                      0            /* Disable Transmit and Receive Error Counters */
#define BITM_CAN_DBG_CDE                     0x00008000    /* CAN Debug Mode Enable */
#define BITM_CAN_DBG_MRB                     0x00000020    /* Mode Read Back */
#define BITM_CAN_DBG_MAA                     0x00000010    /* Mode Auto Acknowledge */
#define BITM_CAN_DBG_DIL                     0x00000008    /* Disable Internal Loop */
#define BITM_CAN_DBG_DTO                     0x00000004    /* Disable Transmit Output Pin */
#define BITM_CAN_DBG_DRI                     0x00000002    /* Disable Receive Input Pin */
#define BITM_CAN_DBG_DEC                     0x00000001    /* Disable Transmit and Receive Error Counters */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_STAT_REC                    15            /* Receive Mode */
#define BITP_CAN_STAT_TRM                    14            /* Transmit Mode */
#define BITP_CAN_STAT_MBPTR                   8            /* Mailbox Pointer */
#define BITP_CAN_STAT_CCA                     7            /* CAN Configuration Mode Acknowledge */
#define BITP_CAN_STAT_CSA                     6            /* CAN Suspend Mode Acknowledge */
#define BITP_CAN_STAT_EBO                     3            /* CAN Error Bus Off Mode */
#define BITP_CAN_STAT_EP                      2            /* CAN Error Passive Mode */
#define BITP_CAN_STAT_WR                      1            /* CAN Receive Warning Flag */
#define BITP_CAN_STAT_WT                      0            /* CAN Transmit Warning Flag */
#define BITM_CAN_STAT_REC                    0x00008000    /* Receive Mode */
#define BITM_CAN_STAT_TRM                    0x00004000    /* Transmit Mode */
#define BITM_CAN_STAT_MBPTR                  0x00001F00    /* Mailbox Pointer */
#define BITM_CAN_STAT_CCA                    0x00000080    /* CAN Configuration Mode Acknowledge */
#define BITM_CAN_STAT_CSA                    0x00000040    /* CAN Suspend Mode Acknowledge */
#define BITM_CAN_STAT_EBO                    0x00000008    /* CAN Error Bus Off Mode */
#define BITM_CAN_STAT_EP                     0x00000004    /* CAN Error Passive Mode */
#define BITM_CAN_STAT_WR                     0x00000002    /* CAN Receive Warning Flag */
#define BITM_CAN_STAT_WT                     0x00000001    /* CAN Transmit Warning Flag */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_CEC                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_CEC_TXECNT                   8            /* Transmit Error Counter */
#define BITP_CAN_CEC_RXECNT                   0            /* Receive Error Counter */
#define BITM_CAN_CEC_TXECNT                  0x0000FF00    /* Transmit Error Counter */
#define BITM_CAN_CEC_RXECNT                  0x000000FF    /* Receive Error Counter */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_GIS                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_GIS_ADIS                    10            /* Access Denied Interrupt Status */
#define BITP_CAN_GIS_UCEIS                    8            /* Universal Counter Exceeded Interrupt Status */
#define BITP_CAN_GIS_RMLIS                    7            /* Receive Message Lost Interrupt Status */
#define BITP_CAN_GIS_AAIS                     6            /* Abort Acknowledge Interrupt Status */
#define BITP_CAN_GIS_UIAIS                    5            /* Unimplemented Address Interrupt Status */
#define BITP_CAN_GIS_WUIS                     4            /* Wake Up Interrupt Status */
#define BITP_CAN_GIS_BOIS                     3            /* Bus Off Interrupt Status */
#define BITP_CAN_GIS_EPIS                     2            /* Error Passive Interrupt Status */
#define BITP_CAN_GIS_EWRIS                    1            /* Error Warning Receive  Interrupt Status */
#define BITP_CAN_GIS_EWTIS                    0            /* Error Warning Transmit Interrupt Status */
#define BITM_CAN_GIS_ADIS                    0x00000400    /* Access Denied Interrupt Status */
#define BITM_CAN_GIS_UCEIS                   0x00000100    /* Universal Counter Exceeded Interrupt Status */
#define BITM_CAN_GIS_RMLIS                   0x00000080    /* Receive Message Lost Interrupt Status */
#define BITM_CAN_GIS_AAIS                    0x00000040    /* Abort Acknowledge Interrupt Status */
#define BITM_CAN_GIS_UIAIS                   0x00000020    /* Unimplemented Address Interrupt Status */
#define BITM_CAN_GIS_WUIS                    0x00000010    /* Wake Up Interrupt Status */
#define BITM_CAN_GIS_BOIS                    0x00000008    /* Bus Off Interrupt Status */
#define BITM_CAN_GIS_EPIS                    0x00000004    /* Error Passive Interrupt Status */
#define BITM_CAN_GIS_EWRIS                   0x00000002    /* Error Warning Receive  Interrupt Status */
#define BITM_CAN_GIS_EWTIS                   0x00000001    /* Error Warning Transmit Interrupt Status */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_GIM                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_GIM_ADIM                    10            /* Access Denied Interrupt Mask */
#define BITP_CAN_GIM_UCEIM                    8            /* Universal Counter Exceeded Interrupt Mask */
#define BITP_CAN_GIM_RMLIM                    7            /* Receive Message Lost Interrupt Mask */
#define BITP_CAN_GIM_AAIM                     6            /* Abort Acknowledge Interrupt Mask */
#define BITP_CAN_GIM_UIAIM                    5            /* Unimplemented Address Interrupt Mask */
#define BITP_CAN_GIM_WUIM                     4            /* Wake Up Interrupt Mask */
#define BITP_CAN_GIM_BOIM                     3            /* Bus Off Interrupt Mask */
#define BITP_CAN_GIM_EPIM                     2            /* Error Warning Receive Interrupt Mask */
#define BITP_CAN_GIM_EWRIM                    1            /* Error Warning Receive Interrupt Mask */
#define BITP_CAN_GIM_EWTIM                    0            /* Error Warning Transmit Interrupt Mask */
#define BITM_CAN_GIM_ADIM                    0x00000400    /* Access Denied Interrupt Mask */
#define BITM_CAN_GIM_UCEIM                   0x00000100    /* Universal Counter Exceeded Interrupt Mask */
#define BITM_CAN_GIM_RMLIM                   0x00000080    /* Receive Message Lost Interrupt Mask */
#define BITM_CAN_GIM_AAIM                    0x00000040    /* Abort Acknowledge Interrupt Mask */
#define BITM_CAN_GIM_UIAIM                   0x00000020    /* Unimplemented Address Interrupt Mask */
#define BITM_CAN_GIM_WUIM                    0x00000010    /* Wake Up Interrupt Mask */
#define BITM_CAN_GIM_BOIM                    0x00000008    /* Bus Off Interrupt Mask */
#define BITM_CAN_GIM_EPIM                    0x00000004    /* Error Warning Receive Interrupt Mask */
#define BITM_CAN_GIM_EWRIM                   0x00000002    /* Error Warning Receive Interrupt Mask */
#define BITM_CAN_GIM_EWTIM                   0x00000001    /* Error Warning Transmit Interrupt Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_GIF                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_GIF_ADIF                    10            /* Access Denied Interrupt Flag */
#define BITP_CAN_GIF_UCEIF                    8            /* Universal Counter Exceeded Interrupt Flag */
#define BITP_CAN_GIF_RMLIF                    7            /* Receive Message Lost Interrupt Flag */
#define BITP_CAN_GIF_AAIF                     6            /* Abort Acknowledge Interrupt Flag */
#define BITP_CAN_GIF_UIAIF                    5            /* Unimplemented Address Interrupt Flag */
#define BITP_CAN_GIF_WUIF                     4            /* Wake Up Interrupt Flag */
#define BITP_CAN_GIF_BOIF                     3            /* Bus Off Interrupt Flag */
#define BITP_CAN_GIF_EPIF                     2            /* Error Warning Receive Interrupt Flag */
#define BITP_CAN_GIF_EWRIF                    1            /* Error Warning Receive Interrupt Flag */
#define BITP_CAN_GIF_EWTIF                    0            /* Error Warning Transmit Interrupt Flag */
#define BITM_CAN_GIF_ADIF                    0x00000400    /* Access Denied Interrupt Flag */
#define BITM_CAN_GIF_UCEIF                   0x00000100    /* Universal Counter Exceeded Interrupt Flag */
#define BITM_CAN_GIF_RMLIF                   0x00000080    /* Receive Message Lost Interrupt Flag */
#define BITM_CAN_GIF_AAIF                    0x00000040    /* Abort Acknowledge Interrupt Flag */
#define BITM_CAN_GIF_UIAIF                   0x00000020    /* Unimplemented Address Interrupt Flag */
#define BITM_CAN_GIF_WUIF                    0x00000010    /* Wake Up Interrupt Flag */
#define BITM_CAN_GIF_BOIF                    0x00000008    /* Bus Off Interrupt Flag */
#define BITM_CAN_GIF_EPIF                    0x00000004    /* Error Warning Receive Interrupt Flag */
#define BITM_CAN_GIF_EWRIF                   0x00000002    /* Error Warning Receive Interrupt Flag */
#define BITM_CAN_GIF_EWTIF                   0x00000001    /* Error Warning Transmit Interrupt Flag */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_CTL_CCR                      7            /* CAN Configuration Mode Request */
#define BITP_CAN_CTL_CSR                      6            /* CAN Suspend Mode Request */
#define BITP_CAN_CTL_SMR                      5            /* Sleep Mode Request */
#define BITP_CAN_CTL_WBA                      4            /* Wake Up on CAN Bus Activity */
#define BITP_CAN_CTL_ABO                      2            /* Auto Bus On */
#define BITP_CAN_CTL_DNM                      1            /* Device Net Mode */
#define BITP_CAN_CTL_SRS                      0            /* Software Reset */
#define BITM_CAN_CTL_CCR                     0x00000080    /* CAN Configuration Mode Request */
#define BITM_CAN_CTL_CSR                     0x00000040    /* CAN Suspend Mode Request */
#define BITM_CAN_CTL_SMR                     0x00000020    /* Sleep Mode Request */
#define BITM_CAN_CTL_WBA                     0x00000010    /* Wake Up on CAN Bus Activity */
#define BITM_CAN_CTL_ABO                     0x00000004    /* Auto Bus On */
#define BITM_CAN_CTL_DNM                     0x00000002    /* Device Net Mode */
#define BITM_CAN_CTL_SRS                     0x00000001    /* Software Reset */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_INT                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_INT_CANTRX                   7            /* Serial Input From Transceiver */
#define BITP_CAN_INT_CANTX                    6            /* Serial Input To Transceiver */
#define BITP_CAN_INT_SMACK                    3            /* Sleep Mode Acknowledge */
#define BITP_CAN_INT_GIRQ                     2            /* Global CAN Interrupt Output */
#define BITP_CAN_INT_MBTIRQ                   1            /* Mailbox Transmit Interrupt Output */
#define BITP_CAN_INT_MBIRQ                    0            /* Mailbox Receive Interrupt Output */
#define BITM_CAN_INT_CANTRX                  0x00000080    /* Serial Input From Transceiver */
#define BITM_CAN_INT_CANTX                   0x00000040    /* Serial Input To Transceiver */
#define BITM_CAN_INT_SMACK                   0x00000008    /* Sleep Mode Acknowledge */
#define BITM_CAN_INT_GIRQ                    0x00000004    /* Global CAN Interrupt Output */
#define BITM_CAN_INT_MBTIRQ                  0x00000002    /* Mailbox Transmit Interrupt Output */
#define BITM_CAN_INT_MBIRQ                   0x00000001    /* Mailbox Receive Interrupt Output */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBTD                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MBTD_TDR                     7            /* Temporary Disable Request */
#define BITP_CAN_MBTD_TDA                     6            /* Temporary Disable Acknowledge */
#define BITP_CAN_MBTD_TDPTR                   0            /* Temporary Disable Pointer */
#define BITM_CAN_MBTD_TDR                    0x00000080    /* Temporary Disable Request */
#define BITM_CAN_MBTD_TDA                    0x00000040    /* Temporary Disable Acknowledge */
#define BITM_CAN_MBTD_TDPTR                  0x0000001F    /* Temporary Disable Pointer */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_EWR                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_EWR_EWLTEC                   8            /* Transmit Error Warning Limit */
#define BITP_CAN_EWR_EWLREC                   0            /* Receive Error Warning Limit */
#define BITM_CAN_EWR_EWLTEC                  0x0000FF00    /* Transmit Error Warning Limit */
#define BITM_CAN_EWR_EWLREC                  0x000000FF    /* Receive Error Warning Limit */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_ESR                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_ESR_FER                      7            /* Form Error */
#define BITP_CAN_ESR_BEF                      6            /* Bit Error Flag */
#define BITP_CAN_ESR_SAO                      5            /* Stuck at Dominant */
#define BITP_CAN_ESR_CRCE                     4            /* CRC Error */
#define BITP_CAN_ESR_SER                      3            /* Stuff Bit Error */
#define BITP_CAN_ESR_ACKE                     2            /* Acknowledge Error */
#define BITM_CAN_ESR_FER                     0x00000080    /* Form Error */
#define BITM_CAN_ESR_BEF                     0x00000040    /* Bit Error Flag */
#define BITM_CAN_ESR_SAO                     0x00000020    /* Stuck at Dominant */
#define BITM_CAN_ESR_CRCE                    0x00000010    /* CRC Error */
#define BITM_CAN_ESR_SER                     0x00000008    /* Stuff Bit Error */
#define BITM_CAN_ESR_ACKE                    0x00000004    /* Acknowledge Error */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_UCCNF                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_UCCNF_UCE                    7            /* Universal Counter Enable */
#define BITP_CAN_UCCNF_UCCT                   6            /* Universal Counter CAN Trigger */
#define BITP_CAN_UCCNF_UCRC                   5            /* Universal Counter Reload/Clear */
#define BITP_CAN_UCCNF_UCCNF                  0            /* Universal Counter Configuration */
#define BITM_CAN_UCCNF_UCE                   0x00000080    /* Universal Counter Enable */
#define BITM_CAN_UCCNF_UCCT                  0x00000040    /* Universal Counter CAN Trigger */
#define BITM_CAN_UCCNF_UCRC                  0x00000020    /* Universal Counter Reload/Clear */
#define BITM_CAN_UCCNF_UCCNF                 0x0000000F    /* Universal Counter Configuration */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_AMnH                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_AMH_FDF                     15            /* Filter on Delay Field */
#define BITP_CAN_AMH_FMD                     14            /* Full Mask Data */
#define BITP_CAN_AMH_AMIDE                   13            /* Acceptance Mask Identifier Extension */
#define BITP_CAN_AMH_BASEID                   2            /* Base Identifier */
#define BITP_CAN_AMH_EXTID                    0            /* Extended Identifier */
#define BITM_CAN_AMH_FDF                     0x00008000    /* Filter on Delay Field */
#define BITM_CAN_AMH_FMD                     0x00004000    /* Full Mask Data */
#define BITM_CAN_AMH_AMIDE                   0x00002000    /* Acceptance Mask Identifier Extension */
#define BITM_CAN_AMH_BASEID                  0x00001FFC    /* Base Identifier */
#define BITM_CAN_AMH_EXTID                   0x00000003    /* Extended Identifier */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBn_DATA0                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MB_DATA0_DFB6                8
#define BITP_CAN_MB_DATA0_DFB7                0
#define BITM_CAN_MB_DATA0_DFB6               0x0000FF00
#define BITM_CAN_MB_DATA0_DFB7               0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBn_DATA1                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MB_DATA1_DFB4                8
#define BITP_CAN_MB_DATA1_DFB5                0
#define BITM_CAN_MB_DATA1_DFB4               0x0000FF00
#define BITM_CAN_MB_DATA1_DFB5               0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBn_DATA2                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MB_DATA2_DFB2                8
#define BITP_CAN_MB_DATA2_DFB3                0
#define BITM_CAN_MB_DATA2_DFB2               0x0000FF00
#define BITM_CAN_MB_DATA2_DFB3               0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBn_DATA3                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MB_DATA3_DFB0                8
#define BITP_CAN_MB_DATA3_DFB1                0
#define BITM_CAN_MB_DATA3_DFB0               0x0000FF00
#define BITM_CAN_MB_DATA3_DFB1               0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBn_LENGTH                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MB_LENGTH_DLC                0            /* Data Length Code */
#define BITM_CAN_MB_LENGTH_DLC               0x0000000F    /* Data Length Code */

/* ------------------------------------------------------------------------------------------------------------------------
        CAN_MBn_ID1                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CAN_MB_ID1_AME                  15            /* Acceptance Mask Enable */
#define BITP_CAN_MB_ID1_RTR                  14            /* Remote Transmission Request */
#define BITP_CAN_MB_ID1_IDE                  13            /* Identifier Extension */
#define BITP_CAN_MB_ID1_BASEID                2            /* Base Identifier */
#define BITP_CAN_MB_ID1_EXTID                 0            /* Extended Identifier */
#define BITM_CAN_MB_ID1_AME                  0x00008000    /* Acceptance Mask Enable */
#define BITM_CAN_MB_ID1_RTR                  0x00004000    /* Remote Transmission Request */
#define BITM_CAN_MB_ID1_IDE                  0x00002000    /* Identifier Extension */
#define BITM_CAN_MB_ID1_BASEID               0x00001FFC    /* Base Identifier */
#define BITM_CAN_MB_ID1_EXTID                0x00000003    /* Extended Identifier */

/* =========================
        LP Registers
   ========================= */

/* =========================
        LP0
   ========================= */
#define REG_LP0_CTL                     0xFFC01000         /* LP0 Control Register */
#define REG_LP0_STAT                    0xFFC01004         /* LP0 Status Register */
#define REG_LP0_DIV                     0xFFC01008         /* LP0 Clock Divider Value */
#define REG_LP0_CNT                     0xFFC0100C         /* LP0 Current Count Value of Clock Divider */
#define REG_LP0_TX                      0xFFC01010         /* LP0 Transmit Buffer */
#define REG_LP0_RX                      0xFFC01014         /* LP0 Receive Buffer */
#define REG_LP0_TXIN_SHDW               0xFFC01018         /* LP0 Shadow Input Transmit Buffer */
#define REG_LP0_TXOUT_SHDW              0xFFC0101C         /* LP0 Shadow Output Transmit Buffer */

/* =========================
        LP1
   ========================= */
#define REG_LP1_CTL                     0xFFC01100         /* LP1 Control Register */
#define REG_LP1_STAT                    0xFFC01104         /* LP1 Status Register */
#define REG_LP1_DIV                     0xFFC01108         /* LP1 Clock Divider Value */
#define REG_LP1_CNT                     0xFFC0110C         /* LP1 Current Count Value of Clock Divider */
#define REG_LP1_TX                      0xFFC01110         /* LP1 Transmit Buffer */
#define REG_LP1_RX                      0xFFC01114         /* LP1 Receive Buffer */
#define REG_LP1_TXIN_SHDW               0xFFC01118         /* LP1 Shadow Input Transmit Buffer */
#define REG_LP1_TXOUT_SHDW              0xFFC0111C         /* LP1 Shadow Output Transmit Buffer */

/* =========================
        LP2
   ========================= */
#define REG_LP2_CTL                     0xFFC01200         /* LP2 Control Register */
#define REG_LP2_STAT                    0xFFC01204         /* LP2 Status Register */
#define REG_LP2_DIV                     0xFFC01208         /* LP2 Clock Divider Value */
#define REG_LP2_CNT                     0xFFC0120C         /* LP2 Current Count Value of Clock Divider */
#define REG_LP2_TX                      0xFFC01210         /* LP2 Transmit Buffer */
#define REG_LP2_RX                      0xFFC01214         /* LP2 Receive Buffer */
#define REG_LP2_TXIN_SHDW               0xFFC01218         /* LP2 Shadow Input Transmit Buffer */
#define REG_LP2_TXOUT_SHDW              0xFFC0121C         /* LP2 Shadow Output Transmit Buffer */

/* =========================
        LP3
   ========================= */
#define REG_LP3_CTL                     0xFFC01300         /* LP3 Control Register */
#define REG_LP3_STAT                    0xFFC01304         /* LP3 Status Register */
#define REG_LP3_DIV                     0xFFC01308         /* LP3 Clock Divider Value */
#define REG_LP3_CNT                     0xFFC0130C         /* LP3 Current Count Value of Clock Divider */
#define REG_LP3_TX                      0xFFC01310         /* LP3 Transmit Buffer */
#define REG_LP3_RX                      0xFFC01314         /* LP3 Receive Buffer */
#define REG_LP3_TXIN_SHDW               0xFFC01318         /* LP3 Shadow Input Transmit Buffer */
#define REG_LP3_TXOUT_SHDW              0xFFC0131C         /* LP3 Shadow Output Transmit Buffer */

/* =========================
        LP
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        LP_CTL                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_LP_CTL_ITMSK                    11            /* Invalid Transmit Interrupt Mask */
#define BITP_LP_CTL_RRQMSK                    9            /* Receive Request Interrupt Mask */
#define BITP_LP_CTL_TRQMSK                    8            /* Transmit Request Interrupt Mask */
#define BITP_LP_CTL_TRAN                      3            /* Transfer Direction */
#define BITP_LP_CTL_EN                        0            /* Enable */
#define BITM_LP_CTL_ITMSK                    0x00000800    /* Invalid Transmit Interrupt Mask */
#define BITM_LP_CTL_RRQMSK                   0x00000200    /* Receive Request Interrupt Mask */
#define BITM_LP_CTL_TRQMSK                   0x00000100    /* Transmit Request Interrupt Mask */
#define BITM_LP_CTL_TRAN                     0x00000008    /* Transfer Direction */
#define BITM_LP_CTL_EN                       0x00000001    /* Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        LP_STAT                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_LP_STAT_LPBS                     8            /* Bus Status */
#define BITP_LP_STAT_LERR                     7            /* Buffer Pack Error Status */
#define BITP_LP_STAT_FFST                     4            /* FIFO Status */
#define BITP_LP_STAT_LPIT                     3            /* Invalid Tranmit Interrupt */
#define BITP_LP_STAT_LRRQ                     1            /* Receive Request */
#define BITP_LP_STAT_LTRQ                     0            /* Transmit Request */
#define BITM_LP_STAT_LPBS                    0x00000100    /* Bus Status */
#define BITM_LP_STAT_LERR                    0x00000080    /* Buffer Pack Error Status */
#define BITM_LP_STAT_FFST                    0x00000070    /* FIFO Status */
#define BITM_LP_STAT_LPIT                    0x00000008    /* Invalid Tranmit Interrupt */
#define BITM_LP_STAT_LRRQ                    0x00000002    /* Receive Request */
#define BITM_LP_STAT_LTRQ                    0x00000001    /* Transmit Request */

/* ------------------------------------------------------------------------------------------------------------------------
        LP_DIV                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_LP_DIV_VALUE                     0            /* Divisor Value */
#define BITM_LP_DIV_VALUE                    0x000000FF    /* Divisor Value */

/* ------------------------------------------------------------------------------------------------------------------------
        LP_CNT                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_LP_CNT_VALUE                     0            /* Current Count for the Divider */
#define BITM_LP_CNT_VALUE                    0x000000FF    /* Current Count for the Divider */

/* =========================
        TIMER Registers
   ========================= */

/* =========================
        TIMER0
   ========================= */
#define REG_TIMER0_REVID                0xFFC01400         /* TIMER0 Timer IP Version ID */
#define REG_TIMER0_RUN                  0xFFC01404         /* TIMER0 Timer Run Register */
#define REG_TIMER0_RUN_SET              0xFFC01408         /* TIMER0 Run Register Alias to Set */
#define REG_TIMER0_RUN_CLR              0xFFC0140C         /* TIMER0 Run Register Alias to Clear */
#define REG_TIMER0_STOP_CFG             0xFFC01410         /* TIMER0 Stop Config Register */
#define REG_TIMER0_STOP_CFG_SET         0xFFC01414         /* TIMER0 Stop Config Alias to Set */
#define REG_TIMER0_STOP_CFG_CLR         0xFFC01418         /* TIMER0 Stop Config Alias to Clear */
#define REG_TIMER0_DATA_IMSK            0xFFC0141C         /* TIMER0 Data Interrupt Mask register */
#define REG_TIMER0_STAT_IMSK            0xFFC01420         /* TIMER0 Status Interrupt Mask register */
#define REG_TIMER0_TRG_MSK              0xFFC01424         /* TIMER0 Output Trigger Mask register */
#define REG_TIMER0_TRG_IE               0xFFC01428         /* TIMER0 Slave Trigger Enable register */
#define REG_TIMER0_DATA_ILAT            0xFFC0142C         /* TIMER0 Data Interrupt Register */
#define REG_TIMER0_STAT_ILAT            0xFFC01430         /* TIMER0 Status (Error) Interrupt Register */
#define REG_TIMER0_ERR_TYPE             0xFFC01434         /* TIMER0 Register Indicating Type of Error */
#define REG_TIMER0_BCAST_PER            0xFFC01438         /* TIMER0 Broadcast Period */
#define REG_TIMER0_BCAST_WID            0xFFC0143C         /* TIMER0 Broadcast Width */
#define REG_TIMER0_BCAST_DLY            0xFFC01440         /* TIMER0 Broadcast Delay */
#define REG_TIMER0_TMR0_CFG             0xFFC01460         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR1_CFG             0xFFC01480         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR2_CFG             0xFFC014A0         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR3_CFG             0xFFC014C0         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR4_CFG             0xFFC014E0         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR5_CFG             0xFFC01500         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR6_CFG             0xFFC01520         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR7_CFG             0xFFC01540         /* TIMER0 Per Timer Config Register */
#define REG_TIMER0_TMR0_CNT             0xFFC01464         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR1_CNT             0xFFC01484         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR2_CNT             0xFFC014A4         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR3_CNT             0xFFC014C4         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR4_CNT             0xFFC014E4         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR5_CNT             0xFFC01504         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR6_CNT             0xFFC01524         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR7_CNT             0xFFC01544         /* TIMER0 Per Timer Counter Register */
#define REG_TIMER0_TMR0_PER             0xFFC01468         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR1_PER             0xFFC01488         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR2_PER             0xFFC014A8         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR3_PER             0xFFC014C8         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR4_PER             0xFFC014E8         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR5_PER             0xFFC01508         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR6_PER             0xFFC01528         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR7_PER             0xFFC01548         /* TIMER0 Per Timer Period Register */
#define REG_TIMER0_TMR0_WID             0xFFC0146C         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR1_WID             0xFFC0148C         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR2_WID             0xFFC014AC         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR3_WID             0xFFC014CC         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR4_WID             0xFFC014EC         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR5_WID             0xFFC0150C         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR6_WID             0xFFC0152C         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR7_WID             0xFFC0154C         /* TIMER0 Per Timer Width Register */
#define REG_TIMER0_TMR0_DLY             0xFFC01470         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR1_DLY             0xFFC01490         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR2_DLY             0xFFC014B0         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR3_DLY             0xFFC014D0         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR4_DLY             0xFFC014F0         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR5_DLY             0xFFC01510         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR6_DLY             0xFFC01530         /* TIMER0 Per Timer Delay Register */
#define REG_TIMER0_TMR7_DLY             0xFFC01550         /* TIMER0 Per Timer Delay Register */

/* =========================
        TIMER
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_REVID                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_REVID_MAJOR                4            /* Major Revision ID */
#define BITP_TIMER_REVID_REV                  0            /* Incremental Revision ID */
#define BITM_TIMER_REVID_MAJOR               0x000000F0    /* Major Revision ID */
#define BITM_TIMER_REVID_REV                 0x0000000F    /* Incremental Revision ID */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_RUN                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_RUN_TMR00                  0            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR01                  1            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR02                  2            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR03                  3            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR04                  4            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR05                  5            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR06                  6            /* Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR07                  7            /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR00                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR01                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR02                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR03                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR04                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR05                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR06                 0x000000FF    /* Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR07                 0x000000FF    /* Start/Stop Timer n */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_RUN_SET                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_RUN_SET_TMR00              0            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR01              1            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR02              2            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR03              3            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR04              4            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR05              5            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR06              6            /* RUN register set alias */
#define BITP_TIMER_RUN_SET_TMR07              7            /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR00             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR01             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR02             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR03             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR04             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR05             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR06             0x000000FF    /* RUN register set alias */
#define BITM_TIMER_RUN_SET_TMR07             0x000000FF    /* RUN register set alias */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_RUN_CLR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_RUN_CLR_TMR00              0            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR01              1            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR02              2            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR03              3            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR04              4            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR05              5            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR06              6            /* RUN register clear alias */
#define BITP_TIMER_RUN_CLR_TMR07              7            /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR00             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR01             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR02             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR03             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR04             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR05             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR06             0x000000FF    /* RUN register clear alias */
#define BITM_TIMER_RUN_CLR_TMR07             0x000000FF    /* RUN register clear alias */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_STOP_CFG                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_STOP_CFG_TMR00             0            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR01             1            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR02             2            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR03             3            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR04             4            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR05             5            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR06             6            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITP_TIMER_STOP_CFG_TMR07             7            /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR00            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR01            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR02            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR03            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR04            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR05            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR06            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */
#define BITM_TIMER_STOP_CFG_TMR07            0x000000FF    /* Direct Set/Clear Stop Config Bit for Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_STOP_CFG_SET                   Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_STOP_CFG_SET_TMR00         0            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR01         1            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR02         2            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR03         3            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR04         4            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR05         5            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR06         6            /* STOP_CFG set register alias */
#define BITP_TIMER_STOP_CFG_SET_TMR07         7            /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR00        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR01        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR02        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR03        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR04        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR05        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR06        0x000000FF    /* STOP_CFG set register alias */
#define BITM_TIMER_STOP_CFG_SET_TMR07        0x000000FF    /* STOP_CFG set register alias */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_STOP_CFG_CLR                   Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_STOP_CFG_CLR_TMR00         0            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR01         1            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR02         2            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR03         3            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR04         4            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR05         5            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR06         6            /* STOP_CFG clear register alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR07         7            /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR00        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR01        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR02        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR03        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR04        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR05        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR06        0x000000FF    /* STOP_CFG clear register alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR07        0x000000FF    /* STOP_CFG clear register alias */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_DATA_IMSK                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_DATA_IMSK_TMR00            0            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR01            1            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR02            2            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR03            3            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR04            4            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR05            5            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR06            6            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_DATA_IMSK_TMR07            7            /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR00           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR01           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR02           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR03           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR04           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR05           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR06           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_DATA_IMSK_TMR07           0x000000FF    /* Data Interrupt Request Mask/Unmask from Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_STAT_IMSK                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_STAT_IMSK_TMR00            0            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR01            1            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR02            2            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR03            3            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR04            4            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR05            5            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR06            6            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITP_TIMER_STAT_IMSK_TMR07            7            /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR00           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR01           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR02           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR03           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR04           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR05           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR06           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */
#define BITM_TIMER_STAT_IMSK_TMR07           0x000000FF    /* Status Interrupt Request Mask/Unmask from Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_TRG_MSK                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_TRG_MSK_TMR00              0            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR01              1            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR02              2            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR03              3            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR04              4            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR05              5            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR06              6            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITP_TIMER_TRG_MSK_TMR07              7            /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR00             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR01             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR02             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR03             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR04             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR05             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR06             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */
#define BITM_TIMER_TRG_MSK_TMR07             0x000000FF    /* Data Trigger Request Mask/Unmask from Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_TRG_IE                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_TRG_IE_TMR00               0            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR01               1            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR02               2            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR03               3            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR04               4            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR05               5            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR06               6            /* Trigger Input Enable for Timer x */
#define BITP_TIMER_TRG_IE_TMR07               7            /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR00              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR01              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR02              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR03              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR04              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR05              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR06              0x000000FF    /* Trigger Input Enable for Timer x */
#define BITM_TIMER_TRG_IE_TMR07              0x000000FF    /* Trigger Input Enable for Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_DATA_ILAT                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_DATA_ILAT_TMR00            0            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR01            1            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR02            2            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR03            3            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR04            4            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR05            5            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR06            6            /* Set/Clear Data Interrupt for Timer x */
#define BITP_TIMER_DATA_ILAT_TMR07            7            /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR00           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR01           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR02           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR03           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR04           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR05           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR06           0x000000FF    /* Set/Clear Data Interrupt for Timer x */
#define BITM_TIMER_DATA_ILAT_TMR07           0x000000FF    /* Set/Clear Data Interrupt for Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_STAT_ILAT                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_STAT_ILAT_TMR00            0            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR01            1            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR02            2            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR03            3            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR04            4            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR05            5            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR06            6            /* Counter Overflow/Programming Error for Timer x */
#define BITP_TIMER_STAT_ILAT_TMR07            7            /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR00           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR01           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR02           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR03           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR04           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR05           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR06           0x000000FF    /* Counter Overflow/Programming Error for Timer x */
#define BITM_TIMER_STAT_ILAT_TMR07           0x000000FF    /* Counter Overflow/Programming Error for Timer x */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_ERR_TYPE                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_ERR_TYPE_TERR7            14            /* Error type for Timer 7 */
#define BITP_TIMER_ERR_TYPE_TERR6            12            /* Error type for Timer 6 */
#define BITP_TIMER_ERR_TYPE_TERR5            10            /* Error type for Timer 5 */
#define BITP_TIMER_ERR_TYPE_TERR4             8            /* Error type for Timer 4 */
#define BITP_TIMER_ERR_TYPE_TERR3             6            /* Error type for Timer 3 */
#define BITP_TIMER_ERR_TYPE_TERR2             4            /* Error type for Timer 2 */
#define BITP_TIMER_ERR_TYPE_TERR1             2            /* Error type for Timer 1 */
#define BITP_TIMER_ERR_TYPE_TERR0             0            /* Error type for Timer 0 */

#define BITM_TIMER_ERR_TYPE_TERR7            0x0000C000    /* Error type for Timer 7 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR7          0x00000000    /* TERR7: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF7          0x00004000    /* TERR7: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG7          0x00008000    /* TERR7: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG7        0x0000C000    /* TERR7: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR6            0x00003000    /* Error type for Timer 6 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR6          0x00000000    /* TERR6: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF6          0x00001000    /* TERR6: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG6          0x00002000    /* TERR6: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG6        0x00003000    /* TERR6: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR5            0x00000C00    /* Error type for Timer 5 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR5          0x00000000    /* TERR5: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF5          0x00000400    /* TERR5: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG5          0x00000800    /* TERR5: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG5        0x00000C00    /* TERR5: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR4            0x00000300    /* Error type for Timer 4 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR4          0x00000000    /* TERR4: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF4          0x00000100    /* TERR4: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG4          0x00000200    /* TERR4: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG4        0x00000300    /* TERR4: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR3            0x000000C0    /* Error type for Timer 3 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR3          0x00000000    /* TERR3: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF3          0x00000040    /* TERR3: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG3          0x00000080    /* TERR3: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG3        0x000000C0    /* TERR3: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR2            0x00000030    /* Error type for Timer 2 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR2          0x00000000    /* TERR2: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF2          0x00000010    /* TERR2: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG2          0x00000020    /* TERR2: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG2        0x00000030    /* TERR2: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR1            0x0000000C    /* Error type for Timer 1 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR1          0x00000000    /* TERR1: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF1          0x00000004    /* TERR1: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG1          0x00000008    /* TERR1: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG1        0x0000000C    /* TERR1: WID or DLY Register Programming Error */

#define BITM_TIMER_ERR_TYPE_TERR0            0x00000003    /* Error type for Timer 0 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR0          0x00000000    /* TERR0: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF0          0x00000001    /* TERR0: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG0          0x00000002    /* TERR0: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG0        0x00000003    /* TERR0: WID or DLY Register Programming Error */

/* ------------------------------------------------------------------------------------------------------------------------
        TIMER_TMR_CFG                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TIMER_TMR_CFG_EMURUN            15            /* Emulation Behavior Control */
#define BITP_TIMER_TMR_CFG_BPEREN            14            /* Broadcast Period Enable */
#define BITP_TIMER_TMR_CFG_BWIDEN            13            /* Broadcast Width Enable */
#define BITP_TIMER_TMR_CFG_BDLYEN            12            /* Broadcast Delay Enable */
#define BITP_TIMER_TMR_CFG_OUTDIS            11            /* TMRx pin output disable */
#define BITP_TIMER_TMR_CFG_TINSEL            10            /* Timer Input Select */
#define BITP_TIMER_TMR_CFG_CLKSEL             8            /* Clock Select */
#define BITP_TIMER_TMR_CFG_PULSEHI            7            /* Polarity */
#define BITP_TIMER_TMR_CFG_SLAVETRIG          6            /* Response to Input trigger */
#define BITP_TIMER_TMR_CFG_IRQMODE            4            /* Interrupt Modes */
#define BITP_TIMER_TMR_CFG_TMODE              0            /* Timer Modes */

#define BITM_TIMER_TMR_CFG_EMURUN            0x00008000    /* Emulation Behavior Control */
#define ENUM_TIMER_TMR_CFG_EMU_NOCNT         0x00000000    /* EMURUN: Timer Counter stops during emulation */
#define ENUM_TIMER_TMR_CFG_EMU_CNT           0x00008000    /* EMURUN: Timer Counter runs during emulation select */

#define BITM_TIMER_TMR_CFG_BPEREN            0x00004000    /* Broadcast Period Enable */
#define ENUM_TIMER_TMR_CFG_BCASTPER_DIS      0x00000000    /* BPEREN: Disable broadcast on PER register */
#define ENUM_TIMER_TMR_CFG_BCASTPER_EN       0x00004000    /* BPEREN: Enable broadcast on PER register */

#define BITM_TIMER_TMR_CFG_BWIDEN            0x00002000    /* Broadcast Width Enable */
#define ENUM_TIMER_TMR_CFG_BCASTWID_DIS      0x00000000    /* BWIDEN: Disable broadcast on WID register */
#define ENUM_TIMER_TMR_CFG_BCASTWID_EN       0x00002000    /* BWIDEN: Enable broadcast  on WID register */

#define BITM_TIMER_TMR_CFG_BDLYEN            0x00001000    /* Broadcast Delay Enable */
#define ENUM_TIMER_TMR_CFG_BCASTDLY_DIS      0x00000000    /* BDLYEN: Disable broadcast  on DLY register */
#define ENUM_TIMER_TMR_CFG_BCASTDLY_EN       0x00001000    /* BDLYEN: Enable broadcast  on DLY register */

#define BITM_TIMER_TMR_CFG_OUTDIS            0x00000800    /* TMRx pin output disable */
#define ENUM_TIMER_TMR_CFG_PADOUT_EN         0x00000000    /* OUTDIS: Enable pad output enable */
#define ENUM_TIMER_TMR_CFG_PADOUT_DIS        0x00000800    /* OUTDIS: Disable pad output enable */

#define BITM_TIMER_TMR_CFG_TINSEL            0x00000400    /* Timer Input Select */
#define ENUM_TIMER_TMR_CFG_TINSEL_TMR        0x00000000    /* TINSEL: Sample TMR input */
#define ENUM_TIMER_TMR_CFG_TINSEL_AUX        0x00000400    /* TINSEL: Sample Aux TMR input */

#define BITM_TIMER_TMR_CFG_CLKSEL            0x00000300    /* Clock Select */
#define ENUM_TIMER_TMR_CFG_CLKSEL_ALT0       0x00000100    /* CLKSEL: Use Alternate Clock 0 for TMR */
#define ENUM_TIMER_TMR_CFG_CLKSEL_ALT1       0x00000300    /* CLKSEL: Use Alternate Clock 1 for TMR */
#define ENUM_TIMER_TMR_CFG_CLKSEL_SCLK       0x00000000    /* CLKSEL: Use system clock for TMR */

#define BITM_TIMER_TMR_CFG_PULSEHI           0x00000080    /* Polarity */
#define ENUM_TIMER_TMR_CFG_NEG_EDGE          0x00000000    /* PULSEHI: Negative edge/action causes interrupt */
#define ENUM_TIMER_TMR_CFG_POS_EDGE          0x00000080    /* PULSEHI: Positive edge/action causes interrupt */

#define BITM_TIMER_TMR_CFG_SLAVETRIG         0x00000040    /* Response to Input trigger */
#define ENUM_TIMER_TMR_CFG_TRIGSTOP          0x00000000    /* SLAVETRIG: Trigger pulse stops timer if it is running */
#define ENUM_TIMER_TMR_CFG_TRIGSTART         0x00000040    /* SLAVETRIG: Trigger pulse starts timer if it is stopped */

#define BITM_TIMER_TMR_CFG_IRQMODE           0x00000030    /* Interrupt Modes */
#define ENUM_TIMER_TMR_CFG_IRQMODE0          0x00000000    /* IRQMODE: Interrupt Mode 0 */
#define ENUM_TIMER_TMR_CFG_IRQMODE1          0x00000010    /* IRQMODE: Interrupt Mode 1 */
#define ENUM_TIMER_TMR_CFG_IRQMODE2          0x00000020    /* IRQMODE: Interrupt Mode 2 */
#define ENUM_TIMER_TMR_CFG_IRQMODE3          0x00000030    /* IRQMODE: Interrupt Mode 3 */

#define BITM_TIMER_TMR_CFG_TMODE             0x0000000F    /* Timer Modes */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE         0x00000000    /* TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_WIDCAP0_MODE      0x0000000A    /* TMODE: Width Capture Asserted Mode */
#define ENUM_TIMER_TMR_CFG_WIDCAP1_MODE      0x0000000B    /* TMODE: Width Capture Deasserted Mode */
#define ENUM_TIMER_TMR_CFG_PWMCONT_MODE      0x0000000C    /* TMODE: Continuous PWMOUT mode */
#define ENUM_TIMER_TMR_CFG_PWMSING_MODE      0x0000000D    /* TMODE: Single pulse PWMOUT mode */
#define ENUM_TIMER_TMR_CFG_EXTCLK_MODE       0x0000000E    /* TMODE: EXTCLK */
#define ENUM_TIMER_TMR_CFG_PININT_MODE       0x0000000F    /* TMODE: PININT (pin interrupt) */
#define ENUM_TIMER_TMR_CFG_WDPER_MODE        0x00000008    /* TMODE: Period Watchdog Mode */
#define ENUM_TIMER_TMR_CFG_WDWID_MODE        0x00000009    /* TMODE: Width Watchdog Mode */

/* =========================
        CRC Registers
   ========================= */

/* =========================
        CRC0
   ========================= */
#define REG_CRC0_CTL                    0xFFC01C00         /* CRC0 Control Register */
#define REG_CRC0_DCNT                   0xFFC01C04         /* CRC0 Data Word Count Register */
#define REG_CRC0_DCNTRLD                0xFFC01C08         /* CRC0 Data Word Count Reload Register */
#define REG_CRC0_COMP                   0xFFC01C14         /* CRC0 DATA Compare Register */
#define REG_CRC0_FILLVAL                0xFFC01C18         /* CRC0 Fill Value Register */
#define REG_CRC0_DFIFO                  0xFFC01C1C         /* CRC0 DATA FIFO Register */
#define REG_CRC0_INEN                   0xFFC01C20         /* CRC0 Interrupt Enable Register */
#define REG_CRC0_INEN_SET               0xFFC01C24         /* CRC0 Interrupt Enable Set Register */
#define REG_CRC0_INEN_CLR               0xFFC01C28         /* CRC0 Interrupt Enable Clear Register */
#define REG_CRC0_POLY                   0xFFC01C2C         /* CRC0 Polynomial Register */
#define REG_CRC0_STAT                   0xFFC01C40         /* CRC0 Status Register */
#define REG_CRC0_DCNTCAP                0xFFC01C44         /* CRC0 DATA Count Capture Register */
#define REG_CRC0_RESULT_FIN             0xFFC01C4C         /* CRC0 Final CRC Result Register */
#define REG_CRC0_RESULT_CUR             0xFFC01C50         /* CRC0 Current CRC Result Register */
#define REG_CRC0_REVID                  0xFFC01C60         /* CRC0 Revision ID Register */
#define REG_CRC0_LUT0                   0xFFC01C84         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT1                   0xFFC01C88         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT2                   0xFFC01C8C         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT3                   0xFFC01C90         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT4                   0xFFC01C94         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT5                   0xFFC01C98         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT6                   0xFFC01C9C         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT7                   0xFFC01CA0         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT8                   0xFFC01CA4         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT9                   0xFFC01CA8         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT10                  0xFFC01CAC         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT11                  0xFFC01CB0         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT12                  0xFFC01CB4         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT13                  0xFFC01CB8         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT14                  0xFFC01CBC         /* CRC0 Look Up Table Register */
#define REG_CRC0_LUT15                  0xFFC01CC0         /* CRC0 Look Up Table Register */

/* =========================
        CRC1
   ========================= */
#define REG_CRC1_CTL                    0xFFC01D00         /* CRC1 Control Register */
#define REG_CRC1_DCNT                   0xFFC01D04         /* CRC1 Data Word Count Register */
#define REG_CRC1_DCNTRLD                0xFFC01D08         /* CRC1 Data Word Count Reload Register */
#define REG_CRC1_COMP                   0xFFC01D14         /* CRC1 DATA Compare Register */
#define REG_CRC1_FILLVAL                0xFFC01D18         /* CRC1 Fill Value Register */
#define REG_CRC1_DFIFO                  0xFFC01D1C         /* CRC1 DATA FIFO Register */
#define REG_CRC1_INEN                   0xFFC01D20         /* CRC1 Interrupt Enable Register */
#define REG_CRC1_INEN_SET               0xFFC01D24         /* CRC1 Interrupt Enable Set Register */
#define REG_CRC1_INEN_CLR               0xFFC01D28         /* CRC1 Interrupt Enable Clear Register */
#define REG_CRC1_POLY                   0xFFC01D2C         /* CRC1 Polynomial Register */
#define REG_CRC1_STAT                   0xFFC01D40         /* CRC1 Status Register */
#define REG_CRC1_DCNTCAP                0xFFC01D44         /* CRC1 DATA Count Capture Register */
#define REG_CRC1_RESULT_FIN             0xFFC01D4C         /* CRC1 Final CRC Result Register */
#define REG_CRC1_RESULT_CUR             0xFFC01D50         /* CRC1 Current CRC Result Register */
#define REG_CRC1_REVID                  0xFFC01D60         /* CRC1 Revision ID Register */
#define REG_CRC1_LUT0                   0xFFC01D84         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT1                   0xFFC01D88         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT2                   0xFFC01D8C         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT3                   0xFFC01D90         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT4                   0xFFC01D94         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT5                   0xFFC01D98         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT6                   0xFFC01D9C         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT7                   0xFFC01DA0         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT8                   0xFFC01DA4         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT9                   0xFFC01DA8         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT10                  0xFFC01DAC         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT11                  0xFFC01DB0         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT12                  0xFFC01DB4         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT13                  0xFFC01DB8         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT14                  0xFFC01DBC         /* CRC1 Look Up Table Register */
#define REG_CRC1_LUT15                  0xFFC01DC0         /* CRC1 Look Up Table Register */

/* =========================
        CRC
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        CRC_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CRC_CTL_CMPMIRR                 22            /* COMPARE register Mirroring */
#define BITP_CRC_CTL_POLYMIRR                21            /* POLY register Mirroring */
#define BITP_CRC_CTL_RSLTMIRR                20            /* RESULT_CUR and RESULT_FIN register Mirroring */
#define BITP_CRC_CTL_FDSEL                   19            /* FIFO Data Select */
#define BITP_CRC_CTL_W16SWP                  18            /* Word16 Swap */
#define BITP_CRC_CTL_BYTMIRR                 17            /* Byte Mirroring */
#define BITP_CRC_CTL_BITMIRR                 16            /* Bit Mirroring */
#define BITP_CRC_CTL_IRRSTALL                13            /* Stall on Intermediate Result Ready */
#define BITP_CRC_CTL_OBRSTALL                12            /* Stall on Output Buffer Ready */
#define BITP_CRC_CTL_AUTOCLRF                 9            /* Auto Clear to One */
#define BITP_CRC_CTL_AUTOCLRZ                 8            /* Auto Clear to Zero */
#define BITP_CRC_CTL_OPMODE                   4            /* Operation Mode */
#define BITP_CRC_CTL_BLKEN                    0            /* Block Enable */
#define BITM_CRC_CTL_CMPMIRR                 0x00400000    /* COMPARE register Mirroring */
#define BITM_CRC_CTL_POLYMIRR                0x00200000    /* POLY register Mirroring */
#define BITM_CRC_CTL_RSLTMIRR                0x00100000    /* RESULT_CUR and RESULT_FIN register Mirroring */
#define BITM_CRC_CTL_FDSEL                   0x00080000    /* FIFO Data Select */
#define BITM_CRC_CTL_W16SWP                  0x00040000    /* Word16 Swap */
#define BITM_CRC_CTL_BYTMIRR                 0x00020000    /* Byte Mirroring */
#define BITM_CRC_CTL_BITMIRR                 0x00010000    /* Bit Mirroring */
#define BITM_CRC_CTL_IRRSTALL                0x00002000    /* Stall on Intermediate Result Ready */
#define BITM_CRC_CTL_OBRSTALL                0x00001000    /* Stall on Output Buffer Ready */
#define BITM_CRC_CTL_AUTOCLRF                0x00000200    /* Auto Clear to One */
#define BITM_CRC_CTL_AUTOCLRZ                0x00000100    /* Auto Clear to Zero */
#define BITM_CRC_CTL_OPMODE                  0x000000F0    /* Operation Mode */
#define BITM_CRC_CTL_BLKEN                   0x00000001    /* Block Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        CRC_INEN                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CRC_INEN_DCNTEXP                 4            /* Enable Status Interrupt */
#define BITP_CRC_INEN_CMPERR                  1            /* Enable Error Interrupt */
#define BITM_CRC_INEN_DCNTEXP                0x00000010    /* Enable Status Interrupt */
#define BITM_CRC_INEN_CMPERR                 0x00000002    /* Enable Error Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        CRC_INEN_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CRC_INEN_SET_DCNTEXP             4            /* Set Status Interrupt Enable */
#define BITP_CRC_INEN_SET_CMPERR              1            /* Set Error Interrupt Enable */
#define BITM_CRC_INEN_SET_DCNTEXP            0x00000010    /* Set Status Interrupt Enable */
#define BITM_CRC_INEN_SET_CMPERR             0x00000002    /* Set Error Interrupt Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        CRC_INEN_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CRC_INEN_CLR_DCNTEXP             4            /* Disable Status Interrupt */
#define BITP_CRC_INEN_CLR_CMPERR              1            /* Disable Error Interrupt */
#define BITM_CRC_INEN_CLR_DCNTEXP            0x00000010    /* Disable Status Interrupt */
#define BITM_CRC_INEN_CLR_CMPERR             0x00000002    /* Disable Error Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        CRC_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CRC_STAT_FSTAT                  20            /* FIFO Status */
#define BITP_CRC_STAT_LUTDONE                19            /* Look-up table generation Done */
#define BITP_CRC_STAT_IRR                    18            /* Intermediate Result Ready */
#define BITP_CRC_STAT_OBR                    17            /* Output Buffer Ready */
#define BITP_CRC_STAT_IBR                    16            /* Input Buffer Ready status */
#define BITP_CRC_STAT_DCNTEXP                 4            /* DATACNT register expired */
#define BITP_CRC_STAT_CMPERR                  1            /* Compare Error. */
#define BITM_CRC_STAT_FSTAT                  0x00700000    /* FIFO Status */
#define BITM_CRC_STAT_LUTDONE                0x00080000    /* Look-up table generation Done */
#define BITM_CRC_STAT_IRR                    0x00040000    /* Intermediate Result Ready */
#define BITM_CRC_STAT_OBR                    0x00020000    /* Output Buffer Ready */
#define BITM_CRC_STAT_IBR                    0x00010000    /* Input Buffer Ready status */
#define BITM_CRC_STAT_DCNTEXP                0x00000010    /* DATACNT register expired */
#define BITM_CRC_STAT_CMPERR                 0x00000002    /* Compare Error. */

/* ------------------------------------------------------------------------------------------------------------------------
        CRC_REVID                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CRC_REVID_MAJOR                  4            /* Major Revision ID */
#define BITP_CRC_REVID_REV                    0            /* Incremental Revision ID */
#define BITM_CRC_REVID_MAJOR                 0x000000F0    /* Major Revision ID */
#define BITM_CRC_REVID_REV                   0x0000000F    /* Incremental Revision ID */

/* =========================
        TWI Registers
   ========================= */

/* =========================
        TWI0
   ========================= */
#define REG_TWI0_CLKDIV                 0xFFC01E00         /* TWI0 SCL Clock Divider */
#define REG_TWI0_CTL                    0xFFC01E04         /* TWI0 Control Register */
#define REG_TWI0_SLVCTL                 0xFFC01E08         /* TWI0 Slave Mode Control Register */
#define REG_TWI0_SLVSTAT                0xFFC01E0C         /* TWI0 Slave Mode Status Register */
#define REG_TWI0_SLVADDR                0xFFC01E10         /* TWI0 Slave Mode Address Register */
#define REG_TWI0_MSTRCTL                0xFFC01E14         /* TWI0 Master Mode Control Registers */
#define REG_TWI0_MSTRSTAT               0xFFC01E18         /* TWI0 Master Mode Status Register */
#define REG_TWI0_MSTRADDR               0xFFC01E1C         /* TWI0 Master Mode Address Register */
#define REG_TWI0_ISTAT                  0xFFC01E20         /* TWI0 Interrupt Status Register */
#define REG_TWI0_IMSK                   0xFFC01E24         /* TWI0 Interrupt Mask Register */
#define REG_TWI0_FIFOCTL                0xFFC01E28         /* TWI0 FIFO Control Register */
#define REG_TWI0_FIFOSTAT               0xFFC01E2C         /* TWI0 FIFO Status Register */
#define REG_TWI0_TXDATA8                0xFFC01E80         /* TWI0 FIFO Transmit Data Single-Byte Register */
#define REG_TWI0_TXDATA16               0xFFC01E84         /* TWI0 FIFO Transmit Data Double-Byte Register */
#define REG_TWI0_RXDATA8                0xFFC01E88         /* TWI0 FIFO Transmit Data Single-Byte Register */
#define REG_TWI0_RXDATA16               0xFFC01E8C         /* TWI0 FIFO Transmit Data Double-Byte Register */

/* =========================
        TWI1
   ========================= */
#define REG_TWI1_CLKDIV                 0xFFC01F00         /* TWI1 SCL Clock Divider */
#define REG_TWI1_CTL                    0xFFC01F04         /* TWI1 Control Register */
#define REG_TWI1_SLVCTL                 0xFFC01F08         /* TWI1 Slave Mode Control Register */
#define REG_TWI1_SLVSTAT                0xFFC01F0C         /* TWI1 Slave Mode Status Register */
#define REG_TWI1_SLVADDR                0xFFC01F10         /* TWI1 Slave Mode Address Register */
#define REG_TWI1_MSTRCTL                0xFFC01F14         /* TWI1 Master Mode Control Registers */
#define REG_TWI1_MSTRSTAT               0xFFC01F18         /* TWI1 Master Mode Status Register */
#define REG_TWI1_MSTRADDR               0xFFC01F1C         /* TWI1 Master Mode Address Register */
#define REG_TWI1_ISTAT                  0xFFC01F20         /* TWI1 Interrupt Status Register */
#define REG_TWI1_IMSK                   0xFFC01F24         /* TWI1 Interrupt Mask Register */
#define REG_TWI1_FIFOCTL                0xFFC01F28         /* TWI1 FIFO Control Register */
#define REG_TWI1_FIFOSTAT               0xFFC01F2C         /* TWI1 FIFO Status Register */
#define REG_TWI1_TXDATA8                0xFFC01F80         /* TWI1 FIFO Transmit Data Single-Byte Register */
#define REG_TWI1_TXDATA16               0xFFC01F84         /* TWI1 FIFO Transmit Data Double-Byte Register */
#define REG_TWI1_RXDATA8                0xFFC01F88         /* TWI1 FIFO Transmit Data Single-Byte Register */
#define REG_TWI1_RXDATA16               0xFFC01F8C         /* TWI1 FIFO Transmit Data Double-Byte Register */

/* =========================
        TWI
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        TWI_CLKDIV                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_CLKDIV_CLKHI                 8
#define BITP_TWI_CLKDIV_CLKLO                 0
#define BITM_TWI_CLKDIV_CLKHI                0x0000FF00
#define BITM_TWI_CLKDIV_CLKLO                0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_CTL_SCCB                     9            /* SCCB Compatibility */
#define BITP_TWI_CTL_EN                       7            /* TWI Enable */
#define BITP_TWI_CTL_PRESCALE                 0            /* SCLK Prescale Value */

#define BITM_TWI_CTL_SCCB                    0x00000200    /* SCCB Compatibility */
#define ENUM_TWI_CTL_SCCB_DIS                0x00000000    /* SCCB: Master transfers are not SCCB compatible */
#define ENUM_TWI_CTL_SCCB_EN                 0x00000200    /* SCCB: Master transfers are SCCB compatible. */

#define BITM_TWI_CTL_EN                      0x00000080    /* TWI Enable */
#define ENUM_TWI_CTL_DIS                     0x00000000    /* EN: Disable */
#define ENUM_TWI_CTL_EN                      0x00000080    /* EN: Enable */
#define BITM_TWI_CTL_PRESCALE                0x0000007F    /* SCLK Prescale Value */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_SLVCTL                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_SLVCTL_GEN                   4            /* General Call Enable */
#define BITP_TWI_SLVCTL_NAK                   3            /* Not Acknowledge */
#define BITP_TWI_SLVCTL_TDVAL                 2            /* Slave Transmit Data Valid */
#define BITP_TWI_SLVCTL_EN                    0            /* Slave Enable */

#define BITM_TWI_SLVCTL_GEN                  0x00000010    /* General Call Enable */
#define ENUM_TWI_SLVCTL_GCALL_DIS            0x00000000    /* GEN: General Call Address Matching is Disabled */
#define ENUM_TWI_SLVCTL_GCALL_EN             0x00000010    /* GEN: General Call Address Matching is Enabled */

#define BITM_TWI_SLVCTL_NAK                  0x00000008    /* Not Acknowledge */
#define ENUM_TWI_SLVCTL_ACKGEN               0x00000000    /* NAK: Slave RX transfers generate ACK at end of a data transfer */
#define ENUM_TWI_SLVCTL_NAKGEN               0x00000008    /* NAK: Slave RX transfers generate NAK at end of a data transfer */

#define BITM_TWI_SLVCTL_TDVAL                0x00000004    /* Slave Transmit Data Valid */
#define ENUM_TWI_SLVCTL_NO_TDVAL             0x00000000    /* TDVAL: TX FIFO data is for master mode transmits (not allowed for slave transmits) */
#define ENUM_TWI_SLVCTL_TDVAL                0x00000004    /* TDVAL: TX FIFO data is available for a slave transmission */

#define BITM_TWI_SLVCTL_EN                   0x00000001    /* Slave Enable */
#define ENUM_TWI_SLVCTL_DIS                  0x00000000    /* EN: Disable */
#define ENUM_TWI_SLVCTL_EN                   0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_SLVSTAT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_SLVSTAT_GCALL                1            /* General Call */
#define BITP_TWI_SLVSTAT_DIR                  0            /* Slave Transfer Direction */

#define BITM_TWI_SLVSTAT_GCALL               0x00000002    /* General Call */
#define ENUM_TWI_SLVSTAT_NO_GCALL            0x00000000    /* GCALL: Address was not determined to be a general call */
#define ENUM_TWI_SLVSTAT_GCALL               0x00000002    /* GCALL: Address was determined to be a general call */

#define BITM_TWI_SLVSTAT_DIR                 0x00000001    /* Slave Transfer Direction */
#define ENUM_TWI_SLVSTAT_RXDIR               0x00000000    /* DIR: TX direction was determined to be slave RX */
#define ENUM_TWI_SLVSTAT_TXDIR               0x00000001    /* DIR: Transfer direction was determined to be slave TX */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_SLVADDR                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_SLVADDR_ADDR                 0            /* Slave Mode Address */
#define BITM_TWI_SLVADDR_ADDR                0x0000007F    /* Slave Mode Address */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_MSTRCTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_MSTRCTL_SCLOVR              15            /* Serial Clock Override */
#define BITP_TWI_MSTRCTL_SDAOVR              14            /* Serial Data Override */
#define BITP_TWI_MSTRCTL_DCNT                 6            /* Data Transfer Count */
#define BITP_TWI_MSTRCTL_RSTART               5            /* Repeat Start */
#define BITP_TWI_MSTRCTL_STOP                 4            /* Issue Stop Condition */
#define BITP_TWI_MSTRCTL_FAST                 3            /* Fast Mode */
#define BITP_TWI_MSTRCTL_DIR                  2            /* Master Transfer Direction */
#define BITP_TWI_MSTRCTL_EN                   0            /* Master Mode Enable */

#define BITM_TWI_MSTRCTL_SCLOVR              0x00008000    /* Serial Clock Override */
#define ENUM_TWI_MSTRCTL_NO_SCLOVR           0x00000000    /* SCLOVR: Normal serial clock operation */
#define ENUM_TWI_MSTRCTL_SCLOVR              0x00008000    /* SCLOVR: Serial clock output is driven to an active 0 level */

#define BITM_TWI_MSTRCTL_SDAOVR              0x00004000    /* Serial Data Override */
#define ENUM_TWI_MSTRCTL_NO_SDAOVR           0x00000000    /* SDAOVR: Normal serial data operation */
#define ENUM_TWI_MSTRCTL_SDAOVR              0x00004000    /* SDAOVR: Serial data output is driven to an active 0 level */
#define BITM_TWI_MSTRCTL_DCNT                0x00003FC0    /* Data Transfer Count */

#define BITM_TWI_MSTRCTL_RSTART              0x00000020    /* Repeat Start */
#define ENUM_TWI_MSTRCTL_NO_RPT              0x00000000    /* RSTART: Transfer concludes with a stop condition */
#define ENUM_TWI_MSTRCTL_RPT                 0x00000020    /* RSTART: Issue repeat start at end of current transfer and begin next one */

#define BITM_TWI_MSTRCTL_STOP                0x00000010    /* Issue Stop Condition */
#define ENUM_TWI_MSTRCTL_NO_STOP             0x00000000    /* STOP: Normal transfer operation */
#define ENUM_TWI_MSTRCTL_STOP                0x00000010    /* STOP: Transfer concludes as soon as possible */

#define BITM_TWI_MSTRCTL_FAST                0x00000008    /* Fast Mode */
#define ENUM_TWI_MSTRCTL_STDMODE             0x00000000    /* FAST: Standard mode timing specifications in use */
#define ENUM_TWI_MSTRCTL_FASTMODE            0x00000008    /* FAST: Fast mode (up to 400K bits/s) timing specifications in use */

#define BITM_TWI_MSTRCTL_DIR                 0x00000004    /* Master Transfer Direction */
#define ENUM_TWI_MSTRCTL_TXDIR               0x00000000    /* DIR: Master Transmit */
#define ENUM_TWI_MSTRCTL_RXDIR               0x00000004    /* DIR: Master Receive */

#define BITM_TWI_MSTRCTL_EN                  0x00000001    /* Master Mode Enable */
#define ENUM_TWI_MSTRCTL_DIS                 0x00000000    /* EN: Disable */
#define ENUM_TWI_MSTRCTL_EN                  0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_MSTRSTAT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_MSTRSTAT_BUSBUSY             8            /* Bus Busy */
#define BITP_TWI_MSTRSTAT_SCLSEN              7            /* Serial Clock Sense */
#define BITP_TWI_MSTRSTAT_SDASEN              6            /* Serial Data Sense */
#define BITP_TWI_MSTRSTAT_BUFWRERR            5            /* Buffer Write Error */
#define BITP_TWI_MSTRSTAT_BUFRDERR            4            /* Buffer Read Error */
#define BITP_TWI_MSTRSTAT_DNAK                3            /* Data Not Acknowledged */
#define BITP_TWI_MSTRSTAT_ANAK                2            /* Address Not Acknowledged */
#define BITP_TWI_MSTRSTAT_LOSTARB             1            /* Lost Arbitration */
#define BITP_TWI_MSTRSTAT_MPROG               0            /* Master Transfer in Progress */

#define BITM_TWI_MSTRSTAT_BUSBUSY            0x00000100    /* Bus Busy */
#define ENUM_TWI_MSTRSTAT_BUSBUSY_LO         0x00000000    /* BUSBUSY:  */
#define ENUM_TWI_MSTRSTAT_BUSBUSY_HI         0x00000100    /* BUSBUSY:  */

#define BITM_TWI_MSTRSTAT_SCLSEN             0x00000080    /* Serial Clock Sense */
#define ENUM_TWI_MSTRSTAT_SCLSEN_LO          0x00000000    /* SCLSEN:  */
#define ENUM_TWI_MSTRSTAT_SCLSEN_HI          0x00000080    /* SCLSEN:  */

#define BITM_TWI_MSTRSTAT_SDASEN             0x00000040    /* Serial Data Sense */
#define ENUM_TWI_MSTRSTAT_SDASEN_LO          0x00000000    /* SDASEN:  */
#define ENUM_TWI_MSTRSTAT_SDASEN_HI          0x00000040    /* SDASEN:  */

#define BITM_TWI_MSTRSTAT_BUFWRERR           0x00000020    /* Buffer Write Error */
#define ENUM_TWI_MSTRSTAT_BUFWRERR_LO        0x00000000    /* BUFWRERR:  */
#define ENUM_TWI_MSTRSTAT_BUFWRERR_HI        0x00000020    /* BUFWRERR:  */

#define BITM_TWI_MSTRSTAT_BUFRDERR           0x00000010    /* Buffer Read Error */
#define ENUM_TWI_MSTRSTAT_BUFRDERR_LO        0x00000000    /* BUFRDERR:  */
#define ENUM_TWI_MSTRSTAT_BUFRDERR_HI        0x00000010    /* BUFRDERR:  */

#define BITM_TWI_MSTRSTAT_DNAK               0x00000008    /* Data Not Acknowledged */
#define ENUM_TWI_MSTRSTAT_DNAK_LO            0x00000000    /* DNAK:  */
#define ENUM_TWI_MSTRSTAT_DNAK_HI            0x00000008    /* DNAK:  */

#define BITM_TWI_MSTRSTAT_ANAK               0x00000004    /* Address Not Acknowledged */
#define ENUM_TWI_MSTRSTAT_ANAK_LO            0x00000000    /* ANAK:  */
#define ENUM_TWI_MSTRSTAT_ANAK_HI            0x00000004    /* ANAK:  */

#define BITM_TWI_MSTRSTAT_LOSTARB            0x00000002    /* Lost Arbitration */
#define ENUM_TWI_MSTRSTAT_LOSTARB_LO         0x00000000    /* LOSTARB:  */
#define ENUM_TWI_MSTRSTAT_LOSTARB_HI         0x00000002    /* LOSTARB:  */

#define BITM_TWI_MSTRSTAT_MPROG              0x00000001    /* Master Transfer in Progress */
#define ENUM_TWI_MSTRSTAT_MPROG_LO           0x00000000    /* MPROG:  */
#define ENUM_TWI_MSTRSTAT_MPROG_HI           0x00000001    /* MPROG:  */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_MSTRADDR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_MSTRADDR_ADDR                0            /* Master Mode Address */
#define BITM_TWI_MSTRADDR_ADDR               0x0000007F    /* Master Mode Address */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_ISTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_ISTAT_SCLI                  15            /* Serial Clock Interrupt */
#define BITP_TWI_ISTAT_SDAI                  14            /* Serial Data Interrupt */
#define BITP_TWI_ISTAT_RXSERV                 7            /* Receive FIFO Service */
#define BITP_TWI_ISTAT_TXSERV                 6            /* Transmit FIFO Service */
#define BITP_TWI_ISTAT_MERR                   5            /* Master Transfer Error */
#define BITP_TWI_ISTAT_MCOMP                  4            /* Master Transfer Complete */
#define BITP_TWI_ISTAT_SOVF                   3            /* Slave Overflow */
#define BITP_TWI_ISTAT_SERR                   2            /* Slave Transfer Error */
#define BITP_TWI_ISTAT_SCOMP                  1            /* Slave Transfer Complete */
#define BITP_TWI_ISTAT_SINIT                  0            /* Slave Transfer Initiated */

#define BITM_TWI_ISTAT_SCLI                  0x00008000    /* Serial Clock Interrupt */
#define ENUM_TWI_ISTAT_SCLI_LO               0x00000000    /* SCLI:  */
#define ENUM_TWI_ISTAT_SCLI_HI               0x00008000    /* SCLI:  */

#define BITM_TWI_ISTAT_SDAI                  0x00004000    /* Serial Data Interrupt */
#define ENUM_TWI_ISTAT_SDAI_LO               0x00000000    /* SDAI:  */
#define ENUM_TWI_ISTAT_SDAI_HI               0x00004000    /* SDAI:  */

#define BITM_TWI_ISTAT_RXSERV                0x00000080    /* Receive FIFO Service */
#define ENUM_TWI_ISTAT_RXSERV_LO             0x00000000    /* RXSERV:  */
#define ENUM_TWI_ISTAT_RXSERV_HI             0x00000080    /* RXSERV:  */

#define BITM_TWI_ISTAT_TXSERV                0x00000040    /* Transmit FIFO Service */
#define ENUM_TWI_ISTAT_TXSERV_LO             0x00000000    /* TXSERV:  */
#define ENUM_TWI_ISTAT_TXSERV_HI             0x00000040    /* TXSERV:  */

#define BITM_TWI_ISTAT_MERR                  0x00000020    /* Master Transfer Error */
#define ENUM_TWI_ISTAT_MERR_LO               0x00000000    /* MERR:  */
#define ENUM_TWI_ISTAT_MERR_HI               0x00000020    /* MERR:  */

#define BITM_TWI_ISTAT_MCOMP                 0x00000010    /* Master Transfer Complete */
#define ENUM_TWI_ISTAT_MCOMP_LO              0x00000000    /* MCOMP:  */
#define ENUM_TWI_ISTAT_MCOMP_HI              0x00000010    /* MCOMP:  */

#define BITM_TWI_ISTAT_SOVF                  0x00000008    /* Slave Overflow */
#define ENUM_TWI_ISTAT_SOVF_LO               0x00000000    /* SOVF:  */
#define ENUM_TWI_ISTAT_SOVF_HI               0x00000008    /* SOVF:  */

#define BITM_TWI_ISTAT_SERR                  0x00000004    /* Slave Transfer Error */
#define ENUM_TWI_ISTAT_SERR_LO               0x00000000    /* SERR:  */
#define ENUM_TWI_ISTAT_SERR_HI               0x00000004    /* SERR:  */

#define BITM_TWI_ISTAT_SCOMP                 0x00000002    /* Slave Transfer Complete */
#define ENUM_TWI_ISTAT_SCOMP_LO              0x00000000    /* SCOMP:  */
#define ENUM_TWI_ISTAT_SCOMP_HI              0x00000002    /* SCOMP:  */

#define BITM_TWI_ISTAT_SINIT                 0x00000001    /* Slave Transfer Initiated */
#define ENUM_TWI_ISTAT_SINIT_LO              0x00000000    /* SINIT:  */
#define ENUM_TWI_ISTAT_SINIT_HI              0x00000001    /* SINIT:  */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_IMSK                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_IMSK_SCLI                   15            /* Serial Clock Interrupt Mask */
#define BITP_TWI_IMSK_SDAI                   14            /* Serial Data Interrupt Mask */
#define BITP_TWI_IMSK_RXSERV                  7            /* Receive FIFO Service Interrupt Mask */
#define BITP_TWI_IMSK_TXSERV                  6            /* Transmit FIFO Service Interrupt Mask */
#define BITP_TWI_IMSK_MERR                    5            /* Master Transfer Error Interrupt Mask */
#define BITP_TWI_IMSK_MCOMP                   4            /* Master Transfer Complete Interrupt Mask */
#define BITP_TWI_IMSK_SOVF                    3            /* Slave Overflow Interrupt Mask */
#define BITP_TWI_IMSK_SERR                    2            /* Slave Transfer Error Interrupt Mask */
#define BITP_TWI_IMSK_SCOMP                   1            /* Slave Transfer Complete Interrupt Mask */
#define BITP_TWI_IMSK_SINIT                   0            /* Slave Transfer Initiated Interrupt Mask */

#define BITM_TWI_IMSK_SCLI                   0x00008000    /* Serial Clock Interrupt Mask */
#define ENUM_TWI_IMSK_SCLI_MSK               0x00000000    /* SCLI:  */
#define ENUM_TWI_IMSK_SCLI_UMSK              0x00008000    /* SCLI:  */

#define BITM_TWI_IMSK_SDAI                   0x00004000    /* Serial Data Interrupt Mask */
#define ENUM_TWI_IMSK_SDAI_MSK               0x00000000    /* SDAI:  */
#define ENUM_TWI_IMSK_SDAI_UMSK              0x00004000    /* SDAI:  */

#define BITM_TWI_IMSK_RXSERV                 0x00000080    /* Receive FIFO Service Interrupt Mask */
#define ENUM_TWI_IMSK_RXSERV_MSK             0x00000000    /* RXSERV:  */
#define ENUM_TWI_IMSK_RXSERV_UMSK            0x00000080    /* RXSERV:  */

#define BITM_TWI_IMSK_TXSERV                 0x00000040    /* Transmit FIFO Service Interrupt Mask */
#define ENUM_TWI_IMSK_TXSERV_MSK             0x00000000    /* TXSERV:  */
#define ENUM_TWI_IMSK_TXSERV_UMSK            0x00000040    /* TXSERV:  */

#define BITM_TWI_IMSK_MERR                   0x00000020    /* Master Transfer Error Interrupt Mask */
#define ENUM_TWI_IMSK_MERR_MSK               0x00000000    /* MERR:  */
#define ENUM_TWI_IMSK_MERR_UMSK              0x00000020    /* MERR:  */

#define BITM_TWI_IMSK_MCOMP                  0x00000010    /* Master Transfer Complete Interrupt Mask */
#define ENUM_TWI_IMSK_MCOMP_MSK              0x00000000    /* MCOMP:  */
#define ENUM_TWI_IMSK_MCOMP_UMSK             0x00000010    /* MCOMP:  */

#define BITM_TWI_IMSK_SOVF                   0x00000008    /* Slave Overflow Interrupt Mask */
#define ENUM_TWI_IMSK_SOVF_MSK               0x00000000    /* SOVF:  */
#define ENUM_TWI_IMSK_SOVF_UMSK              0x00000008    /* SOVF:  */

#define BITM_TWI_IMSK_SERR                   0x00000004    /* Slave Transfer Error Interrupt Mask */
#define ENUM_TWI_IMSK_SERR_MSK               0x00000000    /* SERR:  */
#define ENUM_TWI_IMSK_SERR_UMSK              0x00000004    /* SERR:  */

#define BITM_TWI_IMSK_SCOMP                  0x00000002    /* Slave Transfer Complete Interrupt Mask */
#define ENUM_TWI_IMSK_SCOMP_MSK              0x00000000    /* SCOMP:  */
#define ENUM_TWI_IMSK_SCOMP_UMSK             0x00000002    /* SCOMP:  */

#define BITM_TWI_IMSK_SINIT                  0x00000001    /* Slave Transfer Initiated Interrupt Mask */
#define ENUM_TWI_IMSK_SINIT_MSK              0x00000000    /* SINIT:  */
#define ENUM_TWI_IMSK_SINIT_UMSK             0x00000001    /* SINIT:  */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_FIFOCTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_FIFOCTL_RXILEN               3            /* Receive Buffer Interrupt Length */
#define BITP_TWI_FIFOCTL_TXILEN               2            /* Transmit Buffer Interrupt Length */
#define BITP_TWI_FIFOCTL_RXFLUSH              1            /* Receive Buffer Flush */
#define BITP_TWI_FIFOCTL_TXFLUSH              0            /* Transmit Buffer Flush */

#define BITM_TWI_FIFOCTL_RXILEN              0x00000008    /* Receive Buffer Interrupt Length */
#define ENUM_TWI_FIFOCTL_RXILEN_1            0x00000000    /* RXILEN: RXSERV interrupt set when 1 or 2 bytes are in FIFO */
#define ENUM_TWI_FIFOCTL_RXILEN_2            0x00000008    /* RXILEN: RXSERV interrupt set when 2 bytes are in FIFO */

#define BITM_TWI_FIFOCTL_TXILEN              0x00000004    /* Transmit Buffer Interrupt Length */
#define ENUM_TWI_FIFOCTL_TXILEN_1            0x00000000    /* TXILEN: TXSERV interrupt set when at least 1 byte in FIFO is empty */
#define ENUM_TWI_FIFOCTL_TXILEN_2            0x00000004    /* TXILEN: TXSERV interrupt set when 2 bytes in FIFO is empty */

#define BITM_TWI_FIFOCTL_RXFLUSH             0x00000002    /* Receive Buffer Flush */
#define ENUM_TWI_FIFOCTL_NO_RXFLUSH          0x00000000    /* RXFLUSH: Normal operation of RX buffer and its status bits */
#define ENUM_TWI_FIFOCTL_RXFLUSH             0x00000002    /* RXFLUSH: Flush contents of RX buffer and update RXSTAT status bit to indicate  buffer is empty. */

#define BITM_TWI_FIFOCTL_TXFLUSH             0x00000001    /* Transmit Buffer Flush */
#define ENUM_TWI_FIFOCTL_NO_TXFLUSH          0x00000000    /* TXFLUSH: Normal operation of the transmit buffer and its status bits */
#define ENUM_TWI_FIFOCTL_TXFLUSH             0x00000001    /* TXFLUSH: Flush TX buffer and update TXSTAT to indicate buffer is empty. */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_FIFOSTAT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_FIFOSTAT_RXSTAT              2            /* Receive FIFO Status */
#define BITP_TWI_FIFOSTAT_TXSTAT              0            /* Transmit FIFO Status */
#define BITM_TWI_FIFOSTAT_RXSTAT             0x0000000C    /* Receive FIFO Status */
#define BITM_TWI_FIFOSTAT_TXSTAT             0x00000003    /* Transmit FIFO Status */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_TXDATA8                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_TXDATA8_VALUE                0            /* Transmit FIFO 8-Bit Data */
#define BITM_TWI_TXDATA8_VALUE               0x000000FF    /* Transmit FIFO 8-Bit Data */

/* ------------------------------------------------------------------------------------------------------------------------
        TWI_RXDATA8                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TWI_RXDATA8_VALUE                0            /* Receive FIFO 8-Bit Data */
#define BITM_TWI_RXDATA8_VALUE               0x000000FF    /* Receive FIFO 8-Bit Data */

/* =========================
        UART Registers
   ========================= */

/* =========================
        UART0
   ========================= */
#define REG_UART0_REVID                 0xFFC02000         /* UART0 Revision ID Register */
#define REG_UART0_CTL                   0xFFC02004         /* UART0 Control Register */
#define REG_UART0_STAT                  0xFFC02008         /* UART0 Status Register */
#define REG_UART0_SCR                   0xFFC0200C         /* UART0 Scratch Register */
#define REG_UART0_CLK                   0xFFC02010         /* UART0 Clock Rate Register */
#define REG_UART0_IMSK                  0xFFC02014         /* UART0 Interrupt Mask Register */
#define REG_UART0_IMSK_SET              0xFFC02018         /* UART0 Interrupt Mask Set Register */
#define REG_UART0_IMSK_CLR              0xFFC0201C         /* UART0 Interrupt Mask Clear Register */
#define REG_UART0_RBR                   0xFFC02020         /* UART0 Receive Buffer Register */
#define REG_UART0_THR                   0xFFC02024         /* UART0 Transmit Hold Register */
#define REG_UART0_TAIP                  0xFFC02028         /* UART0 Transmit Address/Insert Pulse Register */
#define REG_UART0_TSR                   0xFFC0202C         /* UART0 Transmit Shift Register */
#define REG_UART0_RSR                   0xFFC02030         /* UART0 Receive Shift Register */
#define REG_UART0_TXCNT                 0xFFC02034         /* UART0 Transmit Counter Register */
#define REG_UART0_RXCNT                 0xFFC02038         /* UART0 Receive Counter Register */

/* =========================
        UART1
   ========================= */
#define REG_UART1_REVID                 0xFFC02400         /* UART1 Revision ID Register */
#define REG_UART1_CTL                   0xFFC02404         /* UART1 Control Register */
#define REG_UART1_STAT                  0xFFC02408         /* UART1 Status Register */
#define REG_UART1_SCR                   0xFFC0240C         /* UART1 Scratch Register */
#define REG_UART1_CLK                   0xFFC02410         /* UART1 Clock Rate Register */
#define REG_UART1_IMSK                  0xFFC02414         /* UART1 Interrupt Mask Register */
#define REG_UART1_IMSK_SET              0xFFC02418         /* UART1 Interrupt Mask Set Register */
#define REG_UART1_IMSK_CLR              0xFFC0241C         /* UART1 Interrupt Mask Clear Register */
#define REG_UART1_RBR                   0xFFC02420         /* UART1 Receive Buffer Register */
#define REG_UART1_THR                   0xFFC02424         /* UART1 Transmit Hold Register */
#define REG_UART1_TAIP                  0xFFC02428         /* UART1 Transmit Address/Insert Pulse Register */
#define REG_UART1_TSR                   0xFFC0242C         /* UART1 Transmit Shift Register */
#define REG_UART1_RSR                   0xFFC02430         /* UART1 Receive Shift Register */
#define REG_UART1_TXCNT                 0xFFC02434         /* UART1 Transmit Counter Register */
#define REG_UART1_RXCNT                 0xFFC02438         /* UART1 Receive Counter Register */

/* =========================
        UART
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        UART_REVID                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_REVID_MAJOR                 4            /* Major Version */
#define BITP_UART_REVID_REV                   0            /* Incremental Version */
#define BITM_UART_REVID_MAJOR                0x000000F0    /* Major Version */
#define BITM_UART_REVID_REV                  0x0000000F    /* Incremental Version */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_CTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_CTL_RFRT                   30            /* Receive FIFO RTS Threshold */
#define BITP_UART_CTL_RFIT                   29            /* Receive FIFO IRQ Threshold */
#define BITP_UART_CTL_ACTS                   28            /* Auto CTS operation for TX handshake */
#define BITP_UART_CTL_ARTS                   27            /* Auto UARTxRTS generation for RX handshake */
#define BITP_UART_CTL_XOFF                   26            /* Transmitter off */
#define BITP_UART_CTL_MRTS                   25            /* Manual Request to Send */
#define BITP_UART_CTL_TPOLC                  24            /* TX Polarity Change */
#define BITP_UART_CTL_RPOLC                  23            /* RX Polarity Change */
#define BITP_UART_CTL_FCPOL                  22            /* Flow Control Pin Polarity */
#define BITP_UART_CTL_SB                     19            /* Set Break */
#define BITP_UART_CTL_FFE                    18            /* Force Framing Error on Transmit */
#define BITP_UART_CTL_FPE                    17            /* Force Parity Error on Transmit */
#define BITP_UART_CTL_STP                    16            /* Sticky Parity */
#define BITP_UART_CTL_EPS                    15            /* Even Parity Select */
#define BITP_UART_CTL_PEN                    14            /* Parity Enable */
#define BITP_UART_CTL_STBH                   13            /* Transmit extra half Stop Bit */
#define BITP_UART_CTL_STB                    12            /* Transmit one extra Stop Bit */
#define BITP_UART_CTL_WLS                     8            /* Word Length Select */
#define BITP_UART_CTL_MOD                     4            /* UART Operation Mode (UMOD) */
#define BITP_UART_CTL_LOOP_EN                 1            /* Loopback Mode Enable (LOOP_ENA) */
#define BITP_UART_CTL_EN                      0            /* Enable UART Clocks (UEN) */

#define BITM_UART_CTL_RFRT                   0x40000000    /* Receive FIFO RTS Threshold */
#define ENUM_UART_CTL_RX_RTS_TH4             0x00000000    /* RFRT: De-assert RTS if RX FIFO word count >=4;assert if < 4 */
#define ENUM_UART_CTL_RX_RTS_TH7             0x40000000    /* RFRT: De-assert RTS if RX FIFO word count >= 7; assert if <=  7 */

#define BITM_UART_CTL_RFIT                   0x20000000    /* Receive FIFO IRQ Threshold */
#define ENUM_UART_CTL_RX_IRQ_TH4             0x00000000    /* RFIT: Set RFCS=1 if RX FIFO count >= 4 */
#define ENUM_UART_CTL_RX_IRQ_TH7             0x20000000    /* RFIT: Set RFCS=1 if RX FIFO count >= 7 */

#define BITM_UART_CTL_ACTS                   0x10000000    /* Auto CTS operation for TX handshake */
#define ENUM_UART_CTL_CTS_MAN                0x00000000    /* ACTS: Disables TX handshaking */
#define ENUM_UART_CTL_CTS_AUTO               0x10000000    /* ACTS: Enables TX handshaking */

#define BITM_UART_CTL_ARTS                   0x08000000    /* Auto UARTxRTS generation for RX handshake */
#define ENUM_UART_CTL_RTS_MAN                0x00000000    /* ARTS: RTS signaling is manual */
#define ENUM_UART_CTL_RTS_AUTO               0x08000000    /* ARTS: RTS signaling is automatic */

#define BITM_UART_CTL_XOFF                   0x04000000    /* Transmitter off */
#define ENUM_UART_CTL_TX_ON                  0x00000000    /* XOFF: Enable transmission */
#define ENUM_UART_CTL_TX_OFF                 0x04000000    /* XOFF: Prevent content of THR to be continued to TSR if ACTS=0 */

#define BITM_UART_CTL_MRTS                   0x02000000    /* Manual Request to Send */
#define ENUM_UART_CTL_RTS_DEASSERT           0x00000000    /* MRTS: Forces pin UARTxRTS to de-assertive state when ARTS=0 */
#define ENUM_UART_CTL_RTS_ASSERT             0x02000000    /* MRTS: Forces pin UARTxRTS to its assertive state when ARTS=0 */

#define BITM_UART_CTL_TPOLC                  0x01000000    /* TX Polarity Change */
#define ENUM_UART_CTL_TPOLC_LO               0x00000000    /* TPOLC: IrDA Mode-Serial line idles low. UART/MDB Mode-NRZ */
#define ENUM_UART_CTL_TPOLC_HI               0x01000000    /* TPOLC: IrDA Mode-Serial line idles high. UART/MDB - Inverted-NRZ */

#define BITM_UART_CTL_RPOLC                  0x00800000    /* RX Polarity Change */
#define ENUM_UART_CTL_RPOLC_LO               0x00000000    /* RPOLC: IrDA - Serial line idles low. UART/MDB Mode - NRZ */
#define ENUM_UART_CTL_RPOLC_HI               0x00800000    /* RPOLC: IrDA - Serial line idles high. UART/MDB - Inverted-NRZ */

#define BITM_UART_CTL_FCPOL                  0x00400000    /* Flow Control Pin Polarity */
#define ENUM_UART_CTL_FCPOL_LO               0x00000000    /* FCPOL: Pins CTS, RTS are negative assertive */
#define ENUM_UART_CTL_FCPOL_HI               0x00400000    /* FCPOL: Pins CTS, RTS are positive assertive */

#define BITM_UART_CTL_SB                     0x00080000    /* Set Break */
#define ENUM_UART_CTL_NORM_BREAK             0x00000000    /* SB: No force */
#define ENUM_UART_CTL_FORCE_BREAK            0x00080000    /* SB: Force TX pin to 0 */

#define BITM_UART_CTL_FFE                    0x00040000    /* Force Framing Error on Transmit */
#define ENUM_UART_CTL_NORM_FRM_ERR           0x00000000    /* FFE: Normal operation */
#define ENUM_UART_CTL_FORCE_FRM_ERR          0x00040000    /* FFE: Force error */

#define BITM_UART_CTL_FPE                    0x00020000    /* Force Parity Error on Transmit */
#define ENUM_UART_CTL_NORM_PARITY_ERR        0x00000000    /* FPE: Normal operation */
#define ENUM_UART_CTL_FORCE_PARITY_ERR       0x00020000    /* FPE: Force parity error */

#define BITM_UART_CTL_STP                    0x00010000    /* Sticky Parity */
#define ENUM_UART_CTL_NORM_PARITY            0x00000000    /* STP: Parity not forced to defined value */
#define ENUM_UART_CTL_STICKY_PARITY          0x00010000    /* STP: Forces parity to defined value if PEN = 1 */

#define BITM_UART_CTL_EPS                    0x00008000    /* Even Parity Select */
#define ENUM_UART_CTL_ODD_PARITY             0x00000000    /* EPS: Odd parity */
#define ENUM_UART_CTL_EVEN_PARITY            0x00008000    /* EPS: Even parity */

#define BITM_UART_CTL_PEN                    0x00004000    /* Parity Enable */
#define ENUM_UART_CTL_PARITY_DIS             0x00000000    /* PEN: Parity not transmitted or checked */
#define ENUM_UART_CTL_PARITY_EN              0x00004000    /* PEN: Transmit and check parity */

#define BITM_UART_CTL_STBH                   0x00002000    /* Transmit extra half Stop Bit */
#define ENUM_UART_CTL_NO_EXTRA_STBH          0x00000000    /* STBH: No extra half-stop bit transmitted */
#define ENUM_UART_CTL_1_EXTRA_STBH           0x00002000    /* STBH: Transmit one extra half stop bit */

#define BITM_UART_CTL_STB                    0x00001000    /* Transmit one extra Stop Bit */
#define ENUM_UART_CTL_NO_EXTRA_STB           0x00000000    /* STB: No extra stop bit transmitted */
#define ENUM_UART_CTL_1_EXTRA_STB            0x00001000    /* STB: Transmit one extra stop bit */

#define BITM_UART_CTL_WLS                    0x00000300    /* Word Length Select */
#define ENUM_UART_CTL_WL5BITS                0x00000000    /* WLS: 5-bit Word */
#define ENUM_UART_CTL_WL6BITS                0x00000100    /* WLS: 6-bit Word */
#define ENUM_UART_CTL_WL7BITS                0x00000200    /* WLS: 7-bit Word */
#define ENUM_UART_CTL_WL8BITS                0x00000300    /* WLS: 8-bit Word */

#define BITM_UART_CTL_MOD                    0x00000030    /* UART Operation Mode (UMOD) */
#define ENUM_UART_CTL_UART_MODE              0x00000000    /* MOD: UART Mode */
#define ENUM_UART_CTL_MDB_MODE               0x00000010    /* MOD: MDB Mode */
#define ENUM_UART_CTL_IRDA_MODE              0x00000020    /* MOD: IrDA SIR Mode */

#define BITM_UART_CTL_LOOP_EN                0x00000002    /* Loopback Mode Enable (LOOP_ENA) */
#define ENUM_UART_CTL_LOOP_DIS               0x00000000    /* LOOP_EN: Disable Loopback Mode */
#define ENUM_UART_CTL_LOOP_EN                0x00000002    /* LOOP_EN: Enable Loopback Mode */

#define BITM_UART_CTL_EN                     0x00000001    /* Enable UART Clocks (UEN) */
#define ENUM_UART_CTL_CLK_DIS                0x00000000    /* EN: Enable UART Clocks */
#define ENUM_UART_CTL_CLK_EN                 0x00000001    /* EN: Disable UART Clocks */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_STAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_STAT_RFCS                  17            /* Receive FIFO Count Status */
#define BITP_UART_STAT_CTS                   16            /* Clear to Send */
#define BITP_UART_STAT_SCTS                  12            /* Sticky CTS */
#define BITP_UART_STAT_RO                    11            /* Reception Ongoing */
#define BITP_UART_STAT_ADDR                  10            /* Address Bit Status */
#define BITP_UART_STAT_ASTKY                  9            /* Address Sticky */
#define BITP_UART_STAT_TFI                    8            /* Transmission Finished Indicator */
#define BITP_UART_STAT_TEMT                   7            /* TSR and THR Empty */
#define BITP_UART_STAT_THRE                   5            /* Transmit Hold Register Empty */
#define BITP_UART_STAT_BI                     4            /* Break Indicator */
#define BITP_UART_STAT_FE                     3            /* Framing Error */
#define BITP_UART_STAT_PE                     2            /* Parity Error */
#define BITP_UART_STAT_OE                     1            /* Overrun Error */
#define BITP_UART_STAT_DR                     0            /* Data Ready */

#define BITM_UART_STAT_RFCS                  0x00020000    /* Receive FIFO Count Status */
#define ENUM_UART_STAT_RFCS_LO               0x00000000    /* RFCS: RX FIFO has less than 4 (7) entries when RFIT=0 (1) */
#define ENUM_UART_STAT_RFCS_HI               0x00020000    /* RFCS: RX FIFO has at least 4 (7) entries when RFIT=0 (1) */

#define BITM_UART_STAT_CTS                   0x00010000    /* Clear to Send */
#define ENUM_UART_STAT_CTS_LO                0x00000000    /* CTS: Holds value of CTS input pin */
#define ENUM_UART_STAT_CTS_HI                0x00010000    /* CTS: Holds complement of CTS input pin value */

#define BITM_UART_STAT_SCTS                  0x00001000    /* Sticky CTS */
#define ENUM_UART_STAT_CTS_LO_STKY           0x00000000    /* SCTS: CTS has not gone high */
#define ENUM_UART_STAT_CTS_HI_STKY           0x00001000    /* SCTS: CTS has gone high */

#define BITM_UART_STAT_RO                    0x00000800    /* Reception Ongoing */
#define ENUM_UART_STAT_NO_RX_PROGRESS        0x00000000    /* RO: No data reception in progress */
#define ENUM_UART_STAT_RX_PROGRESS           0x00000800    /* RO: Data Reception in progress */

#define BITM_UART_STAT_ADDR                  0x00000400    /* Address Bit Status */
#define ENUM_UART_STAT_ADDR_LO               0x00000000    /* ADDR: Address bit is low */
#define ENUM_UART_STAT_ADDR_HI               0x00000400    /* ADDR: Address bit is high */

#define BITM_UART_STAT_ASTKY                 0x00000200    /* Address Sticky */
#define ENUM_UART_STAT_ADDR_LO_STKY          0x00000000    /* ASTKY: ADDR bit has not been set */
#define ENUM_UART_STAT_ADDR_HI_STKY          0x00000200    /* ASTKY: ADDR bit has been set */

#define BITM_UART_STAT_TFI                   0x00000100    /* Transmission Finished Indicator */
#define ENUM_UART_STAT_TX_NOT_DONE           0x00000000    /* TFI: TEMT did not transition from 0 to 1 */
#define ENUM_UART_STAT_TX_DONE               0x00000100    /* TFI: TEMT transition from 0 to 1 */

#define BITM_UART_STAT_TEMT                  0x00000080    /* TSR and THR Empty */
#define ENUM_UART_STAT_TX_NOT_EMPTY          0x00000000    /* TEMT: Not Empty */
#define ENUM_UART_STAT_TX_EMPTY              0x00000080    /* TEMT: Both Empty */

#define BITM_UART_STAT_THRE                  0x00000020    /* Transmit Hold Register Empty */
#define ENUM_UART_STAT_THR_NOT_EMPTY         0x00000000    /* THRE: THR/TAIP Registers not empty */
#define ENUM_UART_STAT_THR_EMPTY             0x00000020    /* THRE: THR/TAIP Registers empty */

#define BITM_UART_STAT_BI                    0x00000010    /* Break Indicator */
#define ENUM_UART_STAT_NO_BREAK_INT          0x00000000    /* BI: No break interrupt */
#define ENUM_UART_STAT_BREAK_INT             0x00000010    /* BI: Break interrupt */

#define BITM_UART_STAT_FE                    0x00000008    /* Framing Error */
#define ENUM_UART_STAT_NO_FRAMING_ERR        0x00000000    /* FE: No error */
#define ENUM_UART_STAT_FRAMING_ERR           0x00000008    /* FE: Invalid stop bit error */

#define BITM_UART_STAT_PE                    0x00000004    /* Parity Error */
#define ENUM_UART_STAT_NO_PARITY_ERR         0x00000000    /* PE: No parity error */
#define ENUM_UART_STAT_PARITY_ERR            0x00000004    /* PE: Parity error */

#define BITM_UART_STAT_OE                    0x00000002    /* Overrun Error */
#define ENUM_UART_STAT_NO_OVR_ERR            0x00000000    /* OE: No Overrun */
#define ENUM_UART_STAT_OVR_ERR               0x00000002    /* OE: Overrun Error */

#define BITM_UART_STAT_DR                    0x00000001    /* Data Ready */
#define ENUM_UART_STAT_NO_DATA               0x00000000    /* DR: No new data */
#define ENUM_UART_STAT_NEW_DATA              0x00000001    /* DR: UARTx_RBR holds new data */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_SCR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_SCR_VALUE                   0            /* Stored 8-bit Data */
#define BITM_UART_SCR_VALUE                  0x000000FF    /* Stored 8-bit Data */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_CLK                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_CLK_EDBO                   31            /* Enable Divide By One */
#define BITP_UART_CLK_DIV                     0            /* Divisor */

#define BITM_UART_CLK_EDBO                   0x80000000    /* Enable Divide By One */
#define ENUM_UART_CLK_DIS_DIV_BY_ONE         0x00000000    /* EDBO: Bit clock prescaler = 16 */
#define ENUM_UART_CLK_EN_DIV_BY_ONE          0x80000000    /* EDBO: Bit clock prescaler = 1 */
#define BITM_UART_CLK_DIV                    0x0000FFFF    /* Divisor */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_IMSK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_IMSK_ETXS                   9            /* Enable TX to Status Interrupt */
#define BITP_UART_IMSK_ERXS                   8            /* Enable RX to Status Interrupt */
#define BITP_UART_IMSK_EAWI                   7            /* Enable Address Word Interrupt */
#define BITP_UART_IMSK_ERFCI                  6            /* Enable Receive FIFO Count Interrupt */
#define BITP_UART_IMSK_ETFI                   5            /* Enable Transmission Finished Interrupt */
#define BITP_UART_IMSK_EDTPTI                 4            /* Enable DMA TX Peripheral Trigerred Interrupt */
#define BITP_UART_IMSK_EDSSI                  3            /* Enable Modem Status Interrupt */
#define BITP_UART_IMSK_ELSI                   2            /* Enable Line Status Interrupt */
#define BITP_UART_IMSK_ETBEI                  1            /* Enable Transmit Buffer Empty Interrupt */
#define BITP_UART_IMSK_ERBFI                  0            /* Enable Receive Buffer Full Interrupt */

#define BITM_UART_IMSK_ETXS                  0x00000200    /* Enable TX to Status Interrupt */
#define ENUM_UART_ETXS_LO                    0x00000000    /* ETXS: TX interrupts routed to normal interrupt outputs */
#define ENUM_UART_ETXS_HI                    0x00000200    /* ETXS: TX interrupts redirected to status interrupt output */

#define BITM_UART_IMSK_ERXS                  0x00000100    /* Enable RX to Status Interrupt */
#define ENUM_UART_ERXS_LO                    0x00000000    /* ERXS: RX interrupts routed to normal interrupt outputs */
#define ENUM_UART_ERXS_HI                    0x00000100    /* ERXS: RX interrupts redirected to status interrupt output */

#define BITM_UART_IMSK_EAWI                  0x00000080    /* Enable Address Word Interrupt */
#define ENUM_UART_EAWI_LO                    0x00000000    /* EAWI: No interrupt */
#define ENUM_UART_EAWI_HI                    0x00000080    /* EAWI: Generate LS interrupt if [DR=ADDR=1] in STATUS register */

#define BITM_UART_IMSK_ERFCI                 0x00000040    /* Enable Receive FIFO Count Interrupt */
#define ENUM_UART_ERFCI_LO                   0x00000000    /* ERFCI: No interrupt */
#define ENUM_UART_ERFCI_HI                   0x00000040    /* ERFCI: Generate status interrupt if RFCS bit in STATUS reg is set */

#define BITM_UART_IMSK_ETFI                  0x00000020    /* Enable Transmission Finished Interrupt */
#define ENUM_UART_ETFI_LO                    0x00000000    /* ETFI: No interrupt */
#define ENUM_UART_ETFI_HI                    0x00000020    /* ETFI: Generate status interrupt if TFI bit in STATUS reg is set */

#define BITM_UART_IMSK_EDTPTI                0x00000010    /* Enable DMA TX Peripheral Trigerred Interrupt */
#define ENUM_UART_EDTPTI_LO                  0x00000000    /* EDTPTI: No interrupt */
#define ENUM_UART_EDTPTI_HI                  0x00000010    /* EDTPTI: Generate interrupt to DMA controller after the last byte */

#define BITM_UART_IMSK_EDSSI                 0x00000008    /* Enable Modem Status Interrupt */
#define ENUM_UART_EDSSI_LO                   0x00000000    /* EDSSI: No interrupt */
#define ENUM_UART_EDSSI_HI                   0x00000008    /* EDSSI: Generate status interrupt if SCTS bit in STATUS reg is set */

#define BITM_UART_IMSK_ELSI                  0x00000004    /* Enable Line Status Interrupt */
#define ENUM_UART_ELSI_LO                    0x00000000    /* ELSI: No interrupt */
#define ENUM_UART_ELSI_HI                    0x00000004    /* ELSI: Generate status interrupt if any of STATUS[4:1]  is set */

#define BITM_UART_IMSK_ETBEI                 0x00000002    /* Enable Transmit Buffer Empty Interrupt */
#define ENUM_UART_ETBEI_LO                   0x00000000    /* ETBEI: No interrupt */
#define ENUM_UART_ETBEI_HI                   0x00000002    /* ETBEI: Generate TX interrupt if THRE bit in STATUS register is set */

#define BITM_UART_IMSK_ERBFI                 0x00000001    /* Enable Receive Buffer Full Interrupt */
#define ENUM_UART_ERBFI_LO                   0x00000000    /* ERBFI: No interrupt */
#define ENUM_UART_ERBFI_HI                   0x00000001    /* ERBFI: Generate RX interrupt if DR bit in STATUS  register is set */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_IMSK_SET                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_IMSK_SET_ETXS               9            /* Enable TX to Status Interrupt */
#define BITP_UART_IMSK_SET_ERXS               8            /* Enable RX to Status Interrupt */
#define BITP_UART_IMSK_SET_EAWI               7            /* Enable Address Word Interrupt */
#define BITP_UART_IMSK_SET_ERFCI              6            /* Enable Receive FIFO Count Interrupt */
#define BITP_UART_IMSK_SET_ETFI               5            /* Enable Transmission Finished Interrupt */
#define BITP_UART_IMSK_SET_EDTPTI             4            /* Enable DMA TX Peripheral Triggered Interrupt */
#define BITP_UART_IMSK_SET_EDSSI              3            /* Enable Modem Status Interrupt */
#define BITP_UART_IMSK_SET_ELSI               2            /* Enable Line Status Interrupt */
#define BITP_UART_IMSK_SET_ETBEI              1            /* Enable Transmit Buffer Empty Interrupt */
#define BITP_UART_IMSK_SET_ERBFI              0            /* Enable Receive Buffer Full Interrupt */

/* The fields and enumerations for UART_IMSK_SET are also in UART - see the common set of ENUM_UART_* #defines located with register UART_IMSK */

#define BITM_UART_IMSK_SET_ETXS              0x00000200    /* Enable TX to Status Interrupt */
#define BITM_UART_IMSK_SET_ERXS              0x00000100    /* Enable RX to Status Interrupt */
#define BITM_UART_IMSK_SET_EAWI              0x00000080    /* Enable Address Word Interrupt */
#define BITM_UART_IMSK_SET_ERFCI             0x00000040    /* Enable Receive FIFO Count Interrupt */
#define BITM_UART_IMSK_SET_ETFI              0x00000020    /* Enable Transmission Finished Interrupt */
#define BITM_UART_IMSK_SET_EDTPTI            0x00000010    /* Enable DMA TX Peripheral Triggered Interrupt */
#define BITM_UART_IMSK_SET_EDSSI             0x00000008    /* Enable Modem Status Interrupt */
#define BITM_UART_IMSK_SET_ELSI              0x00000004    /* Enable Line Status Interrupt */
#define BITM_UART_IMSK_SET_ETBEI             0x00000002    /* Enable Transmit Buffer Empty Interrupt */
#define BITM_UART_IMSK_SET_ERBFI             0x00000001    /* Enable Receive Buffer Full Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_IMSK_CLR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_IMSK_CLR_ETXS               9            /* Enable TX to Status Interrupt */
#define BITP_UART_IMSK_CLR_ERXS               8            /* Enable RX to Status Interrupt */
#define BITP_UART_IMSK_CLR_EAWI               7            /* Enable Address Word Interrupt */
#define BITP_UART_IMSK_CLR_ERFCI              6            /* Enable Receive FIFO Count Interrupt */
#define BITP_UART_IMSK_CLR_ETFI               5            /* Enable Transmission Finished Interrupt */
#define BITP_UART_IMSK_CLR_EDTPTI             4            /* Enable DMA TX Peripheral Triggered Interrupt */
#define BITP_UART_IMSK_CLR_EDSSI              3            /* Enable Modem Status Interrupt */
#define BITP_UART_IMSK_CLR_ELSI               2            /* Enable Line Status Interrupt */
#define BITP_UART_IMSK_CLR_ETBEI              1            /* Enable Transmit Buffer Empty Interrupt */
#define BITP_UART_IMSK_CLR_ERBFI              0            /* Enable Receive Buffer Full Interrupt */

/* The fields and enumerations for UART_IMSK_CLR are also in UART - see the common set of ENUM_UART_* #defines located with register UART_IMSK */

#define BITM_UART_IMSK_CLR_ETXS              0x00000200    /* Enable TX to Status Interrupt */
#define BITM_UART_IMSK_CLR_ERXS              0x00000100    /* Enable RX to Status Interrupt */
#define BITM_UART_IMSK_CLR_EAWI              0x00000080    /* Enable Address Word Interrupt */
#define BITM_UART_IMSK_CLR_ERFCI             0x00000040    /* Enable Receive FIFO Count Interrupt */
#define BITM_UART_IMSK_CLR_ETFI              0x00000020    /* Enable Transmission Finished Interrupt */
#define BITM_UART_IMSK_CLR_EDTPTI            0x00000010    /* Enable DMA TX Peripheral Triggered Interrupt */
#define BITM_UART_IMSK_CLR_EDSSI             0x00000008    /* Enable Modem Status Interrupt */
#define BITM_UART_IMSK_CLR_ELSI              0x00000004    /* Enable Line Status Interrupt */
#define BITM_UART_IMSK_CLR_ETBEI             0x00000002    /* Enable Transmit Buffer Empty Interrupt */
#define BITM_UART_IMSK_CLR_ERBFI             0x00000001    /* Enable Receive Buffer Full Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_RBR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_RBR_VALUE                   0            /* 8-bit data */
#define BITM_UART_RBR_VALUE                  0x000000FF    /* 8-bit data */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_THR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_THR_VALUE                   0            /* 8 bit data */
#define BITM_UART_THR_VALUE                  0x000000FF    /* 8 bit data */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_TAIP                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_TAIP_VALUE                  0            /* 8-bit data */
#define BITM_UART_TAIP_VALUE                 0x000000FF    /* 8-bit data */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_TSR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_TSR_VALUE                   0            /* Contents of TSR */
#define BITM_UART_TSR_VALUE                  0x000007FF    /* Contents of TSR */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_RSR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_RSR_VALUE                   0            /* Contents of RSR */
#define BITM_UART_RSR_VALUE                  0x000003FF    /* Contents of RSR */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_TXCNT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_TXCNT_VALUE                 0            /* 16-bit Counter Value */
#define BITM_UART_TXCNT_VALUE                0x0000FFFF    /* 16-bit Counter Value */

/* ------------------------------------------------------------------------------------------------------------------------
        UART_RXCNT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_UART_RXCNT_VALUE                 0            /* 16-bit Counter Value */
#define BITM_UART_RXCNT_VALUE                0x0000FFFF    /* 16-bit Counter Value */

/* =========================
        PORT Registers
   ========================= */

/* =========================
        PORTA
   ========================= */
#define REG_PORTA_FER                   0xFFC03000         /* PORTA Port x Function Enable Register */
#define REG_PORTA_FER_SET               0xFFC03004         /* PORTA Port x Function Enable Set Register */
#define REG_PORTA_FER_CLR               0xFFC03008         /* PORTA Port x Function Enable Clear Register */
#define REG_PORTA_DATA                  0xFFC0300C         /* PORTA Port x GPIO Data Register */
#define REG_PORTA_DATA_SET              0xFFC03010         /* PORTA Port x GPIO Data Set Register */
#define REG_PORTA_DATA_CLR              0xFFC03014         /* PORTA Port x GPIO Data Clear Register */
#define REG_PORTA_DIR                   0xFFC03018         /* PORTA Port x GPIO Direction Register */
#define REG_PORTA_DIR_SET               0xFFC0301C         /* PORTA Port x GPIO Direction Set Register */
#define REG_PORTA_DIR_CLR               0xFFC03020         /* PORTA Port x GPIO Direction Clear Register */
#define REG_PORTA_INEN                  0xFFC03024         /* PORTA Port x GPIO Input Enable Register */
#define REG_PORTA_INEN_SET              0xFFC03028         /* PORTA Port x GPIO Input Enable Set Register */
#define REG_PORTA_INEN_CLR              0xFFC0302C         /* PORTA Port x GPIO Input Enable Clear Register */
#define REG_PORTA_MUX                   0xFFC03030         /* PORTA Port x Multiplexer Control Register */
#define REG_PORTA_DATA_TGL              0xFFC03034         /* PORTA Port x GPIO Input Enable Toggle Register */
#define REG_PORTA_POL                   0xFFC03038         /* PORTA Port x GPIO Programming Inversion Register */
#define REG_PORTA_POL_SET               0xFFC0303C         /* PORTA Port x GPIO Programming Inversion Set Register */
#define REG_PORTA_POL_CLR               0xFFC03040         /* PORTA Port x GPIO Programming Inversion Clear Register */
#define REG_PORTA_LOCK                  0xFFC03044         /* PORTA Port x GPIO Lock Register */
#define REG_PORTA_REVID                 0xFFC0307C         /* PORTA Port x GPIO Revision ID */

/* =========================
        PORTB
   ========================= */
#define REG_PORTB_FER                   0xFFC03080         /* PORTB Port x Function Enable Register */
#define REG_PORTB_FER_SET               0xFFC03084         /* PORTB Port x Function Enable Set Register */
#define REG_PORTB_FER_CLR               0xFFC03088         /* PORTB Port x Function Enable Clear Register */
#define REG_PORTB_DATA                  0xFFC0308C         /* PORTB Port x GPIO Data Register */
#define REG_PORTB_DATA_SET              0xFFC03090         /* PORTB Port x GPIO Data Set Register */
#define REG_PORTB_DATA_CLR              0xFFC03094         /* PORTB Port x GPIO Data Clear Register */
#define REG_PORTB_DIR                   0xFFC03098         /* PORTB Port x GPIO Direction Register */
#define REG_PORTB_DIR_SET               0xFFC0309C         /* PORTB Port x GPIO Direction Set Register */
#define REG_PORTB_DIR_CLR               0xFFC030A0         /* PORTB Port x GPIO Direction Clear Register */
#define REG_PORTB_INEN                  0xFFC030A4         /* PORTB Port x GPIO Input Enable Register */
#define REG_PORTB_INEN_SET              0xFFC030A8         /* PORTB Port x GPIO Input Enable Set Register */
#define REG_PORTB_INEN_CLR              0xFFC030AC         /* PORTB Port x GPIO Input Enable Clear Register */
#define REG_PORTB_MUX                   0xFFC030B0         /* PORTB Port x Multiplexer Control Register */
#define REG_PORTB_DATA_TGL              0xFFC030B4         /* PORTB Port x GPIO Input Enable Toggle Register */
#define REG_PORTB_POL                   0xFFC030B8         /* PORTB Port x GPIO Programming Inversion Register */
#define REG_PORTB_POL_SET               0xFFC030BC         /* PORTB Port x GPIO Programming Inversion Set Register */
#define REG_PORTB_POL_CLR               0xFFC030C0         /* PORTB Port x GPIO Programming Inversion Clear Register */
#define REG_PORTB_LOCK                  0xFFC030C4         /* PORTB Port x GPIO Lock Register */
#define REG_PORTB_REVID                 0xFFC030FC         /* PORTB Port x GPIO Revision ID */

/* =========================
        PORTC
   ========================= */
#define REG_PORTC_FER                   0xFFC03100         /* PORTC Port x Function Enable Register */
#define REG_PORTC_FER_SET               0xFFC03104         /* PORTC Port x Function Enable Set Register */
#define REG_PORTC_FER_CLR               0xFFC03108         /* PORTC Port x Function Enable Clear Register */
#define REG_PORTC_DATA                  0xFFC0310C         /* PORTC Port x GPIO Data Register */
#define REG_PORTC_DATA_SET              0xFFC03110         /* PORTC Port x GPIO Data Set Register */
#define REG_PORTC_DATA_CLR              0xFFC03114         /* PORTC Port x GPIO Data Clear Register */
#define REG_PORTC_DIR                   0xFFC03118         /* PORTC Port x GPIO Direction Register */
#define REG_PORTC_DIR_SET               0xFFC0311C         /* PORTC Port x GPIO Direction Set Register */
#define REG_PORTC_DIR_CLR               0xFFC03120         /* PORTC Port x GPIO Direction Clear Register */
#define REG_PORTC_INEN                  0xFFC03124         /* PORTC Port x GPIO Input Enable Register */
#define REG_PORTC_INEN_SET              0xFFC03128         /* PORTC Port x GPIO Input Enable Set Register */
#define REG_PORTC_INEN_CLR              0xFFC0312C         /* PORTC Port x GPIO Input Enable Clear Register */
#define REG_PORTC_MUX                   0xFFC03130         /* PORTC Port x Multiplexer Control Register */
#define REG_PORTC_DATA_TGL              0xFFC03134         /* PORTC Port x GPIO Input Enable Toggle Register */
#define REG_PORTC_POL                   0xFFC03138         /* PORTC Port x GPIO Programming Inversion Register */
#define REG_PORTC_POL_SET               0xFFC0313C         /* PORTC Port x GPIO Programming Inversion Set Register */
#define REG_PORTC_POL_CLR               0xFFC03140         /* PORTC Port x GPIO Programming Inversion Clear Register */
#define REG_PORTC_LOCK                  0xFFC03144         /* PORTC Port x GPIO Lock Register */
#define REG_PORTC_REVID                 0xFFC0317C         /* PORTC Port x GPIO Revision ID */

/* =========================
        PORTD
   ========================= */
#define REG_PORTD_FER                   0xFFC03180         /* PORTD Port x Function Enable Register */
#define REG_PORTD_FER_SET               0xFFC03184         /* PORTD Port x Function Enable Set Register */
#define REG_PORTD_FER_CLR               0xFFC03188         /* PORTD Port x Function Enable Clear Register */
#define REG_PORTD_DATA                  0xFFC0318C         /* PORTD Port x GPIO Data Register */
#define REG_PORTD_DATA_SET              0xFFC03190         /* PORTD Port x GPIO Data Set Register */
#define REG_PORTD_DATA_CLR              0xFFC03194         /* PORTD Port x GPIO Data Clear Register */
#define REG_PORTD_DIR                   0xFFC03198         /* PORTD Port x GPIO Direction Register */
#define REG_PORTD_DIR_SET               0xFFC0319C         /* PORTD Port x GPIO Direction Set Register */
#define REG_PORTD_DIR_CLR               0xFFC031A0         /* PORTD Port x GPIO Direction Clear Register */
#define REG_PORTD_INEN                  0xFFC031A4         /* PORTD Port x GPIO Input Enable Register */
#define REG_PORTD_INEN_SET              0xFFC031A8         /* PORTD Port x GPIO Input Enable Set Register */
#define REG_PORTD_INEN_CLR              0xFFC031AC         /* PORTD Port x GPIO Input Enable Clear Register */
#define REG_PORTD_MUX                   0xFFC031B0         /* PORTD Port x Multiplexer Control Register */
#define REG_PORTD_DATA_TGL              0xFFC031B4         /* PORTD Port x GPIO Input Enable Toggle Register */
#define REG_PORTD_POL                   0xFFC031B8         /* PORTD Port x GPIO Programming Inversion Register */
#define REG_PORTD_POL_SET               0xFFC031BC         /* PORTD Port x GPIO Programming Inversion Set Register */
#define REG_PORTD_POL_CLR               0xFFC031C0         /* PORTD Port x GPIO Programming Inversion Clear Register */
#define REG_PORTD_LOCK                  0xFFC031C4         /* PORTD Port x GPIO Lock Register */
#define REG_PORTD_REVID                 0xFFC031FC         /* PORTD Port x GPIO Revision ID */

/* =========================
        PORTE
   ========================= */
#define REG_PORTE_FER                   0xFFC03200         /* PORTE Port x Function Enable Register */
#define REG_PORTE_FER_SET               0xFFC03204         /* PORTE Port x Function Enable Set Register */
#define REG_PORTE_FER_CLR               0xFFC03208         /* PORTE Port x Function Enable Clear Register */
#define REG_PORTE_DATA                  0xFFC0320C         /* PORTE Port x GPIO Data Register */
#define REG_PORTE_DATA_SET              0xFFC03210         /* PORTE Port x GPIO Data Set Register */
#define REG_PORTE_DATA_CLR              0xFFC03214         /* PORTE Port x GPIO Data Clear Register */
#define REG_PORTE_DIR                   0xFFC03218         /* PORTE Port x GPIO Direction Register */
#define REG_PORTE_DIR_SET               0xFFC0321C         /* PORTE Port x GPIO Direction Set Register */
#define REG_PORTE_DIR_CLR               0xFFC03220         /* PORTE Port x GPIO Direction Clear Register */
#define REG_PORTE_INEN                  0xFFC03224         /* PORTE Port x GPIO Input Enable Register */
#define REG_PORTE_INEN_SET              0xFFC03228         /* PORTE Port x GPIO Input Enable Set Register */
#define REG_PORTE_INEN_CLR              0xFFC0322C         /* PORTE Port x GPIO Input Enable Clear Register */
#define REG_PORTE_MUX                   0xFFC03230         /* PORTE Port x Multiplexer Control Register */
#define REG_PORTE_DATA_TGL              0xFFC03234         /* PORTE Port x GPIO Input Enable Toggle Register */
#define REG_PORTE_POL                   0xFFC03238         /* PORTE Port x GPIO Programming Inversion Register */
#define REG_PORTE_POL_SET               0xFFC0323C         /* PORTE Port x GPIO Programming Inversion Set Register */
#define REG_PORTE_POL_CLR               0xFFC03240         /* PORTE Port x GPIO Programming Inversion Clear Register */
#define REG_PORTE_LOCK                  0xFFC03244         /* PORTE Port x GPIO Lock Register */
#define REG_PORTE_REVID                 0xFFC0327C         /* PORTE Port x GPIO Revision ID */

/* =========================
        PORTF
   ========================= */
#define REG_PORTF_FER                   0xFFC03280         /* PORTF Port x Function Enable Register */
#define REG_PORTF_FER_SET               0xFFC03284         /* PORTF Port x Function Enable Set Register */
#define REG_PORTF_FER_CLR               0xFFC03288         /* PORTF Port x Function Enable Clear Register */
#define REG_PORTF_DATA                  0xFFC0328C         /* PORTF Port x GPIO Data Register */
#define REG_PORTF_DATA_SET              0xFFC03290         /* PORTF Port x GPIO Data Set Register */
#define REG_PORTF_DATA_CLR              0xFFC03294         /* PORTF Port x GPIO Data Clear Register */
#define REG_PORTF_DIR                   0xFFC03298         /* PORTF Port x GPIO Direction Register */
#define REG_PORTF_DIR_SET               0xFFC0329C         /* PORTF Port x GPIO Direction Set Register */
#define REG_PORTF_DIR_CLR               0xFFC032A0         /* PORTF Port x GPIO Direction Clear Register */
#define REG_PORTF_INEN                  0xFFC032A4         /* PORTF Port x GPIO Input Enable Register */
#define REG_PORTF_INEN_SET              0xFFC032A8         /* PORTF Port x GPIO Input Enable Set Register */
#define REG_PORTF_INEN_CLR              0xFFC032AC         /* PORTF Port x GPIO Input Enable Clear Register */
#define REG_PORTF_MUX                   0xFFC032B0         /* PORTF Port x Multiplexer Control Register */
#define REG_PORTF_DATA_TGL              0xFFC032B4         /* PORTF Port x GPIO Input Enable Toggle Register */
#define REG_PORTF_POL                   0xFFC032B8         /* PORTF Port x GPIO Programming Inversion Register */
#define REG_PORTF_POL_SET               0xFFC032BC         /* PORTF Port x GPIO Programming Inversion Set Register */
#define REG_PORTF_POL_CLR               0xFFC032C0         /* PORTF Port x GPIO Programming Inversion Clear Register */
#define REG_PORTF_LOCK                  0xFFC032C4         /* PORTF Port x GPIO Lock Register */
#define REG_PORTF_REVID                 0xFFC032FC         /* PORTF Port x GPIO Revision ID */

/* =========================
        PORTG
   ========================= */
#define REG_PORTG_FER                   0xFFC03300         /* PORTG Port x Function Enable Register */
#define REG_PORTG_FER_SET               0xFFC03304         /* PORTG Port x Function Enable Set Register */
#define REG_PORTG_FER_CLR               0xFFC03308         /* PORTG Port x Function Enable Clear Register */
#define REG_PORTG_DATA                  0xFFC0330C         /* PORTG Port x GPIO Data Register */
#define REG_PORTG_DATA_SET              0xFFC03310         /* PORTG Port x GPIO Data Set Register */
#define REG_PORTG_DATA_CLR              0xFFC03314         /* PORTG Port x GPIO Data Clear Register */
#define REG_PORTG_DIR                   0xFFC03318         /* PORTG Port x GPIO Direction Register */
#define REG_PORTG_DIR_SET               0xFFC0331C         /* PORTG Port x GPIO Direction Set Register */
#define REG_PORTG_DIR_CLR               0xFFC03320         /* PORTG Port x GPIO Direction Clear Register */
#define REG_PORTG_INEN                  0xFFC03324         /* PORTG Port x GPIO Input Enable Register */
#define REG_PORTG_INEN_SET              0xFFC03328         /* PORTG Port x GPIO Input Enable Set Register */
#define REG_PORTG_INEN_CLR              0xFFC0332C         /* PORTG Port x GPIO Input Enable Clear Register */
#define REG_PORTG_MUX                   0xFFC03330         /* PORTG Port x Multiplexer Control Register */
#define REG_PORTG_DATA_TGL              0xFFC03334         /* PORTG Port x GPIO Input Enable Toggle Register */
#define REG_PORTG_POL                   0xFFC03338         /* PORTG Port x GPIO Programming Inversion Register */
#define REG_PORTG_POL_SET               0xFFC0333C         /* PORTG Port x GPIO Programming Inversion Set Register */
#define REG_PORTG_POL_CLR               0xFFC03340         /* PORTG Port x GPIO Programming Inversion Clear Register */
#define REG_PORTG_LOCK                  0xFFC03344         /* PORTG Port x GPIO Lock Register */
#define REG_PORTG_REVID                 0xFFC0337C         /* PORTG Port x GPIO Revision ID */

/* =========================
        PORT
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PORT_FER                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_FER_PX15                   15            /* Port x Bit 15 */
#define BITP_PORT_FER_PX14                   14            /* Port x Bit 14 */
#define BITP_PORT_FER_PX13                   13            /* Port x Bit 13 */
#define BITP_PORT_FER_PX12                   12            /* Port x Bit 12 */
#define BITP_PORT_FER_PX11                   11            /* Port x Bit 11 */
#define BITP_PORT_FER_PX10                   10            /* Port x Bit 10 */
#define BITP_PORT_FER_PX9                     9            /* Port x Bit 9 */
#define BITP_PORT_FER_PX8                     8            /* Port x Bit 8 */
#define BITP_PORT_FER_PX7                     7            /* Port x Bit 7 */
#define BITP_PORT_FER_PX6                     6            /* Port x Bit 6 */
#define BITP_PORT_FER_PX5                     5            /* Port x Bit 5 */
#define BITP_PORT_FER_PX4                     4            /* Port x Bit 4 */
#define BITP_PORT_FER_PX3                     3            /* Port x Bit 3 */
#define BITP_PORT_FER_PX2                     2            /* Port x Bit 2 */
#define BITP_PORT_FER_PX1                     1            /* Port x Bit 1 */
#define BITP_PORT_FER_PX0                     0            /* Port x Bit 0 */
#define BITM_PORT_FER_PX15                   0x00008000    /* Port x Bit 15 */
#define BITM_PORT_FER_PX14                   0x00004000    /* Port x Bit 14 */
#define BITM_PORT_FER_PX13                   0x00002000    /* Port x Bit 13 */
#define BITM_PORT_FER_PX12                   0x00001000    /* Port x Bit 12 */
#define BITM_PORT_FER_PX11                   0x00000800    /* Port x Bit 11 */
#define BITM_PORT_FER_PX10                   0x00000400    /* Port x Bit 10 */
#define BITM_PORT_FER_PX9                    0x00000200    /* Port x Bit 9 */
#define BITM_PORT_FER_PX8                    0x00000100    /* Port x Bit 8 */
#define BITM_PORT_FER_PX7                    0x00000080    /* Port x Bit 7 */
#define BITM_PORT_FER_PX6                    0x00000040    /* Port x Bit 6 */
#define BITM_PORT_FER_PX5                    0x00000020    /* Port x Bit 5 */
#define BITM_PORT_FER_PX4                    0x00000010    /* Port x Bit 4 */
#define BITM_PORT_FER_PX3                    0x00000008    /* Port x Bit 3 */
#define BITM_PORT_FER_PX2                    0x00000004    /* Port x Bit 2 */
#define BITM_PORT_FER_PX1                    0x00000002    /* Port x Bit 1 */
#define BITM_PORT_FER_PX0                    0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_FER_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_FER_SET_PX15               15            /* Port x Bit 15 */
#define BITP_PORT_FER_SET_PX14               14            /* Port x Bit 14 */
#define BITP_PORT_FER_SET_PX13               13            /* Port x Bit 13 */
#define BITP_PORT_FER_SET_PX12               12            /* Port x Bit 12 */
#define BITP_PORT_FER_SET_PX11               11            /* Port x Bit 11 */
#define BITP_PORT_FER_SET_PX10               10            /* Port x Bit 10 */
#define BITP_PORT_FER_SET_PX9                 9            /* Port x Bit 9 */
#define BITP_PORT_FER_SET_PX8                 8            /* Port x Bit 8 */
#define BITP_PORT_FER_SET_PX7                 7            /* Port x Bit 7 */
#define BITP_PORT_FER_SET_PX6                 6            /* Port x Bit 6 */
#define BITP_PORT_FER_SET_PX5                 5            /* Port x Bit 5 */
#define BITP_PORT_FER_SET_PX4                 4            /* Port x Bit 4 */
#define BITP_PORT_FER_SET_PX3                 3            /* Port x Bit 3 */
#define BITP_PORT_FER_SET_PX2                 2            /* Port x Bit 2 */
#define BITP_PORT_FER_SET_PX1                 1            /* Port x Bit 1 */
#define BITP_PORT_FER_SET_PX0                 0            /* Port x Bit 0 */
#define BITM_PORT_FER_SET_PX15               0x00008000    /* Port x Bit 15 */
#define BITM_PORT_FER_SET_PX14               0x00004000    /* Port x Bit 14 */
#define BITM_PORT_FER_SET_PX13               0x00002000    /* Port x Bit 13 */
#define BITM_PORT_FER_SET_PX12               0x00001000    /* Port x Bit 12 */
#define BITM_PORT_FER_SET_PX11               0x00000800    /* Port x Bit 11 */
#define BITM_PORT_FER_SET_PX10               0x00000400    /* Port x Bit 10 */
#define BITM_PORT_FER_SET_PX9                0x00000200    /* Port x Bit 9 */
#define BITM_PORT_FER_SET_PX8                0x00000100    /* Port x Bit 8 */
#define BITM_PORT_FER_SET_PX7                0x00000080    /* Port x Bit 7 */
#define BITM_PORT_FER_SET_PX6                0x00000040    /* Port x Bit 6 */
#define BITM_PORT_FER_SET_PX5                0x00000020    /* Port x Bit 5 */
#define BITM_PORT_FER_SET_PX4                0x00000010    /* Port x Bit 4 */
#define BITM_PORT_FER_SET_PX3                0x00000008    /* Port x Bit 3 */
#define BITM_PORT_FER_SET_PX2                0x00000004    /* Port x Bit 2 */
#define BITM_PORT_FER_SET_PX1                0x00000002    /* Port x Bit 1 */
#define BITM_PORT_FER_SET_PX0                0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_FER_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_FER_CLR_PX15               15            /* Port x Bit 15 */
#define BITP_PORT_FER_CLR_PX14               14            /* Port x Bit 14 */
#define BITP_PORT_FER_CLR_PX13               13            /* Port x Bit 13 */
#define BITP_PORT_FER_CLR_PX12               12            /* Port x Bit 12 */
#define BITP_PORT_FER_CLR_PX11               11            /* Port x Bit 11 */
#define BITP_PORT_FER_CLR_PX10               10            /* Port x Bit 10 */
#define BITP_PORT_FER_CLR_PX9                 9            /* Port x Bit 9 */
#define BITP_PORT_FER_CLR_PX8                 8            /* Port x Bit 8 */
#define BITP_PORT_FER_CLR_PX7                 7            /* Port x Bit 7 */
#define BITP_PORT_FER_CLR_PX6                 6            /* Port x Bit 6 */
#define BITP_PORT_FER_CLR_PX5                 5            /* Port x Bit 5 */
#define BITP_PORT_FER_CLR_PX4                 4            /* Port x Bit 4 */
#define BITP_PORT_FER_CLR_PX3                 3            /* Port x Bit 3 */
#define BITP_PORT_FER_CLR_PX2                 2            /* Port x Bit 2 */
#define BITP_PORT_FER_CLR_PX1                 1            /* Port x Bit 1 */
#define BITP_PORT_FER_CLR_PX0                 0            /* Port x Bit 0 */
#define BITM_PORT_FER_CLR_PX15               0x00008000    /* Port x Bit 15 */
#define BITM_PORT_FER_CLR_PX14               0x00004000    /* Port x Bit 14 */
#define BITM_PORT_FER_CLR_PX13               0x00002000    /* Port x Bit 13 */
#define BITM_PORT_FER_CLR_PX12               0x00001000    /* Port x Bit 12 */
#define BITM_PORT_FER_CLR_PX11               0x00000800    /* Port x Bit 11 */
#define BITM_PORT_FER_CLR_PX10               0x00000400    /* Port x Bit 10 */
#define BITM_PORT_FER_CLR_PX9                0x00000200    /* Port x Bit 9 */
#define BITM_PORT_FER_CLR_PX8                0x00000100    /* Port x Bit 8 */
#define BITM_PORT_FER_CLR_PX7                0x00000080    /* Port x Bit 7 */
#define BITM_PORT_FER_CLR_PX6                0x00000040    /* Port x Bit 6 */
#define BITM_PORT_FER_CLR_PX5                0x00000020    /* Port x Bit 5 */
#define BITM_PORT_FER_CLR_PX4                0x00000010    /* Port x Bit 4 */
#define BITM_PORT_FER_CLR_PX3                0x00000008    /* Port x Bit 3 */
#define BITM_PORT_FER_CLR_PX2                0x00000004    /* Port x Bit 2 */
#define BITM_PORT_FER_CLR_PX1                0x00000002    /* Port x Bit 1 */
#define BITM_PORT_FER_CLR_PX0                0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DATA                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DATA_PX15                  15            /* Port x Bit 15 */
#define BITP_PORT_DATA_PX14                  14            /* Port x Bit 14 */
#define BITP_PORT_DATA_PX13                  13            /* Port x Bit 13 */
#define BITP_PORT_DATA_PX12                  12            /* Port x Bit 12 */
#define BITP_PORT_DATA_PX11                  11            /* Port x Bit 11 */
#define BITP_PORT_DATA_PX10                  10            /* Port x Bit 10 */
#define BITP_PORT_DATA_PX9                    9            /* Port x Bit 9 */
#define BITP_PORT_DATA_PX8                    8            /* Port x Bit 8 */
#define BITP_PORT_DATA_PX7                    7            /* Port x Bit 7 */
#define BITP_PORT_DATA_PX6                    6            /* Port x Bit 6 */
#define BITP_PORT_DATA_PX5                    5            /* Port x Bit 5 */
#define BITP_PORT_DATA_PX4                    4            /* Port x Bit 4 */
#define BITP_PORT_DATA_PX3                    3            /* Port x Bit 3 */
#define BITP_PORT_DATA_PX2                    2            /* Port x Bit 2 */
#define BITP_PORT_DATA_PX1                    1            /* Port x Bit 1 */
#define BITP_PORT_DATA_PX0                    0            /* Port x Bit 0 */
#define BITM_PORT_DATA_PX15                  0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DATA_PX14                  0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DATA_PX13                  0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DATA_PX12                  0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DATA_PX11                  0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DATA_PX10                  0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DATA_PX9                   0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DATA_PX8                   0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DATA_PX7                   0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DATA_PX6                   0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DATA_PX5                   0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DATA_PX4                   0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DATA_PX3                   0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DATA_PX2                   0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DATA_PX1                   0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DATA_PX0                   0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DATA_SET                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DATA_SET_PX15              15            /* Port x Bit 15 */
#define BITP_PORT_DATA_SET_PX14              14            /* Port x Bit 14 */
#define BITP_PORT_DATA_SET_PX13              13            /* Port x Bit 13 */
#define BITP_PORT_DATA_SET_PX12              12            /* Port x Bit 12 */
#define BITP_PORT_DATA_SET_PX11              11            /* Port x Bit 11 */
#define BITP_PORT_DATA_SET_PX10              10            /* Port x Bit 10 */
#define BITP_PORT_DATA_SET_PX9                9            /* Port x Bit 9 */
#define BITP_PORT_DATA_SET_PX8                8            /* Port x Bit 8 */
#define BITP_PORT_DATA_SET_PX7                7            /* Port x Bit 7 */
#define BITP_PORT_DATA_SET_PX6                6            /* Port x Bit 6 */
#define BITP_PORT_DATA_SET_PX5                5            /* Port x Bit 5 */
#define BITP_PORT_DATA_SET_PX4                4            /* Port x Bit 4 */
#define BITP_PORT_DATA_SET_PX3                3            /* Port x Bit 3 */
#define BITP_PORT_DATA_SET_PX2                2            /* Port x Bit 2 */
#define BITP_PORT_DATA_SET_PX1                1            /* Port x Bit 1 */
#define BITP_PORT_DATA_SET_PX0                0            /* Port x Bit 0 */
#define BITM_PORT_DATA_SET_PX15              0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DATA_SET_PX14              0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DATA_SET_PX13              0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DATA_SET_PX12              0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DATA_SET_PX11              0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DATA_SET_PX10              0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DATA_SET_PX9               0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DATA_SET_PX8               0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DATA_SET_PX7               0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DATA_SET_PX6               0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DATA_SET_PX5               0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DATA_SET_PX4               0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DATA_SET_PX3               0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DATA_SET_PX2               0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DATA_SET_PX1               0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DATA_SET_PX0               0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DATA_CLR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DATA_CLR_PX15              15            /* Port x Bit 15 */
#define BITP_PORT_DATA_CLR_PX14              14            /* Port x Bit 14 */
#define BITP_PORT_DATA_CLR_PX13              13            /* Port x Bit 13 */
#define BITP_PORT_DATA_CLR_PX12              12            /* Port x Bit 12 */
#define BITP_PORT_DATA_CLR_PX11              11            /* Port x Bit 11 */
#define BITP_PORT_DATA_CLR_PX10              10            /* Port x Bit 10 */
#define BITP_PORT_DATA_CLR_PX9                9            /* Port x Bit 9 */
#define BITP_PORT_DATA_CLR_PX8                8            /* Port x Bit 8 */
#define BITP_PORT_DATA_CLR_PX7                7            /* Port x Bit 7 */
#define BITP_PORT_DATA_CLR_PX6                6            /* Port x Bit 6 */
#define BITP_PORT_DATA_CLR_PX5                5            /* Port x Bit 5 */
#define BITP_PORT_DATA_CLR_PX4                4            /* Port x Bit 4 */
#define BITP_PORT_DATA_CLR_PX3                3            /* Port x Bit 3 */
#define BITP_PORT_DATA_CLR_PX2                2            /* Port x Bit 2 */
#define BITP_PORT_DATA_CLR_PX1                1            /* Port x Bit 1 */
#define BITP_PORT_DATA_CLR_PX0                0            /* Port x Bit 0 */
#define BITM_PORT_DATA_CLR_PX15              0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DATA_CLR_PX14              0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DATA_CLR_PX13              0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DATA_CLR_PX12              0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DATA_CLR_PX11              0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DATA_CLR_PX10              0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DATA_CLR_PX9               0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DATA_CLR_PX8               0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DATA_CLR_PX7               0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DATA_CLR_PX6               0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DATA_CLR_PX5               0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DATA_CLR_PX4               0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DATA_CLR_PX3               0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DATA_CLR_PX2               0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DATA_CLR_PX1               0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DATA_CLR_PX0               0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DIR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DIR_PX15                   15            /* Port x Bit 15 */
#define BITP_PORT_DIR_PX14                   14            /* Port x Bit 14 */
#define BITP_PORT_DIR_PX13                   13            /* Port x Bit 13 */
#define BITP_PORT_DIR_PX12                   12            /* Port x Bit 12 */
#define BITP_PORT_DIR_PX11                   11            /* Port x Bit 11 */
#define BITP_PORT_DIR_PX10                   10            /* Port x Bit 10 */
#define BITP_PORT_DIR_PX9                     9            /* Port x Bit 9 */
#define BITP_PORT_DIR_PX8                     8            /* Port x Bit 8 */
#define BITP_PORT_DIR_PX7                     7            /* Port x Bit 7 */
#define BITP_PORT_DIR_PX6                     6            /* Port x Bit 6 */
#define BITP_PORT_DIR_PX5                     5            /* Port x Bit 5 */
#define BITP_PORT_DIR_PX4                     4            /* Port x Bit 4 */
#define BITP_PORT_DIR_PX3                     3            /* Port x Bit 3 */
#define BITP_PORT_DIR_PX2                     2            /* Port x Bit 2 */
#define BITP_PORT_DIR_PX1                     1            /* Port x Bit 1 */
#define BITP_PORT_DIR_PX0                     0            /* Port x Bit 0 */
#define BITM_PORT_DIR_PX15                   0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DIR_PX14                   0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DIR_PX13                   0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DIR_PX12                   0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DIR_PX11                   0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DIR_PX10                   0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DIR_PX9                    0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DIR_PX8                    0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DIR_PX7                    0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DIR_PX6                    0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DIR_PX5                    0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DIR_PX4                    0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DIR_PX3                    0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DIR_PX2                    0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DIR_PX1                    0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DIR_PX0                    0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DIR_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DIR_SET_PX15               15            /* Port x Bit 15 */
#define BITP_PORT_DIR_SET_PX14               14            /* Port x Bit 14 */
#define BITP_PORT_DIR_SET_PX13               13            /* Port x Bit 13 */
#define BITP_PORT_DIR_SET_PX12               12            /* Port x Bit 12 */
#define BITP_PORT_DIR_SET_PX11               11            /* Port x Bit 11 */
#define BITP_PORT_DIR_SET_PX10               10            /* Port x Bit 10 */
#define BITP_PORT_DIR_SET_PX9                 9            /* Port x Bit 9 */
#define BITP_PORT_DIR_SET_PX8                 8            /* Port x Bit 8 */
#define BITP_PORT_DIR_SET_PX7                 7            /* Port x Bit 7 */
#define BITP_PORT_DIR_SET_PX6                 6            /* Port x Bit 6 */
#define BITP_PORT_DIR_SET_PX5                 5            /* Port x Bit 5 */
#define BITP_PORT_DIR_SET_PX4                 4            /* Port x Bit 4 */
#define BITP_PORT_DIR_SET_PX3                 3            /* Port x Bit 3 */
#define BITP_PORT_DIR_SET_PX2                 2            /* Port x Bit 2 */
#define BITP_PORT_DIR_SET_PX1                 1            /* Port x Bit 1 */
#define BITP_PORT_DIR_SET_PX0                 0            /* Port x Bit 0 */
#define BITM_PORT_DIR_SET_PX15               0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DIR_SET_PX14               0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DIR_SET_PX13               0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DIR_SET_PX12               0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DIR_SET_PX11               0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DIR_SET_PX10               0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DIR_SET_PX9                0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DIR_SET_PX8                0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DIR_SET_PX7                0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DIR_SET_PX6                0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DIR_SET_PX5                0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DIR_SET_PX4                0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DIR_SET_PX3                0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DIR_SET_PX2                0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DIR_SET_PX1                0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DIR_SET_PX0                0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DIR_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DIR_CLR_PX15               15            /* Port x Bit 15 */
#define BITP_PORT_DIR_CLR_PX14               14            /* Port x Bit 14 */
#define BITP_PORT_DIR_CLR_PX13               13            /* Port x Bit 13 */
#define BITP_PORT_DIR_CLR_PX12               12            /* Port x Bit 12 */
#define BITP_PORT_DIR_CLR_PX11               11            /* Port x Bit 11 */
#define BITP_PORT_DIR_CLR_PX10               10            /* Port x Bit 10 */
#define BITP_PORT_DIR_CLR_PX9                 9            /* Port x Bit 9 */
#define BITP_PORT_DIR_CLR_PX8                 8            /* Port x Bit 8 */
#define BITP_PORT_DIR_CLR_PX7                 7            /* Port x Bit 7 */
#define BITP_PORT_DIR_CLR_PX6                 6            /* Port x Bit 6 */
#define BITP_PORT_DIR_CLR_PX5                 5            /* Port x Bit 5 */
#define BITP_PORT_DIR_CLR_PX4                 4            /* Port x Bit 4 */
#define BITP_PORT_DIR_CLR_PX3                 3            /* Port x Bit 3 */
#define BITP_PORT_DIR_CLR_PX2                 2            /* Port x Bit 2 */
#define BITP_PORT_DIR_CLR_PX1                 1            /* Port x Bit 1 */
#define BITP_PORT_DIR_CLR_PX0                 0            /* Port x Bit 0 */
#define BITM_PORT_DIR_CLR_PX15               0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DIR_CLR_PX14               0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DIR_CLR_PX13               0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DIR_CLR_PX12               0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DIR_CLR_PX11               0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DIR_CLR_PX10               0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DIR_CLR_PX9                0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DIR_CLR_PX8                0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DIR_CLR_PX7                0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DIR_CLR_PX6                0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DIR_CLR_PX5                0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DIR_CLR_PX4                0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DIR_CLR_PX3                0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DIR_CLR_PX2                0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DIR_CLR_PX1                0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DIR_CLR_PX0                0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_INEN                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_INEN_PX15                  15            /* Port x Bit 15 */
#define BITP_PORT_INEN_PX14                  14            /* Port x Bit 14 */
#define BITP_PORT_INEN_PX13                  13            /* Port x Bit 13 */
#define BITP_PORT_INEN_PX12                  12            /* Port x Bit 12 */
#define BITP_PORT_INEN_PX11                  11            /* Port x Bit 11 */
#define BITP_PORT_INEN_PX10                  10            /* Port x Bit 10 */
#define BITP_PORT_INEN_PX9                    9            /* Port x Bit 9 */
#define BITP_PORT_INEN_PX8                    8            /* Port x Bit 8 */
#define BITP_PORT_INEN_PX7                    7            /* Port x Bit 7 */
#define BITP_PORT_INEN_PX6                    6            /* Port x Bit 6 */
#define BITP_PORT_INEN_PX5                    5            /* Port x Bit 5 */
#define BITP_PORT_INEN_PX4                    4            /* Port x Bit 4 */
#define BITP_PORT_INEN_PX3                    3            /* Port x Bit 3 */
#define BITP_PORT_INEN_PX2                    2            /* Port x Bit 2 */
#define BITP_PORT_INEN_PX1                    1            /* Port x Bit 1 */
#define BITP_PORT_INEN_PX0                    0            /* Port x Bit 0 */
#define BITM_PORT_INEN_PX15                  0x00008000    /* Port x Bit 15 */
#define BITM_PORT_INEN_PX14                  0x00004000    /* Port x Bit 14 */
#define BITM_PORT_INEN_PX13                  0x00002000    /* Port x Bit 13 */
#define BITM_PORT_INEN_PX12                  0x00001000    /* Port x Bit 12 */
#define BITM_PORT_INEN_PX11                  0x00000800    /* Port x Bit 11 */
#define BITM_PORT_INEN_PX10                  0x00000400    /* Port x Bit 10 */
#define BITM_PORT_INEN_PX9                   0x00000200    /* Port x Bit 9 */
#define BITM_PORT_INEN_PX8                   0x00000100    /* Port x Bit 8 */
#define BITM_PORT_INEN_PX7                   0x00000080    /* Port x Bit 7 */
#define BITM_PORT_INEN_PX6                   0x00000040    /* Port x Bit 6 */
#define BITM_PORT_INEN_PX5                   0x00000020    /* Port x Bit 5 */
#define BITM_PORT_INEN_PX4                   0x00000010    /* Port x Bit 4 */
#define BITM_PORT_INEN_PX3                   0x00000008    /* Port x Bit 3 */
#define BITM_PORT_INEN_PX2                   0x00000004    /* Port x Bit 2 */
#define BITM_PORT_INEN_PX1                   0x00000002    /* Port x Bit 1 */
#define BITM_PORT_INEN_PX0                   0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_INEN_SET                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_INEN_SET_PX15              15            /* Port x Bit 15 */
#define BITP_PORT_INEN_SET_PX14              14            /* Port x Bit 14 */
#define BITP_PORT_INEN_SET_PX13              13            /* Port x Bit 13 */
#define BITP_PORT_INEN_SET_PX12              12            /* Port x Bit 12 */
#define BITP_PORT_INEN_SET_PX11              11            /* Port x Bit 11 */
#define BITP_PORT_INEN_SET_PX10              10            /* Port x Bit 10 */
#define BITP_PORT_INEN_SET_PX9                9            /* Port x Bit 9 */
#define BITP_PORT_INEN_SET_PX8                8            /* Port x Bit 8 */
#define BITP_PORT_INEN_SET_PX7                7            /* Port x Bit 7 */
#define BITP_PORT_INEN_SET_PX6                6            /* Port x Bit 6 */
#define BITP_PORT_INEN_SET_PX5                5            /* Port x Bit 5 */
#define BITP_PORT_INEN_SET_PX4                4            /* Port x Bit 4 */
#define BITP_PORT_INEN_SET_PX3                3            /* Port x Bit 3 */
#define BITP_PORT_INEN_SET_PX2                2            /* Port x Bit 2 */
#define BITP_PORT_INEN_SET_PX1                1            /* Port x Bit 1 */
#define BITP_PORT_INEN_SET_PX0                0            /* Port x Bit 0 */
#define BITM_PORT_INEN_SET_PX15              0x00008000    /* Port x Bit 15 */
#define BITM_PORT_INEN_SET_PX14              0x00004000    /* Port x Bit 14 */
#define BITM_PORT_INEN_SET_PX13              0x00002000    /* Port x Bit 13 */
#define BITM_PORT_INEN_SET_PX12              0x00001000    /* Port x Bit 12 */
#define BITM_PORT_INEN_SET_PX11              0x00000800    /* Port x Bit 11 */
#define BITM_PORT_INEN_SET_PX10              0x00000400    /* Port x Bit 10 */
#define BITM_PORT_INEN_SET_PX9               0x00000200    /* Port x Bit 9 */
#define BITM_PORT_INEN_SET_PX8               0x00000100    /* Port x Bit 8 */
#define BITM_PORT_INEN_SET_PX7               0x00000080    /* Port x Bit 7 */
#define BITM_PORT_INEN_SET_PX6               0x00000040    /* Port x Bit 6 */
#define BITM_PORT_INEN_SET_PX5               0x00000020    /* Port x Bit 5 */
#define BITM_PORT_INEN_SET_PX4               0x00000010    /* Port x Bit 4 */
#define BITM_PORT_INEN_SET_PX3               0x00000008    /* Port x Bit 3 */
#define BITM_PORT_INEN_SET_PX2               0x00000004    /* Port x Bit 2 */
#define BITM_PORT_INEN_SET_PX1               0x00000002    /* Port x Bit 1 */
#define BITM_PORT_INEN_SET_PX0               0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_INEN_CLR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_INEN_CLR_PX15              15            /* Port x Bit 15 */
#define BITP_PORT_INEN_CLR_PX14              14            /* Port x Bit 14 */
#define BITP_PORT_INEN_CLR_PX13              13            /* Port x Bit 13 */
#define BITP_PORT_INEN_CLR_PX12              12            /* Port x Bit 12 */
#define BITP_PORT_INEN_CLR_PX11              11            /* Port x Bit 11 */
#define BITP_PORT_INEN_CLR_PX10              10            /* Port x Bit 10 */
#define BITP_PORT_INEN_CLR_PX9                9            /* Port x Bit 9 */
#define BITP_PORT_INEN_CLR_PX8                8            /* Port x Bit 8 */
#define BITP_PORT_INEN_CLR_PX7                7            /* Port x Bit 7 */
#define BITP_PORT_INEN_CLR_PX6                6            /* Port x Bit 6 */
#define BITP_PORT_INEN_CLR_PX5                5            /* Port x Bit 5 */
#define BITP_PORT_INEN_CLR_PX4                4            /* Port x Bit 4 */
#define BITP_PORT_INEN_CLR_PX3                3            /* Port x Bit 3 */
#define BITP_PORT_INEN_CLR_PX2                2            /* Port x Bit 2 */
#define BITP_PORT_INEN_CLR_PX1                1            /* Port x Bit 1 */
#define BITP_PORT_INEN_CLR_PX0                0            /* Port x Bit 0 */
#define BITM_PORT_INEN_CLR_PX15              0x00008000    /* Port x Bit 15 */
#define BITM_PORT_INEN_CLR_PX14              0x00004000    /* Port x Bit 14 */
#define BITM_PORT_INEN_CLR_PX13              0x00002000    /* Port x Bit 13 */
#define BITM_PORT_INEN_CLR_PX12              0x00001000    /* Port x Bit 12 */
#define BITM_PORT_INEN_CLR_PX11              0x00000800    /* Port x Bit 11 */
#define BITM_PORT_INEN_CLR_PX10              0x00000400    /* Port x Bit 10 */
#define BITM_PORT_INEN_CLR_PX9               0x00000200    /* Port x Bit 9 */
#define BITM_PORT_INEN_CLR_PX8               0x00000100    /* Port x Bit 8 */
#define BITM_PORT_INEN_CLR_PX7               0x00000080    /* Port x Bit 7 */
#define BITM_PORT_INEN_CLR_PX6               0x00000040    /* Port x Bit 6 */
#define BITM_PORT_INEN_CLR_PX5               0x00000020    /* Port x Bit 5 */
#define BITM_PORT_INEN_CLR_PX4               0x00000010    /* Port x Bit 4 */
#define BITM_PORT_INEN_CLR_PX3               0x00000008    /* Port x Bit 3 */
#define BITM_PORT_INEN_CLR_PX2               0x00000004    /* Port x Bit 2 */
#define BITM_PORT_INEN_CLR_PX1               0x00000002    /* Port x Bit 1 */
#define BITM_PORT_INEN_CLR_PX0               0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_MUX                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_MUX_MUX15                  30            /* Port x Mux 15 */
#define BITP_PORT_MUX_MUX14                  28            /* Port x Mux 14 */
#define BITP_PORT_MUX_MUX13                  26            /* Port x Mux 13 */
#define BITP_PORT_MUX_MUX12                  24            /* Port x Mux 12 */
#define BITP_PORT_MUX_MUX11                  22            /* Port x Mux 11 */
#define BITP_PORT_MUX_MUX10                  20            /* Port x Mux 10 */
#define BITP_PORT_MUX_MUX9                   18            /* Port x Mux 9 */
#define BITP_PORT_MUX_MUX8                   16            /* Port x Mux 8 */
#define BITP_PORT_MUX_MUX7                   14            /* Port x Mux 7 */
#define BITP_PORT_MUX_MUX6                   12            /* Port x Mux 6 */
#define BITP_PORT_MUX_MUX5                   10            /* Port x Mux 5 */
#define BITP_PORT_MUX_MUX4                    8            /* Port x Mux 4 */
#define BITP_PORT_MUX_MUX3                    6            /* Port x Mux 3 */
#define BITP_PORT_MUX_MUX2                    4            /* Port x Mux 2 */
#define BITP_PORT_MUX_MUX1                    2            /* Port x Mux 1 */
#define BITP_PORT_MUX_MUX0                    0            /* Port x Mux 0 */
#define BITM_PORT_MUX_MUX15                  0xC0000000    /* Port x Mux 15 */
#define BITM_PORT_MUX_MUX14                  0x30000000    /* Port x Mux 14 */
#define BITM_PORT_MUX_MUX13                  0x0C000000    /* Port x Mux 13 */
#define BITM_PORT_MUX_MUX12                  0x03000000    /* Port x Mux 12 */
#define BITM_PORT_MUX_MUX11                  0x00C00000    /* Port x Mux 11 */
#define BITM_PORT_MUX_MUX10                  0x00300000    /* Port x Mux 10 */
#define BITM_PORT_MUX_MUX9                   0x000C0000    /* Port x Mux 9 */
#define BITM_PORT_MUX_MUX8                   0x00030000    /* Port x Mux 8 */
#define BITM_PORT_MUX_MUX7                   0x0000C000    /* Port x Mux 7 */
#define BITM_PORT_MUX_MUX6                   0x00003000    /* Port x Mux 6 */
#define BITM_PORT_MUX_MUX5                   0x00000C00    /* Port x Mux 5 */
#define BITM_PORT_MUX_MUX4                   0x00000300    /* Port x Mux 4 */
#define BITM_PORT_MUX_MUX3                   0x000000C0    /* Port x Mux 3 */
#define BITM_PORT_MUX_MUX2                   0x00000030    /* Port x Mux 2 */
#define BITM_PORT_MUX_MUX1                   0x0000000C    /* Port x Mux 1 */
#define BITM_PORT_MUX_MUX0                   0x00000003    /* Port x Mux 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_DATA_TGL                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_DATA_TGL_PX15              15            /* Port x Bit 15 */
#define BITP_PORT_DATA_TGL_PX14              14            /* Port x Bit 14 */
#define BITP_PORT_DATA_TGL_PX13              13            /* Port x Bit 13 */
#define BITP_PORT_DATA_TGL_PX12              12            /* Port x Bit 12 */
#define BITP_PORT_DATA_TGL_PX11              11            /* Port x Bit 11 */
#define BITP_PORT_DATA_TGL_PX10              10            /* Port x Bit 10 */
#define BITP_PORT_DATA_TGL_PX9                9            /* Port x Bit 9 */
#define BITP_PORT_DATA_TGL_PX8                8            /* Port x Bit 8 */
#define BITP_PORT_DATA_TGL_PX7                7            /* Port x Bit 7 */
#define BITP_PORT_DATA_TGL_PX6                6            /* Port x Bit 6 */
#define BITP_PORT_DATA_TGL_PX5                5            /* Port x Bit 5 */
#define BITP_PORT_DATA_TGL_PX4                4            /* Port x Bit 4 */
#define BITP_PORT_DATA_TGL_PX3                3            /* Port x Bit 3 */
#define BITP_PORT_DATA_TGL_PX2                2            /* Port x Bit 2 */
#define BITP_PORT_DATA_TGL_PX1                1            /* Port x Bit 1 */
#define BITP_PORT_DATA_TGL_PX0                0            /* Port x Bit 0 */
#define BITM_PORT_DATA_TGL_PX15              0x00008000    /* Port x Bit 15 */
#define BITM_PORT_DATA_TGL_PX14              0x00004000    /* Port x Bit 14 */
#define BITM_PORT_DATA_TGL_PX13              0x00002000    /* Port x Bit 13 */
#define BITM_PORT_DATA_TGL_PX12              0x00001000    /* Port x Bit 12 */
#define BITM_PORT_DATA_TGL_PX11              0x00000800    /* Port x Bit 11 */
#define BITM_PORT_DATA_TGL_PX10              0x00000400    /* Port x Bit 10 */
#define BITM_PORT_DATA_TGL_PX9               0x00000200    /* Port x Bit 9 */
#define BITM_PORT_DATA_TGL_PX8               0x00000100    /* Port x Bit 8 */
#define BITM_PORT_DATA_TGL_PX7               0x00000080    /* Port x Bit 7 */
#define BITM_PORT_DATA_TGL_PX6               0x00000040    /* Port x Bit 6 */
#define BITM_PORT_DATA_TGL_PX5               0x00000020    /* Port x Bit 5 */
#define BITM_PORT_DATA_TGL_PX4               0x00000010    /* Port x Bit 4 */
#define BITM_PORT_DATA_TGL_PX3               0x00000008    /* Port x Bit 3 */
#define BITM_PORT_DATA_TGL_PX2               0x00000004    /* Port x Bit 2 */
#define BITM_PORT_DATA_TGL_PX1               0x00000002    /* Port x Bit 1 */
#define BITM_PORT_DATA_TGL_PX0               0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_POL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_POL_PX15                   15            /* Port x Bit 15 */
#define BITP_PORT_POL_PX14                   14            /* Port x Bit 14 */
#define BITP_PORT_POL_PX13                   13            /* Port x Bit 13 */
#define BITP_PORT_POL_PX12                   12            /* Port x Bit 12 */
#define BITP_PORT_POL_PX11                   11            /* Port x Bit 11 */
#define BITP_PORT_POL_PX10                   10            /* Port x Bit 10 */
#define BITP_PORT_POL_PX9                     9            /* Port x Bit 9 */
#define BITP_PORT_POL_PX8                     8            /* Port x Bit 8 */
#define BITP_PORT_POL_PX7                     7            /* Port x Bit 7 */
#define BITP_PORT_POL_PX6                     6            /* Port x Bit 6 */
#define BITP_PORT_POL_PX5                     5            /* Port x Bit 5 */
#define BITP_PORT_POL_PX4                     4            /* Port x Bit 4 */
#define BITP_PORT_POL_PX3                     3            /* Port x Bit 3 */
#define BITP_PORT_POL_PX2                     2            /* Port x Bit 2 */
#define BITP_PORT_POL_PX1                     1            /* Port x Bit 1 */
#define BITP_PORT_POL_PX0                     0            /* Port x Bit 0 */
#define BITM_PORT_POL_PX15                   0x00008000    /* Port x Bit 15 */
#define BITM_PORT_POL_PX14                   0x00004000    /* Port x Bit 14 */
#define BITM_PORT_POL_PX13                   0x00002000    /* Port x Bit 13 */
#define BITM_PORT_POL_PX12                   0x00001000    /* Port x Bit 12 */
#define BITM_PORT_POL_PX11                   0x00000800    /* Port x Bit 11 */
#define BITM_PORT_POL_PX10                   0x00000400    /* Port x Bit 10 */
#define BITM_PORT_POL_PX9                    0x00000200    /* Port x Bit 9 */
#define BITM_PORT_POL_PX8                    0x00000100    /* Port x Bit 8 */
#define BITM_PORT_POL_PX7                    0x00000080    /* Port x Bit 7 */
#define BITM_PORT_POL_PX6                    0x00000040    /* Port x Bit 6 */
#define BITM_PORT_POL_PX5                    0x00000020    /* Port x Bit 5 */
#define BITM_PORT_POL_PX4                    0x00000010    /* Port x Bit 4 */
#define BITM_PORT_POL_PX3                    0x00000008    /* Port x Bit 3 */
#define BITM_PORT_POL_PX2                    0x00000004    /* Port x Bit 2 */
#define BITM_PORT_POL_PX1                    0x00000002    /* Port x Bit 1 */
#define BITM_PORT_POL_PX0                    0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_POL_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_POL_SET_PX15               15            /* Port x Bit 15 */
#define BITP_PORT_POL_SET_PX14               14            /* Port x Bit 14 */
#define BITP_PORT_POL_SET_PX13               13            /* Port x Bit 13 */
#define BITP_PORT_POL_SET_PX12               12            /* Port x Bit 12 */
#define BITP_PORT_POL_SET_PX11               11            /* Port x Bit 11 */
#define BITP_PORT_POL_SET_PX10               10            /* Port x Bit 10 */
#define BITP_PORT_POL_SET_PX9                 9            /* Port x Bit 9 */
#define BITP_PORT_POL_SET_PX8                 8            /* Port x Bit 8 */
#define BITP_PORT_POL_SET_PX7                 7            /* Port x Bit 7 */
#define BITP_PORT_POL_SET_PX6                 6            /* Port x Bit 6 */
#define BITP_PORT_POL_SET_PX5                 5            /* Port x Bit 5 */
#define BITP_PORT_POL_SET_PX4                 4            /* Port x Bit 4 */
#define BITP_PORT_POL_SET_PX3                 3            /* Port x Bit 3 */
#define BITP_PORT_POL_SET_PX2                 2            /* Port x Bit 2 */
#define BITP_PORT_POL_SET_PX1                 1            /* Port x Bit 1 */
#define BITP_PORT_POL_SET_PX0                 0            /* Port x Bit 0 */
#define BITM_PORT_POL_SET_PX15               0x00008000    /* Port x Bit 15 */
#define BITM_PORT_POL_SET_PX14               0x00004000    /* Port x Bit 14 */
#define BITM_PORT_POL_SET_PX13               0x00002000    /* Port x Bit 13 */
#define BITM_PORT_POL_SET_PX12               0x00001000    /* Port x Bit 12 */
#define BITM_PORT_POL_SET_PX11               0x00000800    /* Port x Bit 11 */
#define BITM_PORT_POL_SET_PX10               0x00000400    /* Port x Bit 10 */
#define BITM_PORT_POL_SET_PX9                0x00000200    /* Port x Bit 9 */
#define BITM_PORT_POL_SET_PX8                0x00000100    /* Port x Bit 8 */
#define BITM_PORT_POL_SET_PX7                0x00000080    /* Port x Bit 7 */
#define BITM_PORT_POL_SET_PX6                0x00000040    /* Port x Bit 6 */
#define BITM_PORT_POL_SET_PX5                0x00000020    /* Port x Bit 5 */
#define BITM_PORT_POL_SET_PX4                0x00000010    /* Port x Bit 4 */
#define BITM_PORT_POL_SET_PX3                0x00000008    /* Port x Bit 3 */
#define BITM_PORT_POL_SET_PX2                0x00000004    /* Port x Bit 2 */
#define BITM_PORT_POL_SET_PX1                0x00000002    /* Port x Bit 1 */
#define BITM_PORT_POL_SET_PX0                0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_POL_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_POL_CLR_PX15               15            /* Port x Bit 15 */
#define BITP_PORT_POL_CLR_PX14               14            /* Port x Bit 14 */
#define BITP_PORT_POL_CLR_PX13               13            /* Port x Bit 13 */
#define BITP_PORT_POL_CLR_PX12               12            /* Port x Bit 12 */
#define BITP_PORT_POL_CLR_PX11               11            /* Port x Bit 11 */
#define BITP_PORT_POL_CLR_PX10               10            /* Port x Bit 10 */
#define BITP_PORT_POL_CLR_PX9                 9            /* Port x Bit 9 */
#define BITP_PORT_POL_CLR_PX8                 8            /* Port x Bit 8 */
#define BITP_PORT_POL_CLR_PX7                 7            /* Port x Bit 7 */
#define BITP_PORT_POL_CLR_PX6                 6            /* Port x Bit 6 */
#define BITP_PORT_POL_CLR_PX5                 5            /* Port x Bit 5 */
#define BITP_PORT_POL_CLR_PX4                 4            /* Port x Bit 4 */
#define BITP_PORT_POL_CLR_PX3                 3            /* Port x Bit 3 */
#define BITP_PORT_POL_CLR_PX2                 2            /* Port x Bit 2 */
#define BITP_PORT_POL_CLR_PX1                 1            /* Port x Bit 1 */
#define BITP_PORT_POL_CLR_PX0                 0            /* Port x Bit 0 */
#define BITM_PORT_POL_CLR_PX15               0x00008000    /* Port x Bit 15 */
#define BITM_PORT_POL_CLR_PX14               0x00004000    /* Port x Bit 14 */
#define BITM_PORT_POL_CLR_PX13               0x00002000    /* Port x Bit 13 */
#define BITM_PORT_POL_CLR_PX12               0x00001000    /* Port x Bit 12 */
#define BITM_PORT_POL_CLR_PX11               0x00000800    /* Port x Bit 11 */
#define BITM_PORT_POL_CLR_PX10               0x00000400    /* Port x Bit 10 */
#define BITM_PORT_POL_CLR_PX9                0x00000200    /* Port x Bit 9 */
#define BITM_PORT_POL_CLR_PX8                0x00000100    /* Port x Bit 8 */
#define BITM_PORT_POL_CLR_PX7                0x00000080    /* Port x Bit 7 */
#define BITM_PORT_POL_CLR_PX6                0x00000040    /* Port x Bit 6 */
#define BITM_PORT_POL_CLR_PX5                0x00000020    /* Port x Bit 5 */
#define BITM_PORT_POL_CLR_PX4                0x00000010    /* Port x Bit 4 */
#define BITM_PORT_POL_CLR_PX3                0x00000008    /* Port x Bit 3 */
#define BITM_PORT_POL_CLR_PX2                0x00000004    /* Port x Bit 2 */
#define BITM_PORT_POL_CLR_PX1                0x00000002    /* Port x Bit 1 */
#define BITM_PORT_POL_CLR_PX0                0x00000001    /* Port x Bit 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_LOCK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_LOCK_LOCK                  31            /* Controls whether the PORTx_LOCK register is write protected on assertion of the global lock indication. */
#define BITP_PORT_LOCK_POLAR                  5            /* Disables write accesses to the PORTx_POL register (including PORTx_POL_SET, PORTx_POL_CLEAR) */
#define BITP_PORT_LOCK_INEN                   4            /* Disables write accesses to the PORTx_INEN register (including PORTx_INEN_SET, PORTx_INEN_CLEAR) */
#define BITP_PORT_LOCK_DIR                    3            /* Disables write accesses to the PORTx_DIR registers */
#define BITP_PORT_LOCK_DATA                   2            /* Disables write accesses to the DATA registers */
#define BITP_PORT_LOCK_MUX                    1            /* Disables write accesses to the MUX register */
#define BITP_PORT_LOCK_FER                    0            /* Disables write accesses to the PORTx_FER registers */
#define BITM_PORT_LOCK_LOCK                  0x80000000    /* Controls whether the PORTx_LOCK register is write protected on assertion of the global lock indication. */
#define BITM_PORT_LOCK_POLAR                 0x00000020    /* Disables write accesses to the PORTx_POL register (including PORTx_POL_SET, PORTx_POL_CLEAR) */
#define BITM_PORT_LOCK_INEN                  0x00000010    /* Disables write accesses to the PORTx_INEN register (including PORTx_INEN_SET, PORTx_INEN_CLEAR) */
#define BITM_PORT_LOCK_DIR                   0x00000008    /* Disables write accesses to the PORTx_DIR registers */
#define BITM_PORT_LOCK_DATA                  0x00000004    /* Disables write accesses to the DATA registers */
#define BITM_PORT_LOCK_MUX                   0x00000002    /* Disables write accesses to the MUX register */
#define BITM_PORT_LOCK_FER                   0x00000001    /* Disables write accesses to the PORTx_FER registers */

/* ------------------------------------------------------------------------------------------------------------------------
        PORT_REVID                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PORT_REVID_MAJOR                 4            /* Major ID */
#define BITP_PORT_REVID_REV                   0            /* Revision ID */
#define BITM_PORT_REVID_MAJOR                0x000000F0    /* Major ID */
#define BITM_PORT_REVID_REV                  0x0000000F    /* Revision ID */

/* =========================
        PADS Registers
   ========================= */

/* =========================
        PADS0
   ========================= */
#define REG_PADS0_EMAC_PTP_CLKSEL       0xFFC03404         /* PADS0 Clock Selection for EMAC and PTP */
#define REG_PADS0_TWI_VSEL              0xFFC03408         /* PADS0 TWI Voltage Selection */
#define REG_PADS0_PORTS_DS              0xFFC03420         /* PADS0 Voltage Domain Control Register */
#define REG_PADS0_NONPORTS_DS           0xFFC03424         /* PADS0 Non-GPIO Drive Strength */
#define REG_PADS0_PORTS_HYST            0xFFC03440         /* PADS0 Hysteresis Enable Register */

/* =========================
        PADS
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PADS_EMAC_PTP_CLKSEL                 Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PADS_EMAC_PTP_CLKSEL_EMAC1       2            /* Select Clock Source for PTP Block in EMAC1 */
#define BITP_PADS_EMAC_PTP_CLKSEL_EMAC0       0            /* Select Clock Source for PTP Block in EMAC0 */
#define BITM_PADS_EMAC_PTP_CLKSEL_EMAC1      0x0000000C    /* Select Clock Source for PTP Block in EMAC1 */
#define BITM_PADS_EMAC_PTP_CLKSEL_EMAC0      0x00000003    /* Select Clock Source for PTP Block in EMAC0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PADS_TWI_VSEL                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PADS_TWI_VSEL_TWI1               4
#define BITP_PADS_TWI_VSEL_TWI0               0
#define BITM_PADS_TWI_VSEL_TWI1              0x00000070
#define BITM_PADS_TWI_VSEL_TWI0              0x00000007

/* ------------------------------------------------------------------------------------------------------------------------
        PADS_PORTS_DS                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PADS_PORTS_DS_G                 12            /* Port G Drive Strength */
#define BITP_PADS_PORTS_DS_F                 10            /* Port F Drive Strength */
#define BITP_PADS_PORTS_DS_E                  8            /* Port E Drive Strength */
#define BITP_PADS_PORTS_DS_D                  6            /* Port D Drive Strength */
#define BITP_PADS_PORTS_DS_C                  4            /* Port C Drive Strength */
#define BITP_PADS_PORTS_DS_B                  2            /* Port B Drive Strength */
#define BITP_PADS_PORTS_DS_A                  0            /* Port A Drive Strength */
#define BITM_PADS_PORTS_DS_G                 0x00003000    /* Port G Drive Strength */
#define BITM_PADS_PORTS_DS_F                 0x00000C00    /* Port F Drive Strength */
#define BITM_PADS_PORTS_DS_E                 0x00000300    /* Port E Drive Strength */
#define BITM_PADS_PORTS_DS_D                 0x000000C0    /* Port D Drive Strength */
#define BITM_PADS_PORTS_DS_C                 0x00000030    /* Port C Drive Strength */
#define BITM_PADS_PORTS_DS_B                 0x0000000C    /* Port B Drive Strength */
#define BITM_PADS_PORTS_DS_A                 0x00000003    /* Port A Drive Strength */

/* ------------------------------------------------------------------------------------------------------------------------
        PADS_NONPORTS_DS                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PADS_NONPORTS_DS_ASYNC           2            /* ASYNC Drive Strength */
#define BITP_PADS_NONPORTS_DS_CLKOUT          0            /* Clockout Drive Strength */
#define BITM_PADS_NONPORTS_DS_ASYNC          0x0000000C    /* ASYNC Drive Strength */
#define BITM_PADS_NONPORTS_DS_CLKOUT         0x00000003    /* Clockout Drive Strength */

/* ------------------------------------------------------------------------------------------------------------------------
        PADS_PORTS_HYST                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PADS_PORTS_HYST_G                6            /* Port G Hysteresis */
#define BITP_PADS_PORTS_HYST_F                5            /* Port F Hysteresis */
#define BITP_PADS_PORTS_HYST_E                4            /* Port E Hysteresis */
#define BITP_PADS_PORTS_HYST_D                3            /* Port D Hysteresis */
#define BITP_PADS_PORTS_HYST_C                2            /* Port C Hysteresis */
#define BITP_PADS_PORTS_HYST_B                1            /* Port B Hysteresis */
#define BITP_PADS_PORTS_HYST_A                0            /* Port A Hysteresis */
#define BITM_PADS_PORTS_HYST_G               0x00000040    /* Port G Hysteresis */
#define BITM_PADS_PORTS_HYST_F               0x00000020    /* Port F Hysteresis */
#define BITM_PADS_PORTS_HYST_E               0x00000010    /* Port E Hysteresis */
#define BITM_PADS_PORTS_HYST_D               0x00000008    /* Port D Hysteresis */
#define BITM_PADS_PORTS_HYST_C               0x00000004    /* Port C Hysteresis */
#define BITM_PADS_PORTS_HYST_B               0x00000002    /* Port B Hysteresis */
#define BITM_PADS_PORTS_HYST_A               0x00000001    /* Port A Hysteresis */

/* =========================
        PINT Registers
   ========================= */

/* =========================
        PINT0
   ========================= */
#define REG_PINT0_MSK_SET               0xFFC04000         /* PINT0 Pint Mask Set Register */
#define REG_PINT0_MSK_CLR               0xFFC04004         /* PINT0 Pint Mask Clear Register */
#define REG_PINT0_REQ                   0xFFC04008         /* PINT0 Pint Request Register */
#define REG_PINT0_ASSIGN                0xFFC0400C         /* PINT0 Pint Assign Register */
#define REG_PINT0_EDGE_SET              0xFFC04010         /* PINT0 Pint Edge Set Register */
#define REG_PINT0_EDGE_CLR              0xFFC04014         /* PINT0 Pint Edge Clear Register */
#define REG_PINT0_INV_SET               0xFFC04018         /* PINT0 Pint Invert Set Register */
#define REG_PINT0_INV_CLR               0xFFC0401C         /* PINT0 Pint Invert Clear Register */
#define REG_PINT0_PINSTATE              0xFFC04020         /* PINT0 Pint Pinstate Register */
#define REG_PINT0_LATCH                 0xFFC04024         /* PINT0 Pint Latch Register */

/* =========================
        PINT1
   ========================= */
#define REG_PINT1_MSK_SET               0xFFC04100         /* PINT1 Pint Mask Set Register */
#define REG_PINT1_MSK_CLR               0xFFC04104         /* PINT1 Pint Mask Clear Register */
#define REG_PINT1_REQ                   0xFFC04108         /* PINT1 Pint Request Register */
#define REG_PINT1_ASSIGN                0xFFC0410C         /* PINT1 Pint Assign Register */
#define REG_PINT1_EDGE_SET              0xFFC04110         /* PINT1 Pint Edge Set Register */
#define REG_PINT1_EDGE_CLR              0xFFC04114         /* PINT1 Pint Edge Clear Register */
#define REG_PINT1_INV_SET               0xFFC04118         /* PINT1 Pint Invert Set Register */
#define REG_PINT1_INV_CLR               0xFFC0411C         /* PINT1 Pint Invert Clear Register */
#define REG_PINT1_PINSTATE              0xFFC04120         /* PINT1 Pint Pinstate Register */
#define REG_PINT1_LATCH                 0xFFC04124         /* PINT1 Pint Latch Register */

/* =========================
        PINT2
   ========================= */
#define REG_PINT2_MSK_SET               0xFFC04200         /* PINT2 Pint Mask Set Register */
#define REG_PINT2_MSK_CLR               0xFFC04204         /* PINT2 Pint Mask Clear Register */
#define REG_PINT2_REQ                   0xFFC04208         /* PINT2 Pint Request Register */
#define REG_PINT2_ASSIGN                0xFFC0420C         /* PINT2 Pint Assign Register */
#define REG_PINT2_EDGE_SET              0xFFC04210         /* PINT2 Pint Edge Set Register */
#define REG_PINT2_EDGE_CLR              0xFFC04214         /* PINT2 Pint Edge Clear Register */
#define REG_PINT2_INV_SET               0xFFC04218         /* PINT2 Pint Invert Set Register */
#define REG_PINT2_INV_CLR               0xFFC0421C         /* PINT2 Pint Invert Clear Register */
#define REG_PINT2_PINSTATE              0xFFC04220         /* PINT2 Pint Pinstate Register */
#define REG_PINT2_LATCH                 0xFFC04224         /* PINT2 Pint Latch Register */

/* =========================
        PINT3
   ========================= */
#define REG_PINT3_MSK_SET               0xFFC04300         /* PINT3 Pint Mask Set Register */
#define REG_PINT3_MSK_CLR               0xFFC04304         /* PINT3 Pint Mask Clear Register */
#define REG_PINT3_REQ                   0xFFC04308         /* PINT3 Pint Request Register */
#define REG_PINT3_ASSIGN                0xFFC0430C         /* PINT3 Pint Assign Register */
#define REG_PINT3_EDGE_SET              0xFFC04310         /* PINT3 Pint Edge Set Register */
#define REG_PINT3_EDGE_CLR              0xFFC04314         /* PINT3 Pint Edge Clear Register */
#define REG_PINT3_INV_SET               0xFFC04318         /* PINT3 Pint Invert Set Register */
#define REG_PINT3_INV_CLR               0xFFC0431C         /* PINT3 Pint Invert Clear Register */
#define REG_PINT3_PINSTATE              0xFFC04320         /* PINT3 Pint Pinstate Register */
#define REG_PINT3_LATCH                 0xFFC04324         /* PINT3 Pint Latch Register */

/* =========================
        PINT4
   ========================= */
#define REG_PINT4_MSK_SET               0xFFC04400         /* PINT4 Pint Mask Set Register */
#define REG_PINT4_MSK_CLR               0xFFC04404         /* PINT4 Pint Mask Clear Register */
#define REG_PINT4_REQ                   0xFFC04408         /* PINT4 Pint Request Register */
#define REG_PINT4_ASSIGN                0xFFC0440C         /* PINT4 Pint Assign Register */
#define REG_PINT4_EDGE_SET              0xFFC04410         /* PINT4 Pint Edge Set Register */
#define REG_PINT4_EDGE_CLR              0xFFC04414         /* PINT4 Pint Edge Clear Register */
#define REG_PINT4_INV_SET               0xFFC04418         /* PINT4 Pint Invert Set Register */
#define REG_PINT4_INV_CLR               0xFFC0441C         /* PINT4 Pint Invert Clear Register */
#define REG_PINT4_PINSTATE              0xFFC04420         /* PINT4 Pint Pinstate Register */
#define REG_PINT4_LATCH                 0xFFC04424         /* PINT4 Pint Latch Register */

/* =========================
        PINT5
   ========================= */
#define REG_PINT5_MSK_SET               0xFFC04500         /* PINT5 Pint Mask Set Register */
#define REG_PINT5_MSK_CLR               0xFFC04504         /* PINT5 Pint Mask Clear Register */
#define REG_PINT5_REQ                   0xFFC04508         /* PINT5 Pint Request Register */
#define REG_PINT5_ASSIGN                0xFFC0450C         /* PINT5 Pint Assign Register */
#define REG_PINT5_EDGE_SET              0xFFC04510         /* PINT5 Pint Edge Set Register */
#define REG_PINT5_EDGE_CLR              0xFFC04514         /* PINT5 Pint Edge Clear Register */
#define REG_PINT5_INV_SET               0xFFC04518         /* PINT5 Pint Invert Set Register */
#define REG_PINT5_INV_CLR               0xFFC0451C         /* PINT5 Pint Invert Clear Register */
#define REG_PINT5_PINSTATE              0xFFC04520         /* PINT5 Pint Pinstate Register */
#define REG_PINT5_LATCH                 0xFFC04524         /* PINT5 Pint Latch Register */

/* =========================
        PINT
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PINT_MSK_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_MSK_SET_PIQ31              31            /* Pin Interrupt 31 */
#define BITP_PINT_MSK_SET_PIQ30              30            /* Pin Interrupt 30 */
#define BITP_PINT_MSK_SET_PIQ29              29            /* Pin Interrupt 29 */
#define BITP_PINT_MSK_SET_PIQ28              28            /* Pin Interrupt 28 */
#define BITP_PINT_MSK_SET_PIQ27              27            /* Pin Interrupt 27 */
#define BITP_PINT_MSK_SET_PIQ26              26            /* Pin Interrupt 26 */
#define BITP_PINT_MSK_SET_PIQ25              25            /* Pin Interrupt 25 */
#define BITP_PINT_MSK_SET_PIQ24              24            /* Pin Interrupt 24 */
#define BITP_PINT_MSK_SET_PIQ23              23            /* Pin Interrupt 23 */
#define BITP_PINT_MSK_SET_PIQ22              22            /* Pin Interrupt 22 */
#define BITP_PINT_MSK_SET_PIQ21              21            /* Pin Interrupt 21 */
#define BITP_PINT_MSK_SET_PIQ20              20            /* Pin Interrupt 20 */
#define BITP_PINT_MSK_SET_PIQ19              19            /* Pin Interrupt 19 */
#define BITP_PINT_MSK_SET_PIQ18              18            /* Pin Interrupt 18 */
#define BITP_PINT_MSK_SET_PIQ17              17            /* Pin Interrupt 17 */
#define BITP_PINT_MSK_SET_PIQ16              16            /* Pin Interrupt 16 */
#define BITP_PINT_MSK_SET_PIQ15              15            /* Pin Interrupt 15 */
#define BITP_PINT_MSK_SET_PIQ14              14            /* Pin Interrupt 14 */
#define BITP_PINT_MSK_SET_PIQ13              13            /* Pin Interrupt 13 */
#define BITP_PINT_MSK_SET_PIQ12              12            /* Pin Interrupt 12 */
#define BITP_PINT_MSK_SET_PIQ11              11            /* Pin Interrupt 11 */
#define BITP_PINT_MSK_SET_PIQ10              10            /* Pin Interrupt 10 */
#define BITP_PINT_MSK_SET_PIQ9                9            /* Pin Interrupt 9 */
#define BITP_PINT_MSK_SET_PIQ8                8            /* Pin Interrupt 8 */
#define BITP_PINT_MSK_SET_PIQ7                7            /* Pin Interrupt 7 */
#define BITP_PINT_MSK_SET_PIQ6                6            /* Pin Interrupt 6 */
#define BITP_PINT_MSK_SET_PIQ5                5            /* Pin Interrupt 5 */
#define BITP_PINT_MSK_SET_PIQ4                4            /* Pin Interrupt 4 */
#define BITP_PINT_MSK_SET_PIQ3                3            /* Pin Interrupt 3 */
#define BITP_PINT_MSK_SET_PIQ2                2            /* Pin Interrupt 2 */
#define BITP_PINT_MSK_SET_PIQ1                1            /* Pin Interrupt 1 */
#define BITP_PINT_MSK_SET_PIQ0                0            /* Pin Interrupt 0 */
#define BITM_PINT_MSK_SET_PIQ31              0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_MSK_SET_PIQ30              0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_MSK_SET_PIQ29              0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_MSK_SET_PIQ28              0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_MSK_SET_PIQ27              0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_MSK_SET_PIQ26              0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_MSK_SET_PIQ25              0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_MSK_SET_PIQ24              0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_MSK_SET_PIQ23              0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_MSK_SET_PIQ22              0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_MSK_SET_PIQ21              0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_MSK_SET_PIQ20              0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_MSK_SET_PIQ19              0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_MSK_SET_PIQ18              0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_MSK_SET_PIQ17              0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_MSK_SET_PIQ16              0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_MSK_SET_PIQ15              0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_MSK_SET_PIQ14              0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_MSK_SET_PIQ13              0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_MSK_SET_PIQ12              0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_MSK_SET_PIQ11              0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_MSK_SET_PIQ10              0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_MSK_SET_PIQ9               0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_MSK_SET_PIQ8               0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_MSK_SET_PIQ7               0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_MSK_SET_PIQ6               0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_MSK_SET_PIQ5               0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_MSK_SET_PIQ4               0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_MSK_SET_PIQ3               0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_MSK_SET_PIQ2               0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_MSK_SET_PIQ1               0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_MSK_SET_PIQ0               0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_MSK_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_MSK_CLR_PIQ31              31            /* Pin Interrupt 31 */
#define BITP_PINT_MSK_CLR_PIQ30              30            /* Pin Interrupt 30 */
#define BITP_PINT_MSK_CLR_PIQ29              29            /* Pin Interrupt 29 */
#define BITP_PINT_MSK_CLR_PIQ28              28            /* Pin Interrupt 28 */
#define BITP_PINT_MSK_CLR_PIQ27              27            /* Pin Interrupt 27 */
#define BITP_PINT_MSK_CLR_PIQ26              26            /* Pin Interrupt 26 */
#define BITP_PINT_MSK_CLR_PIQ25              25            /* Pin Interrupt 25 */
#define BITP_PINT_MSK_CLR_PIQ24              24            /* Pin Interrupt 24 */
#define BITP_PINT_MSK_CLR_PIQ23              23            /* Pin Interrupt 23 */
#define BITP_PINT_MSK_CLR_PIQ22              22            /* Pin Interrupt 22 */
#define BITP_PINT_MSK_CLR_PIQ21              21            /* Pin Interrupt 21 */
#define BITP_PINT_MSK_CLR_PIQ20              20            /* Pin Interrupt 20 */
#define BITP_PINT_MSK_CLR_PIQ19              19            /* Pin Interrupt 19 */
#define BITP_PINT_MSK_CLR_PIQ18              18            /* Pin Interrupt 18 */
#define BITP_PINT_MSK_CLR_PIQ17              17            /* Pin Interrupt 17 */
#define BITP_PINT_MSK_CLR_PIQ16              16            /* Pin Interrupt 16 */
#define BITP_PINT_MSK_CLR_PIQ15              15            /* Pin Interrupt 15 */
#define BITP_PINT_MSK_CLR_PIQ14              14            /* Pin Interrupt 14 */
#define BITP_PINT_MSK_CLR_PIQ13              13            /* Pin Interrupt 13 */
#define BITP_PINT_MSK_CLR_PIQ12              12            /* Pin Interrupt 12 */
#define BITP_PINT_MSK_CLR_PIQ11              11            /* Pin Interrupt 11 */
#define BITP_PINT_MSK_CLR_PIQ10              10            /* Pin Interrupt 10 */
#define BITP_PINT_MSK_CLR_PIQ9                9            /* Pin Interrupt 9 */
#define BITP_PINT_MSK_CLR_PIQ8                8            /* Pin Interrupt 8 */
#define BITP_PINT_MSK_CLR_PIQ7                7            /* Pin Interrupt 7 */
#define BITP_PINT_MSK_CLR_PIQ6                6            /* Pin Interrupt 6 */
#define BITP_PINT_MSK_CLR_PIQ5                5            /* Pin Interrupt 5 */
#define BITP_PINT_MSK_CLR_PIQ4                4            /* Pin Interrupt 4 */
#define BITP_PINT_MSK_CLR_PIQ3                3            /* Pin Interrupt 3 */
#define BITP_PINT_MSK_CLR_PIQ2                2            /* Pin Interrupt 2 */
#define BITP_PINT_MSK_CLR_PIQ1                1            /* Pin Interrupt 1 */
#define BITP_PINT_MSK_CLR_PIQ0                0            /* Pin Interrupt 0 */
#define BITM_PINT_MSK_CLR_PIQ31              0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_MSK_CLR_PIQ30              0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_MSK_CLR_PIQ29              0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_MSK_CLR_PIQ28              0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_MSK_CLR_PIQ27              0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_MSK_CLR_PIQ26              0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_MSK_CLR_PIQ25              0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_MSK_CLR_PIQ24              0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_MSK_CLR_PIQ23              0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_MSK_CLR_PIQ22              0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_MSK_CLR_PIQ21              0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_MSK_CLR_PIQ20              0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_MSK_CLR_PIQ19              0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_MSK_CLR_PIQ18              0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_MSK_CLR_PIQ17              0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_MSK_CLR_PIQ16              0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_MSK_CLR_PIQ15              0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_MSK_CLR_PIQ14              0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_MSK_CLR_PIQ13              0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_MSK_CLR_PIQ12              0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_MSK_CLR_PIQ11              0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_MSK_CLR_PIQ10              0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_MSK_CLR_PIQ9               0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_MSK_CLR_PIQ8               0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_MSK_CLR_PIQ7               0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_MSK_CLR_PIQ6               0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_MSK_CLR_PIQ5               0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_MSK_CLR_PIQ4               0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_MSK_CLR_PIQ3               0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_MSK_CLR_PIQ2               0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_MSK_CLR_PIQ1               0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_MSK_CLR_PIQ0               0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_REQ                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_REQ_PIQ31                  31            /* Pin Interrupt 31 */
#define BITP_PINT_REQ_PIQ30                  30            /* Pin Interrupt 30 */
#define BITP_PINT_REQ_PIQ29                  29            /* Pin Interrupt 29 */
#define BITP_PINT_REQ_PIQ28                  28            /* Pin Interrupt 28 */
#define BITP_PINT_REQ_PIQ27                  27            /* Pin Interrupt 27 */
#define BITP_PINT_REQ_PIQ26                  26            /* Pin Interrupt 26 */
#define BITP_PINT_REQ_PIQ25                  25            /* Pin Interrupt 25 */
#define BITP_PINT_REQ_PIQ24                  24            /* Pin Interrupt 24 */
#define BITP_PINT_REQ_PIQ23                  23            /* Pin Interrupt 23 */
#define BITP_PINT_REQ_PIQ22                  22            /* Pin Interrupt 22 */
#define BITP_PINT_REQ_PIQ21                  21            /* Pin Interrupt 21 */
#define BITP_PINT_REQ_PIQ20                  20            /* Pin Interrupt 20 */
#define BITP_PINT_REQ_PIQ19                  19            /* Pin Interrupt 19 */
#define BITP_PINT_REQ_PIQ18                  18            /* Pin Interrupt 18 */
#define BITP_PINT_REQ_PIQ17                  17            /* Pin Interrupt 17 */
#define BITP_PINT_REQ_PIQ16                  16            /* Pin Interrupt 16 */
#define BITP_PINT_REQ_PIQ15                  15            /* Pin Interrupt 15 */
#define BITP_PINT_REQ_PIQ14                  14            /* Pin Interrupt 14 */
#define BITP_PINT_REQ_PIQ13                  13            /* Pin Interrupt 13 */
#define BITP_PINT_REQ_PIQ12                  12            /* Pin Interrupt 12 */
#define BITP_PINT_REQ_PIQ11                  11            /* Pin Interrupt 11 */
#define BITP_PINT_REQ_PIQ10                  10            /* Pin Interrupt 10 */
#define BITP_PINT_REQ_PIQ9                    9            /* Pin Interrupt 9 */
#define BITP_PINT_REQ_PIQ8                    8            /* Pin Interrupt 8 */
#define BITP_PINT_REQ_PIQ7                    7            /* Pin Interrupt 7 */
#define BITP_PINT_REQ_PIQ6                    6            /* Pin Interrupt 6 */
#define BITP_PINT_REQ_PIQ5                    5            /* Pin Interrupt 5 */
#define BITP_PINT_REQ_PIQ4                    4            /* Pin Interrupt 4 */
#define BITP_PINT_REQ_PIQ3                    3            /* Pin Interrupt 3 */
#define BITP_PINT_REQ_PIQ2                    2            /* Pin Interrupt 2 */
#define BITP_PINT_REQ_PIQ1                    1            /* Pin Interrupt 1 */
#define BITP_PINT_REQ_PIQ0                    0            /* Pin Interrupt 0 */
#define BITM_PINT_REQ_PIQ31                  0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_REQ_PIQ30                  0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_REQ_PIQ29                  0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_REQ_PIQ28                  0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_REQ_PIQ27                  0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_REQ_PIQ26                  0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_REQ_PIQ25                  0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_REQ_PIQ24                  0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_REQ_PIQ23                  0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_REQ_PIQ22                  0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_REQ_PIQ21                  0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_REQ_PIQ20                  0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_REQ_PIQ19                  0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_REQ_PIQ18                  0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_REQ_PIQ17                  0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_REQ_PIQ16                  0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_REQ_PIQ15                  0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_REQ_PIQ14                  0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_REQ_PIQ13                  0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_REQ_PIQ12                  0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_REQ_PIQ11                  0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_REQ_PIQ10                  0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_REQ_PIQ9                   0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_REQ_PIQ8                   0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_REQ_PIQ7                   0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_REQ_PIQ6                   0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_REQ_PIQ5                   0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_REQ_PIQ4                   0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_REQ_PIQ3                   0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_REQ_PIQ2                   0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_REQ_PIQ1                   0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_REQ_PIQ0                   0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_ASSIGN                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_ASSIGN_B3MAP               24            /* byte 3 mapping */
#define BITP_PINT_ASSIGN_B2MAP               16            /* byte 2 mapping */
#define BITP_PINT_ASSIGN_B1MAP                8            /* byte 1 mapping */
#define BITP_PINT_ASSIGN_B0MAP                0            /* byte 0 mapping */
#define BITM_PINT_ASSIGN_B3MAP               0xFF000000    /* byte 3 mapping */
#define BITM_PINT_ASSIGN_B2MAP               0x00FF0000    /* byte 2 mapping */
#define BITM_PINT_ASSIGN_B1MAP               0x0000FF00    /* byte 1 mapping */
#define BITM_PINT_ASSIGN_B0MAP               0x000000FF    /* byte 0 mapping */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_EDGE_SET                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_EDGE_SET_PIQ31             31            /* Pin Interrupt 31 */
#define BITP_PINT_EDGE_SET_PIQ30             30            /* Pin Interrupt 30 */
#define BITP_PINT_EDGE_SET_PIQ29             29            /* Pin Interrupt 29 */
#define BITP_PINT_EDGE_SET_PIQ28             28            /* Pin Interrupt 28 */
#define BITP_PINT_EDGE_SET_PIQ27             27            /* Pin Interrupt 27 */
#define BITP_PINT_EDGE_SET_PIQ26             26            /* Pin Interrupt 26 */
#define BITP_PINT_EDGE_SET_PIQ25             25            /* Pin Interrupt 25 */
#define BITP_PINT_EDGE_SET_PIQ24             24            /* Pin Interrupt 24 */
#define BITP_PINT_EDGE_SET_PIQ23             23            /* Pin Interrupt 23 */
#define BITP_PINT_EDGE_SET_PIQ22             22            /* Pin Interrupt 22 */
#define BITP_PINT_EDGE_SET_PIQ21             21            /* Pin Interrupt 21 */
#define BITP_PINT_EDGE_SET_PIQ20             20            /* Pin Interrupt 20 */
#define BITP_PINT_EDGE_SET_PIQ19             19            /* Pin Interrupt 19 */
#define BITP_PINT_EDGE_SET_PIQ18             18            /* Pin Interrupt 18 */
#define BITP_PINT_EDGE_SET_PIQ17             17            /* Pin Interrupt 17 */
#define BITP_PINT_EDGE_SET_PIQ16             16            /* Pin Interrupt 16 */
#define BITP_PINT_EDGE_SET_PIQ15             15            /* Pin Interrupt 15 */
#define BITP_PINT_EDGE_SET_PIQ14             14            /* Pin Interrupt 14 */
#define BITP_PINT_EDGE_SET_PIQ13             13            /* Pin Interrupt 13 */
#define BITP_PINT_EDGE_SET_PIQ12             12            /* Pin Interrupt 12 */
#define BITP_PINT_EDGE_SET_PIQ11             11            /* Pin Interrupt 11 */
#define BITP_PINT_EDGE_SET_PIQ10             10            /* Pin Interrupt 10 */
#define BITP_PINT_EDGE_SET_PIQ9               9            /* Pin Interrupt 9 */
#define BITP_PINT_EDGE_SET_PIQ8               8            /* Pin Interrupt 8 */
#define BITP_PINT_EDGE_SET_PIQ7               7            /* Pin Interrupt 7 */
#define BITP_PINT_EDGE_SET_PIQ6               6            /* Pin Interrupt 6 */
#define BITP_PINT_EDGE_SET_PIQ5               5            /* Pin Interrupt 5 */
#define BITP_PINT_EDGE_SET_PIQ4               4            /* Pin Interrupt 4 */
#define BITP_PINT_EDGE_SET_PIQ3               3            /* Pin Interrupt 3 */
#define BITP_PINT_EDGE_SET_PIQ2               2            /* Pin Interrupt 2 */
#define BITP_PINT_EDGE_SET_PIQ1               1            /* Pin Interrupt 1 */
#define BITP_PINT_EDGE_SET_PIQ0               0            /* Pin Interrupt 0 */
#define BITM_PINT_EDGE_SET_PIQ31             0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_EDGE_SET_PIQ30             0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_EDGE_SET_PIQ29             0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_EDGE_SET_PIQ28             0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_EDGE_SET_PIQ27             0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_EDGE_SET_PIQ26             0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_EDGE_SET_PIQ25             0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_EDGE_SET_PIQ24             0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_EDGE_SET_PIQ23             0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_EDGE_SET_PIQ22             0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_EDGE_SET_PIQ21             0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_EDGE_SET_PIQ20             0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_EDGE_SET_PIQ19             0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_EDGE_SET_PIQ18             0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_EDGE_SET_PIQ17             0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_EDGE_SET_PIQ16             0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_EDGE_SET_PIQ15             0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_EDGE_SET_PIQ14             0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_EDGE_SET_PIQ13             0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_EDGE_SET_PIQ12             0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_EDGE_SET_PIQ11             0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_EDGE_SET_PIQ10             0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_EDGE_SET_PIQ9              0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_EDGE_SET_PIQ8              0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_EDGE_SET_PIQ7              0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_EDGE_SET_PIQ6              0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_EDGE_SET_PIQ5              0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_EDGE_SET_PIQ4              0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_EDGE_SET_PIQ3              0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_EDGE_SET_PIQ2              0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_EDGE_SET_PIQ1              0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_EDGE_SET_PIQ0              0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_EDGE_CLR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_EDGE_CLR_PIQ31             31            /* Pin Interrupt 31 */
#define BITP_PINT_EDGE_CLR_PIQ30             30            /* Pin Interrupt 30 */
#define BITP_PINT_EDGE_CLR_PIQ29             29            /* Pin Interrupt 29 */
#define BITP_PINT_EDGE_CLR_PIQ28             28            /* Pin Interrupt 28 */
#define BITP_PINT_EDGE_CLR_PIQ27             27            /* Pin Interrupt 27 */
#define BITP_PINT_EDGE_CLR_PIQ26             26            /* Pin Interrupt 26 */
#define BITP_PINT_EDGE_CLR_PIQ25             25            /* Pin Interrupt 25 */
#define BITP_PINT_EDGE_CLR_PIQ24             24            /* Pin Interrupt 24 */
#define BITP_PINT_EDGE_CLR_PIQ23             23            /* Pin Interrupt 23 */
#define BITP_PINT_EDGE_CLR_PIQ22             22            /* Pin Interrupt 22 */
#define BITP_PINT_EDGE_CLR_PIQ21             21            /* Pin Interrupt 21 */
#define BITP_PINT_EDGE_CLR_PIQ20             20            /* Pin Interrupt 20 */
#define BITP_PINT_EDGE_CLR_PIQ19             19            /* Pin Interrupt 19 */
#define BITP_PINT_EDGE_CLR_PIQ18             18            /* Pin Interrupt 18 */
#define BITP_PINT_EDGE_CLR_PIQ17             17            /* Pin Interrupt 17 */
#define BITP_PINT_EDGE_CLR_PIQ16             16            /* Pin Interrupt 16 */
#define BITP_PINT_EDGE_CLR_PIQ15             15            /* Pin Interrupt 15 */
#define BITP_PINT_EDGE_CLR_PIQ14             14            /* Pin Interrupt 14 */
#define BITP_PINT_EDGE_CLR_PIQ13             13            /* Pin Interrupt 13 */
#define BITP_PINT_EDGE_CLR_PIQ12             12            /* Pin Interrupt 12 */
#define BITP_PINT_EDGE_CLR_PIQ11             11            /* Pin Interrupt 11 */
#define BITP_PINT_EDGE_CLR_PIQ10             10            /* Pin Interrupt 10 */
#define BITP_PINT_EDGE_CLR_PIQ9               9            /* Pin Interrupt 9 */
#define BITP_PINT_EDGE_CLR_PIQ8               8            /* Pin Interrupt 8 */
#define BITP_PINT_EDGE_CLR_PIQ7               7            /* Pin Interrupt 7 */
#define BITP_PINT_EDGE_CLR_PIQ6               6            /* Pin Interrupt 6 */
#define BITP_PINT_EDGE_CLR_PIQ5               5            /* Pin Interrupt 5 */
#define BITP_PINT_EDGE_CLR_PIQ4               4            /* Pin Interrupt 4 */
#define BITP_PINT_EDGE_CLR_PIQ3               3            /* Pin Interrupt 3 */
#define BITP_PINT_EDGE_CLR_PIQ2               2            /* Pin Interrupt 2 */
#define BITP_PINT_EDGE_CLR_PIQ1               1            /* Pin Interrupt 1 */
#define BITP_PINT_EDGE_CLR_PIQ0               0            /* Pin Interrupt 0 */
#define BITM_PINT_EDGE_CLR_PIQ31             0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_EDGE_CLR_PIQ30             0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_EDGE_CLR_PIQ29             0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_EDGE_CLR_PIQ28             0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_EDGE_CLR_PIQ27             0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_EDGE_CLR_PIQ26             0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_EDGE_CLR_PIQ25             0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_EDGE_CLR_PIQ24             0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_EDGE_CLR_PIQ23             0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_EDGE_CLR_PIQ22             0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_EDGE_CLR_PIQ21             0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_EDGE_CLR_PIQ20             0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_EDGE_CLR_PIQ19             0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_EDGE_CLR_PIQ18             0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_EDGE_CLR_PIQ17             0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_EDGE_CLR_PIQ16             0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_EDGE_CLR_PIQ15             0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_EDGE_CLR_PIQ14             0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_EDGE_CLR_PIQ13             0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_EDGE_CLR_PIQ12             0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_EDGE_CLR_PIQ11             0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_EDGE_CLR_PIQ10             0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_EDGE_CLR_PIQ9              0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_EDGE_CLR_PIQ8              0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_EDGE_CLR_PIQ7              0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_EDGE_CLR_PIQ6              0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_EDGE_CLR_PIQ5              0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_EDGE_CLR_PIQ4              0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_EDGE_CLR_PIQ3              0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_EDGE_CLR_PIQ2              0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_EDGE_CLR_PIQ1              0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_EDGE_CLR_PIQ0              0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_INV_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_INV_SET_PIQ31              31            /* Pin Interrupt 31 */
#define BITP_PINT_INV_SET_PIQ30              30            /* Pin Interrupt 30 */
#define BITP_PINT_INV_SET_PIQ29              29            /* Pin Interrupt 29 */
#define BITP_PINT_INV_SET_PIQ28              28            /* Pin Interrupt 28 */
#define BITP_PINT_INV_SET_PIQ27              27            /* Pin Interrupt 27 */
#define BITP_PINT_INV_SET_PIQ26              26            /* Pin Interrupt 26 */
#define BITP_PINT_INV_SET_PIQ25              25            /* Pin Interrupt 25 */
#define BITP_PINT_INV_SET_PIQ24              24            /* Pin Interrupt 24 */
#define BITP_PINT_INV_SET_PIQ23              23            /* Pin Interrupt 23 */
#define BITP_PINT_INV_SET_PIQ22              22            /* Pin Interrupt 22 */
#define BITP_PINT_INV_SET_PIQ21              21            /* Pin Interrupt 21 */
#define BITP_PINT_INV_SET_PIQ20              20            /* Pin Interrupt 20 */
#define BITP_PINT_INV_SET_PIQ19              19            /* Pin Interrupt 19 */
#define BITP_PINT_INV_SET_PIQ18              18            /* Pin Interrupt 18 */
#define BITP_PINT_INV_SET_PIQ17              17            /* Pin Interrupt 17 */
#define BITP_PINT_INV_SET_PIQ16              16            /* Pin Interrupt 16 */
#define BITP_PINT_INV_SET_PIQ15              15            /* Pin Interrupt 15 */
#define BITP_PINT_INV_SET_PIQ14              14            /* Pin Interrupt 14 */
#define BITP_PINT_INV_SET_PIQ13              13            /* Pin Interrupt 13 */
#define BITP_PINT_INV_SET_PIQ12              12            /* Pin Interrupt 12 */
#define BITP_PINT_INV_SET_PIQ11              11            /* Pin Interrupt 11 */
#define BITP_PINT_INV_SET_PIQ10              10            /* Pin Interrupt 10 */
#define BITP_PINT_INV_SET_PIQ9                9            /* Pin Interrupt 9 */
#define BITP_PINT_INV_SET_PIQ8                8            /* Pin Interrupt 8 */
#define BITP_PINT_INV_SET_PIQ7                7            /* Pin Interrupt 7 */
#define BITP_PINT_INV_SET_PIQ6                6            /* Pin Interrupt 6 */
#define BITP_PINT_INV_SET_PIQ5                5            /* Pin Interrupt 5 */
#define BITP_PINT_INV_SET_PIQ4                4            /* Pin Interrupt 4 */
#define BITP_PINT_INV_SET_PIQ3                3            /* Pin Interrupt 3 */
#define BITP_PINT_INV_SET_PIQ2                2            /* Pin Interrupt 2 */
#define BITP_PINT_INV_SET_PIQ1                1            /* Pin Interrupt 1 */
#define BITP_PINT_INV_SET_PIQ0                0            /* Pin Interrupt 0 */
#define BITM_PINT_INV_SET_PIQ31              0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_INV_SET_PIQ30              0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_INV_SET_PIQ29              0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_INV_SET_PIQ28              0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_INV_SET_PIQ27              0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_INV_SET_PIQ26              0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_INV_SET_PIQ25              0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_INV_SET_PIQ24              0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_INV_SET_PIQ23              0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_INV_SET_PIQ22              0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_INV_SET_PIQ21              0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_INV_SET_PIQ20              0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_INV_SET_PIQ19              0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_INV_SET_PIQ18              0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_INV_SET_PIQ17              0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_INV_SET_PIQ16              0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_INV_SET_PIQ15              0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_INV_SET_PIQ14              0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_INV_SET_PIQ13              0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_INV_SET_PIQ12              0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_INV_SET_PIQ11              0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_INV_SET_PIQ10              0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_INV_SET_PIQ9               0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_INV_SET_PIQ8               0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_INV_SET_PIQ7               0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_INV_SET_PIQ6               0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_INV_SET_PIQ5               0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_INV_SET_PIQ4               0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_INV_SET_PIQ3               0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_INV_SET_PIQ2               0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_INV_SET_PIQ1               0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_INV_SET_PIQ0               0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_INV_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_INV_CLR_PIQ31              31            /* Pin Interrupt 31 */
#define BITP_PINT_INV_CLR_PIQ30              30            /* Pin Interrupt 30 */
#define BITP_PINT_INV_CLR_PIQ29              29            /* Pin Interrupt 29 */
#define BITP_PINT_INV_CLR_PIQ28              28            /* Pin Interrupt 28 */
#define BITP_PINT_INV_CLR_PIQ27              27            /* Pin Interrupt 27 */
#define BITP_PINT_INV_CLR_PIQ26              26            /* Pin Interrupt 26 */
#define BITP_PINT_INV_CLR_PIQ25              25            /* Pin Interrupt 25 */
#define BITP_PINT_INV_CLR_PIQ24              24            /* Pin Interrupt 24 */
#define BITP_PINT_INV_CLR_PIQ23              23            /* Pin Interrupt 23 */
#define BITP_PINT_INV_CLR_PIQ22              22            /* Pin Interrupt 22 */
#define BITP_PINT_INV_CLR_PIQ21              21            /* Pin Interrupt 21 */
#define BITP_PINT_INV_CLR_PIQ20              20            /* Pin Interrupt 20 */
#define BITP_PINT_INV_CLR_PIQ19              19            /* Pin Interrupt 19 */
#define BITP_PINT_INV_CLR_PIQ18              18            /* Pin Interrupt 18 */
#define BITP_PINT_INV_CLR_PIQ17              17            /* Pin Interrupt 17 */
#define BITP_PINT_INV_CLR_PIQ16              16            /* Pin Interrupt 16 */
#define BITP_PINT_INV_CLR_PIQ15              15            /* Pin Interrupt 15 */
#define BITP_PINT_INV_CLR_PIQ14              14            /* Pin Interrupt 14 */
#define BITP_PINT_INV_CLR_PIQ13              13            /* Pin Interrupt 13 */
#define BITP_PINT_INV_CLR_PIQ12              12            /* Pin Interrupt 12 */
#define BITP_PINT_INV_CLR_PIQ11              11            /* Pin Interrupt 11 */
#define BITP_PINT_INV_CLR_PIQ10              10            /* Pin Interrupt 10 */
#define BITP_PINT_INV_CLR_PIQ9                9            /* Pin Interrupt 9 */
#define BITP_PINT_INV_CLR_PIQ8                8            /* Pin Interrupt 8 */
#define BITP_PINT_INV_CLR_PIQ7                7            /* Pin Interrupt 7 */
#define BITP_PINT_INV_CLR_PIQ6                6            /* Pin Interrupt 6 */
#define BITP_PINT_INV_CLR_PIQ5                5            /* Pin Interrupt 5 */
#define BITP_PINT_INV_CLR_PIQ4                4            /* Pin Interrupt 4 */
#define BITP_PINT_INV_CLR_PIQ3                3            /* Pin Interrupt 3 */
#define BITP_PINT_INV_CLR_PIQ2                2            /* Pin Interrupt 2 */
#define BITP_PINT_INV_CLR_PIQ1                1            /* Pin Interrupt 1 */
#define BITP_PINT_INV_CLR_PIQ0                0            /* Pin Interrupt 0 */
#define BITM_PINT_INV_CLR_PIQ31              0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_INV_CLR_PIQ30              0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_INV_CLR_PIQ29              0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_INV_CLR_PIQ28              0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_INV_CLR_PIQ27              0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_INV_CLR_PIQ26              0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_INV_CLR_PIQ25              0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_INV_CLR_PIQ24              0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_INV_CLR_PIQ23              0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_INV_CLR_PIQ22              0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_INV_CLR_PIQ21              0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_INV_CLR_PIQ20              0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_INV_CLR_PIQ19              0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_INV_CLR_PIQ18              0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_INV_CLR_PIQ17              0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_INV_CLR_PIQ16              0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_INV_CLR_PIQ15              0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_INV_CLR_PIQ14              0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_INV_CLR_PIQ13              0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_INV_CLR_PIQ12              0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_INV_CLR_PIQ11              0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_INV_CLR_PIQ10              0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_INV_CLR_PIQ9               0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_INV_CLR_PIQ8               0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_INV_CLR_PIQ7               0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_INV_CLR_PIQ6               0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_INV_CLR_PIQ5               0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_INV_CLR_PIQ4               0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_INV_CLR_PIQ3               0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_INV_CLR_PIQ2               0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_INV_CLR_PIQ1               0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_INV_CLR_PIQ0               0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_PINSTATE                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_PINSTATE_PIQ31             31            /* Pin Interrupt 31 */
#define BITP_PINT_PINSTATE_PIQ30             30            /* Pin Interrupt 30 */
#define BITP_PINT_PINSTATE_PIQ29             29            /* Pin Interrupt 29 */
#define BITP_PINT_PINSTATE_PIQ28             28            /* Pin Interrupt 28 */
#define BITP_PINT_PINSTATE_PIQ27             27            /* Pin Interrupt 27 */
#define BITP_PINT_PINSTATE_PIQ26             26            /* Pin Interrupt 26 */
#define BITP_PINT_PINSTATE_PIQ25             25            /* Pin Interrupt 25 */
#define BITP_PINT_PINSTATE_PIQ24             24            /* Pin Interrupt 24 */
#define BITP_PINT_PINSTATE_PIQ23             23            /* Pin Interrupt 23 */
#define BITP_PINT_PINSTATE_PIQ22             22            /* Pin Interrupt 22 */
#define BITP_PINT_PINSTATE_PIQ21             21            /* Pin Interrupt 21 */
#define BITP_PINT_PINSTATE_PIQ20             20            /* Pin Interrupt 20 */
#define BITP_PINT_PINSTATE_PIQ19             19            /* Pin Interrupt 19 */
#define BITP_PINT_PINSTATE_PIQ18             18            /* Pin Interrupt 18 */
#define BITP_PINT_PINSTATE_PIQ17             17            /* Pin Interrupt 17 */
#define BITP_PINT_PINSTATE_PIQ16             16            /* Pin Interrupt 16 */
#define BITP_PINT_PINSTATE_PIQ15             15            /* Pin Interrupt 15 */
#define BITP_PINT_PINSTATE_PIQ14             14            /* Pin Interrupt 14 */
#define BITP_PINT_PINSTATE_PIQ13             13            /* Pin Interrupt 13 */
#define BITP_PINT_PINSTATE_PIQ12             12            /* Pin Interrupt 12 */
#define BITP_PINT_PINSTATE_PIQ11             11            /* Pin Interrupt 11 */
#define BITP_PINT_PINSTATE_PIQ10             10            /* Pin Interrupt 10 */
#define BITP_PINT_PINSTATE_PIQ9               9            /* Pin Interrupt 9 */
#define BITP_PINT_PINSTATE_PIQ8               8            /* Pin Interrupt 8 */
#define BITP_PINT_PINSTATE_PIQ7               7            /* Pin Interrupt 7 */
#define BITP_PINT_PINSTATE_PIQ6               6            /* Pin Interrupt 6 */
#define BITP_PINT_PINSTATE_PIQ5               5            /* Pin Interrupt 5 */
#define BITP_PINT_PINSTATE_PIQ4               4            /* Pin Interrupt 4 */
#define BITP_PINT_PINSTATE_PIQ3               3            /* Pin Interrupt 3 */
#define BITP_PINT_PINSTATE_PIQ2               2            /* Pin Interrupt 2 */
#define BITP_PINT_PINSTATE_PIQ1               1            /* Pin Interrupt 1 */
#define BITP_PINT_PINSTATE_PIQ0               0            /* Pin Interrupt 0 */
#define BITM_PINT_PINSTATE_PIQ31             0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_PINSTATE_PIQ30             0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_PINSTATE_PIQ29             0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_PINSTATE_PIQ28             0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_PINSTATE_PIQ27             0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_PINSTATE_PIQ26             0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_PINSTATE_PIQ25             0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_PINSTATE_PIQ24             0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_PINSTATE_PIQ23             0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_PINSTATE_PIQ22             0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_PINSTATE_PIQ21             0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_PINSTATE_PIQ20             0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_PINSTATE_PIQ19             0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_PINSTATE_PIQ18             0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_PINSTATE_PIQ17             0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_PINSTATE_PIQ16             0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_PINSTATE_PIQ15             0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_PINSTATE_PIQ14             0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_PINSTATE_PIQ13             0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_PINSTATE_PIQ12             0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_PINSTATE_PIQ11             0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_PINSTATE_PIQ10             0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_PINSTATE_PIQ9              0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_PINSTATE_PIQ8              0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_PINSTATE_PIQ7              0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_PINSTATE_PIQ6              0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_PINSTATE_PIQ5              0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_PINSTATE_PIQ4              0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_PINSTATE_PIQ3              0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_PINSTATE_PIQ2              0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_PINSTATE_PIQ1              0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_PINSTATE_PIQ0              0x00000001    /* Pin Interrupt 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PINT_LATCH                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PINT_LATCH_PIQ31                31            /* Pin Interrupt 31 */
#define BITP_PINT_LATCH_PIQ30                30            /* Pin Interrupt 30 */
#define BITP_PINT_LATCH_PIQ29                29            /* Pin Interrupt 29 */
#define BITP_PINT_LATCH_PIQ28                28            /* Pin Interrupt 28 */
#define BITP_PINT_LATCH_PIQ27                27            /* Pin Interrupt 27 */
#define BITP_PINT_LATCH_PIQ26                26            /* Pin Interrupt 26 */
#define BITP_PINT_LATCH_PIQ25                25            /* Pin Interrupt 25 */
#define BITP_PINT_LATCH_PIQ24                24            /* Pin Interrupt 24 */
#define BITP_PINT_LATCH_PIQ23                23            /* Pin Interrupt 23 */
#define BITP_PINT_LATCH_PIQ22                22            /* Pin Interrupt 22 */
#define BITP_PINT_LATCH_PIQ21                21            /* Pin Interrupt 21 */
#define BITP_PINT_LATCH_PIQ20                20            /* Pin Interrupt 20 */
#define BITP_PINT_LATCH_PIQ19                19            /* Pin Interrupt 19 */
#define BITP_PINT_LATCH_PIQ18                18            /* Pin Interrupt 18 */
#define BITP_PINT_LATCH_PIQ17                17            /* Pin Interrupt 17 */
#define BITP_PINT_LATCH_PIQ16                16            /* Pin Interrupt 16 */
#define BITP_PINT_LATCH_PIQ15                15            /* Pin Interrupt 15 */
#define BITP_PINT_LATCH_PIQ14                14            /* Pin Interrupt 14 */
#define BITP_PINT_LATCH_PIQ13                13            /* Pin Interrupt 13 */
#define BITP_PINT_LATCH_PIQ12                12            /* Pin Interrupt 12 */
#define BITP_PINT_LATCH_PIQ11                11            /* Pin Interrupt 11 */
#define BITP_PINT_LATCH_PIQ10                10            /* Pin Interrupt 10 */
#define BITP_PINT_LATCH_PIQ9                  9            /* Pin Interrupt 9 */
#define BITP_PINT_LATCH_PIQ8                  8            /* Pin Interrupt 8 */
#define BITP_PINT_LATCH_PIQ7                  7            /* Pin Interrupt 7 */
#define BITP_PINT_LATCH_PIQ6                  6            /* Pin Interrupt 6 */
#define BITP_PINT_LATCH_PIQ5                  5            /* Pin Interrupt 5 */
#define BITP_PINT_LATCH_PIQ4                  4            /* Pin Interrupt 4 */
#define BITP_PINT_LATCH_PIQ3                  3            /* Pin Interrupt 3 */
#define BITP_PINT_LATCH_PIQ2                  2            /* Pin Interrupt 2 */
#define BITP_PINT_LATCH_PIQ1                  1            /* Pin Interrupt 1 */
#define BITP_PINT_LATCH_PIQ0                  0            /* Pin Interrupt 0 */
#define BITM_PINT_LATCH_PIQ31                0x80000000    /* Pin Interrupt 31 */
#define BITM_PINT_LATCH_PIQ30                0x40000000    /* Pin Interrupt 30 */
#define BITM_PINT_LATCH_PIQ29                0x20000000    /* Pin Interrupt 29 */
#define BITM_PINT_LATCH_PIQ28                0x10000000    /* Pin Interrupt 28 */
#define BITM_PINT_LATCH_PIQ27                0x08000000    /* Pin Interrupt 27 */
#define BITM_PINT_LATCH_PIQ26                0x04000000    /* Pin Interrupt 26 */
#define BITM_PINT_LATCH_PIQ25                0x02000000    /* Pin Interrupt 25 */
#define BITM_PINT_LATCH_PIQ24                0x01000000    /* Pin Interrupt 24 */
#define BITM_PINT_LATCH_PIQ23                0x00800000    /* Pin Interrupt 23 */
#define BITM_PINT_LATCH_PIQ22                0x00400000    /* Pin Interrupt 22 */
#define BITM_PINT_LATCH_PIQ21                0x00200000    /* Pin Interrupt 21 */
#define BITM_PINT_LATCH_PIQ20                0x00100000    /* Pin Interrupt 20 */
#define BITM_PINT_LATCH_PIQ19                0x00080000    /* Pin Interrupt 19 */
#define BITM_PINT_LATCH_PIQ18                0x00040000    /* Pin Interrupt 18 */
#define BITM_PINT_LATCH_PIQ17                0x00020000    /* Pin Interrupt 17 */
#define BITM_PINT_LATCH_PIQ16                0x00010000    /* Pin Interrupt 16 */
#define BITM_PINT_LATCH_PIQ15                0x00008000    /* Pin Interrupt 15 */
#define BITM_PINT_LATCH_PIQ14                0x00004000    /* Pin Interrupt 14 */
#define BITM_PINT_LATCH_PIQ13                0x00002000    /* Pin Interrupt 13 */
#define BITM_PINT_LATCH_PIQ12                0x00001000    /* Pin Interrupt 12 */
#define BITM_PINT_LATCH_PIQ11                0x00000800    /* Pin Interrupt 11 */
#define BITM_PINT_LATCH_PIQ10                0x00000400    /* Pin Interrupt 10 */
#define BITM_PINT_LATCH_PIQ9                 0x00000200    /* Pin Interrupt 9 */
#define BITM_PINT_LATCH_PIQ8                 0x00000100    /* Pin Interrupt 8 */
#define BITM_PINT_LATCH_PIQ7                 0x00000080    /* Pin Interrupt 7 */
#define BITM_PINT_LATCH_PIQ6                 0x00000040    /* Pin Interrupt 6 */
#define BITM_PINT_LATCH_PIQ5                 0x00000020    /* Pin Interrupt 5 */
#define BITM_PINT_LATCH_PIQ4                 0x00000010    /* Pin Interrupt 4 */
#define BITM_PINT_LATCH_PIQ3                 0x00000008    /* Pin Interrupt 3 */
#define BITM_PINT_LATCH_PIQ2                 0x00000004    /* Pin Interrupt 2 */
#define BITM_PINT_LATCH_PIQ1                 0x00000002    /* Pin Interrupt 1 */
#define BITM_PINT_LATCH_PIQ0                 0x00000001    /* Pin Interrupt 0 */

/* =========================
        SMC Registers
   ========================= */

/* =========================
        SMC0
   ========================= */
#define REG_SMC_GCTL                   0xFFC16004         /* SMC0 SMC Control Register */
#define REG_SMC_GSTAT                  0xFFC16008         /* SMC0 SMC Status Register */
#define REG_SMC_B0CTL                  0xFFC1600C         /* SMC0 SMC Bank0 Control Register */
#define REG_SMC_B0TIM                  0xFFC16010         /* SMC0 SMC Bank0 Timing Register */
#define REG_SMC_B0ETIM                 0xFFC16014         /* SMC0 SMC Bank0 Extended Timing Register */
#define REG_SMC_B1CTL                  0xFFC1601C         /* SMC0 SMC BANK1 Control Register */
#define REG_SMC_B1TIM                  0xFFC16020         /* SMC0 SMC BANK1 Timing Register */
#define REG_SMC_B1ETIM                 0xFFC16024         /* SMC0 SMC BANK1 Extended Timing Register */
#define REG_SMC_B2CTL                  0xFFC1602C         /* SMC0 SMC BANK2 Control Register */
#define REG_SMC_B2TIM                  0xFFC16030         /* SMC0 SMC BANK2 Timing Register */
#define REG_SMC_B2ETIM                 0xFFC16034         /* SMC0 SMC BANK2 Extended Timing Register */
#define REG_SMC_B3CTL                  0xFFC1603C         /* SMC0 SMC BANK3 Control Register */
#define REG_SMC_B3TIM                  0xFFC16040         /* SMC0 SMC BANK3 Timing Register */
#define REG_SMC_B3ETIM                 0xFFC16044         /* SMC0 SMC BANK3 Extended Timing Register */

/* =========================
        SMC
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SMC_GCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_GCTL_BGDIS                   4            /* Bus Grant Diable */
#define BITM_SMC_GCTL_BGDIS                  0x00000010    /* Bus Grant Diable */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_GSTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_GSTAT_BGHSTAT                2            /* Bus Grant Hold Status */
#define BITP_SMC_GSTAT_BRQSTAT                1            /* External Device Bus Request Status */
#define BITP_SMC_GSTAT_BGSTAT                 0            /* Bus Grant Status */
#define BITM_SMC_GSTAT_BGHSTAT               0x00000004    /* Bus Grant Hold Status */
#define BITM_SMC_GSTAT_BRQSTAT               0x00000002    /* External Device Bus Request Status */
#define BITM_SMC_GSTAT_BGSTAT                0x00000001    /* Bus Grant Status */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B0CTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B0CTL_BTYPE                 26            /* Burst Type for Flash */
#define BITP_SMC_B0CTL_BCLK                  24            /* CLK Frequency for Sync Burst Flash */
#define BITP_SMC_B0CTL_PGSZ                  20            /* Flash Page Size */
#define BITP_SMC_B0CTL_RDYABTEN              14            /* Bank0 ARDY Abort Counter Enable */
#define BITP_SMC_B0CTL_RDYPOL                13            /* Bank0 ARDY Polarity */
#define BITP_SMC_B0CTL_RDYEN                 12            /* Bank0 ARDY Enable */
#define BITP_SMC_B0CTL_SELCTRL                8            /* Select Control */
#define BITP_SMC_B0CTL_MODE                   4            /* Static memory access mode */
#define BITP_SMC_B0CTL_EN                     0            /* Bank0 Enable */
#define BITM_SMC_B0CTL_BTYPE                 0x04000000    /* Burst Type for Flash */
#define BITM_SMC_B0CTL_BCLK                  0x03000000    /* CLK Frequency for Sync Burst Flash */
#define BITM_SMC_B0CTL_PGSZ                  0x00300000    /* Flash Page Size */
#define BITM_SMC_B0CTL_RDYABTEN              0x00004000    /* Bank0 ARDY Abort Counter Enable */
#define BITM_SMC_B0CTL_RDYPOL                0x00002000    /* Bank0 ARDY Polarity */
#define BITM_SMC_B0CTL_RDYEN                 0x00001000    /* Bank0 ARDY Enable */
#define BITM_SMC_B0CTL_SELCTRL               0x00000300    /* Select Control */
#define BITM_SMC_B0CTL_MODE                  0x00000030    /* Static memory access mode */
#define BITM_SMC_B0CTL_EN                    0x00000001    /* Bank0 Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B0TIM                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B0TIM_RAT                   24            /* Read Access Time */
#define BITP_SMC_B0TIM_RHT                   20            /* Read Hold Time */
#define BITP_SMC_B0TIM_RST                   16            /* Read Setup Time */
#define BITP_SMC_B0TIM_WAT                    8            /* Write Access Time */
#define BITP_SMC_B0TIM_WHT                    4            /* Write Hold Time */
#define BITP_SMC_B0TIM_WST                    0            /* Write Setup Time */
#define BITM_SMC_B0TIM_RAT                   0x3F000000    /* Read Access Time */
#define BITM_SMC_B0TIM_RHT                   0x00700000    /* Read Hold Time */
#define BITM_SMC_B0TIM_RST                   0x00070000    /* Read Setup Time */
#define BITM_SMC_B0TIM_WAT                   0x00003F00    /* Write Access Time */
#define BITM_SMC_B0TIM_WHT                   0x00000070    /* Write Hold Time */
#define BITM_SMC_B0TIM_WST                   0x00000007    /* Write Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B0ETIM                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B0ETIM_PGWS                 16            /* Flash Page Mode Wait States */
#define BITP_SMC_B0ETIM_IT                   12            /* Memory Idle Time */
#define BITP_SMC_B0ETIM_TT                    8            /* Memory Transition Time */
#define BITP_SMC_B0ETIM_PREAT                 4            /* Pre Access Time */
#define BITP_SMC_B0ETIM_PREST                 0            /* Pre Setup Time */
#define BITM_SMC_B0ETIM_PGWS                 0x000F0000    /* Flash Page Mode Wait States */
#define BITM_SMC_B0ETIM_IT                   0x00007000    /* Memory Idle Time */
#define BITM_SMC_B0ETIM_TT                   0x00000700    /* Memory Transition Time */
#define BITM_SMC_B0ETIM_PREAT                0x00000030    /* Pre Access Time */
#define BITM_SMC_B0ETIM_PREST                0x00000003    /* Pre Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B1CTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B1CTL_BTYPE                 26            /* Burst Type for Flash */
#define BITP_SMC_B1CTL_BCLK                  24            /* CLK Frequency for Sync Burst Flash */
#define BITP_SMC_B1CTL_PGSZ                  20            /* Flash Page Size */
#define BITP_SMC_B1CTL_RDYABTEN              14            /* Bank0 ARDY Abort Counter Enable */
#define BITP_SMC_B1CTL_RDYPOL                13            /* Bank0 ARDY Polarity */
#define BITP_SMC_B1CTL_RDYEN                 12            /* Bank0 ARDY Enable */
#define BITP_SMC_B1CTL_SELCTRL                8            /* Select Control */
#define BITP_SMC_B1CTL_MODE                   4            /* Static memory access mode */
#define BITP_SMC_B1CTL_EN                     0            /* Bank0 Enable */
#define BITM_SMC_B1CTL_BTYPE                 0x04000000    /* Burst Type for Flash */
#define BITM_SMC_B1CTL_BCLK                  0x03000000    /* CLK Frequency for Sync Burst Flash */
#define BITM_SMC_B1CTL_PGSZ                  0x00300000    /* Flash Page Size */
#define BITM_SMC_B1CTL_RDYABTEN              0x00004000    /* Bank0 ARDY Abort Counter Enable */
#define BITM_SMC_B1CTL_RDYPOL                0x00002000    /* Bank0 ARDY Polarity */
#define BITM_SMC_B1CTL_RDYEN                 0x00001000    /* Bank0 ARDY Enable */
#define BITM_SMC_B1CTL_SELCTRL               0x00000300    /* Select Control */
#define BITM_SMC_B1CTL_MODE                  0x00000030    /* Static memory access mode */
#define BITM_SMC_B1CTL_EN                    0x00000001    /* Bank0 Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B1TIM                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B1TIM_RAT                   24            /* Read Access Time */
#define BITP_SMC_B1TIM_RHT                   20            /* Read Hold Time */
#define BITP_SMC_B1TIM_RST                   16            /* Read Setup Time */
#define BITP_SMC_B1TIM_WAT                    8            /* Write Access Time */
#define BITP_SMC_B1TIM_WHT                    4            /* Write Hold Time */
#define BITP_SMC_B1TIM_WST                    0            /* Write Setup Time */
#define BITM_SMC_B1TIM_RAT                   0x3F000000    /* Read Access Time */
#define BITM_SMC_B1TIM_RHT                   0x00700000    /* Read Hold Time */
#define BITM_SMC_B1TIM_RST                   0x00070000    /* Read Setup Time */
#define BITM_SMC_B1TIM_WAT                   0x00003F00    /* Write Access Time */
#define BITM_SMC_B1TIM_WHT                   0x00000070    /* Write Hold Time */
#define BITM_SMC_B1TIM_WST                   0x00000007    /* Write Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B1ETIM                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B1ETIM_PGWS                 16            /* Flash Page Mode Wait States */
#define BITP_SMC_B1ETIM_IT                   12            /* Memory Idle Time */
#define BITP_SMC_B1ETIM_TT                    8            /* Memory Transition Time */
#define BITP_SMC_B1ETIM_PREAT                 4            /* Pre Access Time */
#define BITP_SMC_B1ETIM_PREST                 0            /* Pre Setup Time */
#define BITM_SMC_B1ETIM_PGWS                 0x000F0000    /* Flash Page Mode Wait States */
#define BITM_SMC_B1ETIM_IT                   0x00007000    /* Memory Idle Time */
#define BITM_SMC_B1ETIM_TT                   0x00000700    /* Memory Transition Time */
#define BITM_SMC_B1ETIM_PREAT                0x00000030    /* Pre Access Time */
#define BITM_SMC_B1ETIM_PREST                0x00000003    /* Pre Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B2CTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B2CTL_BTYPE                 26            /* Burst Type for Flash */
#define BITP_SMC_B2CTL_BCLK                  24            /* CLK Frequency for Sync Burst Flash */
#define BITP_SMC_B2CTL_PGSZ                  20            /* Flash Page Size */
#define BITP_SMC_B2CTL_RDYABTEN              14            /* Bank0 ARDY Abort Counter Enable */
#define BITP_SMC_B2CTL_RDYPOL                13            /* Bank0 ARDY Polarity */
#define BITP_SMC_B2CTL_RDYEN                 12            /* Bank0 ARDY Enable */
#define BITP_SMC_B2CTL_SELCTRL                8            /* Select Control */
#define BITP_SMC_B2CTL_MODE                   4            /* Static memory access mode */
#define BITP_SMC_B2CTL_EN                     0            /* Bank0 Enable */
#define BITM_SMC_B2CTL_BTYPE                 0x04000000    /* Burst Type for Flash */
#define BITM_SMC_B2CTL_BCLK                  0x03000000    /* CLK Frequency for Sync Burst Flash */
#define BITM_SMC_B2CTL_PGSZ                  0x00300000    /* Flash Page Size */
#define BITM_SMC_B2CTL_RDYABTEN              0x00004000    /* Bank0 ARDY Abort Counter Enable */
#define BITM_SMC_B2CTL_RDYPOL                0x00002000    /* Bank0 ARDY Polarity */
#define BITM_SMC_B2CTL_RDYEN                 0x00001000    /* Bank0 ARDY Enable */
#define BITM_SMC_B2CTL_SELCTRL               0x00000300    /* Select Control */
#define BITM_SMC_B2CTL_MODE                  0x00000030    /* Static memory access mode */
#define BITM_SMC_B2CTL_EN                    0x00000001    /* Bank0 Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B2TIM                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B2TIM_RAT                   24            /* Read Access Time */
#define BITP_SMC_B2TIM_RHT                   20            /* Read Hold Time */
#define BITP_SMC_B2TIM_RST                   16            /* Read Setup Time */
#define BITP_SMC_B2TIM_WAT                    8            /* Write Access Time */
#define BITP_SMC_B2TIM_WHT                    4            /* Write Hold Time */
#define BITP_SMC_B2TIM_WST                    0            /* Write Setup Time */
#define BITM_SMC_B2TIM_RAT                   0x3F000000    /* Read Access Time */
#define BITM_SMC_B2TIM_RHT                   0x00700000    /* Read Hold Time */
#define BITM_SMC_B2TIM_RST                   0x00070000    /* Read Setup Time */
#define BITM_SMC_B2TIM_WAT                   0x00003F00    /* Write Access Time */
#define BITM_SMC_B2TIM_WHT                   0x00000070    /* Write Hold Time */
#define BITM_SMC_B2TIM_WST                   0x00000007    /* Write Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B2ETIM                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B2ETIM_PGWS                 16            /* Flash Page Mode Wait States */
#define BITP_SMC_B2ETIM_IT                   12            /* Memory Idle Time */
#define BITP_SMC_B2ETIM_TT                    8            /* Memory Transition Time */
#define BITP_SMC_B2ETIM_PREAT                 4            /* Pre Access Time */
#define BITP_SMC_B2ETIM_PREST                 0            /* Pre Setup Time */
#define BITM_SMC_B2ETIM_PGWS                 0x000F0000    /* Flash Page Mode Wait States */
#define BITM_SMC_B2ETIM_IT                   0x00007000    /* Memory Idle Time */
#define BITM_SMC_B2ETIM_TT                   0x00000700    /* Memory Transition Time */
#define BITM_SMC_B2ETIM_PREAT                0x00000030    /* Pre Access Time */
#define BITM_SMC_B2ETIM_PREST                0x00000003    /* Pre Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B3CTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B3CTL_BTYPE                 26            /* Burst Type for Flash */
#define BITP_SMC_B3CTL_BCLK                  24            /* CLK Frequency for Sync Burst Flash */
#define BITP_SMC_B3CTL_PGSZ                  20            /* Flash Page Size */
#define BITP_SMC_B3CTL_RDYABTEN              14            /* Bank0 ARDY Abort Counter Enable */
#define BITP_SMC_B3CTL_RDYPOL                13            /* Bank0 ARDY Polarity */
#define BITP_SMC_B3CTL_RDYEN                 12            /* Bank0 ARDY Enable */
#define BITP_SMC_B3CTL_SELCTRL                8            /* Select Control */
#define BITP_SMC_B3CTL_MODE                   4            /* Static memory access mode */
#define BITP_SMC_B3CTL_EN                     0            /* Bank0 Enable */
#define BITM_SMC_B3CTL_BTYPE                 0x04000000    /* Burst Type for Flash */
#define BITM_SMC_B3CTL_BCLK                  0x03000000    /* CLK Frequency for Sync Burst Flash */
#define BITM_SMC_B3CTL_PGSZ                  0x00300000    /* Flash Page Size */
#define BITM_SMC_B3CTL_RDYABTEN              0x00004000    /* Bank0 ARDY Abort Counter Enable */
#define BITM_SMC_B3CTL_RDYPOL                0x00002000    /* Bank0 ARDY Polarity */
#define BITM_SMC_B3CTL_RDYEN                 0x00001000    /* Bank0 ARDY Enable */
#define BITM_SMC_B3CTL_SELCTRL               0x00000300    /* Select Control */
#define BITM_SMC_B3CTL_MODE                  0x00000030    /* Static memory access mode */
#define BITM_SMC_B3CTL_EN                    0x00000001    /* Bank0 Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B3TIM                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B3TIM_RAT                   24            /* Read Access Time */
#define BITP_SMC_B3TIM_RHT                   20            /* Read Hold Time */
#define BITP_SMC_B3TIM_RST                   16            /* Read Setup Time */
#define BITP_SMC_B3TIM_WAT                    8            /* Write Access Time */
#define BITP_SMC_B3TIM_WHT                    4            /* Write Hold Time */
#define BITP_SMC_B3TIM_WST                    0            /* Write Setup Time */
#define BITM_SMC_B3TIM_RAT                   0x3F000000    /* Read Access Time */
#define BITM_SMC_B3TIM_RHT                   0x00700000    /* Read Hold Time */
#define BITM_SMC_B3TIM_RST                   0x00070000    /* Read Setup Time */
#define BITM_SMC_B3TIM_WAT                   0x00003F00    /* Write Access Time */
#define BITM_SMC_B3TIM_WHT                   0x00000070    /* Write Hold Time */
#define BITM_SMC_B3TIM_WST                   0x00000007    /* Write Setup Time */

/* ------------------------------------------------------------------------------------------------------------------------
        SMC_B3ETIM                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SMC_B3ETIM_PGWS                 16            /* Flash Page Mode Wait States */
#define BITP_SMC_B3ETIM_IT                   12            /* Memory Idle Time */
#define BITP_SMC_B3ETIM_TT                    8            /* Memory Transition Time */
#define BITP_SMC_B3ETIM_PREAT                 4            /* Pre Access Time */
#define BITP_SMC_B3ETIM_PREST                 0            /* Pre Setup Time */
#define BITM_SMC_B3ETIM_PGWS                 0x000F0000    /* Flash Page Mode Wait States */
#define BITM_SMC_B3ETIM_IT                   0x00007000    /* Memory Idle Time */
#define BITM_SMC_B3ETIM_TT                   0x00000700    /* Memory Transition Time */
#define BITM_SMC_B3ETIM_PREAT                0x00000030    /* Pre Access Time */
#define BITM_SMC_B3ETIM_PREST                0x00000003    /* Pre Setup Time */

/* =========================
        WDOG Registers
   ========================= */

/* =========================
        WDOG0
   ========================= */
#define REG_WDOG0_CTL                   0xFFC17000         /* WDOG0 Control Register */
#define REG_WDOG0_CNT                   0xFFC17004         /* WDOG0 Count Register */
#define REG_WDOG0_STAT                  0xFFC17008         /* WDOG0 Watchdog Timer Status Register */

/* =========================
        WDOG1
   ========================= */
#define REG_WDOG1_CTL                   0xFFC17800         /* WDOG1 Control Register */
#define REG_WDOG1_CNT                   0xFFC17804         /* WDOG1 Count Register */
#define REG_WDOG1_STAT                  0xFFC17808         /* WDOG1 Watchdog Timer Status Register */

/* =========================
        WDOG
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        WDOG_CTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_WDOG_CTL_WRD0                   15
#define BITP_WDOG_CTL_WDEN                    4
#define BITM_WDOG_CTL_WRD0                   0x00008000
#define BITM_WDOG_CTL_WDEN                   0x00000FF0

/* =========================
        EPPI Registers
   ========================= */

/* =========================
        EPPI0
   ========================= */
#define REG_EPPI0_STAT                  0xFFC18000         /* EPPI0 Status Register */
#define REG_EPPI0_HCNT                  0xFFC18004         /* EPPI0 Horizontal Transfer Count Register */
#define REG_EPPI0_HDLY                  0xFFC18008         /* EPPI0 Horizontal Delay Count Register */
#define REG_EPPI0_VCNT                  0xFFC1800C         /* EPPI0 Vertical Transfer Count Register */
#define REG_EPPI0_VDLY                  0xFFC18010         /* EPPI0 Vertical Delay Count Register */
#define REG_EPPI0_FRAME                 0xFFC18014         /* EPPI0 Lines Per Frame Register */
#define REG_EPPI0_LINE                  0xFFC18018         /* EPPI0 Samples Per Line Register */
#define REG_EPPI0_CLKDIV                0xFFC1801C         /* EPPI0 Clock Divide Register */
#define REG_EPPI0_CTL                   0xFFC18020         /* EPPI0 Control Register */
#define REG_EPPI0_FS1_WLHB              0xFFC18024         /* EPPI0 FS1 Width Register / EPPI Horizontal Blanking Samples Per Line Register */
#define REG_EPPI0_FS1_PASPL             0xFFC18028         /* EPPI0 FS1 Period Register / EPPI Active Samples Per Line Register */
#define REG_EPPI0_FS2_WLVB              0xFFC1802C         /* EPPI0 FS2 Width Register / EPPI Lines Of Vertical Blanking Register */
#define REG_EPPI0_FS2_PALPF             0xFFC18030         /* EPPI0 FS2 Period Register / EPPI Active Lines Per Field Register */
#define REG_EPPI0_IMSK                  0xFFC18034         /* EPPI0 Interrupt Mask Register */
#define REG_EPPI0_ODDCLIP               0xFFC1803C         /* EPPI0 Clipping Register for ODD (Chroma) Data */
#define REG_EPPI0_EVENCLIP              0xFFC18040         /* EPPI0 Clipping Register for EVEN (Luma) Data */
#define REG_EPPI0_FS1_DLY               0xFFC18044         /* EPPI0 Frame Sync 1 Delay Value */
#define REG_EPPI0_FS2_DLY               0xFFC18048         /* EPPI0 Frame Sync 2 Delay Value */
#define REG_EPPI0_CTL2                  0xFFC1804C         /* EPPI0 Control Register 2 */

/* =========================
        EPPI1
   ========================= */
#define REG_EPPI1_STAT                  0xFFC18400         /* EPPI1 Status Register */
#define REG_EPPI1_HCNT                  0xFFC18404         /* EPPI1 Horizontal Transfer Count Register */
#define REG_EPPI1_HDLY                  0xFFC18408         /* EPPI1 Horizontal Delay Count Register */
#define REG_EPPI1_VCNT                  0xFFC1840C         /* EPPI1 Vertical Transfer Count Register */
#define REG_EPPI1_VDLY                  0xFFC18410         /* EPPI1 Vertical Delay Count Register */
#define REG_EPPI1_FRAME                 0xFFC18414         /* EPPI1 Lines Per Frame Register */
#define REG_EPPI1_LINE                  0xFFC18418         /* EPPI1 Samples Per Line Register */
#define REG_EPPI1_CLKDIV                0xFFC1841C         /* EPPI1 Clock Divide Register */
#define REG_EPPI1_CTL                   0xFFC18420         /* EPPI1 Control Register */
#define REG_EPPI1_FS1_WLHB              0xFFC18424         /* EPPI1 FS1 Width Register / EPPI Horizontal Blanking Samples Per Line Register */
#define REG_EPPI1_FS1_PASPL             0xFFC18428         /* EPPI1 FS1 Period Register / EPPI Active Samples Per Line Register */
#define REG_EPPI1_FS2_WLVB              0xFFC1842C         /* EPPI1 FS2 Width Register / EPPI Lines Of Vertical Blanking Register */
#define REG_EPPI1_FS2_PALPF             0xFFC18430         /* EPPI1 FS2 Period Register / EPPI Active Lines Per Field Register */
#define REG_EPPI1_IMSK                  0xFFC18434         /* EPPI1 Interrupt Mask Register */
#define REG_EPPI1_ODDCLIP               0xFFC1843C         /* EPPI1 Clipping Register for ODD (Chroma) Data */
#define REG_EPPI1_EVENCLIP              0xFFC18440         /* EPPI1 Clipping Register for EVEN (Luma) Data */
#define REG_EPPI1_FS1_DLY               0xFFC18444         /* EPPI1 Frame Sync 1 Delay Value */
#define REG_EPPI1_FS2_DLY               0xFFC18448         /* EPPI1 Frame Sync 2 Delay Value */
#define REG_EPPI1_CTL2                  0xFFC1844C         /* EPPI1 Control Register 2 */

/* =========================
        EPPI2
   ========================= */
#define REG_EPPI2_STAT                  0xFFC18800         /* EPPI2 Status Register */
#define REG_EPPI2_HCNT                  0xFFC18804         /* EPPI2 Horizontal Transfer Count Register */
#define REG_EPPI2_HDLY                  0xFFC18808         /* EPPI2 Horizontal Delay Count Register */
#define REG_EPPI2_VCNT                  0xFFC1880C         /* EPPI2 Vertical Transfer Count Register */
#define REG_EPPI2_VDLY                  0xFFC18810         /* EPPI2 Vertical Delay Count Register */
#define REG_EPPI2_FRAME                 0xFFC18814         /* EPPI2 Lines Per Frame Register */
#define REG_EPPI2_LINE                  0xFFC18818         /* EPPI2 Samples Per Line Register */
#define REG_EPPI2_CLKDIV                0xFFC1881C         /* EPPI2 Clock Divide Register */
#define REG_EPPI2_CTL                   0xFFC18820         /* EPPI2 Control Register */
#define REG_EPPI2_FS1_WLHB              0xFFC18824         /* EPPI2 FS1 Width Register / EPPI Horizontal Blanking Samples Per Line Register */
#define REG_EPPI2_FS1_PASPL             0xFFC18828         /* EPPI2 FS1 Period Register / EPPI Active Samples Per Line Register */
#define REG_EPPI2_FS2_WLVB              0xFFC1882C         /* EPPI2 FS2 Width Register / EPPI Lines Of Vertical Blanking Register */
#define REG_EPPI2_FS2_PALPF             0xFFC18830         /* EPPI2 FS2 Period Register / EPPI Active Lines Per Field Register */
#define REG_EPPI2_IMSK                  0xFFC18834         /* EPPI2 Interrupt Mask Register */
#define REG_EPPI2_ODDCLIP               0xFFC1883C         /* EPPI2 Clipping Register for ODD (Chroma) Data */
#define REG_EPPI2_EVENCLIP              0xFFC18840         /* EPPI2 Clipping Register for EVEN (Luma) Data */
#define REG_EPPI2_FS1_DLY               0xFFC18844         /* EPPI2 Frame Sync 1 Delay Value */
#define REG_EPPI2_FS2_DLY               0xFFC18848         /* EPPI2 Frame Sync 2 Delay Value */
#define REG_EPPI2_CTL2                  0xFFC1884C         /* EPPI2 Control Register 2 */

/* =========================
        EPPI
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_STAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_STAT_FLD                   15            /* Current Field Received by EPPI */
#define BITP_EPPI_STAT_ERRDET                14            /* Preamble Error Detected */
#define BITP_EPPI_STAT_PXPERR                 7            /* PxP Ready Error */
#define BITP_EPPI_STAT_ERRNCOR                6            /* Preamble Error Not Corrected */
#define BITP_EPPI_STAT_FTERRUNDR              5            /* Frame Track Underflow */
#define BITP_EPPI_STAT_FTERROVR               4            /* Frame Track Overflow */
#define BITP_EPPI_STAT_LTERRUNDR              3            /* Line Track Underflow */
#define BITP_EPPI_STAT_LTERROVR               2            /* Line Track Overflow */
#define BITP_EPPI_STAT_YFIFOERR               1            /* Luma FIFO Error */
#define BITP_EPPI_STAT_CFIFOERR               0            /* Chroma FIFO Error */

#define BITM_EPPI_STAT_FLD                   0x00008000    /* Current Field Received by EPPI */
#define ENUM_EPPI_STAT_FIELD1                0x00000000    /* FLD: Field 1 */
#define ENUM_EPPI_STAT_FIELD2                0x00008000    /* FLD: Field 2 */

#define BITM_EPPI_STAT_ERRDET                0x00004000    /* Preamble Error Detected */
#define ENUM_EPPI_STAT_NO_PRERR              0x00000000    /* ERRDET: No preamble error detected */
#define ENUM_EPPI_STAT_PRERR                 0x00004000    /* ERRDET: Preamble error detected */
#define BITM_EPPI_STAT_PXPERR                0x00000080    /* PxP Ready Error */

#define BITM_EPPI_STAT_ERRNCOR               0x00000040    /* Preamble Error Not Corrected */
#define ENUM_EPPI_STAT_NO_ERRNCOR            0x00000000    /* ERRNCOR: No uncorrected preamble error has occurred */
#define ENUM_EPPI_STAT_ERRNCOR               0x00000040    /* ERRNCOR: Preamble error detected but not corrected */

#define BITM_EPPI_STAT_FTERRUNDR             0x00000020    /* Frame Track Underflow */
#define ENUM_EPPI_STAT_NO_FTERRUNDR          0x00000000    /* FTERRUNDR: No Error Detected */
#define ENUM_EPPI_STAT_FTERRUNDR             0x00000020    /* FTERRUNDR: Error Occurred */

#define BITM_EPPI_STAT_FTERROVR              0x00000010    /* Frame Track Overflow */
#define ENUM_EPPI_STAT_NO_FTERROVR           0x00000000    /* FTERROVR: No Error Detected */
#define ENUM_EPPI_STAT_FTERROVR              0x00000010    /* FTERROVR: Error Occurred */

#define BITM_EPPI_STAT_LTERRUNDR             0x00000008    /* Line Track Underflow */
#define ENUM_EPPI_STAT_NO_LTERRUNDR          0x00000000    /* LTERRUNDR: No Error Detected */
#define ENUM_EPPI_STAT_LTERRUNDR             0x00000008    /* LTERRUNDR: Error Occurred */

#define BITM_EPPI_STAT_LTERROVR              0x00000004    /* Line Track Overflow */
#define ENUM_EPPI_STAT_NO_LTERROVR           0x00000000    /* LTERROVR: No Error Detected */
#define ENUM_EPPI_STAT_LTERROVR              0x00000004    /* LTERROVR: Error Occurred */

#define BITM_EPPI_STAT_YFIFOERR              0x00000002    /* Luma FIFO Error */
#define ENUM_EPPI_STAT_NO_YFIFOERR           0x00000000    /* YFIFOERR: No Error Detected */
#define ENUM_EPPI_STAT_YFIFOERR              0x00000002    /* YFIFOERR: Error Occurred */

#define BITM_EPPI_STAT_CFIFOERR              0x00000001    /* Chroma FIFO Error */
#define ENUM_EPPI_STAT_NO_CFIFOERR           0x00000000    /* CFIFOERR: No Error Detected */
#define ENUM_EPPI_STAT_CFIFOERR              0x00000001    /* CFIFOERR: Error Occurred */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_HCNT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_HCNT_VALUE                  0            /* Holds the number of samples to read in or write out per line, after PPIx_HDLY number of cycles have expired since the last assertion of PPIx_FS1 */
#define BITM_EPPI_HCNT_VALUE                 0x0000FFFF    /* Holds the number of samples to read in or write out per line, after PPIx_HDLY number of cycles have expired since the last assertion of PPIx_FS1 */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_HDLY                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_HDLY_VALUE                  0            /* Number of PPIx_CLK cycles to delay after assertion of PPIx_FS1 before starting to read or write data */
#define BITM_EPPI_HDLY_VALUE                 0x0000FFFF    /* Number of PPIx_CLK cycles to delay after assertion of PPIx_FS1 before starting to read or write data */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_VCNT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_VCNT_VALUE                  0            /* Holds the number of lines to read in or write out, after PPIx_VDLY number of lines from the start of frame */
#define BITM_EPPI_VCNT_VALUE                 0x0000FFFF    /* Holds the number of lines to read in or write out, after PPIx_VDLY number of lines from the start of frame */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_VDLY                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_VDLY_VALUE                  0            /* Number of lines to wait after the start of a new frame before starting to read/transmit data */
#define BITM_EPPI_VDLY_VALUE                 0x0000FFFF    /* Number of lines to wait after the start of a new frame before starting to read/transmit data */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_FRAME                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_FRAME_VALUE                 0            /* Holds the number of lines expected per frame of data */
#define BITM_EPPI_FRAME_VALUE                0x0000FFFF    /* Holds the number of lines expected per frame of data */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_LINE                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_LINE_VALUE                  0            /* Holds the number of samples expected per line */
#define BITM_EPPI_LINE_VALUE                 0x0000FFFF    /* Holds the number of samples expected per line */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_CLKDIV                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_CLKDIV_VALUE                0            /* Internal clock divider */
#define BITM_EPPI_CLKDIV_VALUE               0x0000FFFF    /* Internal clock divider */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_CTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_CTL_CLKGATEN               31            /* Clock Gating Enable */
#define BITP_EPPI_CTL_MUXSEL                 30            /* MUX Select */
#define BITP_EPPI_CTL_DMAFINEN               29            /* DMA Finish Enable */
#define BITP_EPPI_CTL_DMACFG                 28            /* One or Two DMA Channels Mode */
#define BITP_EPPI_CTL_RGBFMTEN               27            /* RGB Formatting Enable */
#define BITP_EPPI_CTL_SPLTWRD                26            /* Split Word */
#define BITP_EPPI_CTL_SUBSPLTODD             25            /* Sub-Split Odd Samples */
#define BITP_EPPI_CTL_SPLTEO                 24            /* Split Even and Odd Data Samples */
#define BITP_EPPI_CTL_SWAPEN                 23            /* Swap Enable */
#define BITP_EPPI_CTL_PACKEN                 22            /* Pack/Unpack Enable */
#define BITP_EPPI_CTL_SKIPEO                 21            /* Skip Even or Odd */
#define BITP_EPPI_CTL_SKIPEN                 20            /* Skip Enable */
#define BITP_EPPI_CTL_DMIRR                  19            /* Data Mirroring */
#define BITP_EPPI_CTL_DLEN                   16            /* Data Length */
#define BITP_EPPI_CTL_POLS                   14            /* Frame Sync Polarity */
#define BITP_EPPI_CTL_POLC                   12            /* Frame Sync and Data Driving and Sampling Edges */
#define BITP_EPPI_CTL_SIGNEXT                11            /* Sign Extension */
#define BITP_EPPI_CTL_IFSGEN                 10            /* Internal Frame Sync Generation */
#define BITP_EPPI_CTL_ICLKGEN                 9            /* Internal Clock Generation */
#define BITP_EPPI_CTL_BLANKGEN                8            /* ITU Output Mode with Internal Blanking Generation */
#define BITP_EPPI_CTL_ITUTYPE                 7            /* ITU Interlace or Progressive */
#define BITP_EPPI_CTL_FLDSEL                  6            /* Field Select/Trigger */
#define BITP_EPPI_CTL_FSCFG                   4            /* Frame Sync Configuration */
#define BITP_EPPI_CTL_XFRTYPE                 2            /* PPI Operating Mode */
#define BITP_EPPI_CTL_DIR                     1            /* PPI Direction */
#define BITP_EPPI_CTL_EN                      0            /* PPI Enable */

#define BITM_EPPI_CTL_CLKGATEN               0x80000000    /* Clock Gating Enable */
#define ENUM_EPPI_CTL_CLKGATE_DIS            0x00000000    /* CLKGATEN: Disabled */
#define ENUM_EPPI_CTL_CLKGATE_EN             0x80000000    /* CLKGATEN: Enabled */

#define BITM_EPPI_CTL_MUXSEL                 0x40000000    /* MUX Select */
#define ENUM_EPPI_CTL_MUXSEL0                0x00000000    /* MUXSEL: (default) PPI normal operation */
#define ENUM_EPPI_CTL_MUXSEL1                0x40000000    /* MUXSEL: Connect alt camera onto main data,clock lines */

#define BITM_EPPI_CTL_DMAFINEN               0x20000000    /* DMA Finish Enable */
#define ENUM_EPPI_CTL_FINISH_DIS             0x00000000    /* DMAFINEN: No Finish command issued under any circumstances */
#define ENUM_EPPI_CTL_FINISH_EN              0x20000000    /* DMAFINEN: Finish command sent after frame/line RX done */

#define BITM_EPPI_CTL_DMACFG                 0x10000000    /* One or Two DMA Channels Mode */
#define ENUM_EPPI_CTL_DMA1CHAN               0x00000000    /* DMACFG: PPI uses one DMA Channel */
#define ENUM_EPPI_CTL_DMA2CHAN               0x10000000    /* DMACFG: PPI uses two DMA Channels */

#define BITM_EPPI_CTL_RGBFMTEN               0x08000000    /* RGB Formatting Enable */
#define ENUM_EPPI_CTL_RGBFMT_DIS             0x00000000    /* RGBFMTEN: RGB formatting disabled */
#define ENUM_EPPI_CTL_RGBFMT_EN              0x08000000    /* RGBFMTEN: RGB formatting enabled */

#define BITM_EPPI_CTL_SPLTWRD                0x04000000    /* Split Word */
#define ENUM_EPPI_CTL_NO_WORDSPLIT           0x00000000    /* SPLTWRD: PPI_DATA has (DLEN-1) bits of Y or Cr or Cb */
#define ENUM_EPPI_CTL_WORDSPLIT              0x04000000    /* SPLTWRD: PPI_DATA contains 2 elements per word */

#define BITM_EPPI_CTL_SUBSPLTODD             0x02000000    /* Sub-Split Odd Samples */
#define ENUM_EPPI_CTL_NO_SUBSPLIT            0x00000000    /* SUBSPLTODD: Disabled */
#define ENUM_EPPI_CTL_SUBSPLIT_ODD           0x02000000    /* SUBSPLTODD: Enabled */

#define BITM_EPPI_CTL_SPLTEO                 0x01000000    /* Split Even and Odd Data Samples */
#define ENUM_EPPI_CTL_SPLTEO_DIS             0x00000000    /* SPLTEO: Do not split even and odd samples */
#define ENUM_EPPI_CTL_SPLTEO_EN              0x01000000    /* SPLTEO: Split even and odd samples */

#define BITM_EPPI_CTL_SWAPEN                 0x00800000    /* Swap Enable */
#define ENUM_EPPI_CTL_SWAP_DIS               0x00000000    /* SWAPEN: Disabled */
#define ENUM_EPPI_CTL_SWAP_EN                0x00800000    /* SWAPEN: Enabled */

#define BITM_EPPI_CTL_PACKEN                 0x00400000    /* Pack/Unpack Enable */
#define ENUM_EPPI_CTL_PACK_DIS               0x00000000    /* PACKEN: Disabled */
#define ENUM_EPPI_CTL_PACK_EN                0x00400000    /* PACKEN: Enabled */

#define BITM_EPPI_CTL_SKIPEO                 0x00200000    /* Skip Even or Odd */
#define ENUM_EPPI_CTL_SKIPODD                0x00000000    /* SKIPEO: Odd samples are skipped */
#define ENUM_EPPI_CTL_SKIPEVEN               0x00200000    /* SKIPEO: Even samples are skipped */

#define BITM_EPPI_CTL_SKIPEN                 0x00100000    /* Skip Enable */
#define ENUM_EPPI_CTL_NO_SKIP                0x00000000    /* SKIPEN: alternate samples are not skipped */
#define ENUM_EPPI_CTL_SKIP                   0x00100000    /* SKIPEN: Alternate samples are skipped */

#define BITM_EPPI_CTL_DMIRR                  0x00080000    /* Data Mirroring */
#define ENUM_EPPI_CTL_NO_MIRROR              0x00000000    /* DMIRR: No Data Mirroring */
#define ENUM_EPPI_CTL_MIRROR                 0x00080000    /* DMIRR: Data Mirroring */

#define BITM_EPPI_CTL_DLEN                   0x00070000    /* Data Length */
#define ENUM_EPPI_CTL_DLEN08                 0x00000000    /* DLEN: 8 bits */
#define ENUM_EPPI_CTL_DLEN10                 0x00010000    /* DLEN: 10 bits */
#define ENUM_EPPI_CTL_DLEN12                 0x00020000    /* DLEN: 12 bits */
#define ENUM_EPPI_CTL_DLEN14                 0x00030000    /* DLEN: 14 bits */
#define ENUM_EPPI_CTL_DLEN16                 0x00040000    /* DLEN: 16 bits */
#define ENUM_EPPI_CTL_DLEN18                 0x00050000    /* DLEN: 18 bits */
#define ENUM_EPPI_CTL_DLEN20                 0x00060000    /* DLEN: 20 bits */
#define ENUM_EPPI_CTL_DLEN24                 0x00070000    /* DLEN: 24 bits */

#define BITM_EPPI_CTL_POLS                   0x0000C000    /* Frame Sync Polarity */
#define ENUM_EPPI_CTL_FS1HI_FS2HI            0x00000000    /* POLS: FS1 and FS2 are active high */
#define ENUM_EPPI_CTL_FS1LO_FS2HI            0x00004000    /* POLS: FS1 is active low. FS2 is active high */
#define ENUM_EPPI_CTL_FS1HI_FS2LO            0x00008000    /* POLS: FS1 is active high. FS2 is active low */
#define ENUM_EPPI_CTL_FS1LO_FS2LO            0x0000C000    /* POLS: FS1 and FS2 are active low */

#define BITM_EPPI_CTL_POLC                   0x00003000    /* Frame Sync and Data Driving and Sampling Edges */
#define ENUM_EPPI_CTL_POLC00                 0x00000000    /* POLC: Clock/Sync polarity mode 0 */
#define ENUM_EPPI_CTL_POLC01                 0x00001000    /* POLC: Clock/Sync polarity mode 1 */
#define ENUM_EPPI_CTL_POLC10                 0x00002000    /* POLC: Clock/Sync polarity mode 2 */
#define ENUM_EPPI_CTL_POLC11                 0x00003000    /* POLC: Clock/Sync polarity mode 3 */

#define BITM_EPPI_CTL_SIGNEXT                0x00000800    /* Sign Extension */
#define ENUM_EPPI_CTL_ZEROFILL               0x00000000    /* SIGNEXT: Cleared (Zero filled) */
#define ENUM_EPPI_CTL_SIGNEXT                0x00000800    /* SIGNEXT: Set (Sign extension) */

#define BITM_EPPI_CTL_IFSGEN                 0x00000400    /* Internal Frame Sync Generation */
#define ENUM_EPPI_CTL_EXTFS                  0x00000000    /* IFSGEN: Frame Sync are supplied externally */
#define ENUM_EPPI_CTL_INTFS                  0x00000400    /* IFSGEN: Frame Sync are generated internally */

#define BITM_EPPI_CTL_ICLKGEN                0x00000200    /* Internal Clock Generation */
#define ENUM_EPPI_CTL_EXTCLK                 0x00000000    /* ICLKGEN: CLK is supplied  externally */
#define ENUM_EPPI_CTL_INTCLK                 0x00000200    /* ICLKGEN: CLK is generated internally */

#define BITM_EPPI_CTL_BLANKGEN               0x00000100    /* ITU Output Mode with Internal Blanking Generation */
#define ENUM_EPPI_CTL_NO_BLANKGEN            0x00000000    /* BLANKGEN: Disabled */
#define ENUM_EPPI_CTL_BLANKGEN               0x00000100    /* BLANKGEN: Enabled */

#define BITM_EPPI_CTL_ITUTYPE                0x00000080    /* ITU Interlace or Progressive */
#define ENUM_EPPI_CTL_INTERLACED             0x00000000    /* ITUTYPE: Interlaced */
#define ENUM_EPPI_CTL_PROGRESSIVE            0x00000080    /* ITUTYPE: Progressive */

#define BITM_EPPI_CTL_FLDSEL                 0x00000040    /* Field Select/Trigger */
#define ENUM_EPPI_CTL_FLDSEL_LO              0x00000000    /* FLDSEL: Field Mode 0 */
#define ENUM_EPPI_CTL_FLDSEL_HI              0x00000040    /* FLDSEL: Field Mode 1 */

#define BITM_EPPI_CTL_FSCFG                  0x00000030    /* Frame Sync Configuration */
#define ENUM_EPPI_CTL_SYNC0                  0x00000000    /* FSCFG: Sync Mode 0 */
#define ENUM_EPPI_CTL_SYNC1                  0x00000010    /* FSCFG: Sync Mode 1 */
#define ENUM_EPPI_CTL_SYNC2                  0x00000020    /* FSCFG: Sync Mode 2 */
#define ENUM_EPPI_CTL_SYNC3                  0x00000030    /* FSCFG: Sync Mode 3 */

#define BITM_EPPI_CTL_XFRTYPE                0x0000000C    /* PPI Operating Mode */
#define ENUM_EPPI_CTL_ACTIVE656              0x00000000    /* XFRTYPE: ITU656 Active Video Only Mode */
#define ENUM_EPPI_CTL_ENTIRE656              0x00000004    /* XFRTYPE: ITU656 Entire Field Mode */
#define ENUM_EPPI_CTL_VERT656                0x00000008    /* XFRTYPE: ITU656 Vertical Blanking Only Mode */
#define ENUM_EPPI_CTL_NON656                 0x0000000C    /* XFRTYPE: Non-ITU656 Mode (GP Mode) */

#define BITM_EPPI_CTL_DIR                    0x00000002    /* PPI Direction */
#define ENUM_EPPI_CTL_RXMODE                 0x00000000    /* DIR: Receive Mode */
#define ENUM_EPPI_CTL_TXMODE                 0x00000002    /* DIR: Transmit Mode */

#define BITM_EPPI_CTL_EN                     0x00000001    /* PPI Enable */
#define ENUM_EPPI_CTL_DIS                    0x00000000    /* EN: Disable */
#define ENUM_EPPI_CTL_EN                     0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_FS2_WLVB                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_FS2_WLVB_F2VBAD            24            /* In GP transmit mode with BLANKGEN = 1, contains number of lines of vertical blanking after field 2 */
#define BITP_EPPI_FS2_WLVB_F2VBBD            16            /* In GP transmit mode with BLANKGEN = 1, contains number of lines of vertical blanking before field 2 */
#define BITP_EPPI_FS2_WLVB_F1VBAD             8            /* In GP transmit mode with, BLANKGEN = 1, contains number of lines of vertical blanking after field 1 */
#define BITP_EPPI_FS2_WLVB_F1VBBD             0            /* In GP 2, or 3 FS modes used to generate PPIx_FS2 width (32-bit). In GP Transmit mode, with BLANKGEN=1, contains the number of lines of Vertical blanking before field 1. */
#define BITM_EPPI_FS2_WLVB_F2VBAD            0xFF000000    /* In GP transmit mode with BLANKGEN = 1, contains number of lines of vertical blanking after field 2 */
#define BITM_EPPI_FS2_WLVB_F2VBBD            0x00FF0000    /* In GP transmit mode with BLANKGEN = 1, contains number of lines of vertical blanking before field 2 */
#define BITM_EPPI_FS2_WLVB_F1VBAD            0x0000FF00    /* In GP transmit mode with, BLANKGEN = 1, contains number of lines of vertical blanking after field 1 */
#define BITM_EPPI_FS2_WLVB_F1VBBD            0x000000FF    /* In GP 2, or 3 FS modes used to generate PPIx_FS2 width (32-bit). In GP Transmit mode, with BLANKGEN=1, contains the number of lines of Vertical blanking before field 1. */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_FS2_PALPF                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_FS2_PALPF_F2ACT            16            /* Number of lines of Active Data in Field 2 */
#define BITP_EPPI_FS2_PALPF_F1ACT             0            /* Number of lines of Active Data in Field 1 */
#define BITM_EPPI_FS2_PALPF_F2ACT            0xFFFF0000    /* Number of lines of Active Data in Field 2 */
#define BITM_EPPI_FS2_PALPF_F1ACT            0x0000FFFF    /* Number of lines of Active Data in Field 1 */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_IMSK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_IMSK_PXPERR                 7            /* Mask PxP Ready Error Interrupt */
#define BITP_EPPI_IMSK_ERRNCOR                6            /* Mask ITU Preamble Error Not Corrected Interrupt */
#define BITP_EPPI_IMSK_FTERRUNDR              5            /* Mask Frame Track Underflow Error Interrupt */
#define BITP_EPPI_IMSK_FTERROVR               4            /* Mask Frame Track Overflow Error Interrupt */
#define BITP_EPPI_IMSK_LTERRUNDR              3            /* Mask Line Track Underflow Error Interrupt */
#define BITP_EPPI_IMSK_LTERROVR               2            /* Mask Line Track Overflow Error Interrupt */
#define BITP_EPPI_IMSK_YFIFOERR               1            /* Mask YFIFO Underflow or Overflow Error Interrupt */
#define BITP_EPPI_IMSK_CFIFOERR               0            /* Mask CFIFO Underflow or Overflow Error Interrupt */
#define BITM_EPPI_IMSK_PXPERR                0x00000080    /* Mask PxP Ready Error Interrupt */

#define BITM_EPPI_IMSK_ERRNCOR               0x00000040    /* Mask ITU Preamble Error Not Corrected Interrupt */
#define ENUM_EPPI_IMSK_ERRNCOR_UMSK          0x00000000    /* ERRNCOR: Unmask "ITU preamble error not corrected" interrupt */
#define ENUM_EPPI_IMSK_ERRNCOR_MSK           0x00000040    /* ERRNCOR: Mask" ITU preamble error not corrected" interrupt */

#define BITM_EPPI_IMSK_FTERRUNDR             0x00000020    /* Mask Frame Track Underflow Error Interrupt */
#define ENUM_EPPI_IMSK_FTERRUNDR_UMSK        0x00000000    /* FTERRUNDR: Unmask frame track underflow error interrupt */
#define ENUM_EPPI_IMSK_FTERRUNDR_MSK         0x00000020    /* FTERRUNDR: Mask frame track underflow error interrupt */

#define BITM_EPPI_IMSK_FTERROVR              0x00000010    /* Mask Frame Track Overflow Error Interrupt */
#define ENUM_EPPI_IMSK_FTERROVR_UMSK         0x00000000    /* FTERROVR: Unmask frame track overflow error interrupt */
#define ENUM_EPPI_IMSK_FTERROVR_MSK          0x00000010    /* FTERROVR: Mask frame track overflow error interrupt */

#define BITM_EPPI_IMSK_LTERRUNDR             0x00000008    /* Mask Line Track Underflow Error Interrupt */
#define ENUM_EPPI_IMSK_LTERRUNDR_UMSK        0x00000000    /* LTERRUNDR: Unmask line track underflow error interrupt */
#define ENUM_EPPI_IMSK_LTERRUNDR_MSK         0x00000008    /* LTERRUNDR: Mask line track underflow error interrupt */

#define BITM_EPPI_IMSK_LTERROVR              0x00000004    /* Mask Line Track Overflow Error Interrupt */
#define ENUM_EPPI_IMSK_LTERROVR_UMSK         0x00000000    /* LTERROVR: Unmask line track overflow error interrupt */
#define ENUM_EPPI_IMSK_LTERROVR_MSK          0x00000004    /* LTERROVR: Mask line track overflow error interrupt */

#define BITM_EPPI_IMSK_YFIFOERR              0x00000002    /* Mask YFIFO Underflow or Overflow Error Interrupt */
#define ENUM_EPPI_IMSK_YFIFOERR_UMSK         0x00000000    /* YFIFOERR: Unmask YFIFO underflow or overflow error interrupt */
#define ENUM_EPPI_IMSK_YFIFOERR_MSK          0x00000002    /* YFIFOERR: Mask YFIFO underflow or overflow error interrupt */

#define BITM_EPPI_IMSK_CFIFOERR              0x00000001    /* Mask CFIFO Underflow or Overflow Error Interrupt */
#define ENUM_EPPI_IMSK_CFIFOERR_UMSK         0x00000000    /* CFIFOERR: Unmask CFIFO underflow or overflow error interrupt */
#define ENUM_EPPI_IMSK_CFIFOERR_MSK          0x00000001    /* CFIFOERR: Mask CFIFO underflow or overflow error interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_ODDCLIP                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_ODDCLIP_HIGHODD            16
#define BITP_EPPI_ODDCLIP_LOWODD              0
#define BITM_EPPI_ODDCLIP_HIGHODD            0xFFFF0000
#define BITM_EPPI_ODDCLIP_LOWODD             0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_EVENCLIP                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_EVENCLIP_HIGHEVEN          16
#define BITP_EPPI_EVENCLIP_LOWEVEN            0
#define BITM_EPPI_EVENCLIP_HIGHEVEN          0xFFFF0000
#define BITM_EPPI_EVENCLIP_LOWEVEN           0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        EPPI_CTL2                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EPPI_CTL2_FS1FINEN               1            /* HSYNC Finish Enable */

#define BITM_EPPI_CTL2_FS1FINEN              0x00000002    /* HSYNC Finish Enable */
#define ENUM_EPPI_CTL2_FS2FIN_EN             0x00000000    /* FS1FINEN: Finish sent after frame RX done */
#define ENUM_EPPI_CTL2_FS1FIN_EN             0x00000002    /* FS1FINEN: Finish sent after frame/line RX done */

/* =========================
        PIXC Registers
   ========================= */

/* =========================
        PIXC0
   ========================= */
#define REG_PIXC0_CTL                   0xFFC19000         /* PIXC0 Control Register */
#define REG_PIXC0_PPL                   0xFFC19004         /* PIXC0 Pixels Per Line Register */
#define REG_PIXC0_LPF                   0xFFC19008         /* PIXC0 Line Per Frame Register */
#define REG_PIXC0_HSTART_A              0xFFC1900C         /* PIXC0 Overlay A Horizontal Start Register */
#define REG_PIXC0_HEND_A                0xFFC19010         /* PIXC0 Overlay A Horizontal End Register */
#define REG_PIXC0_VSTART_A              0xFFC19014         /* PIXC0 Overlay A Vertical Start Register */
#define REG_PIXC0_VEND_A                0xFFC19018         /* PIXC0 Overlay A Vertical End Register */
#define REG_PIXC0_TRANSP_A              0xFFC1901C         /* PIXC0 Overlay A Transparency Ratio Register */
#define REG_PIXC0_HSTART_B              0xFFC19020         /* PIXC0 Overlay B Horizontal Start Register */
#define REG_PIXC0_HEND_B                0xFFC19024         /* PIXC0 Overlay B Horizontal End Register */
#define REG_PIXC0_VSTART_B              0xFFC19028         /* PIXC0 Overlay B Vertical Start Register */
#define REG_PIXC0_VEND_B                0xFFC1902C         /* PIXC0 Overlay B Vertical End Register */
#define REG_PIXC0_TRANSP_B              0xFFC19030         /* PIXC0 Overlay B Transparency Ratio Register */
#define REG_PIXC0_IRQSTAT               0xFFC1903C         /* PIXC0 Interrupt Status Register */
#define REG_PIXC0_CONRY                 0xFFC19040         /* PIXC0 RY Conversion Component Register */
#define REG_PIXC0_CONGU                 0xFFC19044         /* PIXC0 GU Conversion Component Register */
#define REG_PIXC0_CONBV                 0xFFC19048         /* PIXC0 BV Conversion Component Register */
#define REG_PIXC0_CCBIAS                0xFFC1904C         /* PIXC0 Conversion Bias Register */
#define REG_PIXC0_TC                    0xFFC19050         /* PIXC0 Transparency Register */
#define REG_PIXC0_REVID                 0xFFC19054         /* PIXC0 PIXC Revision Id */

/* =========================
        PIXC
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_CTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_CTL_ORGBFRMT               10            /* Output RGB Data Format */
#define BITP_PIXC_CTL_IRGBFRMT                8            /* Input Image Channel RGB Data Format */
#define BITP_PIXC_CTL_ENTC                    7            /* Enable Transparent Color */
#define BITP_PIXC_CTL_UDSMOD                  6            /* Up/Down Sampling Mode */
#define BITP_PIXC_CTL_OUTFRMT                 5            /* Output Data Format */
#define BITP_PIXC_CTL_OVFRMT                  4            /* Overlay Data Format */
#define BITP_PIXC_CTL_IFRMT                   3            /* Image Data Format */
#define BITP_PIXC_CTL_OVENB                   2            /* Overlay Block B Enable */
#define BITP_PIXC_CTL_OVENA                   1            /* Overlay Block A Enable */
#define BITP_PIXC_CTL_EN                      0            /* Overlay Manager enable (module enable) */
#define BITM_PIXC_CTL_ORGBFRMT               0x00000C00    /* Output RGB Data Format */
#define BITM_PIXC_CTL_IRGBFRMT               0x00000300    /* Input Image Channel RGB Data Format */
#define BITM_PIXC_CTL_ENTC                   0x00000080    /* Enable Transparent Color */
#define BITM_PIXC_CTL_UDSMOD                 0x00000040    /* Up/Down Sampling Mode */
#define BITM_PIXC_CTL_OUTFRMT                0x00000020    /* Output Data Format */
#define BITM_PIXC_CTL_OVFRMT                 0x00000010    /* Overlay Data Format */
#define BITM_PIXC_CTL_IFRMT                  0x00000008    /* Image Data Format */
#define BITM_PIXC_CTL_OVENB                  0x00000004    /* Overlay Block B Enable */
#define BITM_PIXC_CTL_OVENA                  0x00000002    /* Overlay Block A Enable */
#define BITM_PIXC_CTL_EN                     0x00000001    /* Overlay Manager enable (module enable) */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_TRANSP_A                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_TRANSP_A_VALUE              0            /* Overlay Transparency Ratio Values */
#define BITM_PIXC_TRANSP_A_VALUE             0x0000000F    /* Overlay Transparency Ratio Values */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_TRANSP_B                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_TRANSP_B_VALUE              0            /* Overlay Transparency Ratio Values */
#define BITM_PIXC_TRANSP_B_VALUE             0x0000000F    /* Overlay Transparency Ratio Values */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_IRQSTAT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_IRQSTAT_FRMSTAT             3            /* Frame Interrupt Status */
#define BITP_PIXC_IRQSTAT_OVSTAT              2            /* Overlay Interrupt Status */
#define BITP_PIXC_IRQSTAT_FRMEN               1            /* Frame Interrupt  Enable */
#define BITP_PIXC_IRQSTAT_OVEN                0            /* Overlay Interrupt Enable3 */
#define BITM_PIXC_IRQSTAT_FRMSTAT            0x00000008    /* Frame Interrupt Status */
#define BITM_PIXC_IRQSTAT_OVSTAT             0x00000004    /* Overlay Interrupt Status */
#define BITM_PIXC_IRQSTAT_FRMEN              0x00000002    /* Frame Interrupt  Enable */
#define BITM_PIXC_IRQSTAT_OVEN               0x00000001    /* Overlay Interrupt Enable3 */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_CONRY                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_CONRY_RYMULT4              30            /* Multiply the Row by 4 */
#define BITP_PIXC_CONRY_A13                  20            /* A13 element in the coefficient matrix */
#define BITP_PIXC_CONRY_A12                  10            /* A12 element in the coefficient matrix */
#define BITP_PIXC_CONRY_A11                   0            /* A11 element in the coefficient matrix */
#define BITM_PIXC_CONRY_RYMULT4              0x40000000    /* Multiply the Row by 4 */
#define BITM_PIXC_CONRY_A13                  0x3FF00000    /* A13 element in the coefficient matrix */
#define BITM_PIXC_CONRY_A12                  0x000FFC00    /* A12 element in the coefficient matrix */
#define BITM_PIXC_CONRY_A11                  0x000003FF    /* A11 element in the coefficient matrix */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_CONGU                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_CONGU_GUMULT4              30            /* Multiply The Row By 4 */
#define BITP_PIXC_CONGU_A23                  20            /* A23 element in the coefficient matrix */
#define BITP_PIXC_CONGU_A22                  10            /* A22 element in the coefficient matrix */
#define BITP_PIXC_CONGU_A21                   0            /* A21 element in the coefficient matrix */
#define BITM_PIXC_CONGU_GUMULT4              0x40000000    /* Multiply The Row By 4 */
#define BITM_PIXC_CONGU_A23                  0x3FF00000    /* A23 element in the coefficient matrix */
#define BITM_PIXC_CONGU_A22                  0x000FFC00    /* A22 element in the coefficient matrix */
#define BITM_PIXC_CONGU_A21                  0x000003FF    /* A21 element in the coefficient matrix */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_CONBV                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_CONBV_BVMULT4              30            /* Multiply The Row By 4 */
#define BITP_PIXC_CONBV_A33                  20            /* A33 element in the coefficient matrix */
#define BITP_PIXC_CONBV_A32                  10            /* A32 element in the coefficient matrix */
#define BITP_PIXC_CONBV_A31                   0            /* A31 element in the coefficient matrix */
#define BITM_PIXC_CONBV_BVMULT4              0x40000000    /* Multiply The Row By 4 */
#define BITM_PIXC_CONBV_A33                  0x3FF00000    /* A33 element in the coefficient matrix */
#define BITM_PIXC_CONBV_A32                  0x000FFC00    /* A32 element in the coefficient matrix */
#define BITM_PIXC_CONBV_A31                  0x000003FF    /* A31 element in the coefficient matrix */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_CCBIAS                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_CCBIAS_A34                 20            /* A34 in bias vector */
#define BITP_PIXC_CCBIAS_A24                 10            /* A24 in bias vector */
#define BITP_PIXC_CCBIAS_A14                  0            /* A14 in bias vector */
#define BITM_PIXC_CCBIAS_A34                 0x3FF00000    /* A34 in bias vector */
#define BITM_PIXC_CCBIAS_A24                 0x000FFC00    /* A24 in bias vector */
#define BITM_PIXC_CCBIAS_A14                 0x000003FF    /* A14 in bias vector */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_TC                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_TC_BVT                     16            /* Trans. color - B/V component */
#define BITP_PIXC_TC_GUT                      8            /* Trans. color - G/U component */
#define BITP_PIXC_TC_RYT                      0            /* Trans. color - R/Y component */
#define BITM_PIXC_TC_BVT                     0x00FF0000    /* Trans. color - B/V component */
#define BITM_PIXC_TC_GUT                     0x0000FF00    /* Trans. color - G/U component */
#define BITM_PIXC_TC_RYT                     0x000000FF    /* Trans. color - R/Y component */

/* ------------------------------------------------------------------------------------------------------------------------
        PIXC_REVID                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PIXC_REVID_MAJOR                 4            /* Major Version ID */
#define BITP_PIXC_REVID_REV                   0            /* Incremental Version ID */
#define BITM_PIXC_REVID_MAJOR                0x000000F0    /* Major Version ID */
#define BITM_PIXC_REVID_REV                  0x0000000F    /* Incremental Version ID */

/* =========================
        PVP Registers
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PVP                             Block level enums
   ------------------------------------------------------------------------------------------------------------------------ */
#define ENUM_PVP_GCFG                   0x00          /* PVP Block ID Code for GCFG */
#define ENUM_PVP_OPF0                   0x01          /* PVP Block ID Code for OPF0 */
#define ENUM_PVP_OPF1                   0x02          /* PVP Block ID Code for OPF1 */
#define ENUM_PVP_OPF2                   0x03          /* PVP Block ID Code for OPF2 */
#define ENUM_PVP_OPF3                   0x04          /* PVP Block ID Code for OPF3 */
#define ENUM_PVP_PEC                    0x05          /* PVP Block ID Code for PEC */
#define ENUM_PVP_IIM0                   0x06          /* PVP Block ID Code for IIM0 */
#define ENUM_PVP_IIM1                   0x07          /* PVP Block ID Code for IIM1 */
#define ENUM_PVP_ACU                    0x08          /* PVP Block ID Code for ACU */
#define ENUM_PVP_UDS                    0x0A          /* PVP Block ID Code for UDS */
#define ENUM_PVP_IPF0                   0x0C          /* PVP Block ID Code for IPF0 */
#define ENUM_PVP_IPF1                   0x0E          /* PVP Block ID Code for IPF1 */
#define ENUM_PVP_CNV0                   0x10          /* PVP Block ID Code for CNV0 */
#define ENUM_PVP_CNV1                   0x14          /* PVP Block ID Code for CNV1 */
#define ENUM_PVP_CNV2                   0x18          /* PVP Block ID Code for CNV2 */
#define ENUM_PVP_CNV3                   0x1C          /* PVP Block ID Code for CNV3 */
#define ENUM_PVP_THC0                   0x20          /* PVP Block ID Code for THC0 */
#define ENUM_PVP_THC1                   0x28          /* PVP Block ID Code for THC1 */
#define ENUM_PVP_PMA                    0x30          /* PVP Block ID Code for PMA */

/* =========================
        PVP0
   ========================= */
#define REG_PVP0_REVID                  0xFFC1A000         /* PVP0 Revision ID */
#define REG_PVP0_CTL                    0xFFC1A004         /* PVP0 Control */
#define REG_PVP0_IMSK0                  0xFFC1A008         /* PVP0 INTn interrupt line masks */
#define REG_PVP0_IMSK1                  0xFFC1A00C         /* PVP0 INTn interrupt line masks */
#define REG_PVP0_STAT                   0xFFC1A010         /* PVP0 Status */
#define REG_PVP0_ILAT                   0xFFC1A014         /* PVP0 Latched status */
#define REG_PVP0_IREQ0                  0xFFC1A018         /* PVP0 INT0 masked latched status */
#define REG_PVP0_IREQ1                  0xFFC1A01C         /* PVP0 INT0 masked latched status */
#define REG_PVP0_OPF0_CFG               0xFFC1A020         /* PVP0 Config */
#define REG_PVP0_OPF1_CFG               0xFFC1A040         /* PVP0 Config */
#define REG_PVP0_OPF2_CFG               0xFFC1A060         /* PVP0 Config */
#define REG_PVP0_OPF0_CTL               0xFFC1A024         /* PVP0 Control */
#define REG_PVP0_OPF1_CTL               0xFFC1A044         /* PVP0 Control */
#define REG_PVP0_OPF2_CTL               0xFFC1A064         /* PVP0 Control */
#define REG_PVP0_OPF3_CFG               0xFFC1A080         /* PVP0 Config */
#define REG_PVP0_OPF3_CTL               0xFFC1A084         /* PVP0 Control */
#define REG_PVP0_PEC_CFG                0xFFC1A0A0         /* PVP0 Config */
#define REG_PVP0_PEC_CTL                0xFFC1A0A4         /* PVP0 Control */
#define REG_PVP0_PEC_D1TH0              0xFFC1A0A8         /* PVP0 Lower Hysteresis Threshold */
#define REG_PVP0_PEC_D1TH1              0xFFC1A0AC         /* PVP0 Upper Hysteresis Threshold */
#define REG_PVP0_PEC_D2TH0              0xFFC1A0B0         /* PVP0 Weak Zero Crossing Threshold */
#define REG_PVP0_PEC_D2TH1              0xFFC1A0B4         /* PVP0 Strong Zero Crossing Threshold */
#define REG_PVP0_IIM0_CFG               0xFFC1A0C0         /* PVP0 Config */
#define REG_PVP0_IIM1_CFG               0xFFC1A0E0         /* PVP0 Config */
#define REG_PVP0_IIM0_CTL               0xFFC1A0C4         /* PVP0 Control */
#define REG_PVP0_IIM1_CTL               0xFFC1A0E4         /* PVP0 Control */
#define REG_PVP0_IIM0_SCALE             0xFFC1A0C8         /* PVP0 Scaler Values */
#define REG_PVP0_IIM1_SCALE             0xFFC1A0E8         /* PVP0 Scaler Values */
#define REG_PVP0_IIM0_SOVF_STAT         0xFFC1A0CC         /* PVP0 Signed Overflow Status */
#define REG_PVP0_IIM1_SOVF_STAT         0xFFC1A0EC         /* PVP0 Signed Overflow Status */
#define REG_PVP0_IIM0_UOVF_STAT         0xFFC1A0D0         /* PVP0 Unsigned Overflow Status */
#define REG_PVP0_IIM1_UOVF_STAT         0xFFC1A0F0         /* PVP0 Unsigned Overflow Status */
#define REG_PVP0_ACU_CFG                0xFFC1A100         /* PVP0 ACU Configuration Register */
#define REG_PVP0_ACU_CTL                0xFFC1A104         /* PVP0 ACU Control Register */
#define REG_PVP0_ACU_OFFSET             0xFFC1A108         /* PVP0 SUM constant register */
#define REG_PVP0_ACU_FACTOR             0xFFC1A10C         /* PVP0 PROD constant register */
#define REG_PVP0_ACU_SHIFT              0xFFC1A110         /* PVP0 Shift constant register */
#define REG_PVP0_ACU_MIN                0xFFC1A114         /* PVP0 Lower saturation threshold set to MIN */
#define REG_PVP0_ACU_MAX                0xFFC1A118         /* PVP0 Upper saturation threshold set to MAX */
#define REG_PVP0_UDS_CFG                0xFFC1A140         /* PVP0 UDS Configuration Register */
#define REG_PVP0_UDS_CTL                0xFFC1A144         /* PVP0 UDS Control Register */
#define REG_PVP0_UDS_OHCNT              0xFFC1A148         /* PVP0 UDS Output H Dimension */
#define REG_PVP0_UDS_OVCNT              0xFFC1A14C         /* PVP0 UDS Output V Dimension */
#define REG_PVP0_UDS_HAVG               0xFFC1A150         /* PVP0 UDS H Taps */
#define REG_PVP0_UDS_VAVG               0xFFC1A154         /* PVP0 UDS V Taps */
#define REG_PVP0_IPF0_CFG               0xFFC1A180         /* PVP0 Configuration */
#define REG_PVP0_IPF0_PIPECTL           0xFFC1A184         /* PVP0 Pipe Control */
#define REG_PVP0_IPF1_PIPECTL           0xFFC1A1C4         /* PVP0 Pipe Control */
#define REG_PVP0_IPF0_CTL               0xFFC1A188         /* PVP0 Control */
#define REG_PVP0_IPF1_CTL               0xFFC1A1C8         /* PVP0 Control */
#define REG_PVP0_IPF0_TAG               0xFFC1A18C         /* PVP0 TAG Value */
#define REG_PVP0_IPF1_TAG               0xFFC1A1CC         /* PVP0 TAG Value */
#define REG_PVP0_IPF0_FCNT              0xFFC1A190         /* PVP0 Frame Count */
#define REG_PVP0_IPF1_FCNT              0xFFC1A1D0         /* PVP0 Frame Count */
#define REG_PVP0_IPF0_HCNT              0xFFC1A194         /* PVP0 Horizontal Count */
#define REG_PVP0_IPF1_HCNT              0xFFC1A1D4         /* PVP0 Horizontal Count */
#define REG_PVP0_IPF0_VCNT              0xFFC1A198         /* PVP0 Vertical Count */
#define REG_PVP0_IPF1_VCNT              0xFFC1A1D8         /* PVP0 Vertical Count */
#define REG_PVP0_IPF0_HPOS              0xFFC1A19C         /* PVP0 Horizontal Position */
#define REG_PVP0_IPF0_VPOS              0xFFC1A1A0         /* PVP0 Vertical Position */
#define REG_PVP0_IPF0_TAG_STAT          0xFFC1A1A4         /* PVP0 TAG Status */
#define REG_PVP0_IPF1_TAG_STAT          0xFFC1A1E4         /* PVP0 TAG Status */
#define REG_PVP0_IPF1_CFG               0xFFC1A1C0         /* PVP0 Configuration */
#define REG_PVP0_CNV0_CFG               0xFFC1A200         /* PVP0 Configuration */
#define REG_PVP0_CNV1_CFG               0xFFC1A280         /* PVP0 Configuration */
#define REG_PVP0_CNV2_CFG               0xFFC1A300         /* PVP0 Configuration */
#define REG_PVP0_CNV3_CFG               0xFFC1A380         /* PVP0 Configuration */
#define REG_PVP0_CNV0_CTL               0xFFC1A204         /* PVP0 Control */
#define REG_PVP0_CNV1_CTL               0xFFC1A284         /* PVP0 Control */
#define REG_PVP0_CNV2_CTL               0xFFC1A304         /* PVP0 Control */
#define REG_PVP0_CNV3_CTL               0xFFC1A384         /* PVP0 Control */
#define REG_PVP0_CNV0_C00C01            0xFFC1A208         /* PVP0 Coefficients 0, 0 and 0, 1 */
#define REG_PVP0_CNV1_C00C01            0xFFC1A288         /* PVP0 Coefficients 0, 0 and 0, 1 */
#define REG_PVP0_CNV2_C00C01            0xFFC1A308         /* PVP0 Coefficients 0, 0 and 0, 1 */
#define REG_PVP0_CNV3_C00C01            0xFFC1A388         /* PVP0 Coefficients 0, 0 and 0, 1 */
#define REG_PVP0_CNV0_C02C03            0xFFC1A20C         /* PVP0 Coefficients 0, 2 and 0, 3 */
#define REG_PVP0_CNV1_C02C03            0xFFC1A28C         /* PVP0 Coefficients 0, 2 and 0, 3 */
#define REG_PVP0_CNV2_C02C03            0xFFC1A30C         /* PVP0 Coefficients 0, 2 and 0, 3 */
#define REG_PVP0_CNV3_C02C03            0xFFC1A38C         /* PVP0 Coefficients 0, 2 and 0, 3 */
#define REG_PVP0_CNV0_C04               0xFFC1A210         /* PVP0 Coefficient 0, 4 */
#define REG_PVP0_CNV1_C04               0xFFC1A290         /* PVP0 Coefficient 0, 4 */
#define REG_PVP0_CNV2_C04               0xFFC1A310         /* PVP0 Coefficient 0, 4 */
#define REG_PVP0_CNV3_C04               0xFFC1A390         /* PVP0 Coefficient 0, 4 */
#define REG_PVP0_CNV0_C10C11            0xFFC1A214         /* PVP0 Coefficients 1, 0 and 1, 1 */
#define REG_PVP0_CNV1_C10C11            0xFFC1A294         /* PVP0 Coefficients 1, 0 and 1, 1 */
#define REG_PVP0_CNV2_C10C11            0xFFC1A314         /* PVP0 Coefficients 1, 0 and 1, 1 */
#define REG_PVP0_CNV3_C10C11            0xFFC1A394         /* PVP0 Coefficients 1, 0 and 1, 1 */
#define REG_PVP0_CNV0_C12C13            0xFFC1A218         /* PVP0 Coefficients 1, 2 and 1, 3 */
#define REG_PVP0_CNV1_C12C13            0xFFC1A298         /* PVP0 Coefficients 1, 2 and 1, 3 */
#define REG_PVP0_CNV2_C12C13            0xFFC1A318         /* PVP0 Coefficients 1, 2 and 1, 3 */
#define REG_PVP0_CNV3_C12C13            0xFFC1A398         /* PVP0 Coefficients 1, 2 and 1, 3 */
#define REG_PVP0_CNV0_C14               0xFFC1A21C         /* PVP0 Coefficient 1, 4 */
#define REG_PVP0_CNV1_C14               0xFFC1A29C         /* PVP0 Coefficient 1, 4 */
#define REG_PVP0_CNV2_C14               0xFFC1A31C         /* PVP0 Coefficient 1, 4 */
#define REG_PVP0_CNV3_C14               0xFFC1A39C         /* PVP0 Coefficient 1, 4 */
#define REG_PVP0_CNV0_C20C21            0xFFC1A220         /* PVP0 Coefficients 2, 0 and 2, 1 */
#define REG_PVP0_CNV1_C20C21            0xFFC1A2A0         /* PVP0 Coefficients 2, 0 and 2, 1 */
#define REG_PVP0_CNV2_C20C21            0xFFC1A320         /* PVP0 Coefficients 2, 0 and 2, 1 */
#define REG_PVP0_CNV3_C20C21            0xFFC1A3A0         /* PVP0 Coefficients 2, 0 and 2, 1 */
#define REG_PVP0_CNV0_C22C23            0xFFC1A224         /* PVP0 Coefficients 2, 2 and 2, 3 */
#define REG_PVP0_CNV1_C22C23            0xFFC1A2A4         /* PVP0 Coefficients 2, 2 and 2, 3 */
#define REG_PVP0_CNV2_C22C23            0xFFC1A324         /* PVP0 Coefficients 2, 2 and 2, 3 */
#define REG_PVP0_CNV3_C22C23            0xFFC1A3A4         /* PVP0 Coefficients 2, 2 and 2, 3 */
#define REG_PVP0_CNV0_C24               0xFFC1A228         /* PVP0 Coefficient 2,4 */
#define REG_PVP0_CNV1_C24               0xFFC1A2A8         /* PVP0 Coefficient 2,4 */
#define REG_PVP0_CNV2_C24               0xFFC1A328         /* PVP0 Coefficient 2,4 */
#define REG_PVP0_CNV3_C24               0xFFC1A3A8         /* PVP0 Coefficient 2,4 */
#define REG_PVP0_CNV0_C30C31            0xFFC1A22C         /* PVP0 Coefficients 3, 0 and 3, 1 */
#define REG_PVP0_CNV1_C30C31            0xFFC1A2AC         /* PVP0 Coefficients 3, 0 and 3, 1 */
#define REG_PVP0_CNV2_C30C31            0xFFC1A32C         /* PVP0 Coefficients 3, 0 and 3, 1 */
#define REG_PVP0_CNV3_C30C31            0xFFC1A3AC         /* PVP0 Coefficients 3, 0 and 3, 1 */
#define REG_PVP0_CNV0_C32C33            0xFFC1A230         /* PVP0 Coefficients 3, 2 and 3, 3 */
#define REG_PVP0_CNV1_C32C33            0xFFC1A2B0         /* PVP0 Coefficients 3, 2 and 3, 3 */
#define REG_PVP0_CNV2_C32C33            0xFFC1A330         /* PVP0 Coefficients 3, 2 and 3, 3 */
#define REG_PVP0_CNV3_C32C33            0xFFC1A3B0         /* PVP0 Coefficients 3, 2 and 3, 3 */
#define REG_PVP0_CNV0_C34               0xFFC1A234         /* PVP0 Coefficient 3, 4 */
#define REG_PVP0_CNV1_C34               0xFFC1A2B4         /* PVP0 Coefficient 3, 4 */
#define REG_PVP0_CNV2_C34               0xFFC1A334         /* PVP0 Coefficient 3, 4 */
#define REG_PVP0_CNV3_C34               0xFFC1A3B4         /* PVP0 Coefficient 3, 4 */
#define REG_PVP0_CNV0_C40C41            0xFFC1A238         /* PVP0 Coefficients 4, 0 and 4, 1 */
#define REG_PVP0_CNV1_C40C41            0xFFC1A2B8         /* PVP0 Coefficients 4, 0 and 4, 1 */
#define REG_PVP0_CNV2_C40C41            0xFFC1A338         /* PVP0 Coefficients 4, 0 and 4, 1 */
#define REG_PVP0_CNV3_C40C41            0xFFC1A3B8         /* PVP0 Coefficients 4, 0 and 4, 1 */
#define REG_PVP0_CNV0_C42C43            0xFFC1A23C         /* PVP0 Coefficients 4, 2 and 4, 3 */
#define REG_PVP0_CNV1_C42C43            0xFFC1A2BC         /* PVP0 Coefficients 4, 2 and 4, 3 */
#define REG_PVP0_CNV2_C42C43            0xFFC1A33C         /* PVP0 Coefficients 4, 2 and 4, 3 */
#define REG_PVP0_CNV3_C42C43            0xFFC1A3BC         /* PVP0 Coefficients 4, 2 and 4, 3 */
#define REG_PVP0_CNV0_C44               0xFFC1A240         /* PVP0 Coefficient 4, 4 */
#define REG_PVP0_CNV1_C44               0xFFC1A2C0         /* PVP0 Coefficient 4, 4 */
#define REG_PVP0_CNV2_C44               0xFFC1A340         /* PVP0 Coefficient 4, 4 */
#define REG_PVP0_CNV3_C44               0xFFC1A3C0         /* PVP0 Coefficient 4, 4 */
#define REG_PVP0_CNV0_SCALE             0xFFC1A244         /* PVP0 Scaling factor */
#define REG_PVP0_CNV1_SCALE             0xFFC1A2C4         /* PVP0 Scaling factor */
#define REG_PVP0_CNV2_SCALE             0xFFC1A344         /* PVP0 Scaling factor */
#define REG_PVP0_CNV3_SCALE             0xFFC1A3C4         /* PVP0 Scaling factor */
#define REG_PVP0_THC0_CFG               0xFFC1A400         /* PVP0 Configuration */
#define REG_PVP0_THC1_CFG               0xFFC1A500         /* PVP0 Configuration */
#define REG_PVP0_THC0_CTL               0xFFC1A404         /* PVP0 Control */
#define REG_PVP0_THC1_CTL               0xFFC1A504         /* PVP0 Control */
#define REG_PVP0_THC0_HFCNT             0xFFC1A408         /* PVP0 Number of frames */
#define REG_PVP0_THC1_HFCNT             0xFFC1A508         /* PVP0 Number of frames */
#define REG_PVP0_THC0_RMAXREP           0xFFC1A40C         /* PVP0 Maximum number of RLE reports */
#define REG_PVP0_THC1_RMAXREP           0xFFC1A50C         /* PVP0 Maximum number of RLE reports */
#define REG_PVP0_THC0_CMINVAL           0xFFC1A410         /* PVP0 Min clip value */
#define REG_PVP0_THC1_CMINVAL           0xFFC1A510         /* PVP0 Min clip value */
#define REG_PVP0_THC0_CMINTH            0xFFC1A414         /* PVP0 Clip Min Threshold */
#define REG_PVP0_THC1_CMINTH            0xFFC1A514         /* PVP0 Clip Min Threshold */
#define REG_PVP0_THC0_CMAXTH            0xFFC1A418         /* PVP0 Clip Max Threshold */
#define REG_PVP0_THC1_CMAXTH            0xFFC1A518         /* PVP0 Clip Max Threshold */
#define REG_PVP0_THC0_CMAXVAL           0xFFC1A41C         /* PVP0 Max clip value */
#define REG_PVP0_THC1_CMAXVAL           0xFFC1A51C         /* PVP0 Max clip value */
#define REG_PVP0_THC0_TH0               0xFFC1A420         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH0               0xFFC1A520         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH1               0xFFC1A424         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH1               0xFFC1A524         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH2               0xFFC1A428         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH2               0xFFC1A528         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH3               0xFFC1A42C         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH3               0xFFC1A52C         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH4               0xFFC1A430         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH4               0xFFC1A530         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH5               0xFFC1A434         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH5               0xFFC1A534         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH6               0xFFC1A438         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH6               0xFFC1A538         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH7               0xFFC1A43C         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH7               0xFFC1A53C         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH8               0xFFC1A440         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH8               0xFFC1A540         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH9               0xFFC1A444         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH9               0xFFC1A544         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH10              0xFFC1A448         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH10              0xFFC1A548         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH11              0xFFC1A44C         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH11              0xFFC1A54C         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH12              0xFFC1A450         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH12              0xFFC1A550         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH13              0xFFC1A454         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH13              0xFFC1A554         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH14              0xFFC1A458         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH14              0xFFC1A558         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_TH15              0xFFC1A45C         /* PVP0 Threshold Value */
#define REG_PVP0_THC1_TH15              0xFFC1A55C         /* PVP0 Threshold Value */
#define REG_PVP0_THC0_HHPOS             0xFFC1A460         /* PVP0 Window start X-coordinate */
#define REG_PVP0_THC1_HHPOS             0xFFC1A560         /* PVP0 Window start X-coordinate */
#define REG_PVP0_THC0_HVPOS             0xFFC1A464         /* PVP0 Window start Y-coordinate */
#define REG_PVP0_THC1_HVPOS             0xFFC1A564         /* PVP0 Window start Y-coordinate */
#define REG_PVP0_THC0_HHCNT             0xFFC1A468         /* PVP0 Window width in X dimension */
#define REG_PVP0_THC1_HHCNT             0xFFC1A568         /* PVP0 Window width in X dimension */
#define REG_PVP0_THC0_HVCNT             0xFFC1A46C         /* PVP0 Window width in Y dimension */
#define REG_PVP0_THC1_HVCNT             0xFFC1A56C         /* PVP0 Window width in Y dimension */
#define REG_PVP0_THC0_RHPOS             0xFFC1A470         /* PVP0 Window start X-coordinate */
#define REG_PVP0_THC1_RHPOS             0xFFC1A570         /* PVP0 Window start X-coordinate */
#define REG_PVP0_THC0_RVPOS             0xFFC1A474         /* PVP0 Window start Y-coordinate */
#define REG_PVP0_THC1_RVPOS             0xFFC1A574         /* PVP0 Window start Y-coordinate */
#define REG_PVP0_THC0_RHCNT             0xFFC1A478         /* PVP0 Window width in X dimension */
#define REG_PVP0_THC1_RHCNT             0xFFC1A578         /* PVP0 Window width in X dimension */
#define REG_PVP0_THC0_RVCNT             0xFFC1A47C         /* PVP0 Window width in Y dimension */
#define REG_PVP0_THC1_RVCNT             0xFFC1A57C         /* PVP0 Window width in Y dimension */
#define REG_PVP0_THC0_HFCNT_STAT        0xFFC1A480         /* PVP0 Current Frame counter */
#define REG_PVP0_THC1_HFCNT_STAT        0xFFC1A580         /* PVP0 Current Frame counter */
#define REG_PVP0_THC0_HCNT0_STAT        0xFFC1A484         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT0_STAT        0xFFC1A584         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT1_STAT        0xFFC1A488         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT1_STAT        0xFFC1A588         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT2_STAT        0xFFC1A48C         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT2_STAT        0xFFC1A58C         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT3_STAT        0xFFC1A490         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT3_STAT        0xFFC1A590         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT4_STAT        0xFFC1A494         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT4_STAT        0xFFC1A594         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT5_STAT        0xFFC1A498         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT5_STAT        0xFFC1A598         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT6_STAT        0xFFC1A49C         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT6_STAT        0xFFC1A59C         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT7_STAT        0xFFC1A4A0         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT7_STAT        0xFFC1A5A0         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT8_STAT        0xFFC1A4A4         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT8_STAT        0xFFC1A5A4         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT9_STAT        0xFFC1A4A8         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT9_STAT        0xFFC1A5A8         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT10_STAT       0xFFC1A4AC         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT10_STAT       0xFFC1A5AC         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT11_STAT       0xFFC1A4B0         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT11_STAT       0xFFC1A5B0         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT12_STAT       0xFFC1A4B4         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT12_STAT       0xFFC1A5B4         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT13_STAT       0xFFC1A4B8         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT13_STAT       0xFFC1A5B8         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT14_STAT       0xFFC1A4BC         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT14_STAT       0xFFC1A5BC         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_HCNT15_STAT       0xFFC1A4C0         /* PVP0 Histogram counter value */
#define REG_PVP0_THC1_HCNT15_STAT       0xFFC1A5C0         /* PVP0 Histogram counter value */
#define REG_PVP0_THC0_RREP_STAT         0xFFC1A4C4         /* PVP0 Number of RLE Reports */
#define REG_PVP0_THC1_RREP_STAT         0xFFC1A5C4         /* PVP0 Number of RLE Reports */
#define REG_PVP0_PMA_CFG                0xFFC1A600         /* PVP0 PMA Configuration Register */

/* =========================
        PVP
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PVP_REVID                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_REVID_MAJOR                  4            /* Major ID */
#define BITP_PVP_REVID_REV                    0            /* Revision ID for a given Major ID */
#define BITM_PVP_REVID_MAJOR                 0x000000F0    /* Major ID */
#define BITM_PVP_REVID_REV                   0x0000000F    /* Revision ID for a given Major ID */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CTL_CLKDIV                   4            /* Source of PVPCLK */
#define BITP_PVP_CTL_CPEN                     2            /* Camera Pipe Enable */
#define BITP_PVP_CTL_MPEN                     1            /* Memory Pipe Enable */
#define BITP_PVP_CTL_PVPEN                    0            /* Enable PVP Module */

#define BITM_PVP_CTL_CLKDIV                  0x00000010    /* Source of PVPCLK */
#define ENUM_PVP_CTL_CLKDIV1                 0x00000000    /* CLKDIV: PVPCLK is System Clock source divided by 1 */
#define ENUM_PVP_CTL_CLKDIV2                 0x00000010    /* CLKDIV: PVPCLK is System Clock source divided by 2 */

#define BITM_PVP_CTL_CPEN                    0x00000004    /* Camera Pipe Enable */
#define ENUM_PVP_CTL_CPDIS                   0x00000000    /* CPEN: Camera Pipe Disable */
#define ENUM_PVP_CTL_CPEN                    0x00000004    /* CPEN: Camera Pipe Enable */

#define BITM_PVP_CTL_MPEN                    0x00000002    /* Memory Pipe Enable */
#define ENUM_PVP_CTL_MPDIS                   0x00000000    /* MPEN: Memory Pipe Disable */
#define ENUM_PVP_CTL_MPEN                    0x00000002    /* MPEN: Memory Pipe Enable */

#define BITM_PVP_CTL_PVPEN                   0x00000001    /* Enable PVP Module */
#define ENUM_PVP_CTL_PVPDIS                  0x00000000    /* PVPEN: PVP Disable */
#define ENUM_PVP_CTL_PVPEN                   0x00000001    /* PVPEN: PVP Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IMSK                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IMSK_ACUSUMSAT              27            /* ACU SUM Saturate Mask */
#define BITP_PVP_IMSK_ACUPRODSAT             26            /* ACU PROD Saturate Mask */
#define BITP_PVP_IMSK_ACUOUTSAT              25            /* ACU MIN/MAX Saturate Mask */
#define BITP_PVP_IMSK_ACUDIVERR              24            /* ACU Divide By Zero Mask */
#define BITP_PVP_IMSK_IIM1SOVF               23            /* IIM1 Signed Overflow Mask */
#define BITP_PVP_IMSK_IIM1UOVF               22            /* IIM1 Unsigned Overflow Mask */
#define BITP_PVP_IMSK_IIM0SOVF               21            /* IIM0 Signed Overflow Mask */
#define BITP_PVP_IMSK_IIM0UOVF               20            /* IIM0 Unsigned Overflow Mask */
#define BITP_PVP_IMSK_THC1RDY                18            /* THC1 Report Ready Mask */
#define BITP_PVP_IMSK_THC0RDY                16            /* THC0 Report Ready Mask */
#define BITP_PVP_IMSK_MPRDY                  15            /* Memory Pipe Ready Mask */
#define BITP_PVP_IMSK_CPRDY                  14            /* Camera Pipe Ready Mask */
#define BITP_PVP_IMSK_MPDRN                  13            /* Memory Pipe Drain Done Mask */
#define BITP_PVP_IMSK_CPDRN                  12            /* Camera Pipe Drain Done Mask */
#define BITP_PVP_IMSK_CPIPFOVF               10            /* Camera Pipe Pixel Overrun Mask */
#define BITP_PVP_IMSK_MPOPFDAT                9            /* Memory Pipe First Pixel Mask */
#define BITP_PVP_IMSK_CPOPFDAT                8            /* Camera Pipe First Pixel Mask */
#define BITP_PVP_IMSK_CPSTOVF                 7            /* Status DDE Stall Error Mask */
#define BITP_PVP_IMSK_OPF2OVF                 6            /* OPF2 DDE Stall Error Mask */
#define BITP_PVP_IMSK_OPF1OVF                 5            /* OPF1 DDE Stall Error Mask */
#define BITP_PVP_IMSK_OPF0OVF                 4            /* OPF0 DDE Stall Error Mask */
#define BITP_PVP_IMSK_MPWRERR                 3            /* Memory Pipe MMR Write Error Mask */
#define BITP_PVP_IMSK_CPWRERR                 2            /* Camera Pipe MMR Write Error Mask */
#define BITP_PVP_IMSK_MPDC                    1            /* Memory Pipe DC Mask */
#define BITP_PVP_IMSK_CPDC                    0            /* Camera Pipe DC Mask */

/* The fields and enumerations for PVP_IMSK are also in PVP - see the common set of ENUM_PVP_* #defines located with register PVP_STAT */

#define BITM_PVP_IMSK_ACUSUMSAT              0x08000000    /* ACU SUM Saturate Mask */
#define BITM_PVP_IMSK_ACUPRODSAT             0x04000000    /* ACU PROD Saturate Mask */
#define BITM_PVP_IMSK_ACUOUTSAT              0x02000000    /* ACU MIN/MAX Saturate Mask */
#define BITM_PVP_IMSK_ACUDIVERR              0x01000000    /* ACU Divide By Zero Mask */
#define BITM_PVP_IMSK_IIM1SOVF               0x00800000    /* IIM1 Signed Overflow Mask */
#define BITM_PVP_IMSK_IIM1UOVF               0x00400000    /* IIM1 Unsigned Overflow Mask */
#define BITM_PVP_IMSK_IIM0SOVF               0x00200000    /* IIM0 Signed Overflow Mask */
#define BITM_PVP_IMSK_IIM0UOVF               0x00100000    /* IIM0 Unsigned Overflow Mask */
#define BITM_PVP_IMSK_THC1RDY                0x00040000    /* THC1 Report Ready Mask */
#define BITM_PVP_IMSK_THC0RDY                0x00010000    /* THC0 Report Ready Mask */
#define BITM_PVP_IMSK_MPRDY                  0x00008000    /* Memory Pipe Ready Mask */
#define BITM_PVP_IMSK_CPRDY                  0x00004000    /* Camera Pipe Ready Mask */
#define BITM_PVP_IMSK_MPDRN                  0x00002000    /* Memory Pipe Drain Done Mask */
#define BITM_PVP_IMSK_CPDRN                  0x00001000    /* Camera Pipe Drain Done Mask */
#define BITM_PVP_IMSK_CPIPFOVF               0x00000400    /* Camera Pipe Pixel Overrun Mask */
#define BITM_PVP_IMSK_MPOPFDAT               0x00000200    /* Memory Pipe First Pixel Mask */
#define BITM_PVP_IMSK_CPOPFDAT               0x00000100    /* Camera Pipe First Pixel Mask */
#define BITM_PVP_IMSK_CPSTOVF                0x00000080    /* Status DDE Stall Error Mask */
#define BITM_PVP_IMSK_OPF2OVF                0x00000040    /* OPF2 DDE Stall Error Mask */
#define BITM_PVP_IMSK_OPF1OVF                0x00000020    /* OPF1 DDE Stall Error Mask */
#define BITM_PVP_IMSK_OPF0OVF                0x00000010    /* OPF0 DDE Stall Error Mask */
#define BITM_PVP_IMSK_MPWRERR                0x00000008    /* Memory Pipe MMR Write Error Mask */
#define BITM_PVP_IMSK_CPWRERR                0x00000004    /* Camera Pipe MMR Write Error Mask */
#define BITM_PVP_IMSK_MPDC                   0x00000002    /* Memory Pipe DC Mask */
#define BITM_PVP_IMSK_CPDC                   0x00000001    /* Camera Pipe DC Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_STAT_ACUSUMSAT              27            /* ACU SUM Saturate Status */
#define BITP_PVP_STAT_ACUPRODSAT             26            /* ACU PROD Saturate Status */
#define BITP_PVP_STAT_ACUOUTSAT              25            /* ACU MIN/MAX Saturate Status */
#define BITP_PVP_STAT_ACUDIVERR              24            /* ACU Divide By Zero Status */
#define BITP_PVP_STAT_IIM1SOVF               23            /* IIM1 Signed Overflow Status */
#define BITP_PVP_STAT_IIM1UOVF               22            /* IIM1 Unsigned Overflow Status */
#define BITP_PVP_STAT_IIM0SOVF               21            /* IIM0 Signed Overflow Status */
#define BITP_PVP_STAT_IIM0UOVF               20            /* IIM0 Unsigned Overflow Status */
#define BITP_PVP_STAT_THC1RDY                18            /* THC1 Report Ready Status */
#define BITP_PVP_STAT_THC0RDY                16            /* THC0 Report Ready Status */
#define BITP_PVP_STAT_MPRDY                  15            /* Memory Pipe Ready Status */
#define BITP_PVP_STAT_CPRDY                  14            /* Camera Pipe Ready Status */
#define BITP_PVP_STAT_MPDRN                  13            /* Memory Pipe Drain Done Status */
#define BITP_PVP_STAT_CPDRN                  12            /* Camera Pipe Drain Done Status */
#define BITP_PVP_STAT_CPIPFOVF               10            /* Camera Pipe Pixel Overrun Status */
#define BITP_PVP_STAT_MPOPFDAT                9            /* Memory Pipe First Pixel Status */
#define BITP_PVP_STAT_CPOPFDAT                8            /* Camera Pipe First Pixel Status */
#define BITP_PVP_STAT_CPSTOVF                 7            /* Camera Pipe DDE Stall Error Status */
#define BITP_PVP_STAT_OPF2OVF                 6            /* OPF2 DDE Stall Error Status */
#define BITP_PVP_STAT_OPF1OVF                 5            /* OPF1 DDE Stall Error Status */
#define BITP_PVP_STAT_OPF0OVF                 4            /* OPF0 DDE Stall Error Status */
#define BITP_PVP_STAT_MPWRERR                 3            /* Memory Pipe MMR Write Error Status */
#define BITP_PVP_STAT_CPWRERR                 2            /* Camera Pipe MMR Write Error Status */
#define BITP_PVP_STAT_MPDC                    1            /* Memory Pipe DC Status */
#define BITP_PVP_STAT_CPDC                    0            /* Camera Pipe DC Status */

#define BITM_PVP_STAT_ACUSUMSAT              0x08000000    /* ACU SUM Saturate Status */
#define ENUM_PVP_ACUSUMSAT_LO                0x00000000    /* ACUSUMSAT: ACU Sum Saturation LO */
#define ENUM_PVP_ACUSUMSAT_HI                0x08000000    /* ACUSUMSAT: ACU Sum Saturation HI */

#define BITM_PVP_STAT_ACUPRODSAT             0x04000000    /* ACU PROD Saturate Status */
#define ENUM_PVP_ACUPRODSAT_LO               0x00000000    /* ACUPRODSAT: ACU Product Saturation LO */
#define ENUM_PVP_ACUPRODSAT_HI               0x04000000    /* ACUPRODSAT: ACU Product Saturation HI */

#define BITM_PVP_STAT_ACUOUTSAT              0x02000000    /* ACU MIN/MAX Saturate Status */
#define ENUM_PVP_ACUOUTSAT_LO                0x00000000    /* ACUOUTSAT: ACU Output Saturation LO */
#define ENUM_PVP_ACUOUTSAT_HI                0x02000000    /* ACUOUTSAT: ACU Output Saturation HI */

#define BITM_PVP_STAT_ACUDIVERR              0x01000000    /* ACU Divide By Zero Status */
#define ENUM_PVP_ACUDIVERR_LO                0x00000000    /* ACUDIVERR: ACU Divide Error LO */
#define ENUM_PVP_ACUDIVERR_HI                0x01000000    /* ACUDIVERR: ACU Divide Error HI */

#define BITM_PVP_STAT_IIM1SOVF               0x00800000    /* IIM1 Signed Overflow Status */
#define ENUM_PVP_IIM1SOVF_LO                 0x00000000    /* IIM1SOVF: IIM1 Signed Overflow bit LO */
#define ENUM_PVP_IIM1SOVF_HI                 0x00800000    /* IIM1SOVF: IIM1 Signed Overflow bit HI */

#define BITM_PVP_STAT_IIM1UOVF               0x00400000    /* IIM1 Unsigned Overflow Status */
#define ENUM_PVP_IIM1UOVF_LO                 0x00000000    /* IIM1UOVF: IIM1 Unsigned Overflow bit LO */
#define ENUM_PVP_IIM1UOVF_HI                 0x00400000    /* IIM1UOVF: IIM1 Unsigned Overflow bit HI */

#define BITM_PVP_STAT_IIM0SOVF               0x00200000    /* IIM0 Signed Overflow Status */
#define ENUM_PVP_IIM0SOVF_LO                 0x00000000    /* IIM0SOVF: IIM0 Signed Overflow bit LO */
#define ENUM_PVP_IIM0SOVF_HI                 0x00200000    /* IIM0SOVF: IIM0 Signed Overflow bit HI */

#define BITM_PVP_STAT_IIM0UOVF               0x00100000    /* IIM0 Unsigned Overflow Status */
#define ENUM_PVP_IIM0UOVF_LO                 0x00000000    /* IIM0UOVF: IIM0 Unsigned Overflow bit LO */
#define ENUM_PVP_IIM0UOVF_HI                 0x00100000    /* IIM0UOVF: IIM0 Unsigned Overflow bit HI */

#define BITM_PVP_STAT_THC1RDY                0x00040000    /* THC1 Report Ready Status */
#define ENUM_PVP_THC1RDY_LO                  0x00000000    /* THC1RDY: THC1RDY LO */
#define ENUM_PVP_THC1RDY_HI                  0x00040000    /* THC1RDY: THC1RDY HI */

#define BITM_PVP_STAT_THC0RDY                0x00010000    /* THC0 Report Ready Status */
#define ENUM_PVP_THC0RDY_LO                  0x00000000    /* THC0RDY: THC0RDY LO */
#define ENUM_PVP_THC0RDY_HI                  0x00010000    /* THC0RDY: THC0RDY HI */

#define BITM_PVP_STAT_MPRDY                  0x00008000    /* Memory Pipe Ready Status */
#define ENUM_PVP_MPRDY_LO                    0x00000000    /* MPRDY: Memory Pipe Ready LO */
#define ENUM_PVP_MPRDY_HI                    0x00008000    /* MPRDY: Memory Pipe Ready HI */

#define BITM_PVP_STAT_CPRDY                  0x00004000    /* Camera Pipe Ready Status */
#define ENUM_PVP_CPRDY_LO                    0x00000000    /* CPRDY: Camera Pipe Ready LO */
#define ENUM_PVP_CPRDY_HI                    0x00004000    /* CPRDY: Camera Pipe Ready HI */

#define BITM_PVP_STAT_MPDRN                  0x00002000    /* Memory Pipe Drain Done Status */
#define ENUM_PVP_MPDRN_LO                    0x00000000    /* MPDRN: Memory Pipe Drain LO */
#define ENUM_PVP_MPDRN_HI                    0x00002000    /* MPDRN: Memory Pipe Drain HI */

#define BITM_PVP_STAT_CPDRN                  0x00001000    /* Camera Pipe Drain Done Status */
#define ENUM_PVP_CPDRN_LO                    0x00000000    /* CPDRN: Camera Pipe Drain LO */
#define ENUM_PVP_CPDRN_HI                    0x00001000    /* CPDRN: Camera Pipe Drain HI */

#define BITM_PVP_STAT_CPIPFOVF               0x00000400    /* Camera Pipe Pixel Overrun Status */
#define ENUM_PVP_CPIPFOVF_LO                 0x00000000    /* CPIPFOVF: Camera Pipe Overrun LO */
#define ENUM_PVP_CPIPFOVF_HI                 0x00000400    /* CPIPFOVF: Camera Pipe Overrun HI */

#define BITM_PVP_STAT_MPOPFDAT               0x00000200    /* Memory Pipe First Pixel Status */
#define ENUM_PVP_MPOPFDAT_LO                 0x00000000    /* MPOPFDAT: Memory Pipe OPFDAT LO */
#define ENUM_PVP_MPOPFDAT_HI                 0x00000200    /* MPOPFDAT: Memory Pipe OPFDAT HI */

#define BITM_PVP_STAT_CPOPFDAT               0x00000100    /* Camera Pipe First Pixel Status */
#define ENUM_PVP_CPOPFDAT_LO                 0x00000000    /* CPOPFDAT: Camera Pipe OPFDAT LO */
#define ENUM_PVP_CPOPFDAT_HI                 0x00000100    /* CPOPFDAT: Camera Pipe OPFDAT HI */

#define BITM_PVP_STAT_CPSTOVF                0x00000080    /* Camera Pipe DDE Stall Error Status */
#define ENUM_PVP_CPSTOVF_LO                  0x00000000    /* CPSTOVF: Camera Pipe Stall Error LO */
#define ENUM_PVP_CPSTOVF_HI                  0x00000080    /* CPSTOVF: Camera Pipe Stall Error HI */

#define BITM_PVP_STAT_OPF2OVF                0x00000040    /* OPF2 DDE Stall Error Status */
#define ENUM_PVP_OPF2OVF_LO                  0x00000000    /* OPF2OVF: OPF2 Overflow LO */
#define ENUM_PVP_OPF2OVF_HI                  0x00000040    /* OPF2OVF: OPF2 Overflow HI */

#define BITM_PVP_STAT_OPF1OVF                0x00000020    /* OPF1 DDE Stall Error Status */
#define ENUM_PVP_OPF1OVF_LO                  0x00000000    /* OPF1OVF: OPF1 Overflow LO */
#define ENUM_PVP_OPF1OVF_HI                  0x00000020    /* OPF1OVF: OPF1 Overflow HI */

#define BITM_PVP_STAT_OPF0OVF                0x00000010    /* OPF0 DDE Stall Error Status */
#define ENUM_PVP_OPF0OVF_LO                  0x00000000    /* OPF0OVF: OPF0 Overflow LO */
#define ENUM_PVP_OPF0OVF_HI                  0x00000010    /* OPF0OVF: OPF0 Overflow HI */

#define BITM_PVP_STAT_MPWRERR                0x00000008    /* Memory Pipe MMR Write Error Status */
#define ENUM_PVP_MPWRERR_LO                  0x00000000    /* MPWRERR: Memory Pipe Write Error LO */
#define ENUM_PVP_MPWRERR_HI                  0x00000008    /* MPWRERR: Memory Pipe Write Error HI */

#define BITM_PVP_STAT_CPWRERR                0x00000004    /* Camera Pipe MMR Write Error Status */
#define ENUM_PVP_CPWRERR_LO                  0x00000000    /* CPWRERR: Camera Pipe Write Error LO */
#define ENUM_PVP_CPWRERR_HI                  0x00000004    /* CPWRERR: Camera Pipe Write Error HI */

#define BITM_PVP_STAT_MPDC                   0x00000002    /* Memory Pipe DC Status */
#define ENUM_PVP_MPDC_LO                     0x00000000    /* MPDC: Memory Pipe daisy chain LO */
#define ENUM_PVP_MPDC_HI                     0x00000002    /* MPDC: Memory Pipe daisy chain HI */

#define BITM_PVP_STAT_CPDC                   0x00000001    /* Camera Pipe DC Status */
#define ENUM_PVP_CPDC_LO                     0x00000000    /* CPDC: Camera Pipe daisy chain LO */
#define ENUM_PVP_CPDC_HI                     0x00000001    /* CPDC: Camera Pipe daisy chain HI */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_ILAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_ILAT_ACUSUMSAT              27            /* ACU SUM Saturate Mask */
#define BITP_PVP_ILAT_ACUPRODSAT             26            /* ACU PROD Saturate Mask */
#define BITP_PVP_ILAT_ACUOUTSAT              25            /* ACU MIN/MAX Saturate Mask */
#define BITP_PVP_ILAT_ACUDIVERR              24            /* ACU Divide By Zero Mask */
#define BITP_PVP_ILAT_IIM1SOVF               23            /* IIM1 Signed Overflow Mask */
#define BITP_PVP_ILAT_IIM1UOVF               22            /* IIM1 Unsigned Overflow Mask */
#define BITP_PVP_ILAT_IIM0SOVF               21            /* IIM0 Signed Overflow Mask */
#define BITP_PVP_ILAT_IIM0UOVF               20            /* IIM0 Unsigned Overflow Mask */
#define BITP_PVP_ILAT_THC1RDY                18            /* THC1 Report Ready Mask */
#define BITP_PVP_ILAT_THC0RDY                16            /* THC0 Report Ready Mask */
#define BITP_PVP_ILAT_MPRDY                  15            /* Memory Pipe Ready Mask */
#define BITP_PVP_ILAT_CPRDY                  14            /* Camera Pipe Ready Mask */
#define BITP_PVP_ILAT_MPDRN                  13            /* Memory Pipe Drain Done Mask */
#define BITP_PVP_ILAT_CPDRN                  12            /* Camera Pipe Drain Done Mask */
#define BITP_PVP_ILAT_CPIPFOVF               10            /* Camera Pipe Pixel Overrun Mask */
#define BITP_PVP_ILAT_MPOPFDAT                9            /* Memory Pipe First Pixel Mask */
#define BITP_PVP_ILAT_CPOPFDAT                8            /* Camera Pipe First Pixel Mask */
#define BITP_PVP_ILAT_CPSTOVF                 7            /* Status DDE Stall Error Mask */
#define BITP_PVP_ILAT_OPF2OVF                 6            /* OPF2 DDE Stall Error Mask */
#define BITP_PVP_ILAT_OPF1OVF                 5            /* OPF1 DDE Stall Error Mask */
#define BITP_PVP_ILAT_OPF0OVF                 4            /* OPF0 DDE Stall Error Mask */
#define BITP_PVP_ILAT_MPWRERR                 3            /* Memory Pipe MMR Write Error Mask */
#define BITP_PVP_ILAT_CPWRERR                 2            /* Camera Pipe MMR Write Error Mask */
#define BITP_PVP_ILAT_MPDC                    1            /* Memory Pipe DC Mask */
#define BITP_PVP_ILAT_CPDC                    0            /* Camera Pipe DC Mask */

/* The fields and enumerations for PVP_ILAT are also in PVP - see the common set of ENUM_PVP_* #defines located with register PVP_STAT */

#define BITM_PVP_ILAT_ACUSUMSAT              0x08000000    /* ACU SUM Saturate Mask */
#define BITM_PVP_ILAT_ACUPRODSAT             0x04000000    /* ACU PROD Saturate Mask */
#define BITM_PVP_ILAT_ACUOUTSAT              0x02000000    /* ACU MIN/MAX Saturate Mask */
#define BITM_PVP_ILAT_ACUDIVERR              0x01000000    /* ACU Divide By Zero Mask */
#define BITM_PVP_ILAT_IIM1SOVF               0x00800000    /* IIM1 Signed Overflow Mask */
#define BITM_PVP_ILAT_IIM1UOVF               0x00400000    /* IIM1 Unsigned Overflow Mask */
#define BITM_PVP_ILAT_IIM0SOVF               0x00200000    /* IIM0 Signed Overflow Mask */
#define BITM_PVP_ILAT_IIM0UOVF               0x00100000    /* IIM0 Unsigned Overflow Mask */
#define BITM_PVP_ILAT_THC1RDY                0x00040000    /* THC1 Report Ready Mask */
#define BITM_PVP_ILAT_THC0RDY                0x00010000    /* THC0 Report Ready Mask */
#define BITM_PVP_ILAT_MPRDY                  0x00008000    /* Memory Pipe Ready Mask */
#define BITM_PVP_ILAT_CPRDY                  0x00004000    /* Camera Pipe Ready Mask */
#define BITM_PVP_ILAT_MPDRN                  0x00002000    /* Memory Pipe Drain Done Mask */
#define BITM_PVP_ILAT_CPDRN                  0x00001000    /* Camera Pipe Drain Done Mask */
#define BITM_PVP_ILAT_CPIPFOVF               0x00000400    /* Camera Pipe Pixel Overrun Mask */
#define BITM_PVP_ILAT_MPOPFDAT               0x00000200    /* Memory Pipe First Pixel Mask */
#define BITM_PVP_ILAT_CPOPFDAT               0x00000100    /* Camera Pipe First Pixel Mask */
#define BITM_PVP_ILAT_CPSTOVF                0x00000080    /* Status DDE Stall Error Mask */
#define BITM_PVP_ILAT_OPF2OVF                0x00000040    /* OPF2 DDE Stall Error Mask */
#define BITM_PVP_ILAT_OPF1OVF                0x00000020    /* OPF1 DDE Stall Error Mask */
#define BITM_PVP_ILAT_OPF0OVF                0x00000010    /* OPF0 DDE Stall Error Mask */
#define BITM_PVP_ILAT_MPWRERR                0x00000008    /* Memory Pipe MMR Write Error Mask */
#define BITM_PVP_ILAT_CPWRERR                0x00000004    /* Camera Pipe MMR Write Error Mask */
#define BITM_PVP_ILAT_MPDC                   0x00000002    /* Memory Pipe DC Mask */
#define BITM_PVP_ILAT_CPDC                   0x00000001    /* Camera Pipe DC Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IREQ                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IREQ_ACUSUMSAT              27            /* ACU SUM Saturate Mask */
#define BITP_PVP_IREQ_ACUPRODSAT             26            /* ACU PROD Saturate Mask */
#define BITP_PVP_IREQ_ACUOUTSAT              25            /* ACU MIN/MAX Saturate Mask */
#define BITP_PVP_IREQ_ACUDIVERR              24            /* ACU Divide By Zero Mask */
#define BITP_PVP_IREQ_IIM1SOVF               23            /* IIM1 Signed Overflow Mask */
#define BITP_PVP_IREQ_IIM1UOVF               22            /* IIM1 Unsigned Overflow Mask */
#define BITP_PVP_IREQ_IIM0SOVF               21            /* IIM0 Signed Overflow Mask */
#define BITP_PVP_IREQ_IIM0UOVF               20            /* IIM0 Unsigned Overflow Mask */
#define BITP_PVP_IREQ_THC1RDY                18            /* THC1 Report Ready Mask */
#define BITP_PVP_IREQ_THC0RDY                16            /* THC0 Report Ready Mask */
#define BITP_PVP_IREQ_MPRDY                  15            /* Memory Pipe Ready Mask */
#define BITP_PVP_IREQ_CPRDY                  14            /* Camera Pipe Ready Mask */
#define BITP_PVP_IREQ_MPDRN                  13            /* Memory Pipe Drain Done Mask */
#define BITP_PVP_IREQ_CPDRN                  12            /* Camera Pipe Drain Done Mask */
#define BITP_PVP_IREQ_CPIPFOVF               10            /* Camera Pipe Pixel Overrun Mask */
#define BITP_PVP_IREQ_MPOPFDAT                9            /* Memory Pipe First Pixel Mask */
#define BITP_PVP_IREQ_CPOPFDAT                8            /* Camera Pipe First Pixel Mask */
#define BITP_PVP_IREQ_CPSTOVF                 7            /* Status DDE Stall Error Mask */
#define BITP_PVP_IREQ_OPF2OVF                 6            /* OPF2 DDE Stall Error Mask */
#define BITP_PVP_IREQ_OPF1OVF                 5            /* OPF1 DDE Stall Error Mask */
#define BITP_PVP_IREQ_OPF0OVF                 4            /* OPF0 DDE Stall Error Mask */
#define BITP_PVP_IREQ_MPWRERR                 3            /* Memory Pipe MMR Write Error Mask */
#define BITP_PVP_IREQ_CPWRERR                 2            /* Camera Pipe MMR Write Error Mask */
#define BITP_PVP_IREQ_MPDC                    1            /* Memory Pipe DC Mask */
#define BITP_PVP_IREQ_CPDC                    0            /* Camera Pipe DC Mask */

/* The fields and enumerations for PVP_IREQ are also in PVP - see the common set of ENUM_PVP_* #defines located with register PVP_STAT */

#define BITM_PVP_IREQ_ACUSUMSAT              0x08000000    /* ACU SUM Saturate Mask */
#define BITM_PVP_IREQ_ACUPRODSAT             0x04000000    /* ACU PROD Saturate Mask */
#define BITM_PVP_IREQ_ACUOUTSAT              0x02000000    /* ACU MIN/MAX Saturate Mask */
#define BITM_PVP_IREQ_ACUDIVERR              0x01000000    /* ACU Divide By Zero Mask */
#define BITM_PVP_IREQ_IIM1SOVF               0x00800000    /* IIM1 Signed Overflow Mask */
#define BITM_PVP_IREQ_IIM1UOVF               0x00400000    /* IIM1 Unsigned Overflow Mask */
#define BITM_PVP_IREQ_IIM0SOVF               0x00200000    /* IIM0 Signed Overflow Mask */
#define BITM_PVP_IREQ_IIM0UOVF               0x00100000    /* IIM0 Unsigned Overflow Mask */
#define BITM_PVP_IREQ_THC1RDY                0x00040000    /* THC1 Report Ready Mask */
#define BITM_PVP_IREQ_THC0RDY                0x00010000    /* THC0 Report Ready Mask */
#define BITM_PVP_IREQ_MPRDY                  0x00008000    /* Memory Pipe Ready Mask */
#define BITM_PVP_IREQ_CPRDY                  0x00004000    /* Camera Pipe Ready Mask */
#define BITM_PVP_IREQ_MPDRN                  0x00002000    /* Memory Pipe Drain Done Mask */
#define BITM_PVP_IREQ_CPDRN                  0x00001000    /* Camera Pipe Drain Done Mask */
#define BITM_PVP_IREQ_CPIPFOVF               0x00000400    /* Camera Pipe Pixel Overrun Mask */
#define BITM_PVP_IREQ_MPOPFDAT               0x00000200    /* Memory Pipe First Pixel Mask */
#define BITM_PVP_IREQ_CPOPFDAT               0x00000100    /* Camera Pipe First Pixel Mask */
#define BITM_PVP_IREQ_CPSTOVF                0x00000080    /* Status DDE Stall Error Mask */
#define BITM_PVP_IREQ_OPF2OVF                0x00000040    /* OPF2 DDE Stall Error Mask */
#define BITM_PVP_IREQ_OPF1OVF                0x00000020    /* OPF1 DDE Stall Error Mask */
#define BITM_PVP_IREQ_OPF0OVF                0x00000010    /* OPF0 DDE Stall Error Mask */
#define BITM_PVP_IREQ_MPWRERR                0x00000008    /* Memory Pipe MMR Write Error Mask */
#define BITM_PVP_IREQ_CPWRERR                0x00000004    /* Camera Pipe MMR Write Error Mask */
#define BITM_PVP_IREQ_MPDC                   0x00000002    /* Memory Pipe DC Mask */
#define BITM_PVP_IREQ_CPDC                   0x00000001    /* Camera Pipe DC Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_OPF_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_OPF_CFG_IBLOCK0              8            /* Input Block ID */
#define BITP_PVP_OPF_CFG_IPORT0               4            /* Input Port ID */
#define BITP_PVP_OPF_CFG_MPIPE                2            /* Memory Pipe */
#define BITP_PVP_OPF_CFG_START                0            /* Start */
#define BITM_PVP_OPF_CFG_IBLOCK0             0x0000FF00    /* Input Block ID */
#define BITM_PVP_OPF_CFG_IPORT0              0x00000030    /* Input Port ID */
#define BITM_PVP_OPF_CFG_MPIPE               0x00000004    /* Memory Pipe */
#define BITM_PVP_OPF_CFG_START               0x00000001    /* Start */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_OPF_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_OPF_CTL_FINISH              12            /* Finish Signalling Enable */
#define BITP_PVP_OPF_CTL_OSIZE                8            /* Output Data Size */
#define BITP_PVP_OPF_CTL_QFRMT                5            /* Q Format Correction */
#define BITP_PVP_OPF_CTL_IUP16                4            /* Input Data Word Select */
#define BITP_PVP_OPF_CTL_ISIZE                0            /* Input Data Size */

#define BITM_PVP_OPF_CTL_FINISH              0x00001000    /* Finish Signalling Enable */
#define ENUM_PVP_OPF_CTL_NOFINISH            0x00000000    /* FINISH: Finish Signalling disabled */
#define ENUM_PVP_OPF_CTL_FINISH              0x00001000    /* FINISH: Finish Signalling enabled on frame boundary */

#define BITM_PVP_OPF_CTL_OSIZE               0x00000300    /* Output Data Size */
#define ENUM_PVP_OPF_CTL_OSIZE32             0x00000000    /* OSIZE: 32-bit output data size */
#define ENUM_PVP_OPF_CTL_OSIZE16             0x00000100    /* OSIZE: 16-bit output data size */
#define ENUM_PVP_OPF_CTL_OSIZE8              0x00000200    /* OSIZE: 8-bit output data size */

#define BITM_PVP_OPF_CTL_QFRMT               0x00000020    /* Q Format Correction */
#define ENUM_PVP_OPF_CTL_NOQFRMT             0x00000000    /* QFRMT: No Q format correction */
#define ENUM_PVP_OPF_CTL_QFRMT               0x00000020    /* QFRMT: Convert data to unsigned by 1 left shift */

#define BITM_PVP_OPF_CTL_IUP16               0x00000010    /* Input Data Word Select */
#define ENUM_PVP_OPF_CTL_LOWER16             0x00000000    /* IUP16: Lower 16 bit */
#define ENUM_PVP_OPF_CTL_UPPER16             0x00000010    /* IUP16: Upper 16 bit */

#define BITM_PVP_OPF_CTL_ISIZE               0x00000003    /* Input Data Size */
#define ENUM_PVP_OPF_CTL_ISIZE32             0x00000000    /* ISIZE: 32-bit input data size */
#define ENUM_PVP_OPF_CTL_ISIZE16             0x00000001    /* ISIZE: 16-bit input data size */
#define ENUM_PVP_OPF_CTL_ISIZE8              0x00000002    /* ISIZE: 8-bit input data size */
#define ENUM_PVP_OPF_CTL_ISIZE4              0x00000003    /* ISIZE: 4-bit input data size */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_OPF3_CFG                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_OPF3_CFG_IBLOCK0             8            /* Input Block ID */
#define BITP_PVP_OPF3_CFG_IPORT0              4            /* Input Port ID */
#define BITP_PVP_OPF3_CFG_MPIPE               2            /* Memory Pipe */
#define BITP_PVP_OPF3_CFG_START               0            /* Start */
#define BITM_PVP_OPF3_CFG_IBLOCK0            0x0000FF00    /* Input Block ID */
#define BITM_PVP_OPF3_CFG_IPORT0             0x00000030    /* Input Port ID */
#define BITM_PVP_OPF3_CFG_MPIPE              0x00000004    /* Memory Pipe */
#define BITM_PVP_OPF3_CFG_START              0x00000001    /* Start */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_OPF3_CTL                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_OPF3_CTL_FINISH             12            /* Finish Signalling Enable */
#define BITP_PVP_OPF3_CTL_OSIZE               8            /* Output Data Size */
#define BITP_PVP_OPF3_CTL_QFRMT               5            /* Q Format Correction */
#define BITP_PVP_OPF3_CTL_IUP16               4            /* Input Data Word Select */
#define BITP_PVP_OPF3_CTL_ISIZE               0            /* Input Data Size */

#define BITM_PVP_OPF3_CTL_FINISH             0x00001000    /* Finish Signalling Enable */
#define ENUM_PVP_OPF3_CTL_NOFINISH           0x00000000    /* FINISH: Finish Signalling disabled */
#define ENUM_PVP_OPF3_CTL_FINISH             0x00001000    /* FINISH: Finish Signalling enabled on frame boundary */

#define BITM_PVP_OPF3_CTL_OSIZE              0x00000300    /* Output Data Size */
#define ENUM_PVP_OPF3_CTL_OSIZE32            0x00000000    /* OSIZE: 32-bit output data size */
#define ENUM_PVP_OPF3_CTL_OSIZE16            0x00000100    /* OSIZE: 16-bit output data size */
#define ENUM_PVP_OPF3_CTL_OSIZE8             0x00000200    /* OSIZE: 8-bit output data size */

#define BITM_PVP_OPF3_CTL_QFRMT              0x00000020    /* Q Format Correction */
#define ENUM_PVP_OPF3_CTL_NOQFRMT            0x00000000    /* QFRMT: No Q format correction */
#define ENUM_PVP_OPF3_CTL_QFRMT              0x00000020    /* QFRMT: Convert data to unsigned by 1 left shift */

#define BITM_PVP_OPF3_CTL_IUP16              0x00000010    /* Input Data Word Select */
#define ENUM_PVP_OPF3_CTL_LOWER16            0x00000000    /* IUP16: Lower 16 bit */
#define ENUM_PVP_OPF3_CTL_UPPER16            0x00000010    /* IUP16: Upper 16 bit */

#define BITM_PVP_OPF3_CTL_ISIZE              0x00000003    /* Input Data Size */
#define ENUM_PVP_OPF3_CTL_ISIZE32            0x00000000    /* ISIZE: 32-bit input data size */
#define ENUM_PVP_OPF3_CTL_ISIZE16            0x00000001    /* ISIZE: 16-bit input data size */
#define ENUM_PVP_OPF3_CTL_ISIZE8             0x00000002    /* ISIZE: 8-bit input data size */
#define ENUM_PVP_OPF3_CTL_ISIZE4             0x00000003    /* ISIZE: 4-bit input data size */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PEC_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PEC_CFG_IBLOCK0              8            /* Input Block ID */
#define BITP_PVP_PEC_CFG_IPORT0               4            /* Input Port ID */
#define BITP_PVP_PEC_CFG_MPIPE                2            /* Memory Pipe */
#define BITP_PVP_PEC_CFG_START                0            /* Start */
#define BITM_PVP_PEC_CFG_IBLOCK0             0x0000FF00    /* Input Block ID */
#define BITM_PVP_PEC_CFG_IPORT0              0x00000030    /* Input Port ID */

#define BITM_PVP_PEC_CFG_MPIPE               0x00000004    /* Memory Pipe */
#define ENUM_PVP_PEC_CFG_CAMPIPE             0x00000000    /* MPIPE: Camera Pipe */
#define ENUM_PVP_PEC_CFG_MEMPIPE             0x00000004    /* MPIPE: Memory pipe */
#define BITM_PVP_PEC_CFG_START               0x00000001    /* Start */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PEC_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PEC_CTL_IGNTH1               3            /* Encoding Control */
#define BITP_PVP_PEC_CTL_OSIZE                2            /* Output Data Size per Bin */
#define BITP_PVP_PEC_CTL_ZCRSS                1            /* Sub-Pixel Value Output Select */
#define BITP_PVP_PEC_CTL_MODE                 0            /* Derivative Mode Select */

#define BITM_PVP_PEC_CTL_IGNTH1              0x00000008    /* Encoding Control */
#define ENUM_PVP_PEC_CTL_ENCODEDIFF          0x00000000    /* IGNTH1: Give different encoding for strong and weak edges */
#define ENUM_PVP_PEC_CTL_ENCODESAME          0x00000008    /* IGNTH1: Give the same encoding for strong and weak edges */

#define BITM_PVP_PEC_CTL_OSIZE               0x00000004    /* Output Data Size per Bin */
#define ENUM_PVP_PEC_CTL_BIN8                0x00000000    /* OSIZE: PEC output data size is 8 bits per bin */
#define ENUM_PVP_PEC_CTL_BIN16               0x00000004    /* OSIZE: PEC output data size is 16 bits per bin */

#define BITM_PVP_PEC_CTL_ZCRSS               0x00000002    /* Sub-Pixel Value Output Select */
#define ENUM_PVP_PEC_CTL_ANGLE               0x00000000    /* ZCRSS: outputs classified angle indices and sub-pixel values */
#define ENUM_PVP_PEC_CTL_ZEROCROSS           0x00000002    /* ZCRSS: outputs only the zero crossing codes and sub-pixel values */

#define BITM_PVP_PEC_CTL_MODE                0x00000001    /* Derivative Mode Select */
#define ENUM_PVP_PEC_CTL_DERIV1              0x00000000    /* MODE: 1st derivative mode */
#define ENUM_PVP_PEC_CTL_DERIV2              0x00000001    /* MODE: 2nd derivative mode */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PEC_D1TH0                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PEC_D1TH0_VALUE              0            /* Lower Hysteresis Threshold */
#define BITM_PVP_PEC_D1TH0_VALUE             0x0000FFFF    /* Lower Hysteresis Threshold */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PEC_D1TH1                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PEC_D1TH1_VALUE              0            /* Upper Hysteresis Threshold */
#define BITM_PVP_PEC_D1TH1_VALUE             0x0000FFFF    /* Upper Hysteresis Threshold */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PEC_D2TH0                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PEC_D2TH0_VALUE              0            /* Weak Zero Crossing Threshold */
#define BITM_PVP_PEC_D2TH0_VALUE             0x00007FFF    /* Weak Zero Crossing Threshold */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PEC_D2TH1                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PEC_D2TH1_VALUE              0            /* Strong Zero Crossing Threshold */
#define BITM_PVP_PEC_D2TH1_VALUE             0x00007FFF    /* Strong Zero Crossing Threshold */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IIM_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IIM_CFG_IBLOCK0              8            /* Input Block ID */
#define BITP_PVP_IIM_CFG_IPORT0               4            /* Input Port ID */
#define BITP_PVP_IIM_CFG_MPIPE                2            /* Memory Pipe */
#define BITP_PVP_IIM_CFG_START                0            /* Start */
#define BITM_PVP_IIM_CFG_IBLOCK0             0x0000FF00    /* Input Block ID */
#define BITM_PVP_IIM_CFG_IPORT0              0x00000030    /* Input Port ID */

#define BITM_PVP_IIM_CFG_MPIPE               0x00000004    /* Memory Pipe */
#define ENUM_PVP_IIM_CFG_CAMPIPE             0x00000000    /* MPIPE: Camera Pipe */
#define ENUM_PVP_IIM_CFG_MEMPIPE             0x00000004    /* MPIPE: Memory Pipe */
#define BITM_PVP_IIM_CFG_START               0x00000001    /* Start */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IIM_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IIM_CTL_SHIFT                8            /* Shift Control */
#define BITP_PVP_IIM_CTL_WIDTH                2            /* Width Select */
#define BITP_PVP_IIM_CTL_MODE                 0            /* Mode Select */
#define BITM_PVP_IIM_CTL_SHIFT               0x00001F00    /* Shift Control */

#define BITM_PVP_IIM_CTL_WIDTH               0x0000000C    /* Width Select */
#define ENUM_PVP_IIM_CTL_SINGLE32            0x00000000    /* WIDTH: Single 32 bit */
#define ENUM_PVP_IIM_CTL_DUAL16              0x00000004    /* WIDTH: Dual 16 bit */
#define ENUM_PVP_IIM_CTL_QUAD8               0x0000000C    /* WIDTH: Quad 8 bit */

#define BITM_PVP_IIM_CTL_MODE                0x00000003    /* Mode Select */
#define ENUM_PVP_IIM_CTL_RECTMODE            0x00000000    /* MODE: Rectangular mode ( SAT) */
#define ENUM_PVP_IIM_CTL_DIAGMODE            0x00000001    /* MODE: Diagonal mode ( RSAT -45) */
#define ENUM_PVP_IIM_CTL_ROWMODE             0x00000002    /* MODE: Row mode */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IIM_SCALE                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IIM_SCALE_VSCL              16            /* Vertical Scaling Factor */
#define BITP_PVP_IIM_SCALE_HSCL               0            /* Horizontal Scaling Factor */
#define BITM_PVP_IIM_SCALE_VSCL              0x01FF0000    /* Vertical Scaling Factor */
#define BITM_PVP_IIM_SCALE_HSCL              0x000003FF    /* Horizontal Scaling Factor */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IIM_SOVF_STAT                    Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IIM_SOVF_STAT_VPOS          16            /* Veritcal Pixel Coordinate */
#define BITP_PVP_IIM_SOVF_STAT_HPOS           0            /* Horizontal Pixel Coordinate */
#define BITM_PVP_IIM_SOVF_STAT_VPOS          0x03FF0000    /* Veritcal Pixel Coordinate */
#define BITM_PVP_IIM_SOVF_STAT_HPOS          0x000007FF    /* Horizontal Pixel Coordinate */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IIM_UOVF_STAT                    Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IIM_UOVF_STAT_VPOS          16            /* Veritcal Pixel Coordinate */
#define BITP_PVP_IIM_UOVF_STAT_HPOS           0            /* Horizontal Pixel Coordinate */
#define BITM_PVP_IIM_UOVF_STAT_VPOS          0x03FF0000    /* Veritcal Pixel Coordinate */
#define BITM_PVP_IIM_UOVF_STAT_HPOS          0x000007FF    /* Horizontal Pixel Coordinate */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_ACU_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_ACU_CFG_IBLOCK1             16            /* list of valid module IDs */
#define BITP_PVP_ACU_CFG_IBLOCK0              8            /* list of valid module IDs */
#define BITP_PVP_ACU_CFG_IPORT1               6            /* a valid port value as applicable for a given module ID. */
#define BITP_PVP_ACU_CFG_IPORT0               4            /* a valid port value as applicable for a given module ID. */
#define BITP_PVP_ACU_CFG_MPIPE                2            /* pipe bit */
#define BITP_PVP_ACU_CFG_START                0            /* enable the module */
#define BITM_PVP_ACU_CFG_IBLOCK1             0x00FF0000    /* list of valid module IDs */
#define BITM_PVP_ACU_CFG_IBLOCK0             0x0000FF00    /* list of valid module IDs */
#define BITM_PVP_ACU_CFG_IPORT1              0x000000C0    /* a valid port value as applicable for a given module ID. */
#define BITM_PVP_ACU_CFG_IPORT0              0x00000030    /* a valid port value as applicable for a given module ID. */

#define BITM_PVP_ACU_CFG_MPIPE               0x00000004    /* pipe bit */
#define ENUM_PVP_ACU_CFG_CAMPIPE             0x00000000    /* MPIPE: Camera Pipe */
#define ENUM_PVP_ACU_CFG_MEMPIPE             0x00000004    /* MPIPE: Memory Pipe */
#define BITM_PVP_ACU_CFG_START               0x00000001    /* enable the module */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_ACU_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_ACU_CTL_SUMOP               28            /* Defines what is a SUM function */
#define BITP_PVP_ACU_CTL_SUMISW              27            /* Input Swap. Meaningful for subtract operation. */
#define BITP_PVP_ACU_CTL_SUMINP              24            /* Input of Adder */
#define BITP_PVP_ACU_CTL_PRDOP               20            /* Defines what is a PROD operation. */
#define BITP_PVP_ACU_CTL_PRDISW              19            /* Input Swap Meaningful for division */
#define BITP_PVP_ACU_CTL_PRDINP              16            /* Multiplication/Division Input */
#define BITP_PVP_ACU_CTL_ACCFRAME            15            /* clear accumulator each row/frame */
#define BITP_PVP_ACU_CTL_ACCINP               8            /* Accumulation Input */
#define BITP_PVP_ACU_CTL_SFTINP               0            /* Shift Input Operand */

#define BITM_PVP_ACU_CTL_SUMOP               0x10000000    /* Defines what is a SUM function */
#define ENUM_PVP_ACU_CTL_ADD                 0x00000000    /* SUMOP: Add */
#define ENUM_PVP_ACU_CTL_SUBTRACT            0x10000000    /* SUMOP: Subtract */

#define BITM_PVP_ACU_CTL_SUMISW              0x08000000    /* Input Swap. Meaningful for subtract operation. */
#define ENUM_PVP_ACU_CTL_NOSWAPSUM           0x00000000    /* SUMISW: Do not swap operands */
#define ENUM_PVP_ACU_CTL_SWAPSUM             0x08000000    /* SUMISW: Swap operands */

#define BITM_PVP_ACU_CTL_SUMINP              0x03000000    /* Input of Adder */
#define ENUM_PVP_ACU_CTL_SUMXY               0x00000000    /* SUMINP: X,Y are inputs to adder */
#define ENUM_PVP_ACU_CTL_SUMXOFF             0x01000000    /* SUMINP: X,OFFSET are inputs to adder */
#define ENUM_PVP_ACU_CTL_SUMYOFF             0x02000000    /* SUMINP: Y,OFFSET are inputs to adder */

#define BITM_PVP_ACU_CTL_PRDOP               0x00300000    /* Defines what is a PROD operation. */
#define ENUM_PVP_ACU_CTL_MULTIPLY            0x00000000    /* PRDOP: Multiply */
#define ENUM_PVP_ACU_CTL_DIVQUOTIENT         0x00100000    /* PRDOP: Divide with quotient */
#define ENUM_PVP_ACU_CTL_DIVMODULUS          0x00200000    /* PRDOP: Divide with modulus */

#define BITM_PVP_ACU_CTL_PRDISW              0x00080000    /* Input Swap Meaningful for division */
#define ENUM_PVP_ACU_CTL_NOSWAPPROD          0x00000000    /* PRDISW: Do not swap operands */
#define ENUM_PVP_ACU_CTL_SWAPPROD            0x00080000    /* PRDISW: Swap operands */

#define BITM_PVP_ACU_CTL_PRDINP              0x00030000    /* Multiplication/Division Input */
#define ENUM_PVP_ACU_CTL_PRODXY              0x00000000    /* PRDINP: X,Y are mult/div inputs */
#define ENUM_PVP_ACU_CTL_PRODXFACT           0x00010000    /* PRDINP: X,FACTOR are mult/div inputs */
#define ENUM_PVP_ACU_CTL_PRODYFACT           0x00020000    /* PRDINP: Y,FACTOR are mult/div inputs */
#define ENUM_PVP_ACU_CTL_PRODSUMFACT         0x00030000    /* PRDINP: SUM,FACTOR are mult/div inputs */

#define BITM_PVP_ACU_CTL_ACCFRAME            0x00008000    /* clear accumulator each row/frame */
#define ENUM_PVP_ACU_CTL_ACCUMROW            0x00000000    /* ACCFRAME: Output accumulator after every row and clear */
#define ENUM_PVP_ACU_CTL_ACCUMFRAME          0x00008000    /* ACCFRAME: Output accumulator after every frame and clear */

#define BITM_PVP_ACU_CTL_ACCINP              0x00000300    /* Accumulation Input */
#define ENUM_PVP_ACU_CTL_ACCUMX              0x00000000    /* ACCINP: X is accumulator input */
#define ENUM_PVP_ACU_CTL_ACCUMSUM            0x00000100    /* ACCINP: SUM is accumulator input */
#define ENUM_PVP_ACU_CTL_ACCUMPROD           0x00000200    /* ACCINP: PROD is accumulator input */

#define BITM_PVP_ACU_CTL_SFTINP              0x00000003    /* Shift Input Operand */
#define ENUM_PVP_ACU_CTL_SHIFTXIN            0x00000000    /* SFTINP: X is input to Shifter */
#define ENUM_PVP_ACU_CTL_SHIFTSUM            0x00000001    /* SFTINP: SUM function output is input to Shifter */
#define ENUM_PVP_ACU_CTL_SHIFTPROD           0x00000002    /* SFTINP: PROD function output is input to Shifter */
#define ENUM_PVP_ACU_CTL_SHIFTACC            0x00000003    /* SFTINP: ACC output is input to Shifter */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_ACU_SHIFT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_ACU_SHIFT_VALUE              0            /* SHIFT constant */
#define BITM_PVP_ACU_SHIFT_VALUE             0x0000003F    /* SHIFT constant */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_UDS_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_UDS_CFG_IBLOCK0              8            /* Valid Module IDs */
#define BITP_PVP_UDS_CFG_IPORT0               4            /* Valid Port Values */
#define BITP_PVP_UDS_CFG_MPIPE                2            /* Enable Memory Pipe */
#define BITP_PVP_UDS_CFG_START                0            /* Enable UDS */
#define BITM_PVP_UDS_CFG_IBLOCK0             0x0000FF00    /* Valid Module IDs */
#define BITM_PVP_UDS_CFG_IPORT0              0x00000030    /* Valid Port Values */
#define BITM_PVP_UDS_CFG_MPIPE               0x00000004    /* Enable Memory Pipe */
#define BITM_PVP_UDS_CFG_START               0x00000001    /* Enable UDS */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_UDS_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_UDS_CTL_AAVG                 0            /* Auto Filter Tap Selection */

#define BITM_PVP_UDS_CTL_AAVG                0x00000001    /* Auto Filter Tap Selection */
#define ENUM_PVP_UDS_CTL_MANTAPS             0x00000000    /* AAVG: Manual filter tap selection */
#define ENUM_PVP_UDS_CTL_AUTOTAPS            0x00000001    /* AAVG: Auto filter tap selection */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_UDS_OHCNT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_UDS_OHCNT_VALUE              4            /* H Dimension of Output Frame */
#define BITM_PVP_UDS_OHCNT_VALUE             0x000000F0    /* H Dimension of Output Frame */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_UDS_OVCNT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_UDS_OVCNT_VALUE              4            /* V Dimension of Output Frame */
#define BITM_PVP_UDS_OVCNT_VALUE             0x000000F0    /* V Dimension of Output Frame */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_UDS_HAVG                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_UDS_HAVG_VALUE               0            /* H Filter Taps */
#define BITM_PVP_UDS_HAVG_VALUE              0x000000FF    /* H Filter Taps */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_UDS_VAVG                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_UDS_VAVG_VALUE               0            /* V Filter Taps */
#define BITM_PVP_UDS_VAVG_VALUE              0x0000007F    /* V Filter Taps */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF0_CFG                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF0_CFG_STATWCNT           24            /* Camera Pipe DMA Status */
#define BITP_PVP_IPF0_CFG_MPIPE               2            /* Memory Pipe */
#define BITP_PVP_IPF0_CFG_START               0            /* W1A to Enable the Module */
#define BITM_PVP_IPF0_CFG_STATWCNT           0xFF000000    /* Camera Pipe DMA Status */
#define BITM_PVP_IPF0_CFG_MPIPE              0x00000004    /* Memory Pipe */
#define BITM_PVP_IPF0_CFG_START              0x00000001    /* W1A to Enable the Module */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF_PIPECTL                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF_PIPECTL_STATEN           4            /* DMA Status Enable */
#define BITP_PVP_IPF_PIPECTL_DRAIN            0            /* Drain Enable */
#define BITM_PVP_IPF_PIPECTL_STATEN          0x00000010    /* DMA Status Enable */
#define BITM_PVP_IPF_PIPECTL_DRAIN           0x00000001    /* Drain Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF_CTL_QFRMT               27            /* Q Format Conversion */
#define BITP_PVP_IPF_CTL_SIGNEXT             26            /* Sign Extend */
#define BITP_PVP_IPF_CTL_EXTRED              25            /* Extract Red or Green */
#define BITP_PVP_IPF_CTL_UNPACK              24            /* Unpack Incoming Data */
#define BITP_PVP_IPF_CTL_CFRMT               16            /* Color Space Format */
#define BITP_PVP_IPF_CTL_OPORT2EN            12            /* Output Port 2 Enable */
#define BITP_PVP_IPF_CTL_OPORT1EN             8            /* Output Port 1 Enable */
#define BITP_PVP_IPF_CTL_OPORT0EN             4            /* Output Port 0 Enable */

#define BITM_PVP_IPF_CTL_QFRMT               0x08000000    /* Q Format Conversion */
#define ENUM_PVP_IPF_CTL_NOQFRMT             0x00000000    /* QFRMT: Disable conversion into Q format */
#define ENUM_PVP_IPF_CTL_QFRMT               0x08000000    /* QFRMT: Enable conversion into Q format */

#define BITM_PVP_IPF_CTL_SIGNEXT             0x04000000    /* Sign Extend */
#define ENUM_PVP_IPF_CTL_ZEROEXT             0x00000000    /* SIGNEXT: Zero Extend */
#define ENUM_PVP_IPF_CTL_SIGNEXT             0x04000000    /* SIGNEXT: Sign Extend */

#define BITM_PVP_IPF_CTL_EXTRED              0x02000000    /* Extract Red or Green */
#define ENUM_PVP_IPF_CTL_EXTGREEN            0x00000000    /* EXTRED: Extract Green */
#define ENUM_PVP_IPF_CTL_EXTRED              0x02000000    /* EXTRED: Extract Red */

#define BITM_PVP_IPF_CTL_UNPACK              0x01000000    /* Unpack Incoming Data */
#define ENUM_PVP_IPF_CTL_UNPACKDIS           0x00000000    /* UNPACK: Unpacking Disabled */
#define ENUM_PVP_IPF_CTL_UNPACKEN            0x01000000    /* UNPACK: Unpacking Enabled */

#define BITM_PVP_IPF_CTL_CFRMT               0x001F0000    /* Color Space Format */
#define ENUM_PVP_IPF_CTL_RGB8                0x00000000    /* CFRMT: RGB 8bit Format */
#define ENUM_PVP_IPF_CTL_RGB888              0x00010000    /* CFRMT: RGB888 Format */
#define ENUM_PVP_IPF_CTL_YUV8                0x00100000    /* CFRMT: YUV422 8bit Format */
#define ENUM_PVP_IPF_CTL_YUV8SPLT            0x00110000    /* CFRMT: YUV4:2:2 8bit Format with color split */
#define ENUM_PVP_IPF_CTL_YUV8SUBSPLT         0x00120000    /* CFRMT: YUV4:2:2 8bit Format with color split and sub-split */
#define ENUM_PVP_IPF_CTL_YUV8IN16            0x00130000    /* CFRMT: YUV422 8bit pair in 16bit Format */
#define ENUM_PVP_IPF_CTL_RGB565              0x00020000    /* CFRMT: RGB565 Format */
#define ENUM_PVP_IPF_CTL_YUV16               0x00140000    /* CFRMT: YUV422 16bit Format */
#define ENUM_PVP_IPF_CTL_YUV16SPLT           0x00150000    /* CFRMT: YUV4:2:2 16bit Format with color split */
#define ENUM_PVP_IPF_CTL_YUV16SUBSPLT        0x00160000    /* CFRMT: YUV4:2:2 16bit Format with color split and sub-split */
#define ENUM_PVP_IPF_CTL_Y8                  0x00180000    /* CFRMT: Y Alone 8bit Format */
#define ENUM_PVP_IPF_CTL_Y16                 0x00190000    /* CFRMT: Y Alone 16bit Format */
#define ENUM_PVP_IPF_CTL_Y24                 0x001A0000    /* CFRMT: Y Alone 24bit Format */
#define ENUM_PVP_IPF_CTL_WORD32              0x001B0000    /* CFRMT: 32 bit Format */
#define ENUM_PVP_IPF_CTL_RGB666              0x00030000    /* CFRMT: RGB666 Format */
#define ENUM_PVP_IPF_CTL_RGB16               0x00040000    /* CFRMT: RGB 16bit Format */
#define ENUM_PVP_IPF_CTL_BAYER1              0x00050000    /* CFRMT: RGB Bayer format type-1 */
#define ENUM_PVP_IPF_CTL_BAYER2              0x00060000    /* CFRMT: RGB Bayer format type-2 */

#define BITM_PVP_IPF_CTL_OPORT2EN            0x00001000    /* Output Port 2 Enable */
#define ENUM_PVP_IPF_CTL_OPORT2DIS           0x00000000    /* OPORT2EN: Disable Output Port 2 */
#define ENUM_PVP_IPF_CTL_OPORT2EVEN          0x00001000    /* OPORT2EN: OPORT2 sends even pixels of full resolution */

#define BITM_PVP_IPF_CTL_OPORT1EN            0x00000300    /* Output Port 1 Enable */
#define ENUM_PVP_IPF_CTL_OPORT1DIS           0x00000000    /* OPORT1EN: Disable Output Port 1 */
#define ENUM_PVP_IPF_CTL_OPORT1ODD           0x00000100    /* OPORT1EN: OPORT1 sends odd pixels of full resolution */
#define ENUM_PVP_IPF_CTL_OPORT1WIN           0x00000200    /* OPORT1EN: OPORT1 sends all pixels of windowed resolution. */

#define BITM_PVP_IPF_CTL_OPORT0EN            0x00000010    /* Output Port 0 Enable */
#define ENUM_PVP_IPF_CTL_OPORT0DIS           0x00000000    /* OPORT0EN: Disable Output Port 0 */
#define ENUM_PVP_IPF_CTL_OPORT0EN            0x00000010    /* OPORT0EN: Enable Output Port 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF_TAG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF_TAG_VALUE                0            /* TAG Value */
#define BITM_PVP_IPF_TAG_VALUE               0x0000FFFF    /* TAG Value */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF_HCNT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF_HCNT_VALUE               0            /* Effective Widht of ROI */
#define BITM_PVP_IPF_HCNT_VALUE              0x0000FFFF    /* Effective Widht of ROI */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF_VCNT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF_VCNT_VALUE               0            /* Effective Height of ROI */
#define BITM_PVP_IPF_VCNT_VALUE              0x0000FFFF    /* Effective Height of ROI */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF0_HPOS                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF0_HPOS_VALUE              0            /* Horizontal Delay of ROI */
#define BITM_PVP_IPF0_HPOS_VALUE             0x0000FFFF    /* Horizontal Delay of ROI */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF0_VPOS                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF0_VPOS_VALUE              0            /* Vertical Delay of ROI */
#define BITM_PVP_IPF0_VPOS_VALUE             0x0000FFFF    /* Vertical Delay of ROI */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF_TAG_STAT                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF_TAG_STAT_VALUE           0            /* TAG Value */
#define BITM_PVP_IPF_TAG_STAT_VALUE          0x0000FFFF    /* TAG Value */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_IPF1_CFG                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_IPF1_CFG_STATWCNT           24            /* Camera Pipe DMA Status */
#define BITP_PVP_IPF1_CFG_MPIPE               2            /* Memory Pipe */
#define BITP_PVP_IPF1_CFG_START               0            /* Start */
#define BITM_PVP_IPF1_CFG_STATWCNT           0xFF000000    /* Camera Pipe DMA Status */
#define BITM_PVP_IPF1_CFG_MPIPE              0x00000004    /* Memory Pipe */
#define BITM_PVP_IPF1_CFG_START              0x00000001    /* Start */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_CFG_IBLOCK0              8            /* IBLOCK0 */
#define BITP_PVP_CNV_CFG_IPORT0               4            /* IPORT0 */
#define BITP_PVP_CNV_CFG_MPIPE                2            /* MPIPE */
#define BITP_PVP_CNV_CFG_START                0            /* START */
#define BITM_PVP_CNV_CFG_IBLOCK0             0x0000FF00    /* IBLOCK0 */
#define BITM_PVP_CNV_CFG_IPORT0              0x00000030    /* IPORT0 */

#define BITM_PVP_CNV_CFG_MPIPE               0x00000004    /* MPIPE */
#define ENUM_PVP_CNV_CFG_CAMPIPE             0x00000000    /* MPIPE: Camera Pipe */
#define ENUM_PVP_CNV_CFG_MEMPIPE             0x00000004    /* MPIPE: Memory Pipe */
#define BITM_PVP_CNV_CFG_START               0x00000001    /* START */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_CTL_SHIFT                4            /* Controls Output arithmetic right Shift from 0 to 31 bits */
#define BITP_PVP_CNV_CTL_ZEROFILL             1            /* ZEROFILL */
#define BITP_PVP_CNV_CTL_SAT32                0            /* SAT32 */
#define BITM_PVP_CNV_CTL_SHIFT               0x000001F0    /* Controls Output arithmetic right Shift from 0 to 31 bits */

#define BITM_PVP_CNV_CTL_ZEROFILL            0x00000002    /* ZEROFILL */
#define ENUM_PVP_CNV_CTL_EDGEDUP             0x00000000    /* ZEROFILL: Fill edge data with duplicated pixels */
#define ENUM_PVP_CNV_CTL_EDGEZFILL           0x00000002    /* ZEROFILL: Fill edge data with 0 */

#define BITM_PVP_CNV_CTL_SAT32               0x00000001    /* SAT32 */
#define ENUM_PVP_CNV_CTL_SIGNEXT             0x00000000    /* SAT32: Output saturates to highest 16 bit value */
#define ENUM_PVP_CNV_CTL_SAT32               0x00000001    /* SAT32: Output saturates to highest 32 bit value */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C00C01                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C00C01_C01              16            /* Coefficient 0, 1 */
#define BITP_PVP_CNV_C00C01_C00               0            /* Coefficient 0, 0 */
#define BITM_PVP_CNV_C00C01_C01              0xFFFF0000    /* Coefficient 0, 1 */
#define BITM_PVP_CNV_C00C01_C00              0x0000FFFF    /* Coefficient 0, 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C02C03                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C02C03_C03              16            /* Coefficient 0, 3 */
#define BITP_PVP_CNV_C02C03_C02               0            /* Coefficient 0, 2 */
#define BITM_PVP_CNV_C02C03_C03              0xFFFF0000    /* Coefficient 0, 3 */
#define BITM_PVP_CNV_C02C03_C02              0x0000FFFF    /* Coefficient 0, 2 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C04                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C04_C04                  0            /* Coefficient 0, 4 */
#define BITM_PVP_CNV_C04_C04                 0x0000FFFF    /* Coefficient 0, 4 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C10C11                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C10C11_C11              16            /* Coefficient 1, 1 */
#define BITP_PVP_CNV_C10C11_C10               0            /* Coefficient 1, 0 */
#define BITM_PVP_CNV_C10C11_C11              0xFFFF0000    /* Coefficient 1, 1 */
#define BITM_PVP_CNV_C10C11_C10              0x0000FFFF    /* Coefficient 1, 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C12C13                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C12C13_C13              16            /* Coefficient 1, 3 */
#define BITP_PVP_CNV_C12C13_C12               0            /* Coefficient 1, 2 */
#define BITM_PVP_CNV_C12C13_C13              0xFFFF0000    /* Coefficient 1, 3 */
#define BITM_PVP_CNV_C12C13_C12              0x0000FFFF    /* Coefficient 1, 2 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C14                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C14_C14                  0            /* Coefficient 1, 4 */
#define BITM_PVP_CNV_C14_C14                 0x0000FFFF    /* Coefficient 1, 4 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C20C21                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C20C21_C21              16            /* Coefficient 2, 1 */
#define BITP_PVP_CNV_C20C21_C20               0            /* Coefficient 2, 0 */
#define BITM_PVP_CNV_C20C21_C21              0xFFFF0000    /* Coefficient 2, 1 */
#define BITM_PVP_CNV_C20C21_C20              0x0000FFFF    /* Coefficient 2, 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C22C23                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C22C23_C23              16            /* Coefficient 2, 3 */
#define BITP_PVP_CNV_C22C23_C22               0            /* Coefficient 2, 2 */
#define BITM_PVP_CNV_C22C23_C23              0xFFFF0000    /* Coefficient 2, 3 */
#define BITM_PVP_CNV_C22C23_C22              0x0000FFFF    /* Coefficient 2, 2 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C24                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C24_C24                  0            /* Coefficient 2, 4 */
#define BITM_PVP_CNV_C24_C24                 0x0000FFFF    /* Coefficient 2, 4 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C30C31                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C30C31_C31              16            /* Coefficient 3, 1 */
#define BITP_PVP_CNV_C30C31_C30               0            /* Coefficient 3, 0 */
#define BITM_PVP_CNV_C30C31_C31              0xFFFF0000    /* Coefficient 3, 1 */
#define BITM_PVP_CNV_C30C31_C30              0x0000FFFF    /* Coefficient 3, 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C32C33                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C32C33_C33              16            /* Coefficient 3, 3 */
#define BITP_PVP_CNV_C32C33_C32               0            /* Coefficient 3, 2 */
#define BITM_PVP_CNV_C32C33_C33              0xFFFF0000    /* Coefficient 3, 3 */
#define BITM_PVP_CNV_C32C33_C32              0x0000FFFF    /* Coefficient 3, 2 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C34                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C34_C34                  0            /* Coefficient 3, 4 */
#define BITM_PVP_CNV_C34_C34                 0x0000FFFF    /* Coefficient 3, 4 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C40C41                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C40C41_C41              16            /* Coefficient 4, 1 */
#define BITP_PVP_CNV_C40C41_C40               0            /* Coefficient 4, 0 */
#define BITM_PVP_CNV_C40C41_C41              0xFFFF0000    /* Coefficient 4, 1 */
#define BITM_PVP_CNV_C40C41_C40              0x0000FFFF    /* Coefficient 4, 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C42C43                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C42C43_C43              16            /* Coefficient 4, 3 */
#define BITP_PVP_CNV_C42C43_C42               0            /* Coefficient 4, 2 */
#define BITM_PVP_CNV_C42C43_C43              0xFFFF0000    /* Coefficient 4, 3 */
#define BITM_PVP_CNV_C42C43_C42              0x0000FFFF    /* Coefficient 4, 2 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_C44                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_C44_C44                  0            /* Coefficient 4, 4 */
#define BITM_PVP_CNV_C44_C44                 0x0000FFFF    /* Coefficient 4, 4 */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_CNV_SCALE                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_CNV_SCALE_VSCL              16            /* Vertical Scaling factor */
#define BITP_PVP_CNV_SCALE_HSCL               0            /* Horizontal Scaling factor */
#define BITM_PVP_CNV_SCALE_VSCL              0x01FF0000    /* Vertical Scaling factor */
#define BITM_PVP_CNV_SCALE_HSCL              0x000003FF    /* Horizontal Scaling factor */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_THC_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_THC_CFG_STATWCNT            24            /* Status */
#define BITP_PVP_THC_CFG_IBLOCK0              8            /* Valid module ID */
#define BITP_PVP_THC_CFG_IPORT0               4            /* Valid port value */
#define BITP_PVP_THC_CFG_MPIPE                2            /* Pipe bit */
#define BITP_PVP_THC_CFG_START                0            /* Enable the module */
#define BITM_PVP_THC_CFG_STATWCNT            0xFF000000    /* Status */
#define BITM_PVP_THC_CFG_IBLOCK0             0x0000FF00    /* Valid module ID */
#define BITM_PVP_THC_CFG_IPORT0              0x00000030    /* Valid port value */

#define BITM_PVP_THC_CFG_MPIPE               0x00000004    /* Pipe bit */
#define ENUM_PVP_THC_CFG_CAMPIPE             0x00000000    /* MPIPE: Camera Pipe */
#define ENUM_PVP_THC_CFG_MEMPIPE             0x00000004    /* MPIPE: Memory Pipe */
#define BITM_PVP_THC_CFG_START               0x00000001    /* Enable the module */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_THC_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_THC_CTL_HISTEN              16            /* Enables histogram counters */
#define BITP_PVP_THC_CTL_RLEWM               11            /* Run-length Encoding Window */
#define BITP_PVP_THC_CTL_HISTWM               9            /* Histogramming Window */
#define BITP_PVP_THC_CTL_RLEFRAME             8            /* Compression scope */
#define BITP_PVP_THC_CTL_OFRMT                4            /* Output Format */
#define BITP_PVP_THC_CTL_ZEXT                 2            /* Zero extend */
#define BITP_PVP_THC_CTL_MODE                 0            /* Mode */

#define BITM_PVP_THC_CTL_HISTEN              0x00010000    /* Enables histogram counters */
#define ENUM_PVP_THC_CTL_HISTDIS             0x00000000    /* HISTEN: Histogram counters disabled */
#define ENUM_PVP_THC_CTL_HISTEN              0x00010000    /* HISTEN: Histogram counters enabled */

#define BITM_PVP_THC_CTL_RLEWM               0x00001800    /* Run-length Encoding Window */
#define ENUM_PVP_THC_CTL_COMPFRAME           0x00000000    /* RLEWM: Compression for pixels in entire frame */
#define ENUM_PVP_THC_CTL_COMPWIN             0x00000800    /* RLEWM: Compression for pixels Inside the window */

#define BITM_PVP_THC_CTL_HISTWM              0x00000600    /* Histogramming Window */
#define ENUM_PVP_THC_CTL_HISTFRAME           0x00000000    /* HISTWM: Histogram for pixels in entire frame */
#define ENUM_PVP_THC_CTL_HISTWIN             0x00000200    /* HISTWM: Histogram for pixels Inside the window */
#define ENUM_PVP_THC_CTL_HISTOUTWIN          0x00000400    /* HISTWM: Histogram for pixels outside the window */

#define BITM_PVP_THC_CTL_RLEFRAME            0x00000100    /* Compression scope */
#define ENUM_PVP_THC_CTL_RLELINE             0x00000000    /* RLEFRAME: Line level compression */
#define ENUM_PVP_THC_CTL_RLEFRAME            0x00000100    /* RLEFRAME: Frame level compression */

#define BITM_PVP_THC_CTL_OFRMT               0x000000F0    /* Output Format */
#define ENUM_PVP_THC_CTL_WORD32              0x00000000    /* OFRMT: 32-bit word ( No compression ) */
#define ENUM_PVP_THC_CTL_NODATA              0x000000A0    /* OFRMT: No data is driven on the output port and RLE is switched off */
#define ENUM_PVP_THC_CTL_INDX4               0x00000020    /* OFRMT: 4-bit index ( No compression) */
#define ENUM_PVP_THC_CTL_INDX4RL4            0x00000030    /* OFRMT: 4-bit index / 4-bit run length */
#define ENUM_PVP_THC_CTL_INDX4ANGL4          0x00000040    /* OFRMT: 4-bit index / 4-bit angle ( No compression) */
#define ENUM_PVP_THC_CTL_INDX3RL5            0x00000050    /* OFRMT: 3-bit index / 5-bit run length */
#define ENUM_PVP_THC_CTL_INDX4RL12           0x00000060    /* OFRMT: 4-bit index / 12-bit run length */
#define ENUM_PVP_THC_CTL_INDX3RL13           0x00000070    /* OFRMT: 3-bit index / 13-bit run length */
#define ENUM_PVP_THC_CTL_INDX4RL21           0x00000080    /* OFRMT: 4-bit index / 21-bit run length */
#define ENUM_PVP_THC_CTL_WORD16RL16          0x00000090    /* OFRMT: 16-bit word / 16-bit run length */

#define BITM_PVP_THC_CTL_ZEXT                0x00000004    /* Zero extend */
#define ENUM_PVP_THC_CTL_ZEXTDIS             0x00000000    /* ZEXT: No zero extension */
#define ENUM_PVP_THC_CTL_ZEXTEN              0x00000004    /* ZEXT: Zero extend the Lower 16 bits of input port to 32 bits for magnitude and use the upper 16 bits as angle */

#define BITM_PVP_THC_CTL_MODE                0x00000003    /* Mode */
#define ENUM_PVP_THC_CTL_CLIPMODE            0x00000000    /* MODE: Clipping/saturation mode */
#define ENUM_PVP_THC_CTL_QUANTMODE           0x00000001    /* MODE: Quantization mode */
#define ENUM_PVP_THC_CTL_HYSTMODE            0x00000002    /* MODE: Hysteresis mode */

/* ------------------------------------------------------------------------------------------------------------------------
        PVP_PMA_CFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PVP_PMA_CFG_IBLOCK1             16            /* List of valid module IDs */
#define BITP_PVP_PMA_CFG_IBLOCK0              8            /* List of valid module IDs */
#define BITP_PVP_PMA_CFG_IPORT1               6            /* A valid port value as applicable for a given module ID. */
#define BITP_PVP_PMA_CFG_IPORT0               4            /* A valid port value as applicable for a given module ID. */
#define BITP_PVP_PMA_CFG_MPIPE                2            /* Pipe bit */
#define BITP_PVP_PMA_CFG_START                0            /* Enable the module */
#define BITM_PVP_PMA_CFG_IBLOCK1             0x00FF0000    /* List of valid module IDs */
#define BITM_PVP_PMA_CFG_IBLOCK0             0x0000FF00    /* List of valid module IDs */
#define BITM_PVP_PMA_CFG_IPORT1              0x000000C0    /* A valid port value as applicable for a given module ID. */
#define BITM_PVP_PMA_CFG_IPORT0              0x00000030    /* A valid port value as applicable for a given module ID. */

#define BITM_PVP_PMA_CFG_MPIPE               0x00000004    /* Pipe bit */
#define ENUM_PVP_PMA_CFG_CAMPIPE             0x00000000    /* MPIPE: Camera Pipe */
#define ENUM_PVP_PMA_CFG_MEMPIPE             0x00000004    /* MPIPE: Memory Pipe */
#define BITM_PVP_PMA_CFG_START               0x00000001    /* Enable the module */

/* =========================
        PWM Registers
   ========================= */

/* =========================
        PWM0
   ========================= */
#define REG_PWM0_CTL                    0xFFC1B000         /* PWM0 PWM Control Register */
#define REG_PWM0_CHANCFG                0xFFC1B004         /* PWM0 PWM Channel Config Register */
#define REG_PWM0_TRIPCFG                0xFFC1B008         /* PWM0 PWM Trip Config Register */
#define REG_PWM0_STAT                   0xFFC1B00C         /* PWM0 PWM Chop Config Register */
#define REG_PWM0_IMSK                   0xFFC1B010         /* PWM0 PWM Interrupt Mask Register */
#define REG_PWM0_ILAT                   0xFFC1B014         /* PWM0 PWM Interrupt Latch Register */
#define REG_PWM0_CHOPCFG                0xFFC1B018         /* PWM0 PWM Chop Configuration Register */
#define REG_PWM0_DT                     0xFFC1B01C         /* PWM0 PWM Dead Time Register */
#define REG_PWM0_SYNC_WID               0xFFC1B020         /* PWM0 Sync Pulse Width Register */
#define REG_PWM0_TM0                    0xFFC1B024         /* PWM0 Timer0 Period register */
#define REG_PWM0_TM1                    0xFFC1B028         /* PWM0 Timer1 Period register */
#define REG_PWM0_TM2                    0xFFC1B02C         /* PWM0 Timer2 Period register */
#define REG_PWM0_TM3                    0xFFC1B030         /* PWM0 Time3 Period register */
#define REG_PWM0_TM4                    0xFFC1B034         /* PWM0 Timer4 Period register */
#define REG_PWM0_DLYA                   0xFFC1B038         /* PWM0 Channel-A Delay register */
#define REG_PWM0_DLYB                   0xFFC1B03C         /* PWM0 Channel-B Delay register */
#define REG_PWM0_DLYC                   0xFFC1B040         /* PWM0 Channel-C Delay register */
#define REG_PWM0_DLYD                   0xFFC1B044         /* PWM0 Channel-D Delay register */
#define REG_PWM0_ACTL                   0xFFC1B048         /* PWM0 Channel-A control register */
#define REG_PWM0_AH0                    0xFFC1B04C         /* PWM0 Ch-AH Duty-0 register */
#define REG_PWM0_AH1                    0xFFC1B050         /* PWM0 Ch-AH Duty-1 register */
#define REG_PWM0_AH0_HP                 0xFFC1B054         /* PWM0 Ch-AH High precision Duty-0 register */
#define REG_PWM0_AH1_HP                 0xFFC1B058         /* PWM0 Ch-AH High precision Duty-1 register */
#define REG_PWM0_AL0                    0xFFC1B05C         /* PWM0 Ch-AL Duty-0 register */
#define REG_PWM0_AL1                    0xFFC1B060         /* PWM0 Ch-AL Duty-1 register */
#define REG_PWM0_BCTL                   0xFFC1B064         /* PWM0 Channel-B control register */
#define REG_PWM0_BH0                    0xFFC1B068         /* PWM0 Ch-BH Duty-0 register */
#define REG_PWM0_BH1                    0xFFC1B06C         /* PWM0 Ch-BH Duty-1 register */
#define REG_PWM0_BH0_HP                 0xFFC1B070         /* PWM0 Ch-BH High precision Duty-0 register */
#define REG_PWM0_BH1_HP                 0xFFC1B074         /* PWM0 Ch-BH High precision Duty-1 register */
#define REG_PWM0_BL0                    0xFFC1B078         /* PWM0 Ch-BL Duty-0 register */
#define REG_PWM0_BL1                    0xFFC1B07C         /* PWM0 Ch-BL Duty-1 register */
#define REG_PWM0_CCTL                   0xFFC1B080         /* PWM0 Channel-C control register */
#define REG_PWM0_CH0                    0xFFC1B084         /* PWM0 Ch-CH Duty-0 register */
#define REG_PWM0_CH1                    0xFFC1B088         /* PWM0 Ch-CH Duty-1 register */
#define REG_PWM0_CH0_HP                 0xFFC1B08C         /* PWM0 Ch-CH High precision Duty-0 register */
#define REG_PWM0_CH1_HP                 0xFFC1B090         /* PWM0 Ch-CH High precision Duty-1 register */
#define REG_PWM0_CL0                    0xFFC1B094         /* PWM0 Ch-CL Duty-0 register */
#define REG_PWM0_CL1                    0xFFC1B098         /* PWM0 Ch-CL Duty-1 register */
#define REG_PWM0_DCTL                   0xFFC1B09C         /* PWM0 Channel-D control register */
#define REG_PWM0_DH0                    0xFFC1B0A0         /* PWM0 Ch-DH Duty-0 register */
#define REG_PWM0_DH1                    0xFFC1B0A4         /* PWM0 Ch-DH Duty-1 register */
#define REG_PWM0_DH0_HP                 0xFFC1B0A8         /* PWM0 Ch-DH High precision Duty-0 register */
#define REG_PWM0_DH1_HP                 0xFFC1B0AC         /* PWM0 Ch-DH High precision Duty-1 register */
#define REG_PWM0_DL0                    0xFFC1B0B0         /* PWM0 Ch-DL Duty-0 register */
#define REG_PWM0_DL1                    0xFFC1B0B4         /* PWM0 Ch-DL Duty-1 register */
#define REG_PWM0_REVID                  0xFFC1B0FC         /* PWM0 PWM Revision ID Register */

/* =========================
        PWM1
   ========================= */
#define REG_PWM1_CTL                    0xFFC1B400         /* PWM1 PWM Control Register */
#define REG_PWM1_CHANCFG                0xFFC1B404         /* PWM1 PWM Channel Config Register */
#define REG_PWM1_TRIPCFG                0xFFC1B408         /* PWM1 PWM Trip Config Register */
#define REG_PWM1_STAT                   0xFFC1B40C         /* PWM1 PWM Chop Config Register */
#define REG_PWM1_IMSK                   0xFFC1B410         /* PWM1 PWM Interrupt Mask Register */
#define REG_PWM1_ILAT                   0xFFC1B414         /* PWM1 PWM Interrupt Latch Register */
#define REG_PWM1_CHOPCFG                0xFFC1B418         /* PWM1 PWM Chop Configuration Register */
#define REG_PWM1_DT                     0xFFC1B41C         /* PWM1 PWM Dead Time Register */
#define REG_PWM1_SYNC_WID               0xFFC1B420         /* PWM1 Sync Pulse Width Register */
#define REG_PWM1_TM0                    0xFFC1B424         /* PWM1 Timer0 Period register */
#define REG_PWM1_TM1                    0xFFC1B428         /* PWM1 Timer1 Period register */
#define REG_PWM1_TM2                    0xFFC1B42C         /* PWM1 Timer2 Period register */
#define REG_PWM1_TM3                    0xFFC1B430         /* PWM1 Time3 Period register */
#define REG_PWM1_TM4                    0xFFC1B434         /* PWM1 Timer4 Period register */
#define REG_PWM1_DLYA                   0xFFC1B438         /* PWM1 Channel-A Delay register */
#define REG_PWM1_DLYB                   0xFFC1B43C         /* PWM1 Channel-B Delay register */
#define REG_PWM1_DLYC                   0xFFC1B440         /* PWM1 Channel-C Delay register */
#define REG_PWM1_DLYD                   0xFFC1B444         /* PWM1 Channel-D Delay register */
#define REG_PWM1_ACTL                   0xFFC1B448         /* PWM1 Channel-A control register */
#define REG_PWM1_AH0                    0xFFC1B44C         /* PWM1 Ch-AH Duty-0 register */
#define REG_PWM1_AH1                    0xFFC1B450         /* PWM1 Ch-AH Duty-1 register */
#define REG_PWM1_AH0_HP                 0xFFC1B454         /* PWM1 Ch-AH High precision Duty-0 register */
#define REG_PWM1_AH1_HP                 0xFFC1B458         /* PWM1 Ch-AH High precision Duty-1 register */
#define REG_PWM1_AL0                    0xFFC1B45C         /* PWM1 Ch-AL Duty-0 register */
#define REG_PWM1_AL1                    0xFFC1B460         /* PWM1 Ch-AL Duty-1 register */
#define REG_PWM1_BCTL                   0xFFC1B464         /* PWM1 Channel-B control register */
#define REG_PWM1_BH0                    0xFFC1B468         /* PWM1 Ch-BH Duty-0 register */
#define REG_PWM1_BH1                    0xFFC1B46C         /* PWM1 Ch-BH Duty-1 register */
#define REG_PWM1_BH0_HP                 0xFFC1B470         /* PWM1 Ch-BH High precision Duty-0 register */
#define REG_PWM1_BH1_HP                 0xFFC1B474         /* PWM1 Ch-BH High precision Duty-1 register */
#define REG_PWM1_BL0                    0xFFC1B478         /* PWM1 Ch-BL Duty-0 register */
#define REG_PWM1_BL1                    0xFFC1B47C         /* PWM1 Ch-BL Duty-1 register */
#define REG_PWM1_CCTL                   0xFFC1B480         /* PWM1 Channel-C control register */
#define REG_PWM1_CH0                    0xFFC1B484         /* PWM1 Ch-CH Duty-0 register */
#define REG_PWM1_CH1                    0xFFC1B488         /* PWM1 Ch-CH Duty-1 register */
#define REG_PWM1_CH0_HP                 0xFFC1B48C         /* PWM1 Ch-CH High precision Duty-0 register */
#define REG_PWM1_CH1_HP                 0xFFC1B490         /* PWM1 Ch-CH High precision Duty-1 register */
#define REG_PWM1_CL0                    0xFFC1B494         /* PWM1 Ch-CL Duty-0 register */
#define REG_PWM1_CL1                    0xFFC1B498         /* PWM1 Ch-CL Duty-1 register */
#define REG_PWM1_DCTL                   0xFFC1B49C         /* PWM1 Channel-D control register */
#define REG_PWM1_DH0                    0xFFC1B4A0         /* PWM1 Ch-DH Duty-0 register */
#define REG_PWM1_DH1                    0xFFC1B4A4         /* PWM1 Ch-DH Duty-1 register */
#define REG_PWM1_DH0_HP                 0xFFC1B4A8         /* PWM1 Ch-DH High precision Duty-0 register */
#define REG_PWM1_DH1_HP                 0xFFC1B4AC         /* PWM1 Ch-DH High precision Duty-1 register */
#define REG_PWM1_DL0                    0xFFC1B4B0         /* PWM1 Ch-DL Duty-0 register */
#define REG_PWM1_DL1                    0xFFC1B4B4         /* PWM1 Ch-DL Duty-1 register */
#define REG_PWM1_REVID                  0xFFC1B4FC         /* PWM1 PWM Revision ID Register */

/* =========================
        PWM
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CTL_INTSYNCREF              18            /* Timer reference for Internal Sync */
#define BITP_PWM_CTL_EXTSYNCSEL              17            /* External Sync Select */
#define BITP_PWM_CTL_EXTSYNC                 16            /* External Sync */
#define BITP_PWM_CTL_DLYDEN                   7            /* Enable Delay Counter for Channel-D */
#define BITP_PWM_CTL_DLYCEN                   6            /* Enable Delay Counter for Channel-C */
#define BITP_PWM_CTL_DLYBEN                   5            /* Enable Delay Counter for Channel-B */
#define BITP_PWM_CTL_DLYAEN                   4            /* Enable Delay Counter for Channel-A */
#define BITP_PWM_CTL_SWTRIP                   2            /* Fault Trip Condition */
#define BITP_PWM_CTL_EMURUN                   1            /* Output Behavior During Emulation Mode */
#define BITP_PWM_CTL_GLOBEN                   0            /* Module Enable */

#define BITM_PWM_CTL_INTSYNCREF              0x001C0000    /* Timer reference for Internal Sync */
#define ENUM_PWM_CTL_INTSYNC_0               0x00000000    /* INTSYNCREF: TMR0 */
#define ENUM_PWM_CTL_INTSYNC_1               0x00040000    /* INTSYNCREF: TMR1 */
#define ENUM_PWM_CTL_INTSYNC_2               0x00080000    /* INTSYNCREF: TMR2 */
#define ENUM_PWM_CTL_INTSYNC_3               0x000C0000    /* INTSYNCREF: TMR3 */
#define ENUM_PWM_CTL_INTSYNC_4               0x00100000    /* INTSYNCREF: TMR4 */

#define BITM_PWM_CTL_EXTSYNCSEL              0x00020000    /* External Sync Select */
#define ENUM_PWM_CTL_EXTSYNC_ASYNC           0x00000000    /* EXTSYNCSEL: Async */
#define ENUM_PWM_CTL_EXTSYNC_SYNC            0x00020000    /* EXTSYNCSEL: Sync */

#define BITM_PWM_CTL_EXTSYNC                 0x00010000    /* External Sync */
#define ENUM_PWM_CTL_INTSYNC                 0x00000000    /* EXTSYNC: Internal sync used */
#define ENUM_PWM_CTL_EXTSYNC                 0x00010000    /* EXTSYNC: External sync used */

#define BITM_PWM_CTL_DLYDEN                  0x00000080    /* Enable Delay Counter for Channel-D */
#define ENUM_PWM_CTL_DLYD_DIS                0x00000000    /* DLYDEN: Disable */
#define ENUM_PWM_CTL_DLYD_EN                 0x00000080    /* DLYDEN: Enable */

#define BITM_PWM_CTL_DLYCEN                  0x00000040    /* Enable Delay Counter for Channel-C */
#define ENUM_PWM_CTL_DLYC_DIS                0x00000000    /* DLYCEN: Disable */
#define ENUM_PWM_CTL_DLYC_EN                 0x00000040    /* DLYCEN: Enable */

#define BITM_PWM_CTL_DLYBEN                  0x00000020    /* Enable Delay Counter for Channel-B */
#define ENUM_PWM_CTL_DLYB_DIS                0x00000000    /* DLYBEN: Disable */
#define ENUM_PWM_CTL_DLYB_EN                 0x00000020    /* DLYBEN: Enable */

#define BITM_PWM_CTL_DLYAEN                  0x00000010    /* Enable Delay Counter for Channel-A */
#define ENUM_PWM_CTL_DLYA_DIS                0x00000000    /* DLYAEN: Disable */
#define ENUM_PWM_CTL_DLYA_EN                 0x00000010    /* DLYAEN: Enable */

#define BITM_PWM_CTL_SWTRIP                  0x00000004    /* Fault Trip Condition */
#define ENUM_PWM_CTL_FORCE_TRIP              0x00000004    /* SWTRIP: Force a Fault trip condition */

#define BITM_PWM_CTL_EMURUN                  0x00000002    /* Output Behavior During Emulation Mode */
#define ENUM_PWM_CTL_EMURUN_DIS              0x00000000    /* EMURUN: Outputs disabled */
#define ENUM_PWM_CTL_EMURUN_EN               0x00000002    /* EMURUN: Outputs enabled */

#define BITM_PWM_CTL_GLOBEN                  0x00000001    /* Module Enable */
#define ENUM_PWM_CTL_PWM_DIS                 0x00000000    /* GLOBEN: Disable */
#define ENUM_PWM_CTL_PWM_EN                  0x00000001    /* GLOBEN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CHANCFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CHANCFG_ENCHOPDL            30            /* Channel-D Gate Chopping Enable Low Side */
#define BITP_PWM_CHANCFG_POLDL               29            /* Channel-D Lo side Polarity */
#define BITP_PWM_CHANCFG_ENHPDH              28            /* Channel-D Hi Precision enable for Hi side Output */
#define BITP_PWM_CHANCFG_ENCHOPDH            27            /* Channel-D Gate Chopping Enable High Side */
#define BITP_PWM_CHANCFG_POLDH               26            /* Channel-D High side Polarity */
#define BITP_PWM_CHANCFG_MODELSD             25            /* Channel-D Mode of Lo Side Output */
#define BITP_PWM_CHANCFG_REFTMRD             24            /* Channel-D Timer Reference */
#define BITP_PWM_CHANCFG_ENCHOPCL            22            /* Channel-C Gate Chopping Enable Low Side */
#define BITP_PWM_CHANCFG_POLCL               21            /* Channel-C Lo side Polarity */
#define BITP_PWM_CHANCFG_ENHPCH              20            /* Channel-C Hi Precision enable for Hi side Output */
#define BITP_PWM_CHANCFG_ENCHOPCH            19            /* Channel-C Gate Chopping Enable High Side */
#define BITP_PWM_CHANCFG_POLCH               18            /* Channel-C High side Polarity */
#define BITP_PWM_CHANCFG_MODELSC             17            /* Channel-C Mode of Lo Side Output */
#define BITP_PWM_CHANCFG_REFTMRC             16            /* Channel-C Timer Reference */
#define BITP_PWM_CHANCFG_ENCHOPBL            14            /* Channel-B Gate Chopping Enable Low Side */
#define BITP_PWM_CHANCFG_POLBL               13            /* Channel-B Lo side Polarity */
#define BITP_PWM_CHANCFG_ENHPBH              12            /* Channel-B Hi Precision enable for Hi side Output */
#define BITP_PWM_CHANCFG_ENCHOPBH            11            /* Channel-B Gate Chopping Enable High Side */
#define BITP_PWM_CHANCFG_POLBH               10            /* Channel-B High side Polarity */
#define BITP_PWM_CHANCFG_MODELSB              9            /* Channel-B Mode of Lo Side Output */
#define BITP_PWM_CHANCFG_REFTMRB              8            /* Channel-B Timer Reference */
#define BITP_PWM_CHANCFG_ENCHOPAL             6            /* Channel-A Gate Chopping Enable Low Side */
#define BITP_PWM_CHANCFG_POLAL                5            /* Channel-A Lo side Polarity */
#define BITP_PWM_CHANCFG_ENHPAH               4            /* Channel-A Hi Precision enable for Hi side Output */
#define BITP_PWM_CHANCFG_ENCHOPAH             3            /* Channel-A Gate Chopping Enable High Side */
#define BITP_PWM_CHANCFG_POLAH                2            /* Channel-A High side Polarity */
#define BITP_PWM_CHANCFG_MODELSA              1            /* Channel-A Mode of Lo Side Output */
#define BITP_PWM_CHANCFG_REFTMRA              0            /* Channel-A Timer Reference */

#define BITM_PWM_CHANCFG_ENCHOPDL            0x40000000    /* Channel-D Gate Chopping Enable Low Side */
#define ENUM_PWM_CHANCFG_CHOPDL_DIS          0x00000000    /* ENCHOPDL: Disable */
#define ENUM_PWM_CHANCFG_CHOPDL_EN           0x40000000    /* ENCHOPDL: Enable */

#define BITM_PWM_CHANCFG_POLDL               0x20000000    /* Channel-D Lo side Polarity */
#define ENUM_PWM_CHANCFG_DL_ACTLO            0x00000000    /* POLDL: Active Low */
#define ENUM_PWM_CHANCFG_DL_ACTHI            0x20000000    /* POLDL: Active High */

#define BITM_PWM_CHANCFG_ENHPDH              0x10000000    /* Channel-D Hi Precision enable for Hi side Output */
#define ENUM_PWM_CHANCFG_HPDH_DIS            0x00000000    /* ENHPDH: Disable */
#define ENUM_PWM_CHANCFG_HPDH_EN             0x10000000    /* ENHPDH: Enable */

#define BITM_PWM_CHANCFG_ENCHOPDH            0x08000000    /* Channel-D Gate Chopping Enable High Side */
#define ENUM_PWM_CHANCFG_CHOPDH_DIS          0x00000000    /* ENCHOPDH: Disable */
#define ENUM_PWM_CHANCFG_CHOPDH_EN           0x08000000    /* ENCHOPDH: Enable */

#define BITM_PWM_CHANCFG_POLDH               0x04000000    /* Channel-D High side Polarity */
#define ENUM_PWM_CHANCFG_DH_ACTLO            0x00000000    /* POLDH: Active Low */
#define ENUM_PWM_CHANCFG_DH_ACTHI            0x04000000    /* POLDH: Active High */

#define BITM_PWM_CHANCFG_MODELSD             0x02000000    /* Channel-D Mode of Lo Side Output */
#define ENUM_PWM_CHANCFG_LOD_INVHI           0x00000000    /* MODELSD: Invert of Hi output */
#define ENUM_PWM_CHANCFG_LOD_IND             0x02000000    /* MODELSD: Independent control */

#define BITM_PWM_CHANCFG_REFTMRD             0x01000000    /* Channel-D Timer Reference */
#define ENUM_PWM_CHANCFG_REFTMRD_0           0x00000000    /* REFTMRD: TMR0 is Channel D reference */
#define ENUM_PWM_CHANCFG_REFTMRD_1           0x01000000    /* REFTMRD: TMR1 is Channel D reference */

#define BITM_PWM_CHANCFG_ENCHOPCL            0x00400000    /* Channel-C Gate Chopping Enable Low Side */
#define ENUM_PWM_CHANCFG_CHOPCL_DIS          0x00000000    /* ENCHOPCL: Disable */
#define ENUM_PWM_CHANCFG_CHOPCL_EN           0x00400000    /* ENCHOPCL: Enable */

#define BITM_PWM_CHANCFG_POLCL               0x00200000    /* Channel-C Lo side Polarity */
#define ENUM_PWM_CHANCFG_CL_ACTLO            0x00000000    /* POLCL: Active Low */
#define ENUM_PWM_CHANCFG_CL_ACTHI            0x00200000    /* POLCL: Active High */

#define BITM_PWM_CHANCFG_ENHPCH              0x00100000    /* Channel-C Hi Precision enable for Hi side Output */
#define ENUM_PWM_CHANCFG_HPCH_DIS            0x00000000    /* ENHPCH: Disable */
#define ENUM_PWM_CHANCFG_HPCH_EN             0x00100000    /* ENHPCH: Enable */

#define BITM_PWM_CHANCFG_ENCHOPCH            0x00080000    /* Channel-C Gate Chopping Enable High Side */
#define ENUM_PWM_CHANCFG_CHOPCH_DIS          0x00000000    /* ENCHOPCH: Disable */
#define ENUM_PWM_CHANCFG_CHOPCH_EN           0x00080000    /* ENCHOPCH: Enable */

#define BITM_PWM_CHANCFG_POLCH               0x00040000    /* Channel-C High side Polarity */
#define ENUM_PWM_CHANCFG_CH_ACTLO            0x00000000    /* POLCH: Active Low */
#define ENUM_PWM_CHANCFG_CH_ACTHI            0x00040000    /* POLCH: Active High */

#define BITM_PWM_CHANCFG_MODELSC             0x00020000    /* Channel-C Mode of Lo Side Output */
#define ENUM_PWM_CHANCFG_LOC_INVHI           0x00000000    /* MODELSC: Invert of Hi output */
#define ENUM_PWM_CHANCFG_LOC_IND             0x00020000    /* MODELSC: Independent control */

#define BITM_PWM_CHANCFG_REFTMRC             0x00010000    /* Channel-C Timer Reference */
#define ENUM_PWM_CHANCFG_REFTMRC_0           0x00000000    /* REFTMRC: TMR0 is Channel C reference */
#define ENUM_PWM_CHANCFG_REFTMRC_1           0x00010000    /* REFTMRC: TMR1 is Channel C reference */

#define BITM_PWM_CHANCFG_ENCHOPBL            0x00004000    /* Channel-B Gate Chopping Enable Low Side */
#define ENUM_PWM_CHANCFG_CHOPBL_DIS          0x00000000    /* ENCHOPBL: Disable */
#define ENUM_PWM_CHANCFG_CHOPBL_EN           0x00004000    /* ENCHOPBL: Enable */

#define BITM_PWM_CHANCFG_POLBL               0x00002000    /* Channel-B Lo side Polarity */
#define ENUM_PWM_CHANCFG_BL_ACTLO            0x00000000    /* POLBL: Active Low */
#define ENUM_PWM_CHANCFG_BL_ACTHI            0x00002000    /* POLBL: Active High */

#define BITM_PWM_CHANCFG_ENHPBH              0x00001000    /* Channel-B Hi Precision enable for Hi side Output */
#define ENUM_PWM_CHANCFG_HPBH_DIS            0x00000000    /* ENHPBH: Disable */
#define ENUM_PWM_CHANCFG_HPBH_EN             0x00001000    /* ENHPBH: Enable */

#define BITM_PWM_CHANCFG_ENCHOPBH            0x00000800    /* Channel-B Gate Chopping Enable High Side */
#define ENUM_PWM_CHANCFG_CHOPBH_DIS          0x00000000    /* ENCHOPBH: Disable */
#define ENUM_PWM_CHANCFG_CHOPBH_EN           0x00000800    /* ENCHOPBH: Enable */

#define BITM_PWM_CHANCFG_POLBH               0x00000400    /* Channel-B High side Polarity */
#define ENUM_PWM_CHANCFG_BH_ACTLO            0x00000000    /* POLBH: Active Low */
#define ENUM_PWM_CHANCFG_BH_ACTHI            0x00000400    /* POLBH: Active High */

#define BITM_PWM_CHANCFG_MODELSB             0x00000200    /* Channel-B Mode of Lo Side Output */
#define ENUM_PWM_CHANCFG_LOB_INV             0x00000000    /* MODELSB: Invert of Hi output */
#define ENUM_PWM_CHANCFG_LOB_IND             0x00000200    /* MODELSB: Independent control */

#define BITM_PWM_CHANCFG_REFTMRB             0x00000100    /* Channel-B Timer Reference */
#define ENUM_PWM_CHANCFG_REFTMRB_0           0x00000000    /* REFTMRB: TMR0 is Channel  B reference */
#define ENUM_PWM_CHANCFG_REFTMRB_1           0x00000100    /* REFTMRB: TMR1 is Channel B reference */

#define BITM_PWM_CHANCFG_ENCHOPAL            0x00000040    /* Channel-A Gate Chopping Enable Low Side */
#define ENUM_PWM_CHANCFG_CHOPAL_DIS          0x00000000    /* ENCHOPAL: Disable */
#define ENUM_PWM_CHANCFG_CHOPAL_EN           0x00000040    /* ENCHOPAL: Enable */

#define BITM_PWM_CHANCFG_POLAL               0x00000020    /* Channel-A Lo side Polarity */
#define ENUM_PWM_CHANCFG_AL_ACTLO            0x00000000    /* POLAL: Active Low */
#define ENUM_PWM_CHANCFG_AL_ACTHI            0x00000020    /* POLAL: Active High */

#define BITM_PWM_CHANCFG_ENHPAH              0x00000010    /* Channel-A Hi Precision enable for Hi side Output */
#define ENUM_PWM_CHANCFG_HPAH_DIS            0x00000000    /* ENHPAH: Disable */
#define ENUM_PWM_CHANCFG_HPAH_EN             0x00000010    /* ENHPAH: Enable */

#define BITM_PWM_CHANCFG_ENCHOPAH            0x00000008    /* Channel-A Gate Chopping Enable High Side */
#define ENUM_PWM_CHANCFG_CHOPAH_DIS          0x00000000    /* ENCHOPAH: Disable */
#define ENUM_PWM_CHANCFG_CHOPAH_EN           0x00000008    /* ENCHOPAH: Enable */

#define BITM_PWM_CHANCFG_POLAH               0x00000004    /* Channel-A High side Polarity */
#define ENUM_PWM_CHANCFG_AH_ACTLO            0x00000000    /* POLAH: Active Low */
#define ENUM_PWM_CHANCFG_AH_ACTHI            0x00000004    /* POLAH: Active High */

#define BITM_PWM_CHANCFG_MODELSA             0x00000002    /* Channel-A Mode of Lo Side Output */
#define ENUM_PWM_CHANCFG_LOA_INVHI           0x00000000    /* MODELSA: Invert of Hi output */
#define ENUM_PWM_CHANCFG_LOA_IND             0x00000002    /* MODELSA: Independent control */

#define BITM_PWM_CHANCFG_REFTMRA             0x00000001    /* Channel-A Timer Reference */
#define ENUM_PWM_CHANCFG_REFTMRA_0           0x00000000    /* REFTMRA: TMR0 is Channel A reference */
#define ENUM_PWM_CHANCFG_REFTMRA_1           0x00000001    /* REFTMRA: TMR1 is Channel A reference */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_TRIPCFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_TRIPCFG_MODE1D              27            /* Mode of TRIP1 for Channel D */
#define BITP_PWM_TRIPCFG_EN1D                26            /* Enable TRIP1 as a trip source for Channel D */
#define BITP_PWM_TRIPCFG_MODE0D              25            /* Mode of TRIP0 for Channel D */
#define BITP_PWM_TRIPCFG_EN0D                24            /* Enable TRIP0 as a trip source for Channel D */
#define BITP_PWM_TRIPCFG_MODE1C              19            /* Mode of TRIP1 for Channel C */
#define BITP_PWM_TRIPCFG_EN1C                18            /* Enable TRIP1 as a trip source for Channel C */
#define BITP_PWM_TRIPCFG_MODE0C              17            /* Mode of TRIP0 for Channel C */
#define BITP_PWM_TRIPCFG_EN0C                16            /* Enable TRIP0 as a trip source for Channel C */
#define BITP_PWM_TRIPCFG_MODE1B              11            /* Mode of TRIP1 for Channel B */
#define BITP_PWM_TRIPCFG_EN1B                10            /* Enable TRIP1 as a trip source for Channel B */
#define BITP_PWM_TRIPCFG_MODE0B               9            /* Mode of TRIP0 for Channel B */
#define BITP_PWM_TRIPCFG_EN0B                 8            /* Enable TRIP0 as a trip source for Channel B */
#define BITP_PWM_TRIPCFG_MODE1A               3            /* Mode of TRIP1 for Channel A */
#define BITP_PWM_TRIPCFG_EN1A                 2            /* Enable TRIP1 as a trip source for Channel A */
#define BITP_PWM_TRIPCFG_MODE0A               1            /* Mode of TRIP0 for Channel A */
#define BITP_PWM_TRIPCFG_EN0A                 0            /* Enable TRIP0 as a trip source for Channel A */

#define BITM_PWM_TRIPCFG_MODE1D              0x08000000    /* Mode of TRIP1 for Channel D */
#define ENUM_PWM_TRIPCFG_TRIP1D_FLT          0x00000000    /* MODE1D: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP1D_RSTRT        0x08000000    /* MODE1D: Self Restart */

#define BITM_PWM_TRIPCFG_EN1D                0x04000000    /* Enable TRIP1 as a trip source for Channel D */
#define ENUM_PWM_TRIPCFG_TRIP1D_DIS          0x00000000    /* EN1D: Disable */
#define ENUM_PWM_TRIPCFG_TRIP1D_EN           0x04000000    /* EN1D: Enable */

#define BITM_PWM_TRIPCFG_MODE0D              0x02000000    /* Mode of TRIP0 for Channel D */
#define ENUM_PWM_TRIPCFG_TRIP0D_FLT          0x00000000    /* MODE0D: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP0D_RSTRT        0x02000000    /* MODE0D: Self Restart */

#define BITM_PWM_TRIPCFG_EN0D                0x01000000    /* Enable TRIP0 as a trip source for Channel D */
#define ENUM_PWM_TRIPCFG_TRIP0D_DIS          0x00000000    /* EN0D: Disable */
#define ENUM_PWM_TRIPCFG_TRIP0D_EN           0x01000000    /* EN0D: Enable */

#define BITM_PWM_TRIPCFG_MODE1C              0x00080000    /* Mode of TRIP1 for Channel C */
#define ENUM_PWM_TRIPCFG_TRIP1C_FLT          0x00000000    /* MODE1C: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP1C_RSTRT        0x00080000    /* MODE1C: Self Restart */

#define BITM_PWM_TRIPCFG_EN1C                0x00040000    /* Enable TRIP1 as a trip source for Channel C */
#define ENUM_PWM_TRIPCFG_TRIP1C_DIS          0x00000000    /* EN1C: Disable */
#define ENUM_PWM_TRIPCFG_TRIP1C_EN           0x00040000    /* EN1C: Enable */

#define BITM_PWM_TRIPCFG_MODE0C              0x00020000    /* Mode of TRIP0 for Channel C */
#define ENUM_PWM_TRIPCFG_TRIP0C_FLT          0x00000000    /* MODE0C: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP0C_RSTRT        0x00020000    /* MODE0C: Self Restart */

#define BITM_PWM_TRIPCFG_EN0C                0x00010000    /* Enable TRIP0 as a trip source for Channel C */
#define ENUM_PWM_TRIPCFG_TRIP0C_DIS          0x00000000    /* EN0C: Disable */
#define ENUM_PWM_TRIPCFG_TRIP0C_EN           0x00010000    /* EN0C: Enable */

#define BITM_PWM_TRIPCFG_MODE1B              0x00000800    /* Mode of TRIP1 for Channel B */
#define ENUM_PWM_TRIPCFG_TRIP1B_FLT          0x00000000    /* MODE1B: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP1B_RSTRT        0x00000800    /* MODE1B: Self Restart */

#define BITM_PWM_TRIPCFG_EN1B                0x00000400    /* Enable TRIP1 as a trip source for Channel B */
#define ENUM_PWM_TRIPCFG_TRIP1B_DIS          0x00000000    /* EN1B: Disable */
#define ENUM_PWM_TRIPCFG_TRIP1B_EN           0x00000400    /* EN1B: Enable */

#define BITM_PWM_TRIPCFG_MODE0B              0x00000200    /* Mode of TRIP0 for Channel B */
#define ENUM_PWM_TRIPCFG_TRIP0B_FLT          0x00000000    /* MODE0B: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP0B_RSTRT        0x00000200    /* MODE0B: Self Restart */

#define BITM_PWM_TRIPCFG_EN0B                0x00000100    /* Enable TRIP0 as a trip source for Channel B */
#define ENUM_PWM_TRIPCFG_TRIP0B_DIS          0x00000000    /* EN0B: Disable */
#define ENUM_PWM_TRIPCFG_TRIP0B_EN           0x00000100    /* EN0B: Enable */

#define BITM_PWM_TRIPCFG_MODE1A              0x00000008    /* Mode of TRIP1 for Channel A */
#define ENUM_PWM_TRIPCFG_TRIP1A_FLT          0x00000000    /* MODE1A: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP1A_RSTRT        0x00000008    /* MODE1A: Self Restart */

#define BITM_PWM_TRIPCFG_EN1A                0x00000004    /* Enable TRIP1 as a trip source for Channel A */
#define ENUM_PWM_TRIPCFG_TRIP1A_DIS          0x00000000    /* EN1A: Disable */
#define ENUM_PWM_TRIPCFG_TRIP1A_EN           0x00000004    /* EN1A: Enable */

#define BITM_PWM_TRIPCFG_MODE0A              0x00000002    /* Mode of TRIP0 for Channel A */
#define ENUM_PWM_TRIPCFG_TRIP0A_FLT          0x00000000    /* MODE0A: Fault Trip */
#define ENUM_PWM_TRIPCFG_TRIP0A_RSTRT        0x00000002    /* MODE0A: Self Restart */

#define BITM_PWM_TRIPCFG_EN0A                0x00000001    /* Enable TRIP0 as a trip source for Channel A */
#define ENUM_PWM_TRIPCFG_TRIP0A_DIS          0x00000000    /* EN0A: Disable */
#define ENUM_PWM_TRIPCFG_TRIP0A_EN           0x00000001    /* EN0A: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_STAT_HPRDY                  31            /* Ready Status */
#define BITP_PWM_STAT_TMR4PHASE              28            /* TMR4 Phase Status */
#define BITP_PWM_STAT_TMR3PHASE              27            /* TMR3 Phase Status */
#define BITP_PWM_STAT_TMR2PHASE              26            /* TMR2 Phase Status */
#define BITP_PWM_STAT_TMR1PHASE              25            /* TMR1 Phase Status */
#define BITP_PWM_STAT_TMR0PHASE              24            /* TMR0 Phase Status */
#define BITP_PWM_STAT_TMR4PER                20            /* TMR4 Period Boundary Status */
#define BITP_PWM_STAT_TMR3PER                19            /* TMR3 Period Boundary Status */
#define BITP_PWM_STAT_TMR2PER                18            /* TMR2 Period Boundary Status */
#define BITP_PWM_STAT_TMR1PER                17            /* TMR1 Period Boundary Status */
#define BITP_PWM_STAT_TMR0PER                16            /* TMR0 Period Boundary Status */
#define BITP_PWM_STAT_SRTRIPD                11            /* Self-Restart Trip Status for Channel D */
#define BITP_PWM_STAT_FLTTRIPD               10            /* Fault Trip Status for Channel D */
#define BITP_PWM_STAT_SRTRIPC                 9            /* Self-Restart Trip Status for Channel C */
#define BITP_PWM_STAT_FLTTRIPC                8            /* Fault Trip Status for Channel C */
#define BITP_PWM_STAT_SRTRIPB                 7            /* Self-Restart Trip Status for Channel B */
#define BITP_PWM_STAT_FLTTRIPB                6            /* Fault Trip Status for Channel B */
#define BITP_PWM_STAT_SRTRIPA                 5            /* Self-Restart Trip Status for Channel A */
#define BITP_PWM_STAT_FLTTRIPA                4            /* Fault Trip Status for Channel A */
#define BITP_PWM_STAT_RAWTRIP1                3            /* TRIP1 Level Status */
#define BITP_PWM_STAT_RAWTRIP0                2            /* TRIP0 Level Status */
#define BITP_PWM_STAT_TRIP1                   1            /* Status bit set when TRIP1 is active low */
#define BITP_PWM_STAT_TRIP0                   0            /* Status bit set when TRIP0 is active low */

#define BITM_PWM_STAT_HPRDY                  0x80000000    /* Ready Status */
#define ENUM_PWM_STAT_NOT_HPRDY              0x00000000    /* HPRDY: HPPWM Not Ready For Operation */
#define ENUM_PWM_STAT_HPRDY                  0x80000000    /* HPRDY: HPPWM Ready For Operation */

#define BITM_PWM_STAT_TMR4PHASE              0x10000000    /* TMR4 Phase Status */
#define ENUM_PWM_STAT_TMR4PH1                0x00000000    /* TMR4PHASE: 1st Half */
#define ENUM_PWM_STAT_TMR4PH2                0x10000000    /* TMR4PHASE: 2nd Half */

#define BITM_PWM_STAT_TMR3PHASE              0x08000000    /* TMR3 Phase Status */
#define ENUM_PWM_STAT_TMR3PH1                0x00000000    /* TMR3PHASE: 1st Half */
#define ENUM_PWM_STAT_TMR3PH2                0x08000000    /* TMR3PHASE: 2nd Half */

#define BITM_PWM_STAT_TMR2PHASE              0x04000000    /* TMR2 Phase Status */
#define ENUM_PWM_STAT_TMR2PH1                0x00000000    /* TMR2PHASE: 1st Half */
#define ENUM_PWM_STAT_TMR2PH2                0x04000000    /* TMR2PHASE: 2nd Half */

#define BITM_PWM_STAT_TMR1PHASE              0x02000000    /* TMR1 Phase Status */
#define ENUM_PWM_STAT_TMR1PH1                0x00000000    /* TMR1PHASE: 1st Half */
#define ENUM_PWM_STAT_TMR1PH2                0x02000000    /* TMR1PHASE: 2nd Half */

#define BITM_PWM_STAT_TMR0PHASE              0x01000000    /* TMR0 Phase Status */
#define ENUM_PWM_STAT_TMR0PH1                0x00000000    /* TMR0PHASE: 1st Half */
#define ENUM_PWM_STAT_TMR0PH2                0x01000000    /* TMR0PHASE: 2nd Half */

#define BITM_PWM_STAT_TMR4PER                0x00100000    /* TMR4 Period Boundary Status */
#define ENUM_PWM_STAT_NOT_PER4               0x00000000    /* TMR4PER: TMR4 Period boundary not reached */
#define ENUM_PWM_STAT_PER4                   0x00100000    /* TMR4PER: TMR4 Period boundary reached */

#define BITM_PWM_STAT_TMR3PER                0x00080000    /* TMR3 Period Boundary Status */
#define ENUM_PWM_STAT_NOT_PER3               0x00000000    /* TMR3PER: TMR3 Period boundary not reached */
#define ENUM_PWM_STAT_PER3                   0x00080000    /* TMR3PER: TMR3 Period boundary reached */

#define BITM_PWM_STAT_TMR2PER                0x00040000    /* TMR2 Period Boundary Status */
#define ENUM_PWM_STAT_NOT_PER2               0x00000000    /* TMR2PER: TMR2 Period boundary not reached */
#define ENUM_PWM_STAT_PER2                   0x00040000    /* TMR2PER: TMR2 Period boundary reached */

#define BITM_PWM_STAT_TMR1PER                0x00020000    /* TMR1 Period Boundary Status */
#define ENUM_PWM_STAT_NOT_PER1               0x00000000    /* TMR1PER: TMR1 Period boundary not reached */
#define ENUM_PWM_STAT_PER1                   0x00020000    /* TMR1PER: TMR1 Period boundary reached */

#define BITM_PWM_STAT_TMR0PER                0x00010000    /* TMR0 Period Boundary Status */
#define ENUM_PWM_STAT_NOT_PER0               0x00000000    /* TMR0PER: TMR0 Period boundary not reached */
#define ENUM_PWM_STAT_PER0                   0x00010000    /* TMR0PER: TMR0 Period boundary reached */

#define BITM_PWM_STAT_SRTRIPD                0x00000800    /* Self-Restart Trip Status for Channel D */
#define ENUM_PWM_STAT_SRD_NOTRIP             0x00000000    /* SRTRIPD: Channel D Self-Restart Trip Status is "not tripped" */
#define ENUM_PWM_STAT_SRD_TRIP               0x00000800    /* SRTRIPD: Channel D Self-Restart Trip Status is "tripped" */

#define BITM_PWM_STAT_FLTTRIPD               0x00000400    /* Fault Trip Status for Channel D */
#define ENUM_PWM_STAT_FLTD_NOTRIP            0x00000000    /* FLTTRIPD: Channel D Fault Trip Status is "not tripped" */
#define ENUM_PWM_STAT_FLTD_TRIP              0x00000400    /* FLTTRIPD: Channel D Fault Trip Status is "tripped" */

#define BITM_PWM_STAT_SRTRIPC                0x00000200    /* Self-Restart Trip Status for Channel C */
#define ENUM_PWM_STAT_SRC_NOTRIP             0x00000000    /* SRTRIPC: Channel C Self-Restart Trip Status is "not tripped" */
#define ENUM_PWM_STAT_SRC_TRIP               0x00000200    /* SRTRIPC: Channel C Self-Restart Trip Status is "tripped" */

#define BITM_PWM_STAT_FLTTRIPC               0x00000100    /* Fault Trip Status for Channel C */
#define ENUM_PWM_STAT_FLTC_NOTRIP            0x00000000    /* FLTTRIPC: Channel C Fault Trip Status is "not tripped" */
#define ENUM_PWM_STAT_FLTC_TRIP              0x00000100    /* FLTTRIPC: Channel C Fault Trip Status is "tripped" */

#define BITM_PWM_STAT_SRTRIPB                0x00000080    /* Self-Restart Trip Status for Channel B */
#define ENUM_PWM_STAT_SRB_NOTRIP             0x00000000    /* SRTRIPB: Channel B Self-Restart Trip Status is "not tripped" */
#define ENUM_PWM_STAT_SRB_TRIP               0x00000080    /* SRTRIPB: Channel B Self-Restart Trip Status is "tripped" */

#define BITM_PWM_STAT_FLTTRIPB               0x00000040    /* Fault Trip Status for Channel B */
#define ENUM_PWM_STAT_FLTB_NOTRIP            0x00000000    /* FLTTRIPB: Channel B Fault Trip Status is "not tripped" */
#define ENUM_PWM_STAT_FLTB_TRIP              0x00000040    /* FLTTRIPB: Channel A Fault Trip Status is "tripped" */

#define BITM_PWM_STAT_SRTRIPA                0x00000020    /* Self-Restart Trip Status for Channel A */
#define ENUM_PWM_STAT_SRA_NOTRIP             0x00000000    /* SRTRIPA: Channel A Self-Restart Trip Status is "not tripped" */
#define ENUM_PWM_STAT_SRA_TRIP               0x00000020    /* SRTRIPA: Channel A Self-Restart Trip Status is "tripped" */

#define BITM_PWM_STAT_FLTTRIPA               0x00000010    /* Fault Trip Status for Channel A */
#define ENUM_PWM_STAT_FLTA_NOTRIP            0x00000000    /* FLTTRIPA: Channel A Fault Trip Status is "not tripped" */
#define ENUM_PWM_STAT_FLTA_TRIP              0x00000010    /* FLTTRIPA: Channel A Fault Trip Status is "tripped" */

#define BITM_PWM_STAT_RAWTRIP1               0x00000008    /* TRIP1 Level Status */
#define ENUM_PWM_STAT_TRIP1LVL_LO            0x00000000    /* RAWTRIP1: TRIP1 Level is Low */
#define ENUM_PWM_STAT_TRIP1LVL_HI            0x00000008    /* RAWTRIP1: TRIP1 Level is High */

#define BITM_PWM_STAT_RAWTRIP0               0x00000004    /* TRIP0 Level Status */
#define ENUM_PWM_STAT_TRIP0LVL_LO            0x00000000    /* RAWTRIP0: TRIP0 Level is Low */
#define ENUM_PWM_STAT_TRIP0LVL_HI            0x00000004    /* RAWTRIP0: TRIP0 Level is High */

#define BITM_PWM_STAT_TRIP1                  0x00000002    /* Status bit set when TRIP1 is active low */
#define ENUM_PWM_STAT_NO_TRIP1               0x00000000    /* TRIP1: TRIP1 status is "not tripped" */
#define ENUM_PWM_STAT_TRIP1                  0x00000002    /* TRIP1: TRIP1 status is "tripped" (active low) */

#define BITM_PWM_STAT_TRIP0                  0x00000001    /* Status bit set when TRIP0 is active low */
#define ENUM_PWM_STAT_NO_TRIP0               0x00000000    /* TRIP0: TRIP0 status is "not tripped" */
#define ENUM_PWM_STAT_TRIP0                  0x00000001    /* TRIP0: TRIP0 status is "tripped" (active low) */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_IMSK                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_IMSK_TMR4PER                20            /* TMR4 Period Boundary Interrupt Mask */
#define BITP_PWM_IMSK_TMR3PER                19            /* TMR3 Period Boundary Interrupt Mask */
#define BITP_PWM_IMSK_TMR2PER                18            /* TMR2 Period Boundary Interrupt Mask */
#define BITP_PWM_IMSK_TMR1PER                17            /* TMR1 Period Boundary Interrupt Mask */
#define BITP_PWM_IMSK_TMR0PER                16            /* TMR0 Period Boundary Interrupt Mask */
#define BITP_PWM_IMSK_TRIP1                   1            /* TRIP1 Interrupt Mask */
#define BITP_PWM_IMSK_TRIP0                   0            /* TRIP0 Interrupt Mask */

#define BITM_PWM_IMSK_TMR4PER                0x00100000    /* TMR4 Period Boundary Interrupt Mask */
#define ENUM_PWM_IMSK_PER4_MSK               0x00000000    /* TMR4PER: Mask TMR4 Period Interrupt */
#define ENUM_PWM_IMSK_PER4_UMSK              0x00100000    /* TMR4PER: Unmask TMR4 Period Interrupt */

#define BITM_PWM_IMSK_TMR3PER                0x00080000    /* TMR3 Period Boundary Interrupt Mask */
#define ENUM_PWM_IMSK_PER3_MSK               0x00000000    /* TMR3PER: Mask TMR3 Period Interrupt */
#define ENUM_PWM_IMSK_PER3_UMSK              0x00080000    /* TMR3PER: Unmask TMR3 Period Interrupt */

#define BITM_PWM_IMSK_TMR2PER                0x00040000    /* TMR2 Period Boundary Interrupt Mask */
#define ENUM_PWM_IMSK_PER2_MSK               0x00000000    /* TMR2PER: Mask TMR2 Period Interrupt */
#define ENUM_PWM_IMSK_PER2_UMSK              0x00040000    /* TMR2PER: Unmask TMR2 Period Interrupt */

#define BITM_PWM_IMSK_TMR1PER                0x00020000    /* TMR1 Period Boundary Interrupt Mask */
#define ENUM_PWM_IMSK_PER1_MSK               0x00000000    /* TMR1PER: Mask TMR1 Period Interrupt */
#define ENUM_PWM_IMSK_PER1_UMSK              0x00020000    /* TMR1PER: Unmask TMR1 Period Interrupt */

#define BITM_PWM_IMSK_TMR0PER                0x00010000    /* TMR0 Period Boundary Interrupt Mask */
#define ENUM_PWM_IMSK_PER0_MSK               0x00000000    /* TMR0PER: Mask TMR0 Period Interrupt */
#define ENUM_PWM_IMSK_PER0_UMSK              0x00010000    /* TMR0PER: Unmask TMR0 Period Interrupt */

#define BITM_PWM_IMSK_TRIP1                  0x00000002    /* TRIP1 Interrupt Mask */
#define ENUM_PWM_IMSK_TRIP1_MSK              0x00000000    /* TRIP1: Mask TRIP1 Interrupt */
#define ENUM_PWM_IMSK_TRIP1_UMSK             0x00000002    /* TRIP1: Unmask TRIP1 Interrupt */

#define BITM_PWM_IMSK_TRIP0                  0x00000001    /* TRIP0 Interrupt Mask */
#define ENUM_PWM_IMSK_TRIP0_MSK              0x00000000    /* TRIP0: Mask TRIP0 Interrupt */
#define ENUM_PWM_IMSK_TRIP0_UMSK             0x00000001    /* TRIP0: Unmask TRIP0 Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_ILAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_ILAT_TMR4PER                20            /* TMR4 Period Boundary Interrupt Masked Status */
#define BITP_PWM_ILAT_TMR3PER                19            /* TMR3 Period Boundary Interrupt Masked Status */
#define BITP_PWM_ILAT_TMR2PER                18            /* TMR2 Period Boundary Interrupt Masked Status */
#define BITP_PWM_ILAT_TMR1PER                17            /* TMR1 Period Boundary Interrupt Masked Status */
#define BITP_PWM_ILAT_TMR0PER                16            /* TMR0 Period Boundary Interrupt Masked Status */
#define BITP_PWM_ILAT_TRIP1                   1            /* TRIP1 Interrupt Masked Status */
#define BITP_PWM_ILAT_TRIP0                   0            /* TRIP0 Interrupt Masked Status */

#define BITM_PWM_ILAT_TMR4PER                0x00100000    /* TMR4 Period Boundary Interrupt Masked Status */
#define ENUM_PWM_ILAT_PER4_INTLO             0x00000000    /* TMR4PER:  */
#define ENUM_PWM_ILAT_PER4_INTHI             0x00100000    /* TMR4PER:  */

#define BITM_PWM_ILAT_TMR3PER                0x00080000    /* TMR3 Period Boundary Interrupt Masked Status */
#define ENUM_PWM_ILAT_PER3_INTLO             0x00000000    /* TMR3PER:  */
#define ENUM_PWM_ILAT_PER3_INTHI             0x00080000    /* TMR3PER:  */

#define BITM_PWM_ILAT_TMR2PER                0x00040000    /* TMR2 Period Boundary Interrupt Masked Status */
#define ENUM_PWM_ILAT_PER2_INTLO             0x00000000    /* TMR2PER:  */
#define ENUM_PWM_ILAT_PER2_INTHI             0x00040000    /* TMR2PER:  */

#define BITM_PWM_ILAT_TMR1PER                0x00020000    /* TMR1 Period Boundary Interrupt Masked Status */
#define ENUM_PWM_ILAT_PER1_INTLO             0x00000000    /* TMR1PER:  */
#define ENUM_PWM_ILAT_PER1_INTHI             0x00020000    /* TMR1PER:  */

#define BITM_PWM_ILAT_TMR0PER                0x00010000    /* TMR0 Period Boundary Interrupt Masked Status */
#define ENUM_PWM_ILAT_PER0_INTLO             0x00000000    /* TMR0PER:  */
#define ENUM_PWM_ILAT_PER0_INTHI             0x00010000    /* TMR0PER:  */

#define BITM_PWM_ILAT_TRIP1                  0x00000002    /* TRIP1 Interrupt Masked Status */
#define ENUM_PWM_ILAT_TRIP1_INTLO            0x00000000    /* TRIP1:  */
#define ENUM_PWM_ILAT_TRIP1_INTHI            0x00000002    /* TRIP1:  */

#define BITM_PWM_ILAT_TRIP0                  0x00000001    /* TRIP0 Interrupt Masked Status */
#define ENUM_PWM_ILAT_TRIP0_INTLO            0x00000000    /* TRIP0:  */
#define ENUM_PWM_ILAT_TRIP0_INTHI            0x00000001    /* TRIP0:  */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CHOPCFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CHOPCFG_VALUE                0            /* PWM Gate Chopping Period */
#define BITM_PWM_CHOPCFG_VALUE               0x000000FF    /* PWM Gate Chopping Period */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DT                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DT_VALUE                     0            /* PWM Dead Time */
#define BITM_PWM_DT_VALUE                    0x000003FF    /* PWM Dead Time */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_SYNC_WID                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_SYNC_WID_VALUE               0            /* Sync Pulse Width */
#define BITM_PWM_SYNC_WID_VALUE              0x000003FF    /* Sync Pulse Width */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_TM0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_TM0_VALUE                    0
#define BITM_PWM_TM0_VALUE                   0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_TM1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_TM1_VALUE                    0
#define BITM_PWM_TM1_VALUE                   0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_TM2                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_TM2_VALUE                    0
#define BITM_PWM_TM2_VALUE                   0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_TM3                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_TM3_VALUE                    0
#define BITM_PWM_TM3_VALUE                   0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_TM4                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_TM4_VALUE                    0
#define BITM_PWM_TM4_VALUE                   0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DLYA                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DLYA_VALUE                   0
#define BITM_PWM_DLYA_VALUE                  0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DLYB                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DLYB_VALUE                   0
#define BITM_PWM_DLYB_VALUE                  0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DLYC                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DLYC_VALUE                   0
#define BITM_PWM_DLYC_VALUE                  0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DLYD                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DLYD_VALUE                   0
#define BITM_PWM_DLYD_VALUE                  0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_ACTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_ACTL_PULSEMODELO            10            /* Low Side Output Pulse Position */
#define BITP_PWM_ACTL_PULSEMODEHI             8            /* High Side Output Pulse Position */
#define BITP_PWM_ACTL_XOVR                    2            /* Hi-Lo Crossover Enable */
#define BITP_PWM_ACTL_DISLO                   1            /* Channel Low Side Output Disable */
#define BITP_PWM_ACTL_DISHI                   0            /* Channel High Side Output Disable */

#define BITM_PWM_ACTL_PULSEMODELO            0x00000C00    /* Low Side Output Pulse Position */
#define ENUM_PWM_SYM_LO                      0x00000000    /* PULSEMODELO: Symmetrical */
#define ENUM_PWM_ASYM_LO                     0x00000400    /* PULSEMODELO: Asymmetrical */
#define ENUM_PWM_LEFT_LO                     0x00000800    /* PULSEMODELO: Left Half */
#define ENUM_PWM_RIGHT_LO                    0x00000C00    /* PULSEMODELO: Right Half */

#define BITM_PWM_ACTL_PULSEMODEHI            0x00000300    /* High Side Output Pulse Position */
#define ENUM_PWM_SYM_HI                      0x00000000    /* PULSEMODEHI: Symmetrical */
#define ENUM_PWM_ASYM_HI                     0x00000100    /* PULSEMODEHI: Asymmetrical */
#define ENUM_PWM_LEFT_HI                     0x00000200    /* PULSEMODEHI: Left Half */
#define ENUM_PWM_RIGHT_HI                    0x00000300    /* PULSEMODEHI: Right Half */

#define BITM_PWM_ACTL_XOVR                   0x00000004    /* Hi-Lo Crossover Enable */
#define ENUM_PWM_XOVR_DIS                    0x00000000    /* XOVR: No Crossover */
#define ENUM_PWM_XOVR_EN                     0x00000004    /* XOVR: Crossover */

#define BITM_PWM_ACTL_DISLO                  0x00000002    /* Channel Low Side Output Disable */
#define ENUM_PWM_LO_DIS                      0x00000000    /* DISLO: Channel High-side output disable */
#define ENUM_PWM_LO_EN                       0x00000002    /* DISLO: Channel High-side output enable */

#define BITM_PWM_ACTL_DISHI                  0x00000001    /* Channel High Side Output Disable */
#define ENUM_PWM_HI_DIS                      0x00000000    /* DISHI: Channel High-side output disable */
#define ENUM_PWM_HI_EN                       0x00000001    /* DISHI: Channel High-side output enable */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_AH0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_AH0_DUTY                     0
#define BITM_PWM_AH0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_AH1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_AH1_DUTY                     0
#define BITM_PWM_AH1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_AH0_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_AH0_HP_DUTY                  0
#define BITM_PWM_AH0_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_AH1_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_AH1_HP_DUTY                  0
#define BITM_PWM_AH1_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_AL0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_AL0_DUTY                     0
#define BITM_PWM_AL0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_AL1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_AL1_DUTY                     0
#define BITM_PWM_AL1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BCTL_PULSEMODELO            10            /* Low Side Output Pulse Position */
#define BITP_PWM_BCTL_PULSEMODEHI             8            /* High Side Output Pulse Position */
#define BITP_PWM_BCTL_XOVR                    2            /* Hi-Lo Crossover Enable */
#define BITP_PWM_BCTL_DISLO                   1            /* Channel Low Side Output Disable */
#define BITP_PWM_BCTL_DISHI                   0            /* Channel High Side Output Disable */

/* The fields and enumerations for PWM_BCTL are also in PWM - see the common set of ENUM_PWM_* #defines located with register PWM_ACTL */

#define BITM_PWM_BCTL_PULSEMODELO            0x00000C00    /* Low Side Output Pulse Position */
#define BITM_PWM_BCTL_PULSEMODEHI            0x00000300    /* High Side Output Pulse Position */
#define BITM_PWM_BCTL_XOVR                   0x00000004    /* Hi-Lo Crossover Enable */
#define BITM_PWM_BCTL_DISLO                  0x00000002    /* Channel Low Side Output Disable */
#define BITM_PWM_BCTL_DISHI                  0x00000001    /* Channel High Side Output Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BH0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BH0_DUTY                     0
#define BITM_PWM_BH0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BH1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BH1_DUTY                     0
#define BITM_PWM_BH1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BH0_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BH0_HP_DUTY                  0
#define BITM_PWM_BH0_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BH1_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BH1_HP_DUTY                  0
#define BITM_PWM_BH1_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BL0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BL0_DUTY                     0
#define BITM_PWM_BL0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_BL1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_BL1_DUTY                     0
#define BITM_PWM_BL1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CCTL_PULSEMODELO            10            /* Low Side Output Pulse Position */
#define BITP_PWM_CCTL_PULSEMODEHI             8            /* High Side Output Pulse Position */
#define BITP_PWM_CCTL_XOVR                    2            /* Hi-Lo Crossover Enable */
#define BITP_PWM_CCTL_DISLO                   1            /* Channel Low Side Output Disable */
#define BITP_PWM_CCTL_DISHI                   0            /* Channel High Side Output Disable */

/* The fields and enumerations for PWM_CCTL are also in PWM - see the common set of ENUM_PWM_* #defines located with register PWM_ACTL */

#define BITM_PWM_CCTL_PULSEMODELO            0x00000C00    /* Low Side Output Pulse Position */
#define BITM_PWM_CCTL_PULSEMODEHI            0x00000300    /* High Side Output Pulse Position */
#define BITM_PWM_CCTL_XOVR                   0x00000004    /* Hi-Lo Crossover Enable */
#define BITM_PWM_CCTL_DISLO                  0x00000002    /* Channel Low Side Output Disable */
#define BITM_PWM_CCTL_DISHI                  0x00000001    /* Channel High Side Output Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CH0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CH0_DUTY                     0
#define BITM_PWM_CH0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CH1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CH1_DUTY                     0
#define BITM_PWM_CH1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CH0_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CH0_HP_DUTY                  0
#define BITM_PWM_CH0_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CH1_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CH1_HP_DUTY                  0
#define BITM_PWM_CH1_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CL0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CL0_DUTY                     0
#define BITM_PWM_CL0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_CL1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_CL1_DUTY                     0
#define BITM_PWM_CL1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DCTL_PULSEMODELO            10            /* Low Side Output Pulse Position */
#define BITP_PWM_DCTL_PULSEMODEHI             8            /* High Side Output Pulse Position */
#define BITP_PWM_DCTL_XOVR                    2            /* Hi-Lo Crossover Enable */
#define BITP_PWM_DCTL_DISLO                   1            /* Channel Low Side Output Disable */
#define BITP_PWM_DCTL_DISHI                   0            /* Channel High Side Output Disable */

/* The fields and enumerations for PWM_DCTL are also in PWM - see the common set of ENUM_PWM_* #defines located with register PWM_ACTL */

#define BITM_PWM_DCTL_PULSEMODELO            0x00000C00    /* Low Side Output Pulse Position */
#define BITM_PWM_DCTL_PULSEMODEHI            0x00000300    /* High Side Output Pulse Position */
#define BITM_PWM_DCTL_XOVR                   0x00000004    /* Hi-Lo Crossover Enable */
#define BITM_PWM_DCTL_DISLO                  0x00000002    /* Channel Low Side Output Disable */
#define BITM_PWM_DCTL_DISHI                  0x00000001    /* Channel High Side Output Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DH0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DH0_DUTY                     0
#define BITM_PWM_DH0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DH1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DH1_DUTY                     0
#define BITM_PWM_DH1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DH0_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DH0_HP_DUTY                  0
#define BITM_PWM_DH0_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DH1_HP                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DH1_HP_DUTY                  0
#define BITM_PWM_DH1_HP_DUTY                 0x000000FF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DL0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DL0_DUTY                     0
#define BITM_PWM_DL0_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_DL1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_DL1_DUTY                     0
#define BITM_PWM_DL1_DUTY                    0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        PWM_REVID                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PWM_REVID_MAJOR                  4            /* Major Revision ID */
#define BITP_PWM_REVID_REV                    0            /* Incremental Revision ID */
#define BITM_PWM_REVID_MAJOR                 0x000000F0    /* Major Revision ID */
#define BITM_PWM_REVID_REV                   0x0000000F    /* Incremental Revision ID */

/* =========================
        VID Registers
   ========================= */

/* =========================
        VID0
   ========================= */
#define REG_VID0_CONN                   0xFFC1D000         /* VID0 Video Subsystem Connect Register */

/* =========================
        VID
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        VID_CONN                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_VID_CONN_PPI2BCAST              23
#define BITP_VID_CONN_PPI1BCAST              22
#define BITP_VID_CONN_PPI0BCAST              21
#define BITP_VID_CONN_PPI2TX                 16
#define BITP_VID_CONN_PPI1TX                 12
#define BITP_VID_CONN_PPI0TX                  8
#define BITP_VID_CONN_PVP0IN                  4
#define BITP_VID_CONN_PIXC0IN                 0
#define BITM_VID_CONN_PPI2BCAST              0x00800000
#define BITM_VID_CONN_PPI1BCAST              0x00400000
#define BITM_VID_CONN_PPI0BCAST              0x00200000
#define BITM_VID_CONN_PPI2TX                 0x000F0000
#define BITM_VID_CONN_PPI1TX                 0x0000F000
#define BITM_VID_CONN_PPI0TX                 0x00000F00
#define BITM_VID_CONN_PVP0IN                 0x000000F0
#define BITM_VID_CONN_PIXC0IN                0x0000000F

/* =========================
        SWU Registers
   ========================= */

/* =========================
        SWU0
   ========================= */
#define REG_SWU0_GCTL                   0xFFC1E000         /* SWU0 Global Control Register */
#define REG_SWU0_GSTAT                  0xFFC1E004         /* SWU0 Global Status Register */
#define REG_SWU0_CTL0                   0xFFC1E010         /* SWU0 Control Register n */
#define REG_SWU0_CTL1                   0xFFC1E030         /* SWU0 Control Register n */
#define REG_SWU0_CTL2                   0xFFC1E050         /* SWU0 Control Register n */
#define REG_SWU0_CTL3                   0xFFC1E070         /* SWU0 Control Register n */
#define REG_SWU0_LA0                    0xFFC1E014         /* SWU0 Lower Address Register n */
#define REG_SWU0_LA1                    0xFFC1E034         /* SWU0 Lower Address Register n */
#define REG_SWU0_LA2                    0xFFC1E054         /* SWU0 Lower Address Register n */
#define REG_SWU0_LA3                    0xFFC1E074         /* SWU0 Lower Address Register n */
#define REG_SWU0_UA0                    0xFFC1E018         /* SWU0 Upper Address Register n */
#define REG_SWU0_UA1                    0xFFC1E038         /* SWU0 Upper Address Register n */
#define REG_SWU0_UA2                    0xFFC1E058         /* SWU0 Upper Address Register n */
#define REG_SWU0_UA3                    0xFFC1E078         /* SWU0 Upper Address Register n */
#define REG_SWU0_ID0                    0xFFC1E01C         /* SWU0 ID Register n */
#define REG_SWU0_ID1                    0xFFC1E03C         /* SWU0 ID Register n */
#define REG_SWU0_ID2                    0xFFC1E05C         /* SWU0 ID Register n */
#define REG_SWU0_ID3                    0xFFC1E07C         /* SWU0 ID Register n */
#define REG_SWU0_CNT0                   0xFFC1E020         /* SWU0 Count Register n */
#define REG_SWU0_CNT1                   0xFFC1E040         /* SWU0 Count Register n */
#define REG_SWU0_CNT2                   0xFFC1E060         /* SWU0 Count Register n */
#define REG_SWU0_CNT3                   0xFFC1E080         /* SWU0 Count Register n */
#define REG_SWU0_TARG0                  0xFFC1E024         /* SWU0 Target Register n */
#define REG_SWU0_TARG1                  0xFFC1E044         /* SWU0 Target Register n */
#define REG_SWU0_TARG2                  0xFFC1E064         /* SWU0 Target Register n */
#define REG_SWU0_TARG3                  0xFFC1E084         /* SWU0 Target Register n */
#define REG_SWU0_HIST0                  0xFFC1E028         /* SWU0 Bandwidth History Register n */
#define REG_SWU0_HIST1                  0xFFC1E048         /* SWU0 Bandwidth History Register n */
#define REG_SWU0_HIST2                  0xFFC1E068         /* SWU0 Bandwidth History Register n */
#define REG_SWU0_HIST3                  0xFFC1E088         /* SWU0 Bandwidth History Register n */
#define REG_SWU0_CUR0                   0xFFC1E02C         /* SWU0 Current Register n */
#define REG_SWU0_CUR1                   0xFFC1E04C         /* SWU0 Current Register n */
#define REG_SWU0_CUR2                   0xFFC1E06C         /* SWU0 Current Register n */
#define REG_SWU0_CUR3                   0xFFC1E08C         /* SWU0 Current Register n */

/* =========================
        SWU1
   ========================= */
#define REG_SWU1_GCTL                   0xFFCAB000         /* SWU1 Global Control Register */
#define REG_SWU1_GSTAT                  0xFFCAB004         /* SWU1 Global Status Register */
#define REG_SWU1_CTL0                   0xFFCAB010         /* SWU1 Control Register n */
#define REG_SWU1_CTL1                   0xFFCAB030         /* SWU1 Control Register n */
#define REG_SWU1_CTL2                   0xFFCAB050         /* SWU1 Control Register n */
#define REG_SWU1_CTL3                   0xFFCAB070         /* SWU1 Control Register n */
#define REG_SWU1_LA0                    0xFFCAB014         /* SWU1 Lower Address Register n */
#define REG_SWU1_LA1                    0xFFCAB034         /* SWU1 Lower Address Register n */
#define REG_SWU1_LA2                    0xFFCAB054         /* SWU1 Lower Address Register n */
#define REG_SWU1_LA3                    0xFFCAB074         /* SWU1 Lower Address Register n */
#define REG_SWU1_UA0                    0xFFCAB018         /* SWU1 Upper Address Register n */
#define REG_SWU1_UA1                    0xFFCAB038         /* SWU1 Upper Address Register n */
#define REG_SWU1_UA2                    0xFFCAB058         /* SWU1 Upper Address Register n */
#define REG_SWU1_UA3                    0xFFCAB078         /* SWU1 Upper Address Register n */
#define REG_SWU1_ID0                    0xFFCAB01C         /* SWU1 ID Register n */
#define REG_SWU1_ID1                    0xFFCAB03C         /* SWU1 ID Register n */
#define REG_SWU1_ID2                    0xFFCAB05C         /* SWU1 ID Register n */
#define REG_SWU1_ID3                    0xFFCAB07C         /* SWU1 ID Register n */
#define REG_SWU1_CNT0                   0xFFCAB020         /* SWU1 Count Register n */
#define REG_SWU1_CNT1                   0xFFCAB040         /* SWU1 Count Register n */
#define REG_SWU1_CNT2                   0xFFCAB060         /* SWU1 Count Register n */
#define REG_SWU1_CNT3                   0xFFCAB080         /* SWU1 Count Register n */
#define REG_SWU1_TARG0                  0xFFCAB024         /* SWU1 Target Register n */
#define REG_SWU1_TARG1                  0xFFCAB044         /* SWU1 Target Register n */
#define REG_SWU1_TARG2                  0xFFCAB064         /* SWU1 Target Register n */
#define REG_SWU1_TARG3                  0xFFCAB084         /* SWU1 Target Register n */
#define REG_SWU1_HIST0                  0xFFCAB028         /* SWU1 Bandwidth History Register n */
#define REG_SWU1_HIST1                  0xFFCAB048         /* SWU1 Bandwidth History Register n */
#define REG_SWU1_HIST2                  0xFFCAB068         /* SWU1 Bandwidth History Register n */
#define REG_SWU1_HIST3                  0xFFCAB088         /* SWU1 Bandwidth History Register n */
#define REG_SWU1_CUR0                   0xFFCAB02C         /* SWU1 Current Register n */
#define REG_SWU1_CUR1                   0xFFCAB04C         /* SWU1 Current Register n */
#define REG_SWU1_CUR2                   0xFFCAB06C         /* SWU1 Current Register n */
#define REG_SWU1_CUR3                   0xFFCAB08C         /* SWU1 Current Register n */

/* =========================
        SWU2
   ========================= */
#define REG_SWU2_GCTL                   0xFFCAC000         /* SWU2 Global Control Register */
#define REG_SWU2_GSTAT                  0xFFCAC004         /* SWU2 Global Status Register */
#define REG_SWU2_CTL0                   0xFFCAC010         /* SWU2 Control Register n */
#define REG_SWU2_CTL1                   0xFFCAC030         /* SWU2 Control Register n */
#define REG_SWU2_CTL2                   0xFFCAC050         /* SWU2 Control Register n */
#define REG_SWU2_CTL3                   0xFFCAC070         /* SWU2 Control Register n */
#define REG_SWU2_LA0                    0xFFCAC014         /* SWU2 Lower Address Register n */
#define REG_SWU2_LA1                    0xFFCAC034         /* SWU2 Lower Address Register n */
#define REG_SWU2_LA2                    0xFFCAC054         /* SWU2 Lower Address Register n */
#define REG_SWU2_LA3                    0xFFCAC074         /* SWU2 Lower Address Register n */
#define REG_SWU2_UA0                    0xFFCAC018         /* SWU2 Upper Address Register n */
#define REG_SWU2_UA1                    0xFFCAC038         /* SWU2 Upper Address Register n */
#define REG_SWU2_UA2                    0xFFCAC058         /* SWU2 Upper Address Register n */
#define REG_SWU2_UA3                    0xFFCAC078         /* SWU2 Upper Address Register n */
#define REG_SWU2_ID0                    0xFFCAC01C         /* SWU2 ID Register n */
#define REG_SWU2_ID1                    0xFFCAC03C         /* SWU2 ID Register n */
#define REG_SWU2_ID2                    0xFFCAC05C         /* SWU2 ID Register n */
#define REG_SWU2_ID3                    0xFFCAC07C         /* SWU2 ID Register n */
#define REG_SWU2_CNT0                   0xFFCAC020         /* SWU2 Count Register n */
#define REG_SWU2_CNT1                   0xFFCAC040         /* SWU2 Count Register n */
#define REG_SWU2_CNT2                   0xFFCAC060         /* SWU2 Count Register n */
#define REG_SWU2_CNT3                   0xFFCAC080         /* SWU2 Count Register n */
#define REG_SWU2_TARG0                  0xFFCAC024         /* SWU2 Target Register n */
#define REG_SWU2_TARG1                  0xFFCAC044         /* SWU2 Target Register n */
#define REG_SWU2_TARG2                  0xFFCAC064         /* SWU2 Target Register n */
#define REG_SWU2_TARG3                  0xFFCAC084         /* SWU2 Target Register n */
#define REG_SWU2_HIST0                  0xFFCAC028         /* SWU2 Bandwidth History Register n */
#define REG_SWU2_HIST1                  0xFFCAC048         /* SWU2 Bandwidth History Register n */
#define REG_SWU2_HIST2                  0xFFCAC068         /* SWU2 Bandwidth History Register n */
#define REG_SWU2_HIST3                  0xFFCAC088         /* SWU2 Bandwidth History Register n */
#define REG_SWU2_CUR0                   0xFFCAC02C         /* SWU2 Current Register n */
#define REG_SWU2_CUR1                   0xFFCAC04C         /* SWU2 Current Register n */
#define REG_SWU2_CUR2                   0xFFCAC06C         /* SWU2 Current Register n */
#define REG_SWU2_CUR3                   0xFFCAC08C         /* SWU2 Current Register n */

/* =========================
        SWU3
   ========================= */
#define REG_SWU3_GCTL                   0xFFCAD000         /* SWU3 Global Control Register */
#define REG_SWU3_GSTAT                  0xFFCAD004         /* SWU3 Global Status Register */
#define REG_SWU3_CTL0                   0xFFCAD010         /* SWU3 Control Register n */
#define REG_SWU3_CTL1                   0xFFCAD030         /* SWU3 Control Register n */
#define REG_SWU3_CTL2                   0xFFCAD050         /* SWU3 Control Register n */
#define REG_SWU3_CTL3                   0xFFCAD070         /* SWU3 Control Register n */
#define REG_SWU3_LA0                    0xFFCAD014         /* SWU3 Lower Address Register n */
#define REG_SWU3_LA1                    0xFFCAD034         /* SWU3 Lower Address Register n */
#define REG_SWU3_LA2                    0xFFCAD054         /* SWU3 Lower Address Register n */
#define REG_SWU3_LA3                    0xFFCAD074         /* SWU3 Lower Address Register n */
#define REG_SWU3_UA0                    0xFFCAD018         /* SWU3 Upper Address Register n */
#define REG_SWU3_UA1                    0xFFCAD038         /* SWU3 Upper Address Register n */
#define REG_SWU3_UA2                    0xFFCAD058         /* SWU3 Upper Address Register n */
#define REG_SWU3_UA3                    0xFFCAD078         /* SWU3 Upper Address Register n */
#define REG_SWU3_ID0                    0xFFCAD01C         /* SWU3 ID Register n */
#define REG_SWU3_ID1                    0xFFCAD03C         /* SWU3 ID Register n */
#define REG_SWU3_ID2                    0xFFCAD05C         /* SWU3 ID Register n */
#define REG_SWU3_ID3                    0xFFCAD07C         /* SWU3 ID Register n */
#define REG_SWU3_CNT0                   0xFFCAD020         /* SWU3 Count Register n */
#define REG_SWU3_CNT1                   0xFFCAD040         /* SWU3 Count Register n */
#define REG_SWU3_CNT2                   0xFFCAD060         /* SWU3 Count Register n */
#define REG_SWU3_CNT3                   0xFFCAD080         /* SWU3 Count Register n */
#define REG_SWU3_TARG0                  0xFFCAD024         /* SWU3 Target Register n */
#define REG_SWU3_TARG1                  0xFFCAD044         /* SWU3 Target Register n */
#define REG_SWU3_TARG2                  0xFFCAD064         /* SWU3 Target Register n */
#define REG_SWU3_TARG3                  0xFFCAD084         /* SWU3 Target Register n */
#define REG_SWU3_HIST0                  0xFFCAD028         /* SWU3 Bandwidth History Register n */
#define REG_SWU3_HIST1                  0xFFCAD048         /* SWU3 Bandwidth History Register n */
#define REG_SWU3_HIST2                  0xFFCAD068         /* SWU3 Bandwidth History Register n */
#define REG_SWU3_HIST3                  0xFFCAD088         /* SWU3 Bandwidth History Register n */
#define REG_SWU3_CUR0                   0xFFCAD02C         /* SWU3 Current Register n */
#define REG_SWU3_CUR1                   0xFFCAD04C         /* SWU3 Current Register n */
#define REG_SWU3_CUR2                   0xFFCAD06C         /* SWU3 Current Register n */
#define REG_SWU3_CUR3                   0xFFCAD08C         /* SWU3 Current Register n */

/* =========================
        SWU4
   ========================= */
#define REG_SWU4_GCTL                   0xFFCAE000         /* SWU4 Global Control Register */
#define REG_SWU4_GSTAT                  0xFFCAE004         /* SWU4 Global Status Register */
#define REG_SWU4_CTL0                   0xFFCAE010         /* SWU4 Control Register n */
#define REG_SWU4_CTL1                   0xFFCAE030         /* SWU4 Control Register n */
#define REG_SWU4_CTL2                   0xFFCAE050         /* SWU4 Control Register n */
#define REG_SWU4_CTL3                   0xFFCAE070         /* SWU4 Control Register n */
#define REG_SWU4_LA0                    0xFFCAE014         /* SWU4 Lower Address Register n */
#define REG_SWU4_LA1                    0xFFCAE034         /* SWU4 Lower Address Register n */
#define REG_SWU4_LA2                    0xFFCAE054         /* SWU4 Lower Address Register n */
#define REG_SWU4_LA3                    0xFFCAE074         /* SWU4 Lower Address Register n */
#define REG_SWU4_UA0                    0xFFCAE018         /* SWU4 Upper Address Register n */
#define REG_SWU4_UA1                    0xFFCAE038         /* SWU4 Upper Address Register n */
#define REG_SWU4_UA2                    0xFFCAE058         /* SWU4 Upper Address Register n */
#define REG_SWU4_UA3                    0xFFCAE078         /* SWU4 Upper Address Register n */
#define REG_SWU4_ID0                    0xFFCAE01C         /* SWU4 ID Register n */
#define REG_SWU4_ID1                    0xFFCAE03C         /* SWU4 ID Register n */
#define REG_SWU4_ID2                    0xFFCAE05C         /* SWU4 ID Register n */
#define REG_SWU4_ID3                    0xFFCAE07C         /* SWU4 ID Register n */
#define REG_SWU4_CNT0                   0xFFCAE020         /* SWU4 Count Register n */
#define REG_SWU4_CNT1                   0xFFCAE040         /* SWU4 Count Register n */
#define REG_SWU4_CNT2                   0xFFCAE060         /* SWU4 Count Register n */
#define REG_SWU4_CNT3                   0xFFCAE080         /* SWU4 Count Register n */
#define REG_SWU4_TARG0                  0xFFCAE024         /* SWU4 Target Register n */
#define REG_SWU4_TARG1                  0xFFCAE044         /* SWU4 Target Register n */
#define REG_SWU4_TARG2                  0xFFCAE064         /* SWU4 Target Register n */
#define REG_SWU4_TARG3                  0xFFCAE084         /* SWU4 Target Register n */
#define REG_SWU4_HIST0                  0xFFCAE028         /* SWU4 Bandwidth History Register n */
#define REG_SWU4_HIST1                  0xFFCAE048         /* SWU4 Bandwidth History Register n */
#define REG_SWU4_HIST2                  0xFFCAE068         /* SWU4 Bandwidth History Register n */
#define REG_SWU4_HIST3                  0xFFCAE088         /* SWU4 Bandwidth History Register n */
#define REG_SWU4_CUR0                   0xFFCAE02C         /* SWU4 Current Register n */
#define REG_SWU4_CUR1                   0xFFCAE04C         /* SWU4 Current Register n */
#define REG_SWU4_CUR2                   0xFFCAE06C         /* SWU4 Current Register n */
#define REG_SWU4_CUR3                   0xFFCAE08C         /* SWU4 Current Register n */

/* =========================
        SWU5
   ========================= */
#define REG_SWU5_GCTL                   0xFFCAF000         /* SWU5 Global Control Register */
#define REG_SWU5_GSTAT                  0xFFCAF004         /* SWU5 Global Status Register */
#define REG_SWU5_CTL0                   0xFFCAF010         /* SWU5 Control Register n */
#define REG_SWU5_CTL1                   0xFFCAF030         /* SWU5 Control Register n */
#define REG_SWU5_CTL2                   0xFFCAF050         /* SWU5 Control Register n */
#define REG_SWU5_CTL3                   0xFFCAF070         /* SWU5 Control Register n */
#define REG_SWU5_LA0                    0xFFCAF014         /* SWU5 Lower Address Register n */
#define REG_SWU5_LA1                    0xFFCAF034         /* SWU5 Lower Address Register n */
#define REG_SWU5_LA2                    0xFFCAF054         /* SWU5 Lower Address Register n */
#define REG_SWU5_LA3                    0xFFCAF074         /* SWU5 Lower Address Register n */
#define REG_SWU5_UA0                    0xFFCAF018         /* SWU5 Upper Address Register n */
#define REG_SWU5_UA1                    0xFFCAF038         /* SWU5 Upper Address Register n */
#define REG_SWU5_UA2                    0xFFCAF058         /* SWU5 Upper Address Register n */
#define REG_SWU5_UA3                    0xFFCAF078         /* SWU5 Upper Address Register n */
#define REG_SWU5_ID0                    0xFFCAF01C         /* SWU5 ID Register n */
#define REG_SWU5_ID1                    0xFFCAF03C         /* SWU5 ID Register n */
#define REG_SWU5_ID2                    0xFFCAF05C         /* SWU5 ID Register n */
#define REG_SWU5_ID3                    0xFFCAF07C         /* SWU5 ID Register n */
#define REG_SWU5_CNT0                   0xFFCAF020         /* SWU5 Count Register n */
#define REG_SWU5_CNT1                   0xFFCAF040         /* SWU5 Count Register n */
#define REG_SWU5_CNT2                   0xFFCAF060         /* SWU5 Count Register n */
#define REG_SWU5_CNT3                   0xFFCAF080         /* SWU5 Count Register n */
#define REG_SWU5_TARG0                  0xFFCAF024         /* SWU5 Target Register n */
#define REG_SWU5_TARG1                  0xFFCAF044         /* SWU5 Target Register n */
#define REG_SWU5_TARG2                  0xFFCAF064         /* SWU5 Target Register n */
#define REG_SWU5_TARG3                  0xFFCAF084         /* SWU5 Target Register n */
#define REG_SWU5_HIST0                  0xFFCAF028         /* SWU5 Bandwidth History Register n */
#define REG_SWU5_HIST1                  0xFFCAF048         /* SWU5 Bandwidth History Register n */
#define REG_SWU5_HIST2                  0xFFCAF068         /* SWU5 Bandwidth History Register n */
#define REG_SWU5_HIST3                  0xFFCAF088         /* SWU5 Bandwidth History Register n */
#define REG_SWU5_CUR0                   0xFFCAF02C         /* SWU5 Current Register n */
#define REG_SWU5_CUR1                   0xFFCAF04C         /* SWU5 Current Register n */
#define REG_SWU5_CUR2                   0xFFCAF06C         /* SWU5 Current Register n */
#define REG_SWU5_CUR3                   0xFFCAF08C         /* SWU5 Current Register n */

/* =========================
        SWU6
   ========================= */
#define REG_SWU6_GCTL                   0xFFC82000         /* SWU6 Global Control Register */
#define REG_SWU6_GSTAT                  0xFFC82004         /* SWU6 Global Status Register */
#define REG_SWU6_CTL0                   0xFFC82010         /* SWU6 Control Register n */
#define REG_SWU6_CTL1                   0xFFC82030         /* SWU6 Control Register n */
#define REG_SWU6_CTL2                   0xFFC82050         /* SWU6 Control Register n */
#define REG_SWU6_CTL3                   0xFFC82070         /* SWU6 Control Register n */
#define REG_SWU6_LA0                    0xFFC82014         /* SWU6 Lower Address Register n */
#define REG_SWU6_LA1                    0xFFC82034         /* SWU6 Lower Address Register n */
#define REG_SWU6_LA2                    0xFFC82054         /* SWU6 Lower Address Register n */
#define REG_SWU6_LA3                    0xFFC82074         /* SWU6 Lower Address Register n */
#define REG_SWU6_UA0                    0xFFC82018         /* SWU6 Upper Address Register n */
#define REG_SWU6_UA1                    0xFFC82038         /* SWU6 Upper Address Register n */
#define REG_SWU6_UA2                    0xFFC82058         /* SWU6 Upper Address Register n */
#define REG_SWU6_UA3                    0xFFC82078         /* SWU6 Upper Address Register n */
#define REG_SWU6_ID0                    0xFFC8201C         /* SWU6 ID Register n */
#define REG_SWU6_ID1                    0xFFC8203C         /* SWU6 ID Register n */
#define REG_SWU6_ID2                    0xFFC8205C         /* SWU6 ID Register n */
#define REG_SWU6_ID3                    0xFFC8207C         /* SWU6 ID Register n */
#define REG_SWU6_CNT0                   0xFFC82020         /* SWU6 Count Register n */
#define REG_SWU6_CNT1                   0xFFC82040         /* SWU6 Count Register n */
#define REG_SWU6_CNT2                   0xFFC82060         /* SWU6 Count Register n */
#define REG_SWU6_CNT3                   0xFFC82080         /* SWU6 Count Register n */
#define REG_SWU6_TARG0                  0xFFC82024         /* SWU6 Target Register n */
#define REG_SWU6_TARG1                  0xFFC82044         /* SWU6 Target Register n */
#define REG_SWU6_TARG2                  0xFFC82064         /* SWU6 Target Register n */
#define REG_SWU6_TARG3                  0xFFC82084         /* SWU6 Target Register n */
#define REG_SWU6_HIST0                  0xFFC82028         /* SWU6 Bandwidth History Register n */
#define REG_SWU6_HIST1                  0xFFC82048         /* SWU6 Bandwidth History Register n */
#define REG_SWU6_HIST2                  0xFFC82068         /* SWU6 Bandwidth History Register n */
#define REG_SWU6_HIST3                  0xFFC82088         /* SWU6 Bandwidth History Register n */
#define REG_SWU6_CUR0                   0xFFC8202C         /* SWU6 Current Register n */
#define REG_SWU6_CUR1                   0xFFC8204C         /* SWU6 Current Register n */
#define REG_SWU6_CUR2                   0xFFC8206C         /* SWU6 Current Register n */
#define REG_SWU6_CUR3                   0xFFC8208C         /* SWU6 Current Register n */

/* =========================
        SWU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SWU_GCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_GCTL_RST                     1            /* Global Reset */
#define BITP_SWU_GCTL_EN                      0            /* Global Enable */
#define BITM_SWU_GCTL_RST                    0x00000002    /* Global Reset */
#define BITM_SWU_GCTL_EN                     0x00000001    /* Global Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_GSTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_GSTAT_ADDRERR               30            /* Address Error Status */
#define BITP_SWU_GSTAT_OVRBW3                15            /* Group 3 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW3               14            /* Group 3 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_OVRBW2                13            /* Group 2 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW2               12            /* Group 2 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_OVRBW1                11            /* Group 1 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW1               10            /* Group 1 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_OVRBW0                 9            /* Group 0 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW0                8            /* Group 0 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_INT3                   7            /* Group 3 Interrupt Status */
#define BITP_SWU_GSTAT_INT2                   6            /* Group 2 Interrupt Status */
#define BITP_SWU_GSTAT_INT1                   5            /* Group 1 Interrupt Status */
#define BITP_SWU_GSTAT_INT0                   4            /* Group 0 Interrupt Status */
#define BITP_SWU_GSTAT_MTCH3                  3            /* Group 3 Match */
#define BITP_SWU_GSTAT_MTCH2                  2            /* Group 2 Match */
#define BITP_SWU_GSTAT_MTCH1                  1            /* Group 1 Match */
#define BITP_SWU_GSTAT_MTCH0                  0            /* Group 0 Match */
#define BITM_SWU_GSTAT_ADDRERR               0x40000000    /* Address Error Status */
#define BITM_SWU_GSTAT_OVRBW3                0x00008000    /* Group 3 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW3               0x00004000    /* Group 3 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_OVRBW2                0x00002000    /* Group 2 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW2               0x00001000    /* Group 2 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_OVRBW1                0x00000800    /* Group 1 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW1               0x00000400    /* Group 1 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_OVRBW0                0x00000200    /* Group 0 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW0               0x00000100    /* Group 0 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_INT3                  0x00000080    /* Group 3 Interrupt Status */
#define BITM_SWU_GSTAT_INT2                  0x00000040    /* Group 2 Interrupt Status */
#define BITM_SWU_GSTAT_INT1                  0x00000020    /* Group 1 Interrupt Status */
#define BITM_SWU_GSTAT_INT0                  0x00000010    /* Group 0 Interrupt Status */
#define BITM_SWU_GSTAT_MTCH3                 0x00000008    /* Group 3 Match */
#define BITM_SWU_GSTAT_MTCH2                 0x00000004    /* Group 2 Match */
#define BITM_SWU_GSTAT_MTCH1                 0x00000002    /* Group 1 Match */
#define BITM_SWU_GSTAT_MTCH0                 0x00000001    /* Group 0 Match */

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_CTL_MAXACT                  19            /* Action for Bandwidth Above Maximum */
#define BITP_SWU_CTL_MINACT                  18            /* Action for Bandwidth Below Minimum */
#define BITP_SWU_CTL_BLENINC                 17            /* Increment Bandwidth Count by Burst Length */
#define BITP_SWU_CTL_BWEN                    16            /* Bandwidth Mode Enable */
#define BITP_SWU_CTL_TMEN                    15            /* Trace Message Enable */
#define BITP_SWU_CTL_TRGEN                   14            /* Trigger Enable */
#define BITP_SWU_CTL_INTEN                   13            /* Interrupt Enable */
#define BITP_SWU_CTL_DBGEN                   12            /* Debug Event Enable */
#define BITP_SWU_CTL_CNTRPTEN                 9            /* Count Repeat Enable */
#define BITP_SWU_CTL_CNTEN                    8            /* Count Enable */
#define BITP_SWU_CTL_LCMPEN                   6            /* Locked Comparison Enable */
#define BITP_SWU_CTL_SCMPEN                   5            /* Secure Comparison Enable */
#define BITP_SWU_CTL_IDCMPEN                  4            /* ID Comparison Enable */
#define BITP_SWU_CTL_ACMPM                    2            /* Address Comparison Mode */
#define BITP_SWU_CTL_DIR                      1            /* Transaction Direction for Match */
#define BITP_SWU_CTL_EN                       0            /* Enable Watchpoint */
#define BITM_SWU_CTL_MAXACT                  0x00080000    /* Action for Bandwidth Above Maximum */
#define BITM_SWU_CTL_MINACT                  0x00040000    /* Action for Bandwidth Below Minimum */
#define BITM_SWU_CTL_BLENINC                 0x00020000    /* Increment Bandwidth Count by Burst Length */
#define BITM_SWU_CTL_BWEN                    0x00010000    /* Bandwidth Mode Enable */
#define BITM_SWU_CTL_TMEN                    0x00008000    /* Trace Message Enable */
#define BITM_SWU_CTL_TRGEN                   0x00004000    /* Trigger Enable */
#define BITM_SWU_CTL_INTEN                   0x00002000    /* Interrupt Enable */
#define BITM_SWU_CTL_DBGEN                   0x00001000    /* Debug Event Enable */
#define BITM_SWU_CTL_CNTRPTEN                0x00000200    /* Count Repeat Enable */
#define BITM_SWU_CTL_CNTEN                   0x00000100    /* Count Enable */
#define BITM_SWU_CTL_LCMPEN                  0x00000040    /* Locked Comparison Enable */
#define BITM_SWU_CTL_SCMPEN                  0x00000020    /* Secure Comparison Enable */
#define BITM_SWU_CTL_IDCMPEN                 0x00000010    /* ID Comparison Enable */
#define BITM_SWU_CTL_ACMPM                   0x0000000C    /* Address Comparison Mode */
#define BITM_SWU_CTL_DIR                     0x00000002    /* Transaction Direction for Match */
#define BITM_SWU_CTL_EN                      0x00000001    /* Enable Watchpoint */

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_ID                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_ID_IDMASK                   16
#define BITP_SWU_ID_ID                        0
#define BITM_SWU_ID_IDMASK                   0xFFFF0000
#define BITM_SWU_ID_ID                       0x0000FFFF

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_CNT                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_CNT_COUNT                    0            /* Count */
#define BITM_SWU_CNT_COUNT                   0x0000FFFF    /* Count */

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_TARG                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_TARG_BWMAX                  16            /* Maximum Bandwidth Target */
#define BITP_SWU_TARG_BWMIN                   0            /* Minimum Bandwidth Target */
#define BITM_SWU_TARG_BWMAX                  0xFFFF0000    /* Maximum Bandwidth Target */
#define BITM_SWU_TARG_BWMIN                  0x0000FFFF    /* Minimum Bandwidth Target */

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_HIST                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_HIST_BWHIST1                16            /* Bandwidth from Window Before Last */
#define BITP_SWU_HIST_BWHIST0                 0            /* Bandwidth from Last Window */
#define BITM_SWU_HIST_BWHIST1                0xFFFF0000    /* Bandwidth from Window Before Last */
#define BITM_SWU_HIST_BWHIST0                0x0000FFFF    /* Bandwidth from Last Window */

/* ------------------------------------------------------------------------------------------------------------------------
        SWU_CUR                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SWU_CUR_CURBW                   16            /* Current Bandwidth */
#define BITP_SWU_CUR_CURCNT                   0            /* Current Count */
#define BITM_SWU_CUR_CURBW                   0xFFFF0000    /* Current Bandwidth */
#define BITM_SWU_CUR_CURCNT                  0x0000FFFF    /* Current Count */

/* =========================
        SDU Registers
   ========================= */

/* =========================
        SDU0
   ========================= */
#define REG_SDU0_IDCODE                 0xFFC1F020         /* SDU0 ID Code Register */
#define REG_SDU0_CTL                    0xFFC1F050         /* SDU0 Control Register */
#define REG_SDU0_STAT                   0xFFC1F054         /* SDU0 Status Register */
#define REG_SDU0_MACCTL                 0xFFC1F058         /* SDU0 Memory Access Control Register */
#define REG_SDU0_MACADDR                0xFFC1F05C         /* SDU0 Memory Access Address Register */
#define REG_SDU0_MACDATA                0xFFC1F060         /* SDU0 Memory Access Data Register */
#define REG_SDU0_DMARD                  0xFFC1F064         /* SDU0 DMA Read Data Register */
#define REG_SDU0_DMAWD                  0xFFC1F068         /* SDU0 DMA Write Data Register */
#define REG_SDU0_MSG                    0xFFC1F080         /* SDU0 Message Register */
#define REG_SDU0_MSG_SET                0xFFC1F084         /* SDU0 Message Set Register */
#define REG_SDU0_MSG_CLR                0xFFC1F088         /* SDU0 Message Clear Register */
#define REG_SDU0_GHLT                   0xFFC1F08C         /* SDU0 Group Halt Register */

/* =========================
        SDU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SDU_IDCODE                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SDU_IDCODE_REVID                28            /* Revision ID */
#define BITP_SDU_IDCODE_PRID                 12            /* Product ID */
#define BITP_SDU_IDCODE_MFID                  1            /* Manufacturer ID */
#define BITM_SDU_IDCODE_REVID                0xF0000000    /* Revision ID */
#define BITM_SDU_IDCODE_PRID                 0x0FFFF000    /* Product ID */
#define BITM_SDU_IDCODE_MFID                 0x00000FFE    /* Manufacturer ID */

/* ------------------------------------------------------------------------------------------------------------------------
        SDU_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SDU_CTL_EHLT                     8            /* Emulator Halt Select */
#define BITP_SDU_CTL_EMEEN                    4            /* Emulation Event Enable */
#define BITP_SDU_CTL_DMAEN                    2            /* DMA Enable */
#define BITP_SDU_CTL_CSPEN                    1            /* Core Scan Path Enable */
#define BITP_SDU_CTL_SYSRST                   0            /* System Reset */
#define BITM_SDU_CTL_EHLT                    0x0000FF00    /* Emulator Halt Select */
#define BITM_SDU_CTL_EMEEN                   0x00000010    /* Emulation Event Enable */
#define BITM_SDU_CTL_DMAEN                   0x00000004    /* DMA Enable */
#define BITM_SDU_CTL_CSPEN                   0x00000002    /* Core Scan Path Enable */
#define BITM_SDU_CTL_SYSRST                  0x00000001    /* System Reset */

/* ------------------------------------------------------------------------------------------------------------------------
        SDU_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SDU_STAT_CRST                   22            /* Core Reset */
#define BITP_SDU_STAT_CHLT                   21            /* Core Halt */
#define BITP_SDU_STAT_EME                    20            /* Emulation Event */
#define BITP_SDU_STAT_GHLTC                  17            /* Group Halt Cause */
#define BITP_SDU_STAT_GHLT                   16            /* Group Halt */
#define BITP_SDU_STAT_DMAFIFO                12            /* DMA FIFO */
#define BITP_SDU_STAT_ADDRERR                11            /* Address Error */
#define BITP_SDU_STAT_DMAWDRDY               10            /* DMAWD Ready */
#define BITP_SDU_STAT_DMARDRDY                9            /* DMARD Ready */
#define BITP_SDU_STAT_MACRDY                  8            /* MAC Ready */
#define BITP_SDU_STAT_ERRC                    4            /* Error Cause */
#define BITP_SDU_STAT_SECURE                  3            /* Secure Mode */
#define BITP_SDU_STAT_DEEPSLEEP               2            /* Deep Sleep Mode */
#define BITP_SDU_STAT_ERR                     1            /* Error */
#define BITP_SDU_STAT_SYSRST                  0            /* System Reset */
#define BITM_SDU_STAT_CRST                   0x00400000    /* Core Reset */
#define BITM_SDU_STAT_CHLT                   0x00200000    /* Core Halt */
#define BITM_SDU_STAT_EME                    0x00100000    /* Emulation Event */
#define BITM_SDU_STAT_GHLTC                  0x000E0000    /* Group Halt Cause */
#define BITM_SDU_STAT_GHLT                   0x00010000    /* Group Halt */
#define BITM_SDU_STAT_DMAFIFO                0x00007000    /* DMA FIFO */
#define BITM_SDU_STAT_ADDRERR                0x00000800    /* Address Error */
#define BITM_SDU_STAT_DMAWDRDY               0x00000400    /* DMAWD Ready */
#define BITM_SDU_STAT_DMARDRDY               0x00000200    /* DMARD Ready */
#define BITM_SDU_STAT_MACRDY                 0x00000100    /* MAC Ready */
#define BITM_SDU_STAT_ERRC                   0x000000F0    /* Error Cause */
#define BITM_SDU_STAT_SECURE                 0x00000008    /* Secure Mode */
#define BITM_SDU_STAT_DEEPSLEEP              0x00000004    /* Deep Sleep Mode */
#define BITM_SDU_STAT_ERR                    0x00000002    /* Error */
#define BITM_SDU_STAT_SYSRST                 0x00000001    /* System Reset */

/* ------------------------------------------------------------------------------------------------------------------------
        SDU_MACCTL                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SDU_MACCTL_AUTOINC               4            /* Auto (Post) Increment MACADDR (by SIZE) */
#define BITP_SDU_MACCTL_RNW                   3            /* Read Not Write */
#define BITP_SDU_MACCTL_SIZE                  0            /* Transfer Data Size */
#define BITM_SDU_MACCTL_AUTOINC              0x00000010    /* Auto (Post) Increment MACADDR (by SIZE) */
#define BITM_SDU_MACCTL_RNW                  0x00000008    /* Read Not Write */
#define BITM_SDU_MACCTL_SIZE                 0x00000007    /* Transfer Data Size */

/* ------------------------------------------------------------------------------------------------------------------------
        SDU_GHLT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SDU_GHLT_SS2                    18            /* Slave Select 2 */
#define BITP_SDU_GHLT_SS1                    17            /* Slave Select 1 */
#define BITP_SDU_GHLT_SS0                    16            /* Slave Select 0 */
#define BITP_SDU_GHLT_MS2                     2            /* Master Select 2 */
#define BITP_SDU_GHLT_MS1                     1            /* Master Select 1 */
#define BITP_SDU_GHLT_MS0                     0            /* Master Select 0 */
#define BITM_SDU_GHLT_SS2                    0x00040000    /* Slave Select 2 */
#define BITM_SDU_GHLT_SS1                    0x00020000    /* Slave Select 1 */
#define BITM_SDU_GHLT_SS0                    0x00010000    /* Slave Select 0 */
#define BITM_SDU_GHLT_MS2                    0x00000004    /* Master Select 2 */
#define BITM_SDU_GHLT_MS1                    0x00000002    /* Master Select 1 */
#define BITM_SDU_GHLT_MS0                    0x00000001    /* Master Select 0 */

/* =========================
        EMAC Registers
   ========================= */

/* =========================
        EMAC0
   ========================= */
#define REG_EMAC0_MACCFG                0xFFC20000         /* EMAC0 MAC Configuration Register */
#define REG_EMAC0_MACFRMFILT            0xFFC20004         /* EMAC0 Filter Register for filtering Received Frames */
#define REG_EMAC0_HASHTBL_HI            0xFFC20008         /* EMAC0 Contains the Upper 32 bits of the hash table */
#define REG_EMAC0_HASHTBL_LO            0xFFC2000C         /* EMAC0 Contains the lower 32 bits of the hash table */
#define REG_EMAC0_GMII_ADDR             0xFFC20010         /* EMAC0 Management Address Register */
#define REG_EMAC0_GMII_DATA             0xFFC20014         /* EMAC0 Management Data Register */
#define REG_EMAC0_FLOWCTL               0xFFC20018         /* EMAC0 MAC FLow Control Register */
#define REG_EMAC0_VLANTAG               0xFFC2001C         /* EMAC0 VLAN Tag Register */
#define REG_EMAC0_VER                   0xFFC20020         /* EMAC0 EMAC Version Register */
#define REG_EMAC0_DBG                   0xFFC20024         /* EMAC0 EMAC Debug Register */
#define REG_EMAC0_RMTWKUP               0xFFC20028         /* EMAC0 Remote wake up frame register */
#define REG_EMAC0_PMT_CTLSTAT           0xFFC2002C         /* EMAC0 PMT Control and Status Register */
#define REG_EMAC0_ISTAT                 0xFFC20038         /* EMAC0 EMAC Interrupt Status Register */
#define REG_EMAC0_IMSK                  0xFFC2003C         /* EMAC0 EMAC Interrupt Mask Register */
#define REG_EMAC0_ADDR0_HI              0xFFC20040         /* EMAC0 EMAC Address0 High Register */
#define REG_EMAC0_ADDR0_LO              0xFFC20044         /* EMAC0 EMAC Address0 Low Register */
#define REG_EMAC0_MMC_CTL               0xFFC20100         /* EMAC0 MMC Control Register */
#define REG_EMAC0_MMC_RXINT             0xFFC20104         /* EMAC0 MMC RX Interrupt Register */
#define REG_EMAC0_MMC_TXINT             0xFFC20108         /* EMAC0 MMC TX Interrupt Register */
#define REG_EMAC0_MMC_RXIMSK            0xFFC2010C         /* EMAC0 MMC RX Interrupt Mask Register */
#define REG_EMAC0_MMC_TXIMSK            0xFFC20110         /* EMAC0 MMC TX Interrupt Mask Register */
#define REG_EMAC0_TXOCTCNT_GB           0xFFC20114         /* EMAC0 Num bytes transmitted exclusive of preamble */
#define REG_EMAC0_TXFRMCNT_GB           0xFFC20118         /* EMAC0 Num frames transmitted exclusive of retired */
#define REG_EMAC0_TXBCASTFRM_G          0xFFC2011C         /* EMAC0 Number of good broadcast frames transmitted. */
#define REG_EMAC0_TXMCASTFRM_G          0xFFC20120         /* EMAC0 Number of good multicast frames transmitted. */
#define REG_EMAC0_TX64_GB               0xFFC20124         /* EMAC0 Number of 64 byte length frames */
#define REG_EMAC0_TX65TO127_GB          0xFFC20128         /* EMAC0 Number of frames of length b/w 65-127 (inclusive) bytes */
#define REG_EMAC0_TX128TO255_GB         0xFFC2012C         /* EMAC0 Number of frames of length b/w 128-255 (inclusive) bytes */
#define REG_EMAC0_TX256TO511_GB         0xFFC20130         /* EMAC0 Number of frames of length b/w 256-511 (inclusive) bytes */
#define REG_EMAC0_TX512TO1023_GB        0xFFC20134         /* EMAC0 Number of frames of length b/w 512-1023 (inclusive) bytes */
#define REG_EMAC0_TX1024TOMAX_GB        0xFFC20138         /* EMAC0 Number of frames of length b/w 1024-max (inclusive) bytes */
#define REG_EMAC0_TXUCASTFRM_GB         0xFFC2013C         /* EMAC0 Number of good and bad unicast frames transmitted */
#define REG_EMAC0_TXMCASTFRM_GB         0xFFC20140         /* EMAC0 Number of good and bad multicast frames transmitted */
#define REG_EMAC0_TXBCASTFRM_GB         0xFFC20144         /* EMAC0 Number of good and bad broadcast frames transmitted */
#define REG_EMAC0_TXUNDR_ERR            0xFFC20148         /* EMAC0 Number of frames aborted due to frame underflow error */
#define REG_EMAC0_TXSNGCOL_G            0xFFC2014C         /* EMAC0 Number of transmitted frames after single collision */
#define REG_EMAC0_TXMULTCOL_G           0xFFC20150         /* EMAC0 Number of transmitted frames with more than one collision */
#define REG_EMAC0_TXDEFERRED            0xFFC20154         /* EMAC0 Number of transmitted frames after deferral */
#define REG_EMAC0_TXLATECOL             0xFFC20158         /* EMAC0 Number of frames aborted due to late collision error */
#define REG_EMAC0_TXEXCESSCOL           0xFFC2015C         /* EMAC0 Number of aborted frames due to excessive collisions */
#define REG_EMAC0_TXCARR_ERR            0xFFC20160         /* EMAC0 Number of aborted frames due to carrier sense error */
#define REG_EMAC0_TXOCTCNT_G            0xFFC20164         /* EMAC0 Number of bytes transmitted in good frames only */
#define REG_EMAC0_TXFRMCNT_G            0xFFC20168         /* EMAC0 Number of good frames transmitted. */
#define REG_EMAC0_TXEXCESSDEF           0xFFC2016C         /* EMAC0 Number of frames aborted due to excessive deferral */
#define REG_EMAC0_TXPAUSEFRM            0xFFC20170         /* EMAC0 Number of good PAUSE frames transmitted. */
#define REG_EMAC0_TXVLANFRM_G           0xFFC20174         /* EMAC0 Number of VLAN frames transmitted */
#define REG_EMAC0_RXFRMCNT_GB           0xFFC20180         /* EMAC0 Number of good and bad frames received. */
#define REG_EMAC0_RXOCTCNT_GB           0xFFC20184         /* EMAC0 Number of bytes received in good and bad frames */
#define REG_EMAC0_RXOCTCNT_G            0xFFC20188         /* EMAC0 Number of bytes received only in good frames */
#define REG_EMAC0_RXBCASTFRM_G          0xFFC2018C         /* EMAC0 Number of good broadcast frames received. */
#define REG_EMAC0_RXMCASTFRM_G          0xFFC20190         /* EMAC0 Number of good multicast frames received */
#define REG_EMAC0_RXCRC_ERR             0xFFC20194         /* EMAC0 Number of frames received with CRC error */
#define REG_EMAC0_RXALIGN_ERR           0xFFC20198         /* EMAC0 Number of frames with alignment error */
#define REG_EMAC0_RXRUNT_ERR            0xFFC2019C         /* EMAC0 Number of frames received with runt error. */
#define REG_EMAC0_RXJAB_ERR             0xFFC201A0         /* EMAC0 Number of frames received with length greater than 1518 */
#define REG_EMAC0_RXUSIZE_G             0xFFC201A4         /* EMAC0 Number of frames received with length 64 */
#define REG_EMAC0_RXOSIZE_G             0xFFC201A8         /* EMAC0 Number of frames received with length greater than maxium */
#define REG_EMAC0_RX64_GB               0xFFC201AC         /* EMAC0 Number of good and bad frames of lengh 64 bytes */
#define REG_EMAC0_RX65TO127_GB          0xFFC201B0         /* EMAC0 Number of good and bad frame between 64-127(inclusive) */
#define REG_EMAC0_RX128TO255_GB         0xFFC201B4         /* EMAC0 Number of good and bad frames received with length between 128 and 255 (inclusive) bytes, exclusive of preamble. */
#define REG_EMAC0_RX256TO511_GB         0xFFC201B8         /* EMAC0 Number of good and bad frames between 256-511(inclusive) */
#define REG_EMAC0_RX512TO1023_GB        0xFFC201BC         /* EMAC0 Number of good and bad frames received between 512-1023 */
#define REG_EMAC0_RX1024TOMAX_GB        0xFFC201C0         /* EMAC0 Number of frames received between 1024 and maxsize */
#define REG_EMAC0_RXUCASTFRM_G          0xFFC201C4         /* EMAC0 Number of good unicast frames received. */
#define REG_EMAC0_RXLEN_ERR             0xFFC201C8         /* EMAC0 Number of frames received with length error */
#define REG_EMAC0_RXOORTYPE             0xFFC201CC         /* EMAC0 Number of frames with length not equal to valid frame size */
#define REG_EMAC0_RXPAUSEFRM            0xFFC201D0         /* EMAC0 Number of good and valid PAUSE frames received. */
#define REG_EMAC0_RXFIFO_OVF            0xFFC201D4         /* EMAC0 Number of missed received frames due to FIFO overflow. This counter is not present in the GMAC-CORE configuration. */
#define REG_EMAC0_RXVLANFRM_GB          0xFFC201D8         /* EMAC0 Number of good and bad VLAN frames received. */
#define REG_EMAC0_RXWDOG_ERR            0xFFC201DC         /* EMAC0 Frames received with error due to watchdog timeout */
#define REG_EMAC0_IPC_RXIMSK            0xFFC20200         /* EMAC0 MMC IPC RX Interrupt Mask Register */
#define REG_EMAC0_IPC_RXINT             0xFFC20208         /* EMAC0 MMC IPC RX Interrupt Register */
#define REG_EMAC0_RXIPV4_GD_FRM         0xFFC20210         /* EMAC0 Number of good IPv4 datagrams */
#define REG_EMAC0_RXIPV4_HDR_ERR_FRM    0xFFC20214         /* EMAC0 Number of IPv4 datagrams with header errors */
#define REG_EMAC0_RXIPV4_NOPAY_FRM      0xFFC20218         /* EMAC0 Number of IPv4 datagrams without checksum */
#define REG_EMAC0_RXIPV4_FRAG_FRM       0xFFC2021C         /* EMAC0 Number of good IPv4 datagrams with fragmentation */
#define REG_EMAC0_RXIPV4_UDSBL_FRM      0xFFC20220         /* EMAC0 Number of IPv4 UDP datagrams with disabled checksum */
#define REG_EMAC0_RXIPV6_GD_FRM         0xFFC20224         /* EMAC0 Number of IPv4 datagrams with TCP/UDP/ICMP payloads */
#define REG_EMAC0_RXIPV6_HDR_ERR_FRM    0xFFC20228         /* EMAC0 Number of IPv6 datagrams with header errors */
#define REG_EMAC0_RXIPV6_NOPAY_FRM      0xFFC2022C         /* EMAC0 Number of IPv6 datagrams with no TCP/UDP/ICMP payload */
#define REG_EMAC0_RXUDP_GD_FRM          0xFFC20230         /* EMAC0 Number of good IP datagrames with good UDP payload */
#define REG_EMAC0_RXUDP_ERR_FRM         0xFFC20234         /* EMAC0 Number of good IP datagrams with UDP checksum errors */
#define REG_EMAC0_RXTCP_GD_FRM          0xFFC20238         /* EMAC0 Number of good IP datagrams with a good TCP payload */
#define REG_EMAC0_RXTCP_ERR_FRM         0xFFC2023C         /* EMAC0 Number of good IP datagrams with TCP checksum errors */
#define REG_EMAC0_RXICMP_GD_FRM         0xFFC20240         /* EMAC0 Number of good IP datagrams with a good ICMP payload */
#define REG_EMAC0_RXICMP_ERR_FRM        0xFFC20244         /* EMAC0 Number of good IP datagrams with ICMP checksum errors */
#define REG_EMAC0_RXIPV4_GD_OCT         0xFFC20250         /* EMAC0 Bytes received in IPv4 datagrams including tcp,udp or icmp */
#define REG_EMAC0_RXIPV4_HDR_ERR_OCT    0xFFC20254         /* EMAC0 Bytes received in IPv4 datagrams with header errors */
#define REG_EMAC0_RXIPV4_NOPAY_OCT      0xFFC20258         /* EMAC0 Bytes received in IPv4 datagrams without tcp,udp,icmp load */
#define REG_EMAC0_RXIPV4_FRAG_OCT       0xFFC2025C         /* EMAC0 Bytes received in fragmented IPv4 datagrams */
#define REG_EMAC0_RXIPV4_UDSBL_OCT      0xFFC20260         /* EMAC0 Bytes received in UDP segment with checksum disabled */
#define REG_EMAC0_RXIPV6_GD_OCT         0xFFC20264         /* EMAC0 Bytes received in good IPv6  including tcp,udp or icmp load */
#define REG_EMAC0_RXIPV6_HDR_ERR_OCT    0xFFC20268         /* EMAC0 Number of bytes received in IPv6 with header errors */
#define REG_EMAC0_RXIPV6_NOPAY_OCT      0xFFC2026C         /* EMAC0 Bytes received in IPv6 without tcp,udp or icmp load */
#define REG_EMAC0_RXUDP_GD_OCT          0xFFC20270         /* EMAC0 Number of bytes received in good UDP segments */
#define REG_EMAC0_RXUDP_ERR_OCT         0xFFC20274         /* EMAC0 Number of bytes received in UDP segment with checksum err */
#define REG_EMAC0_RXTCP_GD_OCT          0xFFC20278         /* EMAC0 Number of bytes received in a good TCP segment */
#define REG_EMAC0_RXTCP_ERR_OCT         0xFFC2027C         /* EMAC0 Number of bytes received in TCP segment with checksum err */
#define REG_EMAC0_RXICMP_GD_OCT         0xFFC20280         /* EMAC0 Number of bytes received in a good ICMP segment */
#define REG_EMAC0_RXICMP_ERR_OCT        0xFFC20284         /* EMAC0 Bytes received in an ICMP segment with checksum errors */
#define REG_EMAC0_TM_CTL                0xFFC20700         /* EMAC0 EMAC Time Stamp Control Register */
#define REG_EMAC0_TM_SUBSEC             0xFFC20704         /* EMAC0 EMAC Time Stamp Sub Second Increment */
#define REG_EMAC0_TM_SEC                0xFFC20708         /* EMAC0 EMAC Time Stamp Second Register */
#define REG_EMAC0_TM_NSEC               0xFFC2070C         /* EMAC0 EMAC Time Stamp Nano Second Register */
#define REG_EMAC0_TM_SECUPDT            0xFFC20710         /* EMAC0 EMAC Time Stamp Seconds Update */
#define REG_EMAC0_TM_NSECUPDT           0xFFC20714         /* EMAC0 EMAC Time Stamp Nano Seconds Update */
#define REG_EMAC0_TM_ADDEND             0xFFC20718         /* EMAC0 EMAC Time Stamp Addend Register */
#define REG_EMAC0_TM_TGTM               0xFFC2071C         /* EMAC0 EMAC Time Stamp Target Time Sec. */
#define REG_EMAC0_TM_NTGTM              0xFFC20720         /* EMAC0 EMAC Time Stamp Target Time Nanosec. */
#define REG_EMAC0_TM_HISEC              0xFFC20724         /* EMAC0 EMAC Time Stamp High Second Register */
#define REG_EMAC0_TM_STMPSTAT           0xFFC20728         /* EMAC0 EMAC Time Stamp Status Register */
#define REG_EMAC0_TM_PPSCTL             0xFFC2072C         /* EMAC0 EMAC PPS Control Register */
#define REG_EMAC0_TM_AUXSTMP_NSEC       0xFFC20730         /* EMAC0 EMAC Auxillary Time Stamp Nano Register */
#define REG_EMAC0_TM_AUXSTMP_SEC        0xFFC20734         /* EMAC0 EMAC Auxillary Time Stamp Sec Register */
#define REG_EMAC0_DMA_BUSMODE           0xFFC21000         /* EMAC0 Bus Operating Modes for EMAC DMA */
#define REG_EMAC0_DMA_TXPOLL            0xFFC21004         /* EMAC0 TX DMA Poll demand register */
#define REG_EMAC0_DMA_RXPOLL            0xFFC21008         /* EMAC0 RX DMA Poll demand register */
#define REG_EMAC0_DMA_RXDSC_ADDR        0xFFC2100C         /* EMAC0 RX Descriptor List Address */
#define REG_EMAC0_DMA_TXDSC_ADDR        0xFFC21010         /* EMAC0 TX Descriptor List Address */
#define REG_EMAC0_DMA_STAT              0xFFC21014         /* EMAC0 DMA Status Register */
#define REG_EMAC0_DMA_OPMODE            0xFFC21018         /* EMAC0 DMA Operation Mode Register */
#define REG_EMAC0_DMA_IEN               0xFFC2101C         /* EMAC0 DMA Interrupt Enable Register */
#define REG_EMAC0_DMA_MISS_FRM          0xFFC21020         /* EMAC0 DMA missed frame and buffer overflow counter */
#define REG_EMAC0_DMA_RXIWDOG           0xFFC21024         /* EMAC0 DMA RX Interrupt Watch Dog timer */
#define REG_EMAC0_DMA_BMMODE            0xFFC21028         /* EMAC0 AXI Bus Mode Register */
#define REG_EMAC0_DMA_BMSTAT            0xFFC2102C         /* EMAC0 AXI Status Register */
#define REG_EMAC0_DMA_TXDSC_CUR         0xFFC21048         /* EMAC0 TX current descriptor register */
#define REG_EMAC0_DMA_RXDSC_CUR         0xFFC2104C         /* EMAC0 RX current descriptor register */
#define REG_EMAC0_DMA_TXBUF_CUR         0xFFC21050         /* EMAC0 TX current buffer pointer register */
#define REG_EMAC0_DMA_RXBUF_CUR         0xFFC21054         /* EMAC0 RX current buffer pointer register */
#define REG_EMAC0_HWFEAT                0xFFC21058         /* EMAC0 Hardware Feature Register */

/* =========================
        EMAC1
   ========================= */
#define REG_EMAC1_MACCFG                0xFFC22000         /* EMAC1 MAC Configuration Register */
#define REG_EMAC1_MACFRMFILT            0xFFC22004         /* EMAC1 Filter Register for filtering Received Frames */
#define REG_EMAC1_HASHTBL_HI            0xFFC22008         /* EMAC1 Contains the Upper 32 bits of the hash table */
#define REG_EMAC1_HASHTBL_LO            0xFFC2200C         /* EMAC1 Contains the lower 32 bits of the hash table */
#define REG_EMAC1_GMII_ADDR             0xFFC22010         /* EMAC1 Management Address Register */
#define REG_EMAC1_GMII_DATA             0xFFC22014         /* EMAC1 Management Data Register */
#define REG_EMAC1_FLOWCTL               0xFFC22018         /* EMAC1 MAC FLow Control Register */
#define REG_EMAC1_VLANTAG               0xFFC2201C         /* EMAC1 VLAN Tag Register */
#define REG_EMAC1_VER                   0xFFC22020         /* EMAC1 EMAC Version Register */
#define REG_EMAC1_DBG                   0xFFC22024         /* EMAC1 EMAC Debug Register */
#define REG_EMAC1_RMTWKUP               0xFFC22028         /* EMAC1 Remote wake up frame register */
#define REG_EMAC1_PMT_CTLSTAT           0xFFC2202C         /* EMAC1 PMT Control and Status Register */
#define REG_EMAC1_ISTAT                 0xFFC22038         /* EMAC1 EMAC Interrupt Status Register */
#define REG_EMAC1_IMSK                  0xFFC2203C         /* EMAC1 EMAC Interrupt Mask Register */
#define REG_EMAC1_ADDR0_HI              0xFFC22040         /* EMAC1 EMAC Address0 High Register */
#define REG_EMAC1_ADDR0_LO              0xFFC22044         /* EMAC1 EMAC Address0 Low Register */
#define REG_EMAC1_MMC_CTL               0xFFC22100         /* EMAC1 MMC Control Register */
#define REG_EMAC1_MMC_RXINT             0xFFC22104         /* EMAC1 MMC RX Interrupt Register */
#define REG_EMAC1_MMC_TXINT             0xFFC22108         /* EMAC1 MMC TX Interrupt Register */
#define REG_EMAC1_MMC_RXIMSK            0xFFC2210C         /* EMAC1 MMC RX Interrupt Mask Register */
#define REG_EMAC1_MMC_TXIMSK            0xFFC22110         /* EMAC1 MMC TX Interrupt Mask Register */
#define REG_EMAC1_TXOCTCNT_GB           0xFFC22114         /* EMAC1 Num bytes transmitted exclusive of preamble */
#define REG_EMAC1_TXFRMCNT_GB           0xFFC22118         /* EMAC1 Num frames transmitted exclusive of retired */
#define REG_EMAC1_TXBCASTFRM_G          0xFFC2211C         /* EMAC1 Number of good broadcast frames transmitted. */
#define REG_EMAC1_TXMCASTFRM_G          0xFFC22120         /* EMAC1 Number of good multicast frames transmitted. */
#define REG_EMAC1_TX64_GB               0xFFC22124         /* EMAC1 Number of 64 byte length frames */
#define REG_EMAC1_TX65TO127_GB          0xFFC22128         /* EMAC1 Number of frames of length b/w 65-127 (inclusive) bytes */
#define REG_EMAC1_TX128TO255_GB         0xFFC2212C         /* EMAC1 Number of frames of length b/w 128-255 (inclusive) bytes */
#define REG_EMAC1_TX256TO511_GB         0xFFC22130         /* EMAC1 Number of frames of length b/w 256-511 (inclusive) bytes */
#define REG_EMAC1_TX512TO1023_GB        0xFFC22134         /* EMAC1 Number of frames of length b/w 512-1023 (inclusive) bytes */
#define REG_EMAC1_TX1024TOMAX_GB        0xFFC22138         /* EMAC1 Number of frames of length b/w 1024-max (inclusive) bytes */
#define REG_EMAC1_TXUCASTFRM_GB         0xFFC2213C         /* EMAC1 Number of good and bad unicast frames transmitted */
#define REG_EMAC1_TXMCASTFRM_GB         0xFFC22140         /* EMAC1 Number of good and bad multicast frames transmitted */
#define REG_EMAC1_TXBCASTFRM_GB         0xFFC22144         /* EMAC1 Number of good and bad broadcast frames transmitted */
#define REG_EMAC1_TXUNDR_ERR            0xFFC22148         /* EMAC1 Number of frames aborted due to frame underflow error */
#define REG_EMAC1_TXSNGCOL_G            0xFFC2214C         /* EMAC1 Number of transmitted frames after single collision */
#define REG_EMAC1_TXMULTCOL_G           0xFFC22150         /* EMAC1 Number of transmitted frames with more than one collision */
#define REG_EMAC1_TXDEFERRED            0xFFC22154         /* EMAC1 Number of transmitted frames after deferral */
#define REG_EMAC1_TXLATECOL             0xFFC22158         /* EMAC1 Number of frames aborted due to late collision error */
#define REG_EMAC1_TXEXCESSCOL           0xFFC2215C         /* EMAC1 Number of aborted frames due to excessive collisions */
#define REG_EMAC1_TXCARR_ERR            0xFFC22160         /* EMAC1 Number of aborted frames due to carrier sense error */
#define REG_EMAC1_TXOCTCNT_G            0xFFC22164         /* EMAC1 Number of bytes transmitted in good frames only */
#define REG_EMAC1_TXFRMCNT_G            0xFFC22168         /* EMAC1 Number of good frames transmitted. */
#define REG_EMAC1_TXEXCESSDEF           0xFFC2216C         /* EMAC1 Number of frames aborted due to excessive deferral */
#define REG_EMAC1_TXPAUSEFRM            0xFFC22170         /* EMAC1 Number of good PAUSE frames transmitted. */
#define REG_EMAC1_TXVLANFRM_G           0xFFC22174         /* EMAC1 Number of VLAN frames transmitted */
#define REG_EMAC1_RXFRMCNT_GB           0xFFC22180         /* EMAC1 Number of good and bad frames received. */
#define REG_EMAC1_RXOCTCNT_GB           0xFFC22184         /* EMAC1 Number of bytes received in good and bad frames */
#define REG_EMAC1_RXOCTCNT_G            0xFFC22188         /* EMAC1 Number of bytes received only in good frames */
#define REG_EMAC1_RXBCASTFRM_G          0xFFC2218C         /* EMAC1 Number of good broadcast frames received. */
#define REG_EMAC1_RXMCASTFRM_G          0xFFC22190         /* EMAC1 Number of good multicast frames received */
#define REG_EMAC1_RXCRC_ERR             0xFFC22194         /* EMAC1 Number of frames received with CRC error */
#define REG_EMAC1_RXALIGN_ERR           0xFFC22198         /* EMAC1 Number of frames with alignment error */
#define REG_EMAC1_RXRUNT_ERR            0xFFC2219C         /* EMAC1 Number of frames received with runt error. */
#define REG_EMAC1_RXJAB_ERR             0xFFC221A0         /* EMAC1 Number of frames received with length greater than 1518 */
#define REG_EMAC1_RXUSIZE_G             0xFFC221A4         /* EMAC1 Number of frames received with length 64 */
#define REG_EMAC1_RXOSIZE_G             0xFFC221A8         /* EMAC1 Number of frames received with length greater than maxium */
#define REG_EMAC1_RX64_GB               0xFFC221AC         /* EMAC1 Number of good and bad frames of lengh 64 bytes */
#define REG_EMAC1_RX65TO127_GB          0xFFC221B0         /* EMAC1 Number of good and bad frame between 64-127(inclusive) */
#define REG_EMAC1_RX128TO255_GB         0xFFC221B4         /* EMAC1 Number of good and bad frames received with length between 128 and 255 (inclusive) bytes, exclusive of preamble. */
#define REG_EMAC1_RX256TO511_GB         0xFFC221B8         /* EMAC1 Number of good and bad frames between 256-511(inclusive) */
#define REG_EMAC1_RX512TO1023_GB        0xFFC221BC         /* EMAC1 Number of good and bad frames received between 512-1023 */
#define REG_EMAC1_RX1024TOMAX_GB        0xFFC221C0         /* EMAC1 Number of frames received between 1024 and maxsize */
#define REG_EMAC1_RXUCASTFRM_G          0xFFC221C4         /* EMAC1 Number of good unicast frames received. */
#define REG_EMAC1_RXLEN_ERR             0xFFC221C8         /* EMAC1 Number of frames received with length error */
#define REG_EMAC1_RXOORTYPE             0xFFC221CC         /* EMAC1 Number of frames with length not equal to valid frame size */
#define REG_EMAC1_RXPAUSEFRM            0xFFC221D0         /* EMAC1 Number of good and valid PAUSE frames received. */
#define REG_EMAC1_RXFIFO_OVF            0xFFC221D4         /* EMAC1 Number of missed received frames due to FIFO overflow. This counter is not present in the GMAC-CORE configuration. */
#define REG_EMAC1_RXVLANFRM_GB          0xFFC221D8         /* EMAC1 Number of good and bad VLAN frames received. */
#define REG_EMAC1_RXWDOG_ERR            0xFFC221DC         /* EMAC1 Frames received with error due to watchdog timeout */
#define REG_EMAC1_IPC_RXIMSK            0xFFC22200         /* EMAC1 MMC IPC RX Interrupt Mask Register */
#define REG_EMAC1_IPC_RXINT             0xFFC22208         /* EMAC1 MMC IPC RX Interrupt Register */
#define REG_EMAC1_RXIPV4_GD_FRM         0xFFC22210         /* EMAC1 Number of good IPv4 datagrams */
#define REG_EMAC1_RXIPV4_HDR_ERR_FRM    0xFFC22214         /* EMAC1 Number of IPv4 datagrams with header errors */
#define REG_EMAC1_RXIPV4_NOPAY_FRM      0xFFC22218         /* EMAC1 Number of IPv4 datagrams without checksum */
#define REG_EMAC1_RXIPV4_FRAG_FRM       0xFFC2221C         /* EMAC1 Number of good IPv4 datagrams with fragmentation */
#define REG_EMAC1_RXIPV4_UDSBL_FRM      0xFFC22220         /* EMAC1 Number of IPv4 UDP datagrams with disabled checksum */
#define REG_EMAC1_RXIPV6_GD_FRM         0xFFC22224         /* EMAC1 Number of IPv4 datagrams with TCP/UDP/ICMP payloads */
#define REG_EMAC1_RXIPV6_HDR_ERR_FRM    0xFFC22228         /* EMAC1 Number of IPv6 datagrams with header errors */
#define REG_EMAC1_RXIPV6_NOPAY_FRM      0xFFC2222C         /* EMAC1 Number of IPv6 datagrams with no TCP/UDP/ICMP payload */
#define REG_EMAC1_RXUDP_GD_FRM          0xFFC22230         /* EMAC1 Number of good IP datagrames with good UDP payload */
#define REG_EMAC1_RXUDP_ERR_FRM         0xFFC22234         /* EMAC1 Number of good IP datagrams with UDP checksum errors */
#define REG_EMAC1_RXTCP_GD_FRM          0xFFC22238         /* EMAC1 Number of good IP datagrams with a good TCP payload */
#define REG_EMAC1_RXTCP_ERR_FRM         0xFFC2223C         /* EMAC1 Number of good IP datagrams with TCP checksum errors */
#define REG_EMAC1_RXICMP_GD_FRM         0xFFC22240         /* EMAC1 Number of good IP datagrams with a good ICMP payload */
#define REG_EMAC1_RXICMP_ERR_FRM        0xFFC22244         /* EMAC1 Number of good IP datagrams with ICMP checksum errors */
#define REG_EMAC1_RXIPV4_GD_OCT         0xFFC22250         /* EMAC1 Bytes received in IPv4 datagrams including tcp,udp or icmp */
#define REG_EMAC1_RXIPV4_HDR_ERR_OCT    0xFFC22254         /* EMAC1 Bytes received in IPv4 datagrams with header errors */
#define REG_EMAC1_RXIPV4_NOPAY_OCT      0xFFC22258         /* EMAC1 Bytes received in IPv4 datagrams without tcp,udp,icmp load */
#define REG_EMAC1_RXIPV4_FRAG_OCT       0xFFC2225C         /* EMAC1 Bytes received in fragmented IPv4 datagrams */
#define REG_EMAC1_RXIPV4_UDSBL_OCT      0xFFC22260         /* EMAC1 Bytes received in UDP segment with checksum disabled */
#define REG_EMAC1_RXIPV6_GD_OCT         0xFFC22264         /* EMAC1 Bytes received in good IPv6  including tcp,udp or icmp load */
#define REG_EMAC1_RXIPV6_HDR_ERR_OCT    0xFFC22268         /* EMAC1 Number of bytes received in IPv6 with header errors */
#define REG_EMAC1_RXIPV6_NOPAY_OCT      0xFFC2226C         /* EMAC1 Bytes received in IPv6 without tcp,udp or icmp load */
#define REG_EMAC1_RXUDP_GD_OCT          0xFFC22270         /* EMAC1 Number of bytes received in good UDP segments */
#define REG_EMAC1_RXUDP_ERR_OCT         0xFFC22274         /* EMAC1 Number of bytes received in UDP segment with checksum err */
#define REG_EMAC1_RXTCP_GD_OCT          0xFFC22278         /* EMAC1 Number of bytes received in a good TCP segment */
#define REG_EMAC1_RXTCP_ERR_OCT         0xFFC2227C         /* EMAC1 Number of bytes received in TCP segment with checksum err */
#define REG_EMAC1_RXICMP_GD_OCT         0xFFC22280         /* EMAC1 Number of bytes received in a good ICMP segment */
#define REG_EMAC1_RXICMP_ERR_OCT        0xFFC22284         /* EMAC1 Bytes received in an ICMP segment with checksum errors */
#define REG_EMAC1_TM_CTL                0xFFC22700         /* EMAC1 EMAC Time Stamp Control Register */
#define REG_EMAC1_TM_SUBSEC             0xFFC22704         /* EMAC1 EMAC Time Stamp Sub Second Increment */
#define REG_EMAC1_TM_SEC                0xFFC22708         /* EMAC1 EMAC Time Stamp Second Register */
#define REG_EMAC1_TM_NSEC               0xFFC2270C         /* EMAC1 EMAC Time Stamp Nano Second Register */
#define REG_EMAC1_TM_SECUPDT            0xFFC22710         /* EMAC1 EMAC Time Stamp Seconds Update */
#define REG_EMAC1_TM_NSECUPDT           0xFFC22714         /* EMAC1 EMAC Time Stamp Nano Seconds Update */
#define REG_EMAC1_TM_ADDEND             0xFFC22718         /* EMAC1 EMAC Time Stamp Addend Register */
#define REG_EMAC1_TM_TGTM               0xFFC2271C         /* EMAC1 EMAC Time Stamp Target Time Sec. */
#define REG_EMAC1_TM_NTGTM              0xFFC22720         /* EMAC1 EMAC Time Stamp Target Time Nanosec. */
#define REG_EMAC1_TM_HISEC              0xFFC22724         /* EMAC1 EMAC Time Stamp High Second Register */
#define REG_EMAC1_TM_STMPSTAT           0xFFC22728         /* EMAC1 EMAC Time Stamp Status Register */
#define REG_EMAC1_TM_PPSCTL             0xFFC2272C         /* EMAC1 EMAC PPS Control Register */
#define REG_EMAC1_TM_AUXSTMP_NSEC       0xFFC22730         /* EMAC1 EMAC Auxillary Time Stamp Nano Register */
#define REG_EMAC1_TM_AUXSTMP_SEC        0xFFC22734         /* EMAC1 EMAC Auxillary Time Stamp Sec Register */
#define REG_EMAC1_DMA_BUSMODE           0xFFC23000         /* EMAC1 Bus Operating Modes for EMAC DMA */
#define REG_EMAC1_DMA_TXPOLL            0xFFC23004         /* EMAC1 TX DMA Poll demand register */
#define REG_EMAC1_DMA_RXPOLL            0xFFC23008         /* EMAC1 RX DMA Poll demand register */
#define REG_EMAC1_DMA_RXDSC_ADDR        0xFFC2300C         /* EMAC1 RX Descriptor List Address */
#define REG_EMAC1_DMA_TXDSC_ADDR        0xFFC23010         /* EMAC1 TX Descriptor List Address */
#define REG_EMAC1_DMA_STAT              0xFFC23014         /* EMAC1 DMA Status Register */
#define REG_EMAC1_DMA_OPMODE            0xFFC23018         /* EMAC1 DMA Operation Mode Register */
#define REG_EMAC1_DMA_IEN               0xFFC2301C         /* EMAC1 DMA Interrupt Enable Register */
#define REG_EMAC1_DMA_MISS_FRM          0xFFC23020         /* EMAC1 DMA missed frame and buffer overflow counter */
#define REG_EMAC1_DMA_RXIWDOG           0xFFC23024         /* EMAC1 DMA RX Interrupt Watch Dog timer */
#define REG_EMAC1_DMA_BMMODE            0xFFC23028         /* EMAC1 AXI Bus Mode Register */
#define REG_EMAC1_DMA_BMSTAT            0xFFC2302C         /* EMAC1 AXI Status Register */
#define REG_EMAC1_DMA_TXDSC_CUR         0xFFC23048         /* EMAC1 TX current descriptor register */
#define REG_EMAC1_DMA_RXDSC_CUR         0xFFC2304C         /* EMAC1 RX current descriptor register */
#define REG_EMAC1_DMA_TXBUF_CUR         0xFFC23050         /* EMAC1 TX current buffer pointer register */
#define REG_EMAC1_DMA_RXBUF_CUR         0xFFC23054         /* EMAC1 RX current buffer pointer register */
#define REG_EMAC1_HWFEAT                0xFFC23058         /* EMAC1 Hardware Feature Register */

/* =========================
        EMAC
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MACCFG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MACCFG_CST                 25            /* CRC stripping for Type Frames */
#define BITP_EMAC_MACCFG_WD                  23            /* Watch Dog Disable */
#define BITP_EMAC_MACCFG_JB                  22            /* Jabber Disable */
#define BITP_EMAC_MACCFG_JE                  20            /* Jumbo Frame Enable */
#define BITP_EMAC_MACCFG_IFG                 17            /* Inter Frame Gap */
#define BITP_EMAC_MACCFG_DCRS                16            /* Disable Carrier Sense during Transmission */
#define BITP_EMAC_MACCFG_PS                  15            /* Port Select */
#define BITP_EMAC_MACCFG_FES                 14            /* Speed of Operation */
#define BITP_EMAC_MACCFG_DO                  13            /* Disable Receive Own */
#define BITP_EMAC_MACCFG_LM                  12            /* LoopBack Mode */
#define BITP_EMAC_MACCFG_DM                  11            /* Duplex Mode */
#define BITP_EMAC_MACCFG_IPC                 10            /* Enables Checksum Offload function */
#define BITP_EMAC_MACCFG_DR                   9            /* Disable Retry - Used in Half Duplex mode */
#define BITP_EMAC_MACCFG_ACS                  7            /* Automatic Pad/CRC Stripping */
#define BITP_EMAC_MACCFG_BL                   5            /* Back Off Limit */
#define BITP_EMAC_MACCFG_DC                   4            /* Used in Half Duplex Mode for deffering transmission */
#define BITP_EMAC_MACCFG_TE                   3            /* Transmitter Enable */
#define BITP_EMAC_MACCFG_RE                   2            /* Receiver Enable */
#define BITM_EMAC_MACCFG_CST                 0x02000000    /* CRC stripping for Type Frames */
#define BITM_EMAC_MACCFG_WD                  0x00800000    /* Watch Dog Disable */
#define BITM_EMAC_MACCFG_JB                  0x00400000    /* Jabber Disable */
#define BITM_EMAC_MACCFG_JE                  0x00100000    /* Jumbo Frame Enable */

#define BITM_EMAC_MACCFG_IFG                 0x000E0000    /* Inter Frame Gap */
#define ENUM_EMAC_MACCFG_BIT_TIMES_96        0x00000000    /* IFG: 96 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_88        0x00020000    /* IFG: 88 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_80        0x00040000    /* IFG: 80 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_72        0x00060000    /* IFG: 72 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_64        0x00080000    /* IFG: 64 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_56        0x000A0000    /* IFG: 56 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_48        0x000C0000    /* IFG: 48 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_40        0x000E0000    /* IFG: 40 bit times */
#define BITM_EMAC_MACCFG_DCRS                0x00010000    /* Disable Carrier Sense during Transmission */

#define BITM_EMAC_MACCFG_PS                  0x00008000    /* Port Select */
#define ENUM_EMAC_MACCFG_PORT_10_100         0x00000000    /* PS: 10/100Mbps */
#define ENUM_EMAC_MACCFG_PORT_1000           0x00008000    /* PS: 100 Mbps */
#define BITM_EMAC_MACCFG_FES                 0x00004000    /* Speed of Operation */
#define BITM_EMAC_MACCFG_DO                  0x00002000    /* Disable Receive Own */
#define BITM_EMAC_MACCFG_LM                  0x00001000    /* LoopBack Mode */
#define BITM_EMAC_MACCFG_DM                  0x00000800    /* Duplex Mode */
#define BITM_EMAC_MACCFG_IPC                 0x00000400    /* Enables Checksum Offload function */

#define BITM_EMAC_MACCFG_DR                  0x00000200    /* Disable Retry - Used in Half Duplex mode */
#define ENUM_EMAC_MACCFG_RETRY_ENABLED       0x00000000    /* DR: Retry enabled */
#define ENUM_EMAC_MACCFG_RETRY_DISABLED      0x00000200    /* DR: Retry disabled */
#define BITM_EMAC_MACCFG_ACS                 0x00000080    /* Automatic Pad/CRC Stripping */

#define BITM_EMAC_MACCFG_BL                  0x00000060    /* Back Off Limit */
#define ENUM_EMAC_MACCFG_BL_10               0x00000000    /* BL: k = min (n, 10) */
#define ENUM_EMAC_MACCFG_BL_8                0x00000020    /* BL: k = min (n, 8) */
#define ENUM_EMAC_MACCFG_BL_4                0x00000040    /* BL: k = min (n, 4) */
#define ENUM_EMAC_MACCFG_BL_1                0x00000060    /* BL: k = min (n, 1) */
#define BITM_EMAC_MACCFG_DC                  0x00000010    /* Used in Half Duplex Mode for deffering transmission */
#define BITM_EMAC_MACCFG_TE                  0x00000008    /* Transmitter Enable */
#define BITM_EMAC_MACCFG_RE                  0x00000004    /* Receiver Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MACFRMFILT                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MACFRMFILT_RA              31            /* Receive All Frames */
#define BITP_EMAC_MACFRMFILT_HPF             10            /* Hash or Perfect Filter */
#define BITP_EMAC_MACFRMFILT_SAF              9            /* Source Address Filter Enable */
#define BITP_EMAC_MACFRMFILT_SAIF             8            /* Source Address Inverse Filtering Mode */
#define BITP_EMAC_MACFRMFILT_PCF              6            /* Pass Control Frames - Controls Forwarding of control frames */
#define BITP_EMAC_MACFRMFILT_DBF              5            /* Disable Broadcast Frames */
#define BITP_EMAC_MACFRMFILT_PM               4            /* Pass All Multicast Frames */
#define BITP_EMAC_MACFRMFILT_DAIF             3            /* Destination Address Inverse Filtering mode */
#define BITP_EMAC_MACFRMFILT_HMC              2            /* Hash Multicast - Receive multicast frames */
#define BITP_EMAC_MACFRMFILT_HUC              1            /* Hash Unicast - Receive unicast Frames */
#define BITP_EMAC_MACFRMFILT_PR               0            /* Promiscuous Mode - Receive all the frames */
#define BITM_EMAC_MACFRMFILT_RA              0x80000000    /* Receive All Frames */
#define BITM_EMAC_MACFRMFILT_HPF             0x00000400    /* Hash or Perfect Filter */
#define BITM_EMAC_MACFRMFILT_SAF             0x00000200    /* Source Address Filter Enable */
#define BITM_EMAC_MACFRMFILT_SAIF            0x00000100    /* Source Address Inverse Filtering Mode */

#define BITM_EMAC_MACFRMFILT_PCF             0x000000C0    /* Pass Control Frames - Controls Forwarding of control frames */
#define ENUM_EMAC_MACFRMFILT_FILT_ALL        0x00000000    /* PCF: Filters all control frames */
#define ENUM_EMAC_MACFRMFILT_NO_PAUSE        0x00000040    /* PCF: Forwards all frames except PAUSE */
#define ENUM_EMAC_MACFRMFILT_FWD_ALL         0x00000080    /* PCF: Forwards all frames */
#define ENUM_EMAC_MACFRMFILT_PADR_FILT       0x000000C0    /* PCF: Forward frames that passed the address filter */

#define BITM_EMAC_MACFRMFILT_DBF             0x00000020    /* Disable Broadcast Frames */
#define ENUM_EMAC_MACFRMFILT_DIS_BCAST       0x00000000    /* DBF: AFM module passes all received broadcast frames */
#define ENUM_EMAC_MACFRMFILT_EN_BCAST        0x00000020    /* DBF: AFM module filters all incoming broadcast frames */
#define BITM_EMAC_MACFRMFILT_PM              0x00000010    /* Pass All Multicast Frames */
#define BITM_EMAC_MACFRMFILT_DAIF            0x00000008    /* Destination Address Inverse Filtering mode */
#define BITM_EMAC_MACFRMFILT_HMC             0x00000004    /* Hash Multicast - Receive multicast frames */
#define BITM_EMAC_MACFRMFILT_HUC             0x00000002    /* Hash Unicast - Receive unicast Frames */
#define BITM_EMAC_MACFRMFILT_PR              0x00000001    /* Promiscuous Mode - Receive all the frames */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_GMII_ADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_GMII_ADDR_PA               11            /* Physcial Layer Address - Selecting the PHY */
#define BITP_EMAC_GMII_ADDR_GR                6            /* GMII Register Addres in the selected PHY */
#define BITP_EMAC_GMII_ADDR_CR                2            /* CSR Clock Range - Specifies MDC frequency */
#define BITP_EMAC_GMII_ADDR_GW                1            /* GMII Write - Indicates MDIO Write/Read Operation */
#define BITP_EMAC_GMII_ADDR_GB                0            /* GMII Busy bit - indicates MDIO is busy or not */
#define BITM_EMAC_GMII_ADDR_PA               0x0000F800    /* Physcial Layer Address - Selecting the PHY */
#define BITM_EMAC_GMII_ADDR_GR               0x000007C0    /* GMII Register Addres in the selected PHY */

#define BITM_EMAC_GMII_ADDR_CR               0x0000003C    /* CSR Clock Range - Specifies MDC frequency */
#define ENUM_EMAC_GMII_ADDR_60_100           0x00000000    /* CR: clk_csr_i=60-100 MHz; MDC Clock=clk_csr_i/42 */
#define ENUM_EMAC_GMII_ADDR_100_150          0x00000004    /* CR: clk_csr_i=100-150 MHz; MDC Clock=clk_csr_i/62 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_8         0x00000028    /* CR: MDC Clock=clk_csr_i/8 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_10        0x0000002C    /* CR: MDC Clock=clk_csr_i/10 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_12        0x00000030    /* CR: MDC Clock=clk_csr_i/12 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_14        0x00000034    /* CR: MDC Clock=clk_csr_i/14 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_16        0x00000038    /* CR: MDC Clock=clk_csr_i/16 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_18        0x0000003C    /* CR: MDC Clock=clk_csr_i/18 */
#define ENUM_EMAC_GMII_ADDR_25_35            0x00000008    /* CR: clk_csr_i=20-35 MHz; MDC Clock=clk_csr_i/16 */
#define ENUM_EMAC_GMII_ADDR_35_60            0x0000000C    /* CR: clk_csr_i=35-60 MHz; MDC Clock=clk_csr_i/26 */
#define ENUM_EMAC_GMII_ADDR_150_250          0x00000010    /* CR: clk_csr_i=150-250 MHz; MDC Clock=clk_csr_i/102 */
#define ENUM_EMAC_GMII_ADDR_250_300          0x00000014    /* CR: clk_csr_i=250-300 MHz; MDC Clock=clk_csr_i/124 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_4         0x00000020    /* CR: MDC Clock=clk_csr_i/4 */
#define ENUM_EMAC_GMII_ADDR_CSR_BY_6         0x00000024    /* CR: MDC Clock=clk_csr_i/6 */
#define BITM_EMAC_GMII_ADDR_GW               0x00000002    /* GMII Write - Indicates MDIO Write/Read Operation */
#define BITM_EMAC_GMII_ADDR_GB               0x00000001    /* GMII Busy bit - indicates MDIO is busy or not */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_GMII_DATA                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_GMII_DATA_GD                0            /* GMII Data - Read/Write Data */
#define BITM_EMAC_GMII_DATA_GD               0x0000FFFF    /* GMII Data - Read/Write Data */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_FLOWCTL                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_FLOWCTL_PT                 16            /* Pause Time - to be specified in Frame */
#define BITP_EMAC_FLOWCTL_DZPQ                7            /* Disable Zero-Quanta Pause */
#define BITP_EMAC_FLOWCTL_PLT                 4            /* Pause Low Threshold */
#define BITP_EMAC_FLOWCTL_UP                  3            /* Unicast Pause Frame Detect */
#define BITP_EMAC_FLOWCTL_RFE                 2            /* Receive Flow Control Enable */
#define BITP_EMAC_FLOWCTL_TFE                 1            /* Transmit Flow Control Enable */
#define BITP_EMAC_FLOWCTL_FCB_BPA             0            /* Initiate pause control frame */
#define BITM_EMAC_FLOWCTL_PT                 0xFFFF0000    /* Pause Time - to be specified in Frame */
#define BITM_EMAC_FLOWCTL_DZPQ               0x00000080    /* Disable Zero-Quanta Pause */

#define BITM_EMAC_FLOWCTL_PLT                0x00000030    /* Pause Low Threshold */
#define ENUM_EMAC_FLOWCTL_LESS_PT_4          0x00000000    /* PLT: Pause time minus 4 slot times */
#define ENUM_EMAC_FLOWCTL_LESS_PT_28         0x00000010    /* PLT: Pause time minus 28 slot times */
#define ENUM_EMAC_FLOWCTL_LESS_PT_144        0x00000020    /* PLT: Pause time minus 144 slot times */
#define ENUM_EMAC_FLOWCTL_LESS_PT_256        0x00000030    /* PLT: Pause time minus 256 slot times */
#define BITM_EMAC_FLOWCTL_UP                 0x00000008    /* Unicast Pause Frame Detect */
#define BITM_EMAC_FLOWCTL_RFE                0x00000004    /* Receive Flow Control Enable */
#define BITM_EMAC_FLOWCTL_TFE                0x00000002    /* Transmit Flow Control Enable */
#define BITM_EMAC_FLOWCTL_FCB_BPA            0x00000001    /* Initiate pause control frame */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_VLANTAG                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_VLANTAG_ETV                16            /* Enable 12 bit VLAN Tag Comparison */
#define BITP_EMAC_VLANTAG_VL                  0            /* VLAN Tag identifer for receive frames */
#define BITM_EMAC_VLANTAG_ETV                0x00010000    /* Enable 12 bit VLAN Tag Comparison */
#define BITM_EMAC_VLANTAG_VL                 0x0000FFFF    /* VLAN Tag identifer for receive frames */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_VER                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_VER_UVER                    8            /* SUPERVISOR Defined Version */
#define BITP_EMAC_VER_VER                     0            /* Synopsys Define Version */
#define BITM_EMAC_VER_UVER                   0x0000FF00    /* SUPERVISOR Defined Version */
#define BITM_EMAC_VER_VER                    0x000000FF    /* Synopsys Define Version */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DBG                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DBG_TXFIFOFULL             25            /* Indicates that TX FIFO is full */
#define BITP_EMAC_DBG_TXFIFONE               24            /* Indicates that TX FIFO is not empty */
#define BITP_EMAC_DBG_TXFIFOACT              22            /* Indicates that TX FIFO is active */
#define BITP_EMAC_DBG_TXFIFOCTLST            20            /* Indicates the state of TX FIFO controller */
#define BITP_EMAC_DBG_TXPAUSE                19            /* Indicates that MAC TX state is paused */
#define BITP_EMAC_DBG_TXFRCTL                17            /* Indicates the state of the TX Frame controller module */
#define BITP_EMAC_DBG_MIITX                  16            /* Indicates that MII is actively transmitting the frame */
#define BITP_EMAC_DBG_RXFIFOST                8            /* Indicates the state of the RX FIFO */
#define BITP_EMAC_DBG_RXFIFOCTLST             5            /* Indicates the state of RX FIFO controller */
#define BITP_EMAC_DBG_RXFIFOACT               4            /* Indicates that RXFIFO is active */
#define BITP_EMAC_DBG_SFIFOST                 1            /* Returns the state of FIFO */
#define BITP_EMAC_DBG_MIIRX                   0            /* Indicates that MII is actively receiving the data */
#define BITM_EMAC_DBG_TXFIFOFULL             0x02000000    /* Indicates that TX FIFO is full */
#define BITM_EMAC_DBG_TXFIFONE               0x01000000    /* Indicates that TX FIFO is not empty */
#define BITM_EMAC_DBG_TXFIFOACT              0x00400000    /* Indicates that TX FIFO is active */
#define BITM_EMAC_DBG_TXFIFOCTLST            0x00300000    /* Indicates the state of TX FIFO controller */
#define BITM_EMAC_DBG_TXPAUSE                0x00080000    /* Indicates that MAC TX state is paused */

#define BITM_EMAC_DBG_TXFRCTL                0x00060000    /* Indicates the state of the TX Frame controller module */
#define ENUM_EMAC_DBG_TXFRCTL_IDLE           0x00000000    /* TXFRCTL: IDLE */
#define ENUM_EMAC_DBG_TXFRCTL_WT_STATUS      0x00020000    /* TXFRCTL: Waiting for Status of previous frame or IFG/backoff period to be over */
#define ENUM_EMAC_DBG_TXFRCTL_PAUSE          0x00040000    /* TXFRCTL: Generating and transmitting a PAUSE control frame (in full duplex mode) */
#define ENUM_EMAC_DBG_TXFRCTL_TXFRAME        0x00060000    /* TXFRCTL: Transferring input frame for transmission */
#define BITM_EMAC_DBG_MIITX                  0x00010000    /* Indicates that MII is actively transmitting the frame */

#define BITM_EMAC_DBG_RXFIFOST               0x00000300    /* Indicates the state of the RX FIFO */
#define ENUM_EMAC_DBG_FIFO_EMPTY             0x00000000    /* RXFIFOST: RX FIFO Empty */
#define ENUM_EMAC_DBG_FIFO_BEL_THERSHLD      0x00000100    /* RXFIFOST: RX FIFO fill-level below flow-control deactivate threshold */
#define ENUM_EMAC_DBG_FIFO_ABV_THERSHLD      0x00000200    /* RXFIFOST: RX FIFO fill-level above flow-control deactivate threshold */
#define ENUM_EMAC_DBG_FIFO_FULL              0x00000300    /* RXFIFOST: RX FIFO Full */

#define BITM_EMAC_DBG_RXFIFOCTLST            0x00000060    /* Indicates the state of RX FIFO controller */
#define ENUM_EMAC_DBG_IDLE_FIFO              0x00000000    /* RXFIFOCTLST: IDLE state */
#define ENUM_EMAC_DBG_RD_DATA_FIFO           0x00000020    /* RXFIFOCTLST: Reading frame data */
#define ENUM_EMAC_DBG_RD_STS_FIFO            0x00000040    /* RXFIFOCTLST: Reading frame status (or time-stamp) */
#define ENUM_EMAC_DBG_FLUSH_FIFO             0x00000060    /* RXFIFOCTLST: Flushing the frame data and Status */
#define BITM_EMAC_DBG_RXFIFOACT              0x00000010    /* Indicates that RXFIFO is active */
#define BITM_EMAC_DBG_SFIFOST                0x00000006    /* Returns the state of FIFO */
#define BITM_EMAC_DBG_MIIRX                  0x00000001    /* Indicates that MII is actively receiving the data */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_PMT_CTLSTAT                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_PMT_CTLSTAT_RPTRRST        31            /* When set, resets the remote wake up filter pointer */
#define BITP_EMAC_PMT_CTLSTAT_GLOBEN          9            /* Enables wake up event on reception of a unicast frame */
#define BITP_EMAC_PMT_CTLSTAT_WAKERX          6            /* Indicates that wake-up frame is received */
#define BITP_EMAC_PMT_CTLSTAT_MPKTRX          5            /* Indicates that magic packet is received */
#define BITP_EMAC_PMT_CTLSTAT_WAKEN           2            /* Enables wake up event on reception of wake up frame */
#define BITP_EMAC_PMT_CTLSTAT_MPKTEN          1            /* Enables wake up event on reception of magic packet */
#define BITP_EMAC_PMT_CTLSTAT_PD              0            /* When set MAC drops all frames until magic packet or wakeup */
#define BITM_EMAC_PMT_CTLSTAT_RPTRRST        0x80000000    /* When set, resets the remote wake up filter pointer */
#define BITM_EMAC_PMT_CTLSTAT_GLOBEN         0x00000200    /* Enables wake up event on reception of a unicast frame */
#define BITM_EMAC_PMT_CTLSTAT_WAKERX         0x00000040    /* Indicates that wake-up frame is received */
#define BITM_EMAC_PMT_CTLSTAT_MPKTRX         0x00000020    /* Indicates that magic packet is received */
#define BITM_EMAC_PMT_CTLSTAT_WAKEN          0x00000004    /* Enables wake up event on reception of wake up frame */
#define BITM_EMAC_PMT_CTLSTAT_MPKTEN         0x00000002    /* Enables wake up event on reception of magic packet */
#define BITM_EMAC_PMT_CTLSTAT_PD             0x00000001    /* When set MAC drops all frames until magic packet or wakeup */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_ISTAT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_ISTAT_TS                    9            /* Time Stamp Interrupt Status */
#define BITP_EMAC_ISTAT_MMCRC                 7            /* MMC Receive Checksum Offload Interrupt Status */
#define BITP_EMAC_ISTAT_MMCTX                 6            /* MMC Transmit Interrupt Status */
#define BITP_EMAC_ISTAT_MMCRX                 5            /* MMC Receive Interrupt Status */
#define BITP_EMAC_ISTAT_MMC                   4            /* MMC Interrupt Status */
#define BITP_EMAC_ISTAT_PMT                   3            /* PMT Interrupt Status */
#define BITM_EMAC_ISTAT_TS                   0x00000200    /* Time Stamp Interrupt Status */
#define BITM_EMAC_ISTAT_MMCRC                0x00000080    /* MMC Receive Checksum Offload Interrupt Status */
#define BITM_EMAC_ISTAT_MMCTX                0x00000040    /* MMC Transmit Interrupt Status */
#define BITM_EMAC_ISTAT_MMCRX                0x00000020    /* MMC Receive Interrupt Status */
#define BITM_EMAC_ISTAT_MMC                  0x00000010    /* MMC Interrupt Status */
#define BITM_EMAC_ISTAT_PMT                  0x00000008    /* PMT Interrupt Status */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_IMSK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_IMSK_TS                     9            /* Time Stamp Interrupt Mask */
#define BITP_EMAC_IMSK_PMT                    3            /* PMT Interrupt mask */
#define BITM_EMAC_IMSK_TS                    0x00000200    /* Time Stamp Interrupt Mask */
#define BITM_EMAC_IMSK_PMT                   0x00000008    /* PMT Interrupt mask */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_ADDR0_HI                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_ADDR0_HI_MO                31            /* MO */
#define BITP_EMAC_ADDR0_HI_ADDR               0            /* Upper 16 bits of Addr. */
#define BITM_EMAC_ADDR0_HI_MO                0x80000000    /* MO */
#define BITM_EMAC_ADDR0_HI_ADDR              0x0000FFFF    /* Upper 16 bits of Addr. */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MMC_CTL                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MMC_CTL_FULLPSET            5            /* MMC counter preset values */
#define BITP_EMAC_MMC_CTL_CNTRPSET            4            /* When set, MMC counters will be preset */
#define BITP_EMAC_MMC_CTL_CNTRFRZ             3            /* When Set MMC counters are frozen to current value */
#define BITP_EMAC_MMC_CTL_RDRST               2            /* When set MMC counters will be reset when they are read */
#define BITP_EMAC_MMC_CTL_NOROLL              1            /* Set when counter does not rollover to 0 after reaching max */
#define BITP_EMAC_MMC_CTL_RST                 0            /* When set counters will be reset */
#define BITM_EMAC_MMC_CTL_FULLPSET           0x00000020    /* MMC counter preset values */
#define BITM_EMAC_MMC_CTL_CNTRPSET           0x00000010    /* When set, MMC counters will be preset */
#define BITM_EMAC_MMC_CTL_CNTRFRZ            0x00000008    /* When Set MMC counters are frozen to current value */
#define BITM_EMAC_MMC_CTL_RDRST              0x00000004    /* When set MMC counters will be reset when they are read */
#define BITM_EMAC_MMC_CTL_NOROLL             0x00000002    /* Set when counter does not rollover to 0 after reaching max */
#define BITM_EMAC_MMC_CTL_RST                0x00000001    /* When set counters will be reset */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MMC_RXINT                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MMC_RXINT_WDOGERR          23            /* Set when rxwatchdog_error counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_VLANFRGB         22            /* Set when rxvlanframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_FIFOOVF          21            /* Set when rxffiooverflow counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_PAUSEFR          20            /* Set when rxpauseframes counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_OUTRANGE         19            /* Set when rxoutofrangetype counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_LENERR           18            /* This bit is set when rxlengtherror counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_UCASTG           17            /* Set when rxunicastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_R1024TOMAX       16            /* Set when rx1024tomaxoctets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_R512TO1023       15            /* Set when rx512to1023octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_R256TO511        14            /* Set when rx255to511octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_R128TO255        13            /* This bit is set when rx128to255octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_R65TO127         12            /* Set when rx65t0127octects_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_R64              11            /* Sset when rx64octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_OSIZEG           10            /* This bit is set when rxoversize_g counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_USIZEG            9            /* This bit is set when rxundersize_g counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_JABERR            8            /* This bit is set when rxjabbererror counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_RUNTERR           7            /* This bit is set when rxrunterror counter reaches full or half */
#define BITP_EMAC_MMC_RXINT_ALIGNERR          6            /* Set when rx alignment error counter reaches half or full */
#define BITP_EMAC_MMC_RXINT_CRCERR            5            /* This bit is set when rxcrcerror coutner reaches full or half */
#define BITP_EMAC_MMC_RXINT_MCASTG            4            /* Set when rx multicast frame counter reaches half or full */
#define BITP_EMAC_MMC_RXINT_BCASTG            3            /* Set when rx broadcast counter reaches half or full */
#define BITP_EMAC_MMC_RXINT_OCTCNTG           2            /* set when rx octet counter reaches half or full */
#define BITP_EMAC_MMC_RXINT_OCTCNTGB          1            /* Set when rx octet count reaches half or full */
#define BITP_EMAC_MMC_RXINT_FRCNTGB           0            /* Set when rx frame counter reaches half or full */
#define BITM_EMAC_MMC_RXINT_WDOGERR          0x00800000    /* Set when rxwatchdog_error counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_VLANFRGB         0x00400000    /* Set when rxvlanframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_FIFOOVF          0x00200000    /* Set when rxffiooverflow counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_PAUSEFR          0x00100000    /* Set when rxpauseframes counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_OUTRANGE         0x00080000    /* Set when rxoutofrangetype counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_LENERR           0x00040000    /* This bit is set when rxlengtherror counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_UCASTG           0x00020000    /* Set when rxunicastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_R1024TOMAX       0x00010000    /* Set when rx1024tomaxoctets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_R512TO1023       0x00008000    /* Set when rx512to1023octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_R256TO511        0x00004000    /* Set when rx255to511octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_R128TO255        0x00002000    /* This bit is set when rx128to255octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_R65TO127         0x00001000    /* Set when rx65t0127octects_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_R64              0x00000800    /* Sset when rx64octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_OSIZEG           0x00000400    /* This bit is set when rxoversize_g counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_USIZEG           0x00000200    /* This bit is set when rxundersize_g counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_JABERR           0x00000100    /* This bit is set when rxjabbererror counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_RUNTERR          0x00000080    /* This bit is set when rxrunterror counter reaches full or half */
#define BITM_EMAC_MMC_RXINT_ALIGNERR         0x00000040    /* Set when rx alignment error counter reaches half or full */
#define BITM_EMAC_MMC_RXINT_CRCERR           0x00000020    /* This bit is set when rxcrcerror coutner reaches full or half */
#define BITM_EMAC_MMC_RXINT_MCASTG           0x00000010    /* Set when rx multicast frame counter reaches half or full */
#define BITM_EMAC_MMC_RXINT_BCASTG           0x00000008    /* Set when rx broadcast counter reaches half or full */
#define BITM_EMAC_MMC_RXINT_OCTCNTG          0x00000004    /* set when rx octet counter reaches half or full */
#define BITM_EMAC_MMC_RXINT_OCTCNTGB         0x00000002    /* Set when rx octet count reaches half or full */
#define BITM_EMAC_MMC_RXINT_FRCNTGB          0x00000001    /* Set when rx frame counter reaches half or full */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MMC_TXINT                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MMC_TXINT_VLANFRGB         24            /* Set when txvlanframes_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_PAUSEFRM         23            /* Set when txpauseframes counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_EXCESSDEF        22            /* Set when txoexcessdef counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_FRCNTG           21            /* Set when txframecount_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_OCTCNTG          20            /* Set when txoctetcount_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_CARRERR          19            /* This bit is set when txcarriererr counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_EXCESSCOL        18            /* This bit is set when txexesscol counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_LATECOL          17            /* This bit is set when txlatecol counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_DEFERRED         16            /* Set when txdeffered counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_MULTCOLG         15            /* Set when txmulticol_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_SNGCOLG          14            /* Set when txsinglecol_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_UNDERR           13            /* Set when txunderflowerror counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_BCASTGB          12            /* Set when txbroadcastframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_MCASTGB          11            /* Set when txmulticastframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_UCASTGB          10            /* Set when txunicastframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_T1024TOMAX        9            /* Set when tx1024tomaxoctets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_T512TO1023        8            /* Set when tx512to1023octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_T256TO511         7            /* Set when tx256to511octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_T128TO255         6            /* Set when tx128to255octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_T65TO127          5            /* Set when tx65to127octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_T64               4            /* Set when tx64octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_MCASTG            3            /* Set when txmulticastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_BCASTG            2            /* Set when txbroadcastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_FRCNTGB           1            /* Set when txframecount_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXINT_OCTCNTGB          0            /* Set when txoctetcount_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_VLANFRGB         0x01000000    /* Set when txvlanframes_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_PAUSEFRM         0x00800000    /* Set when txpauseframes counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_EXCESSDEF        0x00400000    /* Set when txoexcessdef counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_FRCNTG           0x00200000    /* Set when txframecount_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_OCTCNTG          0x00100000    /* Set when txoctetcount_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_CARRERR          0x00080000    /* This bit is set when txcarriererr counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_EXCESSCOL        0x00040000    /* This bit is set when txexesscol counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_LATECOL          0x00020000    /* This bit is set when txlatecol counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_DEFERRED         0x00010000    /* Set when txdeffered counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_MULTCOLG         0x00008000    /* Set when txmulticol_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_SNGCOLG          0x00004000    /* Set when txsinglecol_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_UNDERR           0x00002000    /* Set when txunderflowerror counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_BCASTGB          0x00001000    /* Set when txbroadcastframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_MCASTGB          0x00000800    /* Set when txmulticastframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_UCASTGB          0x00000400    /* Set when txunicastframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_T1024TOMAX       0x00000200    /* Set when tx1024tomaxoctets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_T512TO1023       0x00000100    /* Set when tx512to1023octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_T256TO511        0x00000080    /* Set when tx256to511octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_T128TO255        0x00000040    /* Set when tx128to255octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_T65TO127         0x00000020    /* Set when tx65to127octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_T64              0x00000010    /* Set when tx64octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_MCASTG           0x00000008    /* Set when txmulticastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_BCASTG           0x00000004    /* Set when txbroadcastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_FRCNTGB          0x00000002    /* Set when txframecount_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXINT_OCTCNTGB         0x00000001    /* Set when txoctetcount_gb counter reaches full or half */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MMC_RXIMSK                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MMC_RXIMSK_WATCHERR        23            /* Setting this bit masks the interrupt when rxwatchdog_error counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_VLANFRGB        22            /* Setting this bit masks the interrupt when rxvlanframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_FIFOOV          21            /* Setting this bit masks the interrupt when rxffiooverflow counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_PAUSEFRM        20            /* Setting this bit masks the interrupt when rxpauseframes counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_OUTRANGE        19            /* Setting this bit masks the interrupt when rxoutofrangetype counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_LENERR          18            /* Setting this bit masks the interrupt when rxlengtherror counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_UCASTG          17            /* Setting this bit masks the interrupt when rxunicastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_R1024TOMAX      16            /* Setting this bit masks the interrupt when rx1024tomaxoctets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_R512TO1023      15            /* Setting this bit masks the interrupt when rx512to1023octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_R256TO511       14            /* Setting this bit masks the interrupt when rx255to511octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_R128TO255       13            /* Setting this bit masks the interrupt when rx128to255octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_R65TO127        12            /* Setting this bit masks the interrupt when rx65t0127octects_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_R64             11            /* Setting this bit masks the interrupt when rx64octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_OSIZEG          10            /* Setting this bit masks the interrupt when rxoversize_g counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_USIZEG           9            /* Setting this bit masks the interrupt when rxundersize_g counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_JABERR           8            /* Setting this bit masks the interrupt when rxjabbererror counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_RUNTERR          7            /* Setting this bit masks the interrupt when rxrunterror counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_ALIGNERR         6            /* Setting this bit masks the interrupt when rxalignmenterror counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_CRCERR           5            /* Setting this bit masks the interrupt when rxcrcerror coutner reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_MCASTG           4            /* Setting this bit masks the interrupt when rxmulticastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_BCASTG           3            /* Setting this bit masks the interrupt when rxbroadcastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_OCTCNTG          2            /* Setting this bit masks the interrupt when rxoctetcount_g counter reaches full or half */
#define BITP_EMAC_MMC_RXIMSK_OCTCNTGB         1            /* Setting this bit masks the interrupt when rxoctetcount_gb counter reaches half or full */
#define BITP_EMAC_MMC_RXIMSK_FRCNTGB          0            /* Setting this bit masks the interrupt when rxframecount_gb counter reaches half or full */
#define BITM_EMAC_MMC_RXIMSK_WATCHERR        0x00800000    /* Setting this bit masks the interrupt when rxwatchdog_error counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_VLANFRGB        0x00400000    /* Setting this bit masks the interrupt when rxvlanframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_FIFOOV          0x00200000    /* Setting this bit masks the interrupt when rxffiooverflow counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_PAUSEFRM        0x00100000    /* Setting this bit masks the interrupt when rxpauseframes counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_OUTRANGE        0x00080000    /* Setting this bit masks the interrupt when rxoutofrangetype counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_LENERR          0x00040000    /* Setting this bit masks the interrupt when rxlengtherror counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_UCASTG          0x00020000    /* Setting this bit masks the interrupt when rxunicastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_R1024TOMAX      0x00010000    /* Setting this bit masks the interrupt when rx1024tomaxoctets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_R512TO1023      0x00008000    /* Setting this bit masks the interrupt when rx512to1023octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_R256TO511       0x00004000    /* Setting this bit masks the interrupt when rx255to511octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_R128TO255       0x00002000    /* Setting this bit masks the interrupt when rx128to255octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_R65TO127        0x00001000    /* Setting this bit masks the interrupt when rx65t0127octects_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_R64             0x00000800    /* Setting this bit masks the interrupt when rx64octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_OSIZEG          0x00000400    /* Setting this bit masks the interrupt when rxoversize_g counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_USIZEG          0x00000200    /* Setting this bit masks the interrupt when rxundersize_g counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_JABERR          0x00000100    /* Setting this bit masks the interrupt when rxjabbererror counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_RUNTERR         0x00000080    /* Setting this bit masks the interrupt when rxrunterror counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_ALIGNERR        0x00000040    /* Setting this bit masks the interrupt when rxalignmenterror counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_CRCERR          0x00000020    /* Setting this bit masks the interrupt when rxcrcerror coutner reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_MCASTG          0x00000010    /* Setting this bit masks the interrupt when rxmulticastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_BCASTG          0x00000008    /* Setting this bit masks the interrupt when rxbroadcastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_OCTCNTG         0x00000004    /* Setting this bit masks the interrupt when rxoctetcount_g counter reaches full or half */
#define BITM_EMAC_MMC_RXIMSK_OCTCNTGB        0x00000002    /* Setting this bit masks the interrupt when rxoctetcount_gb counter reaches half or full */
#define BITM_EMAC_MMC_RXIMSK_FRCNTGB         0x00000001    /* Setting this bit masks the interrupt when rxframecount_gb counter reaches half or full */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_MMC_TXIMSK                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_MMC_TXIMSK_VLANFRG         24            /* Setting this bit masks the interrupt when txvlanframes_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_PAUSEFRM        23            /* Setting this bit masks the interrupt when txpauseframes counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_EXCESSDEF       22            /* Setting this bit masks the interrupt when txoexcessdef counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_FRCNTG          21            /* Setting this bit masks the interrupt when txframecount_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_OCTCNTG         20            /* Setting this bit masks the interrupt when txoctetcount_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_CARRERR         19            /* Setting this bit masks the interrupt when txcarriererr counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_EXCESSCOL       18            /* Setting this bit masks the interrupt when txexesscol counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_LATECOL         17            /* Setting this bit masks the interrupt when txlatecol counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_DEFERRED        16            /* Setting this bit masks the interrupt when txdeffered counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_MULTCOLG        15            /* Setting this bit masks the interrupt when txmulticol_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_SNGCOLG         14            /* Setting this bit masks the interrupt when txsinglecol_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_UNDERR          13            /* Setting this bit masks the interrupt when txunderflowerror counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_BCASTGB         12            /* Setting this bit masks the interrupt when txbroadcastframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_MCASTGB         11            /* Setting this bit masks the interrupt when txmulticastframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_UCASTGB         10            /* Setting this bit masks the interrupt when txunicastframes_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_T1024TOMAX       9            /* Setting this bit masks the interrupt when tx1024tomaxoctets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_T512TO1023       8            /* Setting this bit masks the interrupt when tx512to1023octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_T256TO511        7            /* Setting this bit masks the interrupt when tx256to511octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_T128TO255        6            /* Setting this bit masks the interrupt when tx128to255octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_T65TO127         5            /* Setting this bit masks the interrupt when tx65to127octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_T64              4            /* Setting this bit masks the interrupt when tx64octets_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_MCASTG           3            /* Setting this bit masks the interrupt when txmulticastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_BCASTG           2            /* Setting this bit masks the interrupt when txbroadcastframes_g counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_FRCNTGB          1            /* Setting this bit masks the interrupt when txframecount_gb counter reaches full or half */
#define BITP_EMAC_MMC_TXIMSK_OCTCNTGB         0            /* Setting this bit masks the interrupt when txoctetcount_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_VLANFRG         0x01000000    /* Setting this bit masks the interrupt when txvlanframes_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_PAUSEFRM        0x00800000    /* Setting this bit masks the interrupt when txpauseframes counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_EXCESSDEF       0x00400000    /* Setting this bit masks the interrupt when txoexcessdef counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_FRCNTG          0x00200000    /* Setting this bit masks the interrupt when txframecount_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_OCTCNTG         0x00100000    /* Setting this bit masks the interrupt when txoctetcount_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_CARRERR         0x00080000    /* Setting this bit masks the interrupt when txcarriererr counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_EXCESSCOL       0x00040000    /* Setting this bit masks the interrupt when txexesscol counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_LATECOL         0x00020000    /* Setting this bit masks the interrupt when txlatecol counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_DEFERRED        0x00010000    /* Setting this bit masks the interrupt when txdeffered counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_MULTCOLG        0x00008000    /* Setting this bit masks the interrupt when txmulticol_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_SNGCOLG         0x00004000    /* Setting this bit masks the interrupt when txsinglecol_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_UNDERR          0x00002000    /* Setting this bit masks the interrupt when txunderflowerror counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_BCASTGB         0x00001000    /* Setting this bit masks the interrupt when txbroadcastframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_MCASTGB         0x00000800    /* Setting this bit masks the interrupt when txmulticastframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_UCASTGB         0x00000400    /* Setting this bit masks the interrupt when txunicastframes_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_T1024TOMAX      0x00000200    /* Setting this bit masks the interrupt when tx1024tomaxoctets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_T512TO1023      0x00000100    /* Setting this bit masks the interrupt when tx512to1023octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_T256TO511       0x00000080    /* Setting this bit masks the interrupt when tx256to511octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_T128TO255       0x00000040    /* Setting this bit masks the interrupt when tx128to255octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_T65TO127        0x00000020    /* Setting this bit masks the interrupt when tx65to127octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_T64             0x00000010    /* Setting this bit masks the interrupt when tx64octets_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_MCASTG          0x00000008    /* Setting this bit masks the interrupt when txmulticastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_BCASTG          0x00000004    /* Setting this bit masks the interrupt when txbroadcastframes_g counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_FRCNTGB         0x00000002    /* Setting this bit masks the interrupt when txframecount_gb counter reaches full or half */
#define BITM_EMAC_MMC_TXIMSK_OCTCNTGB        0x00000001    /* Setting this bit masks the interrupt when txoctetcount_gb counter reaches full or half */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_IPC_RXIMSK                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_IPC_RXIMSK_ICMPERROCT      29            /* Setting this bit masks the interrupt when the rxicmp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_ICMPGOCT        28            /* Setting this bit masks the interrupt when the rxicmp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_TCPERROCT       27            /* Setting this bit masks the interrupt when the rxtcp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_TCPGOCT         26            /* Setting this bit masks the interrupt when the rxtcp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_UDPERROCT       25            /* Setting this bit masks the interrupt when the rxudp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_UDPGOCT         24            /* Setting this bit masks the interrupt when the rxudp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V6NOPAYOCT      23            /* Setting this bit masks the interrupt when the rxipv6_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V6HDERROCT      22            /* Setting this bit masks the interrupt when the rxipv6_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V6GOCT          21            /* Setting this bit masks the interrupt when the rxipv6_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4UDSBLOCT      20            /* Setting this bit masks the interrupt when the rxipv4_udsbl_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4FRAGOCT       19            /* Setting this bit masks the interrupt when the rxipv4_frag_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4NOPAYOCT      18            /* Setting this bit masks the interrupt when the rxipv4_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4HDERROCT      17            /* Setting this bit masks the interrupt when the rxipv4_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4GOCT          16            /* Setting this bit masks the interrupt when the rxipv4_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_ICMPERRFRM      13            /* Setting this bit masks the interrupt when the rxicmp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_ICMPGFRM        12            /* Setting this bit masks the interrupt when the rxicmp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_TCPERRFRM       11            /* Setting this bit masks the interrupt when the rxtcp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_TCPGFRM         10            /* Setting this bit masks the interrupt when the rxtcp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_UDPERRFRM        9            /* Setting this bit masks the interrupt when the rxudp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_UDPGFRM          8            /* Setting this bit masks the interrupt when the rxudp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V6NOPAYFRM       7            /* Setting this bit masks the interrupt when the rxipv6_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V6HDERRFRM       6            /* Setting this bit masks the interrupt when the rxipv6_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V6GFRM           5            /* Setting this bit masks the interrupt when the rxipv6_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4UDSBLFRM       4            /* Setting this bit masks the interrupt when the rxipv4_udsbl_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4FRAGFRM        3            /* Setting this bit masks the interrupt when the rxipv4_frag_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4NOPAYFRM       2            /* Setting this bit masks the interrupt when the rxipv4_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4HDERRFRM       1            /* Setting this bit masks the interrupt when the rxipv4_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXIMSK_V4GFRM           0            /* Setting this bit masks the interrupt when the rxipv4_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_ICMPERROCT      0x20000000    /* Setting this bit masks the interrupt when the rxicmp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_ICMPGOCT        0x10000000    /* Setting this bit masks the interrupt when the rxicmp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_TCPERROCT       0x08000000    /* Setting this bit masks the interrupt when the rxtcp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_TCPGOCT         0x04000000    /* Setting this bit masks the interrupt when the rxtcp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_UDPERROCT       0x02000000    /* Setting this bit masks the interrupt when the rxudp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_UDPGOCT         0x01000000    /* Setting this bit masks the interrupt when the rxudp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V6NOPAYOCT      0x00800000    /* Setting this bit masks the interrupt when the rxipv6_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V6HDERROCT      0x00400000    /* Setting this bit masks the interrupt when the rxipv6_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V6GOCT          0x00200000    /* Setting this bit masks the interrupt when the rxipv6_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4UDSBLOCT      0x00100000    /* Setting this bit masks the interrupt when the rxipv4_udsbl_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4FRAGOCT       0x00080000    /* Setting this bit masks the interrupt when the rxipv4_frag_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4NOPAYOCT      0x00040000    /* Setting this bit masks the interrupt when the rxipv4_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4HDERROCT      0x00020000    /* Setting this bit masks the interrupt when the rxipv4_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4GOCT          0x00010000    /* Setting this bit masks the interrupt when the rxipv4_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_ICMPERRFRM      0x00002000    /* Setting this bit masks the interrupt when the rxicmp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_ICMPGFRM        0x00001000    /* Setting this bit masks the interrupt when the rxicmp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_TCPERRFRM       0x00000800    /* Setting this bit masks the interrupt when the rxtcp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_TCPGFRM         0x00000400    /* Setting this bit masks the interrupt when the rxtcp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_UDPERRFRM       0x00000200    /* Setting this bit masks the interrupt when the rxudp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_UDPGFRM         0x00000100    /* Setting this bit masks the interrupt when the rxudp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V6NOPAYFRM      0x00000080    /* Setting this bit masks the interrupt when the rxipv6_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V6HDERRFRM      0x00000040    /* Setting this bit masks the interrupt when the rxipv6_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V6GFRM          0x00000020    /* Setting this bit masks the interrupt when the rxipv6_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4UDSBLFRM      0x00000010    /* Setting this bit masks the interrupt when the rxipv4_udsbl_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4FRAGFRM       0x00000008    /* Setting this bit masks the interrupt when the rxipv4_frag_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4NOPAYFRM      0x00000004    /* Setting this bit masks the interrupt when the rxipv4_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4HDERRFRM      0x00000002    /* Setting this bit masks the interrupt when the rxipv4_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXIMSK_V4GFRM          0x00000001    /* Setting this bit masks the interrupt when the rxipv4_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_IPC_RXINT                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_IPC_RXINT_ICMPERROCT       29            /* The bit is set when the rxicmp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_ICMPGOCT         28            /* The bit is set when the rxicmp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_TCPERROCT        27            /* The bit is set when the rxtcp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_TCPGOCT          26            /* The bit is set when the rxtcp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_UDPERROCT        25            /* The bit is set when the rxudp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_UDPGOCT          24            /* The bit is set when the rxudp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V6NOPAYOCT       23            /* The bit is set when the rxipv6_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V6HDERROCT       22            /* The bit is set when the rxipv6_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V6GOCT           21            /* The bit is set when the rxipv6_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4UDSBLOCT       20            /* The bit is set when the rxipv4_udsbl_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4FRAGOCT        19            /* The bit is set when the rxipv4_frag_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4NOPAYOCT       18            /* The bit is set when the rxipv4_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4HDERROCT       17            /* The bit is set when the rxipv4_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4GOCT           16            /* The bit is set when the rxipv4_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_ICMPERRFRM       13            /* The bit is set when the rxicmp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_ICMPGFRM         12            /* The bit is set when the rxicmp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_TCPERRFRM        11            /* The bit is set when the rxtcp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_TCPGFRM          10            /* The bit is set when the rxtcp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_UDPERRFRM         9            /* The bit is set when the rxudp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_UDPGFRM           8            /* The bit is set when the rxudp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V6NOPAYFRM        7            /* The bit is set when the rxipv6_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V6HDERRFRM        6            /* The bit is set when the rxipv6_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V6GFRM            5            /* The bit is set when the rxipv6_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4UDSBLFRM        4            /* The bit is set when the rxipv4_udsbl_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4FRAGFRM         3            /* The bit is set when the rxipv4_frag_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4NOPAYFRM        2            /* The bit is set when the rxipv4_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4HDERRFRM        1            /* The bit is set when the rxipv4_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITP_EMAC_IPC_RXINT_V4GFRM            0            /* The bit is set when the rxipv4_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_ICMPERROCT       0x20000000    /* The bit is set when the rxicmp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_ICMPGOCT         0x10000000    /* The bit is set when the rxicmp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_TCPERROCT        0x08000000    /* The bit is set when the rxtcp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_TCPGOCT          0x04000000    /* The bit is set when the rxtcp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_UDPERROCT        0x02000000    /* The bit is set when the rxudp_err_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_UDPGOCT          0x01000000    /* The bit is set when the rxudp_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V6NOPAYOCT       0x00800000    /* The bit is set when the rxipv6_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V6HDERROCT       0x00400000    /* The bit is set when the rxipv6_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V6GOCT           0x00200000    /* The bit is set when the rxipv6_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4UDSBLOCT       0x00100000    /* The bit is set when the rxipv4_udsbl_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4FRAGOCT        0x00080000    /* The bit is set when the rxipv4_frag_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4NOPAYOCT       0x00040000    /* The bit is set when the rxipv4_nopay_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4HDERROCT       0x00020000    /* The bit is set when the rxipv4_hdrerr_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4GOCT           0x00010000    /* The bit is set when the rxipv4_gd_octets counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_ICMPERRFRM       0x00002000    /* The bit is set when the rxicmp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_ICMPGFRM         0x00001000    /* The bit is set when the rxicmp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_TCPERRFRM        0x00000800    /* The bit is set when the rxtcp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_TCPGFRM          0x00000400    /* The bit is set when the rxtcp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_UDPERRFRM        0x00000200    /* The bit is set when the rxudp_err_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_UDPGFRM          0x00000100    /* The bit is set when the rxudp_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V6NOPAYFRM       0x00000080    /* The bit is set when the rxipv6_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V6HDERRFRM       0x00000040    /* The bit is set when the rxipv6_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V6GFRM           0x00000020    /* The bit is set when the rxipv6_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4UDSBLFRM       0x00000010    /* The bit is set when the rxipv4_udsbl_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4FRAGFRM        0x00000008    /* The bit is set when the rxipv4_frag_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4NOPAYFRM       0x00000004    /* The bit is set when the rxipv4_nopay_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4HDERRFRM       0x00000002    /* The bit is set when the rxipv4_hdrerr_frms counter reaches half the maximum value, and also when it reaches the maximum value. */
#define BITM_EMAC_IPC_RXINT_V4GFRM           0x00000001    /* The bit is set when the rxipv4_gd_frms counter reaches half the maximum value, and also when it reaches the maximum value. */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_CTL_ATSFC               19            /* Auxillary Snapshot FIFO Clear */
#define BITP_EMAC_TM_CTL_MACADDREN           18            /* Enable Mac address for PTP filtering */
#define BITP_EMAC_TM_CTL_CLKTYPE             16            /* Select the type of clock node */
#define BITP_EMAC_TM_CTL_MFRMEN              15            /* Enable Time Stamp for frames relevant to Master */
#define BITP_EMAC_TM_CTL_EVTFRMEN            14            /* Enable Time Stamp for Event Frames */
#define BITP_EMAC_TM_CTL_V4EN                13            /* Enable Time Stamp for IPV4 Frames */
#define BITP_EMAC_TM_CTL_V6EN                12            /* Enable Time Stamp for IPV6 Frames */
#define BITP_EMAC_TM_CTL_PTPEN               11            /* Enable Time stamp for PTP over Ethernet */
#define BITP_EMAC_TM_CTL_V2EN                10            /* Enable PTP packet Snooping for VER2 */
#define BITP_EMAC_TM_CTL_ROCTL                9            /* Time Stamp Control Digital or Binary Rollover */
#define BITP_EMAC_TM_CTL_ALLFRMEN             8            /* Enable Time Stamp for all Frames */
#define BITP_EMAC_TM_CTL_ADDUPDT              5            /* Addend Register Update */
#define BITP_EMAC_TM_CTL_TRIGEN               4            /* Time Stamp Interrupt Trigger Enable */
#define BITP_EMAC_TM_CTL_UPDT                 3            /* Time Stamp Update */
#define BITP_EMAC_TM_CTL_INIT                 2            /* Time Stamp Intialize */
#define BITP_EMAC_TM_CTL_CFUPDT               1            /* Time Stamp Fine or Coarse Update */
#define BITP_EMAC_TM_CTL_EN                   0            /* Time Stamp Enable */
#define BITM_EMAC_TM_CTL_ATSFC               0x00080000    /* Auxillary Snapshot FIFO Clear */

#define BITM_EMAC_TM_CTL_MACADDREN           0x00040000    /* Enable Mac address for PTP filtering */
#define ENUM_EMAC_TM_CTL_D_PTP_ADDRFILT      0x00000000    /* MACADDREN: Disable PTP MAC address filter */
#define ENUM_EMAC_TM_CTL_E_PTP_ADDRFILT      0x00040000    /* MACADDREN: Enable PTP MAC address filter */

#define BITM_EMAC_TM_CTL_CLKTYPE             0x00030000    /* Select the type of clock node */
#define ENUM_EMAC_TM_CTL_CLK_ORDINARY        0x00000000    /* CLKTYPE: Ordinary clock */
#define ENUM_EMAC_TM_CTL_CLK_BOUNDARY        0x00010000    /* CLKTYPE: Boundary clock */
#define ENUM_EMAC_TM_CTL_TS_END_2_END        0x00020000    /* CLKTYPE: End-to-End Transparent clock */
#define ENUM_EMAC_TM_CTL_TS_PEER_2_PEER      0x00030000    /* CLKTYPE: Peer-to-peer Transparent clock */

#define BITM_EMAC_TM_CTL_MFRMEN              0x00008000    /* Enable Time Stamp for frames relevant to Master */
#define ENUM_EMAC_TM_CTL_E_SLVSNPT_MSGS      0x00000000    /* MFRMEN: Enable Slave Snapshot messages */
#define ENUM_EMAC_TM_CTL_E_MSSNPST_MSGS      0x00008000    /* MFRMEN: Enable Master snapshot messages */

#define BITM_EMAC_TM_CTL_EVTFRMEN            0x00004000    /* Enable Time Stamp for Event Frames */
#define ENUM_EMAC_TM_CTL_E_ATSTMP_MSGS       0x00000000    /* EVTFRMEN: Enable all timestamp messages */
#define ENUM_EMAC_TM_CTL_E_ETSTMP_MSGS       0x00004000    /* EVTFRMEN: Enable event timestamp messages only */

#define BITM_EMAC_TM_CTL_V4EN                0x00002000    /* Enable Time Stamp for IPV4 Frames */
#define ENUM_EMAC_TM_CTL_D_TSTMP_IPV4        0x00000000    /* V4EN: Disable timestamp for IPv4 frames */
#define ENUM_EMAC_TM_CTL_E_TSTMP_IPV4        0x00002000    /* V4EN: Enable timestamp for IPv4 frames */

#define BITM_EMAC_TM_CTL_V6EN                0x00001000    /* Enable Time Stamp for IPV6 Frames */
#define ENUM_EMAC_TM_CTL_D_TSTMP_IPV6        0x00000000    /* V6EN: Disable timestamp for IPv6 frames */
#define ENUM_EMAC_TM_CTL_E_TSTMP_IPV6        0x00001000    /* V6EN: Enable timestamp for IPv6 frames */

#define BITM_EMAC_TM_CTL_PTPEN               0x00000800    /* Enable Time stamp for PTP over Ethernet */
#define ENUM_EMAC_TM_CTL_D_PTP_OV_ETHER      0x00000000    /* PTPEN: Disable PTP over ethenet frames */
#define ENUM_EMAC_TM_CTL_E_PTP_OV_ETHER      0x00000800    /* PTPEN: Enable PTP over ethernet */

#define BITM_EMAC_TM_CTL_V2EN                0x00000400    /* Enable PTP packet Snooping for VER2 */
#define ENUM_EMAC_TM_CTL_D_PKT_SNOOP_V2      0x00000000    /* V2EN: Disable packet snooping for V2 frames */
#define ENUM_EMAC_TM_CTL_E_PKT_SNOOP_V2      0x00000400    /* V2EN: Enable packet snooping for V2 frames */

#define BITM_EMAC_TM_CTL_ROCTL               0x00000200    /* Time Stamp Control Digital or Binary Rollover */
#define ENUM_EMAC_TM_CTL_RO_SUBSEC_RES       0x00000000    /* ROCTL: Roll over with subsecond accuracy */
#define ENUM_EMAC_TM_CTL_RO_NANO_RES         0x00000200    /* ROCTL: Roll over with nansecond accuracy */

#define BITM_EMAC_TM_CTL_ALLFRMEN            0x00000100    /* Enable Time Stamp for all Frames */
#define ENUM_EMAC_TM_CTL_D_TSALL_FRAMES      0x00000000    /* ALLFRMEN: Disable timestamp for all frames */
#define ENUM_EMAC_TM_CTL_E_TSALL_FRAMES      0x00000100    /* ALLFRMEN: Enable timestamp for all frames */
#define BITM_EMAC_TM_CTL_ADDUPDT             0x00000020    /* Addend Register Update */

#define BITM_EMAC_TM_CTL_TRIGEN              0x00000010    /* Time Stamp Interrupt Trigger Enable */
#define ENUM_EMAC_TM_CTL_EN_TRIGGER          0x00000010    /* TRIGEN: Interrupt (TS) if system time is greater than target time register */

#define BITM_EMAC_TM_CTL_UPDT                0x00000008    /* Time Stamp Update */
#define ENUM_EMAC_TM_CTL_EN_UPDATE           0x00000008    /* UPDT: System time updated with Time stamp register values */

#define BITM_EMAC_TM_CTL_INIT                0x00000004    /* Time Stamp Intialize */
#define ENUM_EMAC_TM_CTL_EN_TS_INIT          0x00000004    /* INIT: System time initialized with Time stamp register values */

#define BITM_EMAC_TM_CTL_CFUPDT              0x00000002    /* Time Stamp Fine or Coarse Update */
#define ENUM_EMAC_TM_CTL_EN_COARSE_UPDT      0x00000000    /* CFUPDT: System time stamp update to be done using Coarse method */
#define ENUM_EMAC_TM_CTL_EN_FINE_UPDT        0x00000002    /* CFUPDT: System time stamp update to be done using fine update method */

#define BITM_EMAC_TM_CTL_EN                  0x00000001    /* Time Stamp Enable */
#define ENUM_EMAC_TM_CTL_DTS                 0x00000000    /* EN: Disable timestamp */
#define ENUM_EMAC_TM_CTL_TS                  0x00000001    /* EN: Enable timestamp */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_SUBSEC                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_SUBSEC_VALUE             0            /* Sub-Second Incrementt Value */
#define BITM_EMAC_TM_SUBSEC_VALUE            0x000000FF    /* Sub-Second Incrementt Value */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_NSEC                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_NSEC_PSNT               31            /* Positive or Negative Time */
#define BITP_EMAC_TM_NSEC_TSSS                0            /* Time Stamp Sub Seconds */
#define BITM_EMAC_TM_NSEC_PSNT               0x80000000    /* Positive or Negative Time */
#define BITM_EMAC_TM_NSEC_TSSS               0x7FFFFFFF    /* Time Stamp Sub Seconds */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_NSECUPDT                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_NSECUPDT_ADDSUB         31            /* Add or Subtract the Time */
#define BITP_EMAC_TM_NSECUPDT_TSSSU           0            /* Time Stamp Sub Second Init/Incr */
#define BITM_EMAC_TM_NSECUPDT_ADDSUB         0x80000000    /* Add or Subtract the Time */
#define BITM_EMAC_TM_NSECUPDT_TSSSU          0x7FFFFFFF    /* Time Stamp Sub Second Init/Incr */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_NTGTM                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_NTGTM_VALUE              0            /* Target Time Nano Seconds */
#define BITM_EMAC_TM_NTGTM_VALUE             0x7FFFFFFF    /* Target Time Nano Seconds */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_HISEC                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_HISEC_VALUE              0            /* Time Stamp High Second Register */
#define BITM_EMAC_TM_HISEC_VALUE             0x0000FFFF    /* Time Stamp High Second Register */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_STMPSTAT                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_STMPSTAT_ATSNS          25            /* Auxillary Time Stamp Number of Snapshots */
#define BITP_EMAC_TM_STMPSTAT_ATSSTM         24            /* Auxillary Time stamp snapshot trigger missed */
#define BITP_EMAC_TM_STMPSTAT_ATSTS           2            /* Auxillary Time Stamp Trigger Snapshot */
#define BITP_EMAC_TM_STMPSTAT_TSTGT           1            /* Time Stamp Target Time Reached */
#define BITP_EMAC_TM_STMPSTAT_TSSOVF          0            /* Time Stamp Seconds Overflow */
#define BITM_EMAC_TM_STMPSTAT_ATSNS          0x0E000000    /* Auxillary Time Stamp Number of Snapshots */
#define BITM_EMAC_TM_STMPSTAT_ATSSTM         0x01000000    /* Auxillary Time stamp snapshot trigger missed */
#define BITM_EMAC_TM_STMPSTAT_ATSTS          0x00000004    /* Auxillary Time Stamp Trigger Snapshot */
#define BITM_EMAC_TM_STMPSTAT_TSTGT          0x00000002    /* Time Stamp Target Time Reached */
#define BITM_EMAC_TM_STMPSTAT_TSSOVF         0x00000001    /* Time Stamp Seconds Overflow */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_TM_PPSCTL                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_TM_PPSCTL_PPSCTL            0            /* Controls the duration between 2 PPS */
#define BITM_EMAC_TM_PPSCTL_PPSCTL           0x0000000F    /* Controls the duration between 2 PPS */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_BUSMODE                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_BUSMODE_AAL            25            /* Address Aligned Bursts - start address is aligned */
#define BITP_EMAC_DMA_BUSMODE_PBL8           24            /* PBL is multiplied by 8 */
#define BITP_EMAC_DMA_BUSMODE_USP            23            /* Use seperate PBL for TX and RX DMA */
#define BITP_EMAC_DMA_BUSMODE_RPBL           17            /* Receive Programmable Burst Length - maximum number of beats in RX DMA */
#define BITP_EMAC_DMA_BUSMODE_FB             16            /* Fixed Burst -  selects only fixed burst lengths when set */
#define BITP_EMAC_DMA_BUSMODE_PBL             8            /* Programmable Burst Length - specifies the maximum number of beats */
#define BITP_EMAC_DMA_BUSMODE_ATDS            7            /* Alternate Descriptor Size - size of descriptor is 8 words */
#define BITP_EMAC_DMA_BUSMODE_DSL             2            /* Descriptor Skip Length in unchained Descriptors */
#define BITP_EMAC_DMA_BUSMODE_SWR             0            /* Software Reset - resetting all the blocks */
#define BITM_EMAC_DMA_BUSMODE_AAL            0x02000000    /* Address Aligned Bursts - start address is aligned */
#define BITM_EMAC_DMA_BUSMODE_PBL8           0x01000000    /* PBL is multiplied by 8 */
#define BITM_EMAC_DMA_BUSMODE_USP            0x00800000    /* Use seperate PBL for TX and RX DMA */
#define BITM_EMAC_DMA_BUSMODE_RPBL           0x007E0000    /* Receive Programmable Burst Length - maximum number of beats in RX DMA */
#define BITM_EMAC_DMA_BUSMODE_FB             0x00010000    /* Fixed Burst -  selects only fixed burst lengths when set */
#define BITM_EMAC_DMA_BUSMODE_PBL            0x00003F00    /* Programmable Burst Length - specifies the maximum number of beats */
#define BITM_EMAC_DMA_BUSMODE_ATDS           0x00000080    /* Alternate Descriptor Size - size of descriptor is 8 words */
#define BITM_EMAC_DMA_BUSMODE_DSL            0x0000007C    /* Descriptor Skip Length in unchained Descriptors */
#define BITM_EMAC_DMA_BUSMODE_SWR            0x00000001    /* Software Reset - resetting all the blocks */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_STAT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_STAT_TTI               29            /* Time Stamp Trigger Interrupt */
#define BITP_EMAC_DMA_STAT_GPI               28            /* GMAC PMT Interrupt - Reflecting Interrupt from PMT block */
#define BITP_EMAC_DMA_STAT_GMI               27            /* GMAC MMC Interrupt - Reflecting Interrupt from MMC block */
#define BITP_EMAC_DMA_STAT_GLI               26            /* GMAC Line Interface Interrupt - For Devonshire Configuration, this interrupt wont come */
#define BITP_EMAC_DMA_STAT_EB                23            /* Error Bits - indicates the type of Fatal Error */
#define BITP_EMAC_DMA_STAT_TS                20            /* Transmit Process State - State of TX DMA */
#define BITP_EMAC_DMA_STAT_RS                17            /* Receive Process State - State of RX DMA */
#define BITP_EMAC_DMA_STAT_NIS               16            /* Normal Interrupt Summary - Generation of interrupt in normal cases */
#define BITP_EMAC_DMA_STAT_AIS               15            /* Abornmal Interrupt Summary - Generation of interrupt in error cases */
#define BITP_EMAC_DMA_STAT_ERI               14            /* Early Receive Interrupt */
#define BITP_EMAC_DMA_STAT_FBI               13            /* Fatal Bus Error Interrupt */
#define BITP_EMAC_DMA_STAT_ETI               10            /* Early Transmit Interrupt - indicates the TX frame is now in FIFO */
#define BITP_EMAC_DMA_STAT_RWT                9            /* Receive WatchDog Timeout - reception of a frame greater than max bytes */
#define BITP_EMAC_DMA_STAT_RPS                8            /* Receive Process Stopped */
#define BITP_EMAC_DMA_STAT_RU                 7            /* Receive Buffer Unavailable - next receive descriptor not available for EMAC */
#define BITP_EMAC_DMA_STAT_RI                 6            /* Receive Interrupt - completion of frame reception */
#define BITP_EMAC_DMA_STAT_UNF                5            /* Transmit Buffer had an underflow */
#define BITP_EMAC_DMA_STAT_OVF                4            /* Receive Buffer had an overflow */
#define BITP_EMAC_DMA_STAT_TJT                3            /* Transmit Jabber Timeout - indicates that TX has been excessively active */
#define BITP_EMAC_DMA_STAT_TU                 2            /* Transmit Buffer Unavailable - indicates that next TX descriptor is not available for EMAC */
#define BITP_EMAC_DMA_STAT_TPS                1            /* Transmit Process Stopped */
#define BITP_EMAC_DMA_STAT_TI                 0            /* Transmit Interrupt - Indicates the completion of frame transmission */
#define BITM_EMAC_DMA_STAT_TTI               0x20000000    /* Time Stamp Trigger Interrupt */
#define BITM_EMAC_DMA_STAT_GPI               0x10000000    /* GMAC PMT Interrupt - Reflecting Interrupt from PMT block */
#define BITM_EMAC_DMA_STAT_GMI               0x08000000    /* GMAC MMC Interrupt - Reflecting Interrupt from MMC block */
#define BITM_EMAC_DMA_STAT_GLI               0x04000000    /* GMAC Line Interface Interrupt - For Devonshire Configuration, this interrupt wont come */
#define BITM_EMAC_DMA_STAT_EB                0x03800000    /* Error Bits - indicates the type of Fatal Error */

#define BITM_EMAC_DMA_STAT_TS                0x00700000    /* Transmit Process State - State of TX DMA */
#define ENUM_EMAC_DMA_STAT_TS_STOPPED        0x00000000    /* TS: Stopped; Reset or Stop Transmit Command issued */
#define ENUM_EMAC_DMA_STAT_TS_R_FTD          0x00100000    /* TS: Running; Fetching Transmit Transfer Descriptor */
#define ENUM_EMAC_DMA_STAT_TS_R_WSTAT        0x00200000    /* TS: Running; Waiting for status */
#define ENUM_EMAC_DMA_STAT_TS_R_TXHMBUF      0x00300000    /* TS: Reading Data from host memory buffer and queuing it to TX buffer */
#define ENUM_EMAC_DMA_STAT_TS_WR_TSTMP       0x00400000    /* TS: TIME_STAMP write state */
#define ENUM_EMAC_DMA_STAT_TS_SUSPENDED      0x00600000    /* TS: Suspended; Transmit Descriptor Unavailable or TX Buffer Underflow */
#define ENUM_EMAC_DMA_STAT_TS_R_CLSTD        0x00700000    /* TS: Closing Transmit Descriptor */

#define BITM_EMAC_DMA_STAT_RS                0x000E0000    /* Receive Process State - State of RX DMA */
#define ENUM_EMAC_DMA_STAT_RS_STOPPED        0x00000000    /* RS: Stopped: Reset or Stop Receive Command issued. */
#define ENUM_EMAC_DMA_STAT_RS_R_FRD          0x00020000    /* RS: Running: Fetching Receive Transfer Descriptor. */
#define ENUM_EMAC_DMA_STAT_RS_R_WTRX         0x00060000    /* RS: Running: Waiting for receive packet */
#define ENUM_EMAC_DMA_STAT_RS_SUSPENDED      0x00080000    /* RS: Suspended: Receive Descriptor Unavailable */
#define ENUM_EMAC_DMA_STAT_RS_R_CLSRD        0x000A0000    /* RS: Running: Closing Receive Descriptor */
#define ENUM_EMAC_DMA_STAT_RS_WR_TSTMP       0x000C0000    /* RS: TIME_STAMP write state */
#define ENUM_EMAC_DMA_STAT_RS_R_RXWRHM       0x000E0000    /* RS: Running: Transferring  RX packet data from RX buffer to host memory */
#define BITM_EMAC_DMA_STAT_NIS               0x00010000    /* Normal Interrupt Summary - Generation of interrupt in normal cases */
#define BITM_EMAC_DMA_STAT_AIS               0x00008000    /* Abornmal Interrupt Summary - Generation of interrupt in error cases */
#define BITM_EMAC_DMA_STAT_ERI               0x00004000    /* Early Receive Interrupt */
#define BITM_EMAC_DMA_STAT_FBI               0x00002000    /* Fatal Bus Error Interrupt */
#define BITM_EMAC_DMA_STAT_ETI               0x00000400    /* Early Transmit Interrupt - indicates the TX frame is now in FIFO */
#define BITM_EMAC_DMA_STAT_RWT               0x00000200    /* Receive WatchDog Timeout - reception of a frame greater than max bytes */
#define BITM_EMAC_DMA_STAT_RPS               0x00000100    /* Receive Process Stopped */
#define BITM_EMAC_DMA_STAT_RU                0x00000080    /* Receive Buffer Unavailable - next receive descriptor not available for EMAC */
#define BITM_EMAC_DMA_STAT_RI                0x00000040    /* Receive Interrupt - completion of frame reception */
#define BITM_EMAC_DMA_STAT_UNF               0x00000020    /* Transmit Buffer had an underflow */
#define BITM_EMAC_DMA_STAT_OVF               0x00000010    /* Receive Buffer had an overflow */
#define BITM_EMAC_DMA_STAT_TJT               0x00000008    /* Transmit Jabber Timeout - indicates that TX has been excessively active */
#define BITM_EMAC_DMA_STAT_TU                0x00000004    /* Transmit Buffer Unavailable - indicates that next TX descriptor is not available for EMAC */
#define BITM_EMAC_DMA_STAT_TPS               0x00000002    /* Transmit Process Stopped */
#define BITM_EMAC_DMA_STAT_TI                0x00000001    /* Transmit Interrupt - Indicates the completion of frame transmission */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_OPMODE                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_OPMODE_DT              26            /* Disable dropping of IP checksum error frames */
#define BITP_EMAC_DMA_OPMODE_RSF             25            /* Receive Store and Forward - Starts DMA only when complete frame is present in RX FIFO */
#define BITP_EMAC_DMA_OPMODE_DFF             24            /* Disable Flushing of received frames */
#define BITP_EMAC_DMA_OPMODE_TSF             21            /* Transmit Store and Forward - starts transmission only when full frame is present in TX FIFO */
#define BITP_EMAC_DMA_OPMODE_FTF             20            /* Flush Transmit FIFO */
#define BITP_EMAC_DMA_OPMODE_TTC             14            /* Transmit Threshold control */
#define BITP_EMAC_DMA_OPMODE_ST              13            /* Start/Stop Transmission command */
#define BITP_EMAC_DMA_OPMODE_FEF              7            /* Forward Error Frames */
#define BITP_EMAC_DMA_OPMODE_FUF              6            /* Forward Undersized good Frames */
#define BITP_EMAC_DMA_OPMODE_RTC              3            /* Receive Threshold Control - Sets the threshold level of the receive FIFO */
#define BITP_EMAC_DMA_OPMODE_OSF              2            /* Operate on Second Frame - Operating on second frame before getting the status of first */
#define BITP_EMAC_DMA_OPMODE_SR               1            /* Start/Stop Receive - Starting/stopping the RX DMA */
#define BITM_EMAC_DMA_OPMODE_DT              0x04000000    /* Disable dropping of IP checksum error frames */
#define BITM_EMAC_DMA_OPMODE_RSF             0x02000000    /* Receive Store and Forward - Starts DMA only when complete frame is present in RX FIFO */
#define BITM_EMAC_DMA_OPMODE_DFF             0x01000000    /* Disable Flushing of received frames */
#define BITM_EMAC_DMA_OPMODE_TSF             0x00200000    /* Transmit Store and Forward - starts transmission only when full frame is present in TX FIFO */
#define BITM_EMAC_DMA_OPMODE_FTF             0x00100000    /* Flush Transmit FIFO */

#define BITM_EMAC_DMA_OPMODE_TTC             0x0001C000    /* Transmit Threshold control */
#define ENUM_EMAC_DMA_OPMODE_TTC_64          0x00000000    /* TTC: 64 */
#define ENUM_EMAC_DMA_OPMODE_TTC_128         0x00004000    /* TTC: 128 */
#define ENUM_EMAC_DMA_OPMODE_TTC_192         0x00008000    /* TTC: 192 */
#define ENUM_EMAC_DMA_OPMODE_TTC_256         0x0000C000    /* TTC: 256 */
#define ENUM_EMAC_DMA_OPMODE_TTC_40          0x00010000    /* TTC: 40 */
#define ENUM_EMAC_DMA_OPMODE_TTC_32          0x00014000    /* TTC: 32 */
#define ENUM_EMAC_DMA_OPMODE_TTC_24          0x00018000    /* TTC: 24 */
#define ENUM_EMAC_DMA_OPMODE_TTC_16          0x0001C000    /* TTC: 16 */
#define BITM_EMAC_DMA_OPMODE_ST              0x00002000    /* Start/Stop Transmission command */
#define BITM_EMAC_DMA_OPMODE_FEF             0x00000080    /* Forward Error Frames */
#define BITM_EMAC_DMA_OPMODE_FUF             0x00000040    /* Forward Undersized good Frames */

#define BITM_EMAC_DMA_OPMODE_RTC             0x00000018    /* Receive Threshold Control - Sets the threshold level of the receive FIFO */
#define ENUM_EMAC_DMA_OPMODE_RTC_64          0x00000000    /* RTC: 64 */
#define ENUM_EMAC_DMA_OPMODE_RTC_32          0x00000008    /* RTC: 32 */
#define ENUM_EMAC_DMA_OPMODE_RTC_96          0x00000010    /* RTC: 96 */
#define ENUM_EMAC_DMA_OPMODE_RTC_128         0x00000018    /* RTC: 128 */
#define BITM_EMAC_DMA_OPMODE_OSF             0x00000004    /* Operate on Second Frame - Operating on second frame before getting the status of first */
#define BITM_EMAC_DMA_OPMODE_SR              0x00000002    /* Start/Stop Receive - Starting/stopping the RX DMA */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_IEN                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_IEN_NIS                16            /* Normal Interrupt Summary Enable */
#define BITP_EMAC_DMA_IEN_AIS                15            /* Abnormal Interrupt Summary Enable */
#define BITP_EMAC_DMA_IEN_ERI                14            /* Early Receive Interrupt Enable */
#define BITP_EMAC_DMA_IEN_FBI                13            /* Fatal Bus Error Enable */
#define BITP_EMAC_DMA_IEN_ETI                10            /* Early Transmit Interrupt Enable */
#define BITP_EMAC_DMA_IEN_RWT                 9            /* Receive WatchdogTimeout Enable */
#define BITP_EMAC_DMA_IEN_RPS                 8            /* Receive Stopped Enable */
#define BITP_EMAC_DMA_IEN_RU                  7            /* Receive Buffer Unavailable Enable */
#define BITP_EMAC_DMA_IEN_RI                  6            /* Receive Interrupt Enable */
#define BITP_EMAC_DMA_IEN_UNF                 5            /* Underflow Interrupt Enable */
#define BITP_EMAC_DMA_IEN_OVF                 4            /* Overflow Interrupt Enable */
#define BITP_EMAC_DMA_IEN_TJT                 3            /* Transmit Jabber Timeout Enable */
#define BITP_EMAC_DMA_IEN_TU                  2            /* Transmit Buffer Unavailable Enable */
#define BITP_EMAC_DMA_IEN_TPS                 1            /* Transmit Stopped Enable */
#define BITP_EMAC_DMA_IEN_TI                  0            /* Transmit Interrupt Enable */
#define BITM_EMAC_DMA_IEN_NIS                0x00010000    /* Normal Interrupt Summary Enable */
#define BITM_EMAC_DMA_IEN_AIS                0x00008000    /* Abnormal Interrupt Summary Enable */
#define BITM_EMAC_DMA_IEN_ERI                0x00004000    /* Early Receive Interrupt Enable */
#define BITM_EMAC_DMA_IEN_FBI                0x00002000    /* Fatal Bus Error Enable */
#define BITM_EMAC_DMA_IEN_ETI                0x00000400    /* Early Transmit Interrupt Enable */
#define BITM_EMAC_DMA_IEN_RWT                0x00000200    /* Receive WatchdogTimeout Enable */
#define BITM_EMAC_DMA_IEN_RPS                0x00000100    /* Receive Stopped Enable */
#define BITM_EMAC_DMA_IEN_RU                 0x00000080    /* Receive Buffer Unavailable Enable */
#define BITM_EMAC_DMA_IEN_RI                 0x00000040    /* Receive Interrupt Enable */
#define BITM_EMAC_DMA_IEN_UNF                0x00000020    /* Underflow Interrupt Enable */
#define BITM_EMAC_DMA_IEN_OVF                0x00000010    /* Overflow Interrupt Enable */
#define BITM_EMAC_DMA_IEN_TJT                0x00000008    /* Transmit Jabber Timeout Enable */
#define BITM_EMAC_DMA_IEN_TU                 0x00000004    /* Transmit Buffer Unavailable Enable */
#define BITM_EMAC_DMA_IEN_TPS                0x00000002    /* Transmit Stopped Enable */
#define BITM_EMAC_DMA_IEN_TI                 0x00000001    /* Transmit Interrupt Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_MISS_FRM                    Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_MISS_FRM_OVFFIFO       28            /* Overflow bit for FIFO Overflow counter */
#define BITP_EMAC_DMA_MISS_FRM_MISSFROV      17            /* Number of frames missed due to buffer overflow */
#define BITP_EMAC_DMA_MISS_FRM_OVFMISS       16            /* Overflow bit for missed frame counter */
#define BITP_EMAC_DMA_MISS_FRM_MISSFRUN       0            /* Number of frames missed due to buffer unavailability */
#define BITM_EMAC_DMA_MISS_FRM_OVFFIFO       0x10000000    /* Overflow bit for FIFO Overflow counter */
#define BITM_EMAC_DMA_MISS_FRM_MISSFROV      0x0FFE0000    /* Number of frames missed due to buffer overflow */
#define BITM_EMAC_DMA_MISS_FRM_OVFMISS       0x00010000    /* Overflow bit for missed frame counter */
#define BITM_EMAC_DMA_MISS_FRM_MISSFRUN      0x0000FFFF    /* Number of frames missed due to buffer unavailability */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_RXIWDOG                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_RXIWDOG_RIWT            0            /* RI WatchDog Timer Count */
#define BITM_EMAC_DMA_RXIWDOG_RIWT           0x000000FF    /* RI WatchDog Timer Count */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_BMMODE                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_BMMODE_LPIEN           31            /* Enable Low power interface */
#define BITP_EMAC_DMA_BMMODE_UNLK            30            /* Unlock on magic packet or   remote wake up */
#define BITP_EMAC_DMA_BMMODE_WROSRLMT        20            /* Axi Maximum Write outstanding Request */
#define BITP_EMAC_DMA_BMMODE_RDOSRLMT        16            /* Axi Maximum Read outstanding request */
#define BITP_EMAC_DMA_BMMODE_AAL             12            /* Address Aligned Beats */
#define BITP_EMAC_DMA_BMMODE_BLEN256          7            /* Axi Burst Length 256 */
#define BITP_EMAC_DMA_BMMODE_BLEN128          6            /* Axi Burst Length 128 */
#define BITP_EMAC_DMA_BMMODE_BLEN64           5            /* Axi Burst Length 64 */
#define BITP_EMAC_DMA_BMMODE_BLEN32           4            /* Axi Burst Length 32 */
#define BITP_EMAC_DMA_BMMODE_BLEN16           3            /* Axi Burst Legnth 16 */
#define BITP_EMAC_DMA_BMMODE_BLEN8            2            /* Axi Burst Length 8 */
#define BITP_EMAC_DMA_BMMODE_BLEN4            1            /* Axi Burst Length 4 */
#define BITP_EMAC_DMA_BMMODE_UNDEF            0            /* Axi Undefined Busrt Length */
#define BITM_EMAC_DMA_BMMODE_LPIEN           0x80000000    /* Enable Low power interface */
#define BITM_EMAC_DMA_BMMODE_UNLK            0x40000000    /* Unlock on magic packet or   remote wake up */
#define BITM_EMAC_DMA_BMMODE_WROSRLMT        0x00700000    /* Axi Maximum Write outstanding Request */
#define BITM_EMAC_DMA_BMMODE_RDOSRLMT        0x00070000    /* Axi Maximum Read outstanding request */
#define BITM_EMAC_DMA_BMMODE_AAL             0x00001000    /* Address Aligned Beats */
#define BITM_EMAC_DMA_BMMODE_BLEN256         0x00000080    /* Axi Burst Length 256 */
#define BITM_EMAC_DMA_BMMODE_BLEN128         0x00000040    /* Axi Burst Length 128 */
#define BITM_EMAC_DMA_BMMODE_BLEN64          0x00000020    /* Axi Burst Length 64 */
#define BITM_EMAC_DMA_BMMODE_BLEN32          0x00000010    /* Axi Burst Length 32 */
#define BITM_EMAC_DMA_BMMODE_BLEN16          0x00000008    /* Axi Burst Legnth 16 */
#define BITM_EMAC_DMA_BMMODE_BLEN8           0x00000004    /* Axi Burst Length 8 */
#define BITM_EMAC_DMA_BMMODE_BLEN4           0x00000002    /* Axi Burst Length 4 */
#define BITM_EMAC_DMA_BMMODE_UNDEF           0x00000001    /* Axi Undefined Busrt Length */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_DMA_BMSTAT                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_DMA_BMSTAT_BUSRD            1            /* Indicates that AXI master's read channel is active */
#define BITP_EMAC_DMA_BMSTAT_BUSWR            0            /* Indicates that AXI master's write channel is active */
#define BITM_EMAC_DMA_BMSTAT_BUSRD           0x00000002    /* Indicates that AXI master's read channel is active */
#define BITM_EMAC_DMA_BMSTAT_BUSWR           0x00000001    /* Indicates that AXI master's write channel is active */

/* ------------------------------------------------------------------------------------------------------------------------
        EMAC_HWFEAT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EMAC_HWFEAT_ALTDESC             24            /* Alternate Descriptor selected */
#define BITP_EMAC_HWFEAT_RXFIFO2048          19            /* RXFIFO not greater than 2048 */
#define BITP_EMAC_HWFEAT_RXIPC2              18            /* RX IP Checksum Type2 selected */
#define BITP_EMAC_HWFEAT_RXIPC1              17            /* RX IP Checksum Type1 not selected */
#define BITP_EMAC_HWFEAT_TXCHOFF             16            /* TX checksum offload selected */
#define BITP_EMAC_HWFEAT_IEEE1588ADV         13            /* IEEE 1588-2008 selected */
#define BITP_EMAC_HWFEAT_IEEE1588BASIC       12            /* IEEE 1588-2002 selected */
#define BITP_EMAC_HWFEAT_RMON                11            /* RMON module selected */
#define BITP_EMAC_HWFEAT_PMTMAGIC            10            /* PMT Magic Packet selected */
#define BITP_EMAC_HWFEAT_PMTREMOTE            9            /* PMT Remote wake up selected */
#define BITP_EMAC_HWFEAT_MDIO                 8            /* MDIO Selected */
#define BITP_EMAC_HWFEAT_PCS                  6            /* PCS not selected */
#define BITP_EMAC_HWFEAT_MMACADDR             5            /* Multiple Mac address not selected */
#define BITP_EMAC_HWFEAT_HASH                 4            /* Hash Filter Selected */
#define BITP_EMAC_HWFEAT_HD                   2            /* Half Duplex Selected */
#define BITP_EMAC_HWFEAT_MBPS1000             1            /* 1000 MBPS not selected */
#define BITP_EMAC_HWFEAT_MBPS10100            0            /* 10/100 MBPS selected */
#define BITM_EMAC_HWFEAT_ALTDESC             0x01000000    /* Alternate Descriptor selected */
#define BITM_EMAC_HWFEAT_RXFIFO2048          0x00080000    /* RXFIFO not greater than 2048 */
#define BITM_EMAC_HWFEAT_RXIPC2              0x00040000    /* RX IP Checksum Type2 selected */
#define BITM_EMAC_HWFEAT_RXIPC1              0x00020000    /* RX IP Checksum Type1 not selected */
#define BITM_EMAC_HWFEAT_TXCHOFF             0x00010000    /* TX checksum offload selected */
#define BITM_EMAC_HWFEAT_IEEE1588ADV         0x00002000    /* IEEE 1588-2008 selected */
#define BITM_EMAC_HWFEAT_IEEE1588BASIC       0x00001000    /* IEEE 1588-2002 selected */
#define BITM_EMAC_HWFEAT_RMON                0x00000800    /* RMON module selected */
#define BITM_EMAC_HWFEAT_PMTMAGIC            0x00000400    /* PMT Magic Packet selected */
#define BITM_EMAC_HWFEAT_PMTREMOTE           0x00000200    /* PMT Remote wake up selected */
#define BITM_EMAC_HWFEAT_MDIO                0x00000100    /* MDIO Selected */
#define BITM_EMAC_HWFEAT_PCS                 0x00000040    /* PCS not selected */
#define BITM_EMAC_HWFEAT_MMACADDR            0x00000020    /* Multiple Mac address not selected */
#define BITM_EMAC_HWFEAT_HASH                0x00000010    /* Hash Filter Selected */
#define BITM_EMAC_HWFEAT_HD                  0x00000004    /* Half Duplex Selected */
#define BITM_EMAC_HWFEAT_MBPS1000            0x00000002    /* 1000 MBPS not selected */
#define BITM_EMAC_HWFEAT_MBPS10100           0x00000001    /* 10/100 MBPS selected */

/* =========================
        SPORT Registers
   ========================= */

/* =========================
        SPORT0
   ========================= */
#define REG_SPORT0_CTL_A                0xFFC40000         /* SPORT0 'A' Control Register */
#define REG_SPORT0_DIV_A                0xFFC40004         /* SPORT0 'A' Clock and FS Divide Register */
#define REG_SPORT0_MCTL_A               0xFFC40008         /* SPORT0 'A' Multichannel Control Register */
#define REG_SPORT0_CS0_A                0xFFC4000C         /* SPORT0 'A' Multichannel Select Register (Channels 0-31) */
#define REG_SPORT0_CS1_A                0xFFC40010         /* SPORT0 'A' Multichannel Select Register (Channels 32-63) */
#define REG_SPORT0_CS2_A                0xFFC40014         /* SPORT0 'A' Multichannel Select Register (Channels 64-95) */
#define REG_SPORT0_CS3_A                0xFFC40018         /* SPORT0 'A' Multichannel Select Register (Channels 96-127) */
#define REG_SPORT0_CNT_A                0xFFC4001C         /* SPORT0 'A' Frame Sync And Clock Divisor Current Count */
#define REG_SPORT0_ERR_A                0xFFC40020         /* SPORT0 'A' Error Register */
#define REG_SPORT0_MSTAT_A              0xFFC40024         /* SPORT0 'A' Multichannel Mode Status Register */
#define REG_SPORT0_CTL2_A               0xFFC40028         /* SPORT0 'A' Control Register 2 */
#define REG_SPORT0_TXPRI_A              0xFFC40040         /* SPORT0 'A' Primary Channel Transmit Buffer Register */
#define REG_SPORT0_RXPRI_A              0xFFC40044         /* SPORT0 'A' Primary Channel Receive Buffer Register */
#define REG_SPORT0_TXSEC_A              0xFFC40048         /* SPORT0 'A' Secondary Channel Transmit Buffer Register */
#define REG_SPORT0_RXSEC_A              0xFFC4004C         /* SPORT0 'A' Secondary Channel Receive Buffer Register */
#define REG_SPORT0_CTL_B                0xFFC40080         /* SPORT0 'B' Control Register */
#define REG_SPORT0_DIV_B                0xFFC40084         /* SPORT0 'B' Clock and FS Divide Register */
#define REG_SPORT0_MCTL_B               0xFFC40088         /* SPORT0 'B' Multichannel Control Register */
#define REG_SPORT0_CS0_B                0xFFC4008C         /* SPORT0 'B' Multichannel Select Register (Channels 0-31) */
#define REG_SPORT0_CS1_B                0xFFC40090         /* SPORT0 'B' Multichannel Select Register (Channels 32-63) */
#define REG_SPORT0_CS2_B                0xFFC40094         /* SPORT0 'B' Multichannel Select Register (Channels 64-95) */
#define REG_SPORT0_CS3_B                0xFFC40098         /* SPORT0 'B' Multichannel Select Register (Channels 96-127) */
#define REG_SPORT0_CNT_B                0xFFC4009C         /* SPORT0 'B' Frame Sync And Clock Divisor Current Count */
#define REG_SPORT0_ERR_B                0xFFC400A0         /* SPORT0 'B' Error Register */
#define REG_SPORT0_MSTAT_B              0xFFC400A4         /* SPORT0 'B' Multichannel Mode Status Register */
#define REG_SPORT0_CTL2_B               0xFFC400A8         /* SPORT0 'B' Control Register 2 */
#define REG_SPORT0_TXPRI_B              0xFFC400C0         /* SPORT0 'B' Primary Channel Transmit Buffer Register */
#define REG_SPORT0_RXPRI_B              0xFFC400C4         /* SPORT0 'B' Primary Channel Receive Buffer Register */
#define REG_SPORT0_TXSEC_B              0xFFC400C8         /* SPORT0 'B' Secondary Channel Transmit Buffer Register */
#define REG_SPORT0_RXSEC_B              0xFFC400CC         /* SPORT0 'B' Secondary Channel Receive Buffer Register */

/* =========================
        SPORT1
   ========================= */
#define REG_SPORT1_CTL_A                0xFFC40100         /* SPORT1 'A' Control Register */
#define REG_SPORT1_DIV_A                0xFFC40104         /* SPORT1 'A' Clock and FS Divide Register */
#define REG_SPORT1_MCTL_A               0xFFC40108         /* SPORT1 'A' Multichannel Control Register */
#define REG_SPORT1_CS0_A                0xFFC4010C         /* SPORT1 'A' Multichannel Select Register (Channels 0-31) */
#define REG_SPORT1_CS1_A                0xFFC40110         /* SPORT1 'A' Multichannel Select Register (Channels 32-63) */
#define REG_SPORT1_CS2_A                0xFFC40114         /* SPORT1 'A' Multichannel Select Register (Channels 64-95) */
#define REG_SPORT1_CS3_A                0xFFC40118         /* SPORT1 'A' Multichannel Select Register (Channels 96-127) */
#define REG_SPORT1_CNT_A                0xFFC4011C         /* SPORT1 'A' Frame Sync And Clock Divisor Current Count */
#define REG_SPORT1_ERR_A                0xFFC40120         /* SPORT1 'A' Error Register */
#define REG_SPORT1_MSTAT_A              0xFFC40124         /* SPORT1 'A' Multichannel Mode Status Register */
#define REG_SPORT1_CTL2_A               0xFFC40128         /* SPORT1 'A' Control Register 2 */
#define REG_SPORT1_TXPRI_A              0xFFC40140         /* SPORT1 'A' Primary Channel Transmit Buffer Register */
#define REG_SPORT1_RXPRI_A              0xFFC40144         /* SPORT1 'A' Primary Channel Receive Buffer Register */
#define REG_SPORT1_TXSEC_A              0xFFC40148         /* SPORT1 'A' Secondary Channel Transmit Buffer Register */
#define REG_SPORT1_RXSEC_A              0xFFC4014C         /* SPORT1 'A' Secondary Channel Receive Buffer Register */
#define REG_SPORT1_CTL_B                0xFFC40180         /* SPORT1 'B' Control Register */
#define REG_SPORT1_DIV_B                0xFFC40184         /* SPORT1 'B' Clock and FS Divide Register */
#define REG_SPORT1_MCTL_B               0xFFC40188         /* SPORT1 'B' Multichannel Control Register */
#define REG_SPORT1_CS0_B                0xFFC4018C         /* SPORT1 'B' Multichannel Select Register (Channels 0-31) */
#define REG_SPORT1_CS1_B                0xFFC40190         /* SPORT1 'B' Multichannel Select Register (Channels 32-63) */
#define REG_SPORT1_CS2_B                0xFFC40194         /* SPORT1 'B' Multichannel Select Register (Channels 64-95) */
#define REG_SPORT1_CS3_B                0xFFC40198         /* SPORT1 'B' Multichannel Select Register (Channels 96-127) */
#define REG_SPORT1_CNT_B                0xFFC4019C         /* SPORT1 'B' Frame Sync And Clock Divisor Current Count */
#define REG_SPORT1_ERR_B                0xFFC401A0         /* SPORT1 'B' Error Register */
#define REG_SPORT1_MSTAT_B              0xFFC401A4         /* SPORT1 'B' Multichannel Mode Status Register */
#define REG_SPORT1_CTL2_B               0xFFC401A8         /* SPORT1 'B' Control Register 2 */
#define REG_SPORT1_TXPRI_B              0xFFC401C0         /* SPORT1 'B' Primary Channel Transmit Buffer Register */
#define REG_SPORT1_RXPRI_B              0xFFC401C4         /* SPORT1 'B' Primary Channel Receive Buffer Register */
#define REG_SPORT1_TXSEC_B              0xFFC401C8         /* SPORT1 'B' Secondary Channel Transmit Buffer Register */
#define REG_SPORT1_RXSEC_B              0xFFC401CC         /* SPORT1 'B' Secondary Channel Receive Buffer Register */

/* =========================
        SPORT2
   ========================= */
#define REG_SPORT2_CTL_A                0xFFC40200         /* SPORT2 'A' Control Register */
#define REG_SPORT2_DIV_A                0xFFC40204         /* SPORT2 'A' Clock and FS Divide Register */
#define REG_SPORT2_MCTL_A               0xFFC40208         /* SPORT2 'A' Multichannel Control Register */
#define REG_SPORT2_CS0_A                0xFFC4020C         /* SPORT2 'A' Multichannel Select Register (Channels 0-31) */
#define REG_SPORT2_CS1_A                0xFFC40210         /* SPORT2 'A' Multichannel Select Register (Channels 32-63) */
#define REG_SPORT2_CS2_A                0xFFC40214         /* SPORT2 'A' Multichannel Select Register (Channels 64-95) */
#define REG_SPORT2_CS3_A                0xFFC40218         /* SPORT2 'A' Multichannel Select Register (Channels 96-127) */
#define REG_SPORT2_CNT_A                0xFFC4021C         /* SPORT2 'A' Frame Sync And Clock Divisor Current Count */
#define REG_SPORT2_ERR_A                0xFFC40220         /* SPORT2 'A' Error Register */
#define REG_SPORT2_MSTAT_A              0xFFC40224         /* SPORT2 'A' Multichannel Mode Status Register */
#define REG_SPORT2_CTL2_A               0xFFC40228         /* SPORT2 'A' Control Register 2 */
#define REG_SPORT2_TXPRI_A              0xFFC40240         /* SPORT2 'A' Primary Channel Transmit Buffer Register */
#define REG_SPORT2_RXPRI_A              0xFFC40244         /* SPORT2 'A' Primary Channel Receive Buffer Register */
#define REG_SPORT2_TXSEC_A              0xFFC40248         /* SPORT2 'A' Secondary Channel Transmit Buffer Register */
#define REG_SPORT2_RXSEC_A              0xFFC4024C         /* SPORT2 'A' Secondary Channel Receive Buffer Register */
#define REG_SPORT2_CTL_B                0xFFC40280         /* SPORT2 'B' Control Register */
#define REG_SPORT2_DIV_B                0xFFC40284         /* SPORT2 'B' Clock and FS Divide Register */
#define REG_SPORT2_MCTL_B               0xFFC40288         /* SPORT2 'B' Multichannel Control Register */
#define REG_SPORT2_CS0_B                0xFFC4028C         /* SPORT2 'B' Multichannel Select Register (Channels 0-31) */
#define REG_SPORT2_CS1_B                0xFFC40290         /* SPORT2 'B' Multichannel Select Register (Channels 32-63) */
#define REG_SPORT2_CS2_B                0xFFC40294         /* SPORT2 'B' Multichannel Select Register (Channels 64-95) */
#define REG_SPORT2_CS3_B                0xFFC40298         /* SPORT2 'B' Multichannel Select Register (Channels 96-127) */
#define REG_SPORT2_CNT_B                0xFFC4029C         /* SPORT2 'B' Frame Sync And Clock Divisor Current Count */
#define REG_SPORT2_ERR_B                0xFFC402A0         /* SPORT2 'B' Error Register */
#define REG_SPORT2_MSTAT_B              0xFFC402A4         /* SPORT2 'B' Multichannel Mode Status Register */
#define REG_SPORT2_CTL2_B               0xFFC402A8         /* SPORT2 'B' Control Register 2 */
#define REG_SPORT2_TXPRI_B              0xFFC402C0         /* SPORT2 'B' Primary Channel Transmit Buffer Register */
#define REG_SPORT2_RXPRI_B              0xFFC402C4         /* SPORT2 'B' Primary Channel Receive Buffer Register */
#define REG_SPORT2_TXSEC_B              0xFFC402C8         /* SPORT2 'B' Secondary Channel Transmit Buffer Register */
#define REG_SPORT2_RXSEC_B              0xFFC402CC         /* SPORT2 'B' Secondary Channel Receive Buffer Register */

/* =========================
        SPORT
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_CTL_A                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_CTL_A_DXSPRI              30            /* Primary channel data buffer status */
#define BITP_SPORT_CTL_A_DERRPRI             29            /* Primary channel error status */
#define BITP_SPORT_CTL_A_DXSSEC              27            /* Secondary channel data buffer status */
#define BITP_SPORT_CTL_A_DERRSEC             26            /* Secondary channel error status */
#define BITP_SPORT_CTL_A_SPTRAN              25            /* Data direction control */
#define BITP_SPORT_CTL_A_SPENSEC             24            /* Enable secondary channel */
#define BITP_SPORT_CTL_A_GCLKEN              21            /* Gated clock mode select */
#define BITP_SPORT_CTL_A_TFIEN               20            /* Transmit finish interrrupt enable select */
#define BITP_SPORT_CTL_A_FSED                19            /* External frame sync edge select */
#define BITP_SPORT_CTL_A_RJUST               18            /* Right Justified mode select */
#define BITP_SPORT_CTL_A_LAFS                17            /* Late Transmit frame select */
#define BITP_SPORT_CTL_A_LFS                 16            /* Active low frame sync select */
#define BITP_SPORT_CTL_A_DIFS                15            /* Data-independent frame sync select */
#define BITP_SPORT_CTL_A_IFS                 14            /* Internal Frame Sync select */
#define BITP_SPORT_CTL_A_FSR                 13            /* Frame Sync required */
#define BITP_SPORT_CTL_A_CKRE                12            /* Clock rising edge select */
#define BITP_SPORT_CTL_A_OPMODE              11            /* Operation mode */
#define BITP_SPORT_CTL_A_ICLK                10            /* Internal Clock Select */
#define BITP_SPORT_CTL_A_PACK                 9            /* 16-bit to 32-bit packing enable */
#define BITP_SPORT_CTL_A_SLEN                 4            /* Serial Word length select */
#define BITP_SPORT_CTL_A_LSBF                 3            /* Serial bit endian select */
#define BITP_SPORT_CTL_A_DTYPE                1            /* Data type select */
#define BITP_SPORT_CTL_A_SPENPRI              0            /* Enable Primary Channel */

#define BITM_SPORT_CTL_A_DXSPRI              0xC0000000    /* Primary channel data buffer status */
#define ENUM_SPORT_CTL_A_PRM_EMPTY           0x00000000    /* DXSPRI: Empty */
#define ENUM_SPORT_CTL_A_PRM_PART_FULL       0x80000000    /* DXSPRI: Partially full */
#define ENUM_SPORT_CTL_A_PRM_FULL            0xC0000000    /* DXSPRI: Full */

#define BITM_SPORT_CTL_A_DERRPRI             0x20000000    /* Primary channel error status */
#define ENUM_SPORT_CTL_A_PRM_NO_ERR          0x00000000    /* DERRPRI: No error */
#define ENUM_SPORT_CTL_A_PRM_ERR             0x20000000    /* DERRPRI: TX underflow or RX overflow */

#define BITM_SPORT_CTL_A_DXSSEC              0x18000000    /* Secondary channel data buffer status */
#define ENUM_SPORT_CTL_A_SEC_EMPTY           0x00000000    /* DXSSEC: Empty */
#define ENUM_SPORT_CTL_A_SEC_PART_FULL       0x10000000    /* DXSSEC: Partially full */
#define ENUM_SPORT_CTL_A_SEC_FULL            0x18000000    /* DXSSEC: Full */

#define BITM_SPORT_CTL_A_DERRSEC             0x04000000    /* Secondary channel error status */
#define ENUM_SPORT_CTL_A_SEC_NO_ERR          0x00000000    /* DERRSEC: No error */
#define ENUM_SPORT_CTL_A_SEC_ERR             0x04000000    /* DERRSEC: TX underflow or RX overflow */

#define BITM_SPORT_CTL_A_SPTRAN              0x02000000    /* Data direction control */
#define ENUM_SPORT_CTL_A_RX                  0x00000000    /* SPTRAN: Receive */
#define ENUM_SPORT_CTL_A_TX                  0x02000000    /* SPTRAN: Transmit */

#define BITM_SPORT_CTL_A_SPENSEC             0x01000000    /* Enable secondary channel */
#define ENUM_SPORT_CTL_A_SECONDARY_DIS       0x00000000    /* SPENSEC: Disable */
#define ENUM_SPORT_CTL_A_SECONDARY_EN        0x01000000    /* SPENSEC: Enable */

#define BITM_SPORT_CTL_A_GCLKEN              0x00200000    /* Gated clock mode select */
#define ENUM_SPORT_CTL_A_GCLK_DIS            0x00000000    /* GCLKEN: Disable */
#define ENUM_SPORT_CTL_A_GCLK_EN             0x00200000    /* GCLKEN: Enable */

#define BITM_SPORT_CTL_A_TFIEN               0x00100000    /* Transmit finish interrrupt enable select */
#define ENUM_SPORT_CTL_A_TXFIN_DIS           0x00000000    /* TFIEN: Disable */
#define ENUM_SPORT_CTL_A_TXFIN_EN            0x00100000    /* TFIEN: Enable */

#define BITM_SPORT_CTL_A_FSED                0x00080000    /* External frame sync edge select */
#define ENUM_SPORT_CTL_A_LEVEL_FS            0x00000000    /* FSED: Level-sensitive detection for FS */
#define ENUM_SPORT_CTL_A_EDGE_FS             0x00080000    /* FSED: Edge-sensitive detection for FS */

#define BITM_SPORT_CTL_A_RJUST               0x00040000    /* Right Justified mode select */
#define ENUM_SPORT_CTL_A_RJUST_DIS           0x00000000    /* RJUST: Disable RJ mode */
#define ENUM_SPORT_CTL_A_RJUST_EN            0x00040000    /* RJUST: Enable RJ mode */

#define BITM_SPORT_CTL_A_LAFS                0x00020000    /* Late Transmit frame select */
#define ENUM_SPORT_CTL_A_EARLY_FS            0x00000000    /* LAFS: Early FS */
#define ENUM_SPORT_CTL_A_LATE_FS             0x00020000    /* LAFS: Late FS */

#define BITM_SPORT_CTL_A_LFS                 0x00010000    /* Active low frame sync select */
#define ENUM_SPORT_CTL_A_FS_LO               0x00000000    /* LFS: Active Low Frame Sync Select */
#define ENUM_SPORT_CTL_A_FS_HI               0x00010000    /* LFS: Active high Frame Sync Select */

#define BITM_SPORT_CTL_A_DIFS                0x00008000    /* Data-independent frame sync select */
#define ENUM_SPORT_CTL_A_DATA_DEP_FS         0x00000000    /* DIFS: Data-dependent FS */
#define ENUM_SPORT_CTL_A_DATA_INDP_FS        0x00008000    /* DIFS: Data-independent FS */

#define BITM_SPORT_CTL_A_IFS                 0x00004000    /* Internal Frame Sync select */
#define ENUM_SPORT_CTL_A_EXTERNAL_FS         0x00000000    /* IFS: External FS */
#define ENUM_SPORT_CTL_A_INTERNAL_FS         0x00004000    /* IFS: Internal FS */

#define BITM_SPORT_CTL_A_FSR                 0x00002000    /* Frame Sync required */
#define ENUM_SPORT_CTL_A_FS_NOT_REQ          0x00000000    /* FSR: Frame sync not required */
#define ENUM_SPORT_CTL_A_FS_REQ              0x00002000    /* FSR: Frame sync required */

#define BITM_SPORT_CTL_A_CKRE                0x00001000    /* Clock rising edge select */
#define ENUM_SPORT_CTL_A_CLK_FALL_EDGE       0x00000000    /* CKRE: Falling edge */
#define ENUM_SPORT_CTL_A_CLK_RISE_EDGE       0x00001000    /* CKRE: Rising edge */

#define BITM_SPORT_CTL_A_OPMODE              0x00000800    /* Operation mode */
#define ENUM_SPORT_CTL_A_SERIAL_MC_MODE      0x00000000    /* OPMODE: DSP serial/MCM mode */
#define ENUM_SPORT_CTL_A_I2S_MODE            0x00000800    /* OPMODE: Packed I2S, LJ sample pair mode */

#define BITM_SPORT_CTL_A_ICLK                0x00000400    /* Internal Clock Select */
#define ENUM_SPORT_CTL_A_EXTERNAL_CLK        0x00000000    /* ICLK: Select external clock */
#define ENUM_SPORT_CTL_A_INTERNAL_CLK        0x00000400    /* ICLK: Select internal clock */

#define BITM_SPORT_CTL_A_PACK                0x00000200    /* 16-bit to 32-bit packing enable */
#define ENUM_SPORT_CTL_A_PACK_DIS            0x00000000    /* PACK: Disable 16- to 32-bit word packing */
#define ENUM_SPORT_CTL_A_PACK_EN             0x00000200    /* PACK: Enable 16- to 32-bit word packing */
#define BITM_SPORT_CTL_A_SLEN                0x000001F0    /* Serial Word length select */

#define BITM_SPORT_CTL_A_LSBF                0x00000008    /* Serial bit endian select */
#define ENUM_SPORT_CTL_A_MSB_FIRST           0x00000000    /* LSBF: MSB sent/received first. Big Endian. */
#define ENUM_SPORT_CTL_A_LSB_FIRST           0x00000008    /* LSBF: LSB sent/received first. Little Endian */

#define BITM_SPORT_CTL_A_DTYPE               0x00000006    /* Data type select */
#define ENUM_SPORT_CTL_A_RJUSTIFY_ZFILL      0x00000000    /* DTYPE: MCM mode: Right-justify, zero-fill unused MSBs */
#define ENUM_SPORT_CTL_A_RJUSTIFY_SFILL      0x00000002    /* DTYPE: MCM mode: Right-justify, sign-extend unused MSBs */
#define ENUM_SPORT_CTL_A_USE_U_LAW           0x00000004    /* DTYPE: MCM mode: Compand using u-law */
#define ENUM_SPORT_CTL_A_USE_A_LAW           0x00000006    /* DTYPE: MCM mode: Compand using A-law */

#define BITM_SPORT_CTL_A_SPENPRI             0x00000001    /* Enable Primary Channel */
#define ENUM_SPORT_CTL_A_DIS                 0x00000000    /* SPENPRI: Disabled */
#define ENUM_SPORT_CTL_A_EN                  0x00000001    /* SPENPRI: Enabled */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_DIV_A                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_DIV_A_FSDIV               16            /* Frame sync divisor */
#define BITP_SPORT_DIV_A_CLKDIV               0            /* Clock divisor */
#define BITM_SPORT_DIV_A_FSDIV               0xFFFF0000    /* Frame sync divisor */
#define BITM_SPORT_DIV_A_CLKDIV              0x0000FFFF    /* Clock divisor */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_MCTL_A                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_MCTL_A_WOFFSET            16            /* Window offset size */
#define BITP_SPORT_MCTL_A_WSIZE               8            /* Number of multichannel slots */
#define BITP_SPORT_MCTL_A_MFD                 4            /* Multichannel frame delay */
#define BITP_SPORT_MCTL_A_MCPDE               2            /* Multichannel data packing select */
#define BITP_SPORT_MCTL_A_MCE                 0            /* Multichannel enable */
#define BITM_SPORT_MCTL_A_WOFFSET            0x03FF0000    /* Window offset size */
#define BITM_SPORT_MCTL_A_WSIZE              0x00007F00    /* Number of multichannel slots */
#define BITM_SPORT_MCTL_A_MFD                0x000000F0    /* Multichannel frame delay */

#define BITM_SPORT_MCTL_A_MCPDE              0x00000004    /* Multichannel data packing select */
#define ENUM_SPORT_MCTL_A_DPACK_DIS          0x00000000    /* MCPDE: Disable multichannel DMA data packing */
#define ENUM_SPORT_MCTL_A_DPACK_EN           0x00000004    /* MCPDE: Enable multichannel DMA data packing */

#define BITM_SPORT_MCTL_A_MCE                0x00000001    /* Multichannel enable */
#define ENUM_SPORT_MCTL_A_DIS                0x00000000    /* MCE: Disable */
#define ENUM_SPORT_MCTL_A_EN                 0x00000001    /* MCE: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_CNT_A                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_CNT_A_FSDIVCNT            16            /* Current state of frame div counter */
#define BITP_SPORT_CNT_A_CLKCNT               0            /* Current state of clk div counter */
#define BITM_SPORT_CNT_A_FSDIVCNT            0xFFFF0000    /* Current state of frame div counter */
#define BITM_SPORT_CNT_A_CLKCNT              0x0000FFFF    /* Current state of clk div counter */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_ERR_A                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_ERR_A_FSERRSTAT            6            /* Frame sync error status */
#define BITP_SPORT_ERR_A_DERRSSTAT            5            /* Secondary channel data error status */
#define BITP_SPORT_ERR_A_DERRPSTAT            4            /* Primary channel data error status */
#define BITP_SPORT_ERR_A_FSERRMSK             2            /* Frame sync error interrupt enable */
#define BITP_SPORT_ERR_A_DERRSMSK             1            /* Secondary channel data error interrupt enable */
#define BITP_SPORT_ERR_A_DERRPMSK             0            /* Primary channel data error interrupt enable */
#define BITM_SPORT_ERR_A_FSERRSTAT           0x00000040    /* Frame sync error status */
#define BITM_SPORT_ERR_A_DERRSSTAT           0x00000020    /* Secondary channel data error status */
#define BITM_SPORT_ERR_A_DERRPSTAT           0x00000010    /* Primary channel data error status */
#define BITM_SPORT_ERR_A_FSERRMSK            0x00000004    /* Frame sync error interrupt enable */
#define BITM_SPORT_ERR_A_DERRSMSK            0x00000002    /* Secondary channel data error interrupt enable */
#define BITM_SPORT_ERR_A_DERRPMSK            0x00000001    /* Primary channel data error interrupt enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_MSTAT_A                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_MSTAT_A_CURCHAN            0            /* Channel which is being serviced in the multichannel operation */
#define BITM_SPORT_MSTAT_A_CURCHAN           0x000003FF    /* Channel which is being serviced in the multichannel operation */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_CTL2_A                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_CTL2_A_LBSEL               2            /* Loopback Select */
#define BITP_SPORT_CTL2_A_CKMUXSEL            1            /* Clock MUX Select */
#define BITP_SPORT_CTL2_A_FSMUXSEL            0            /* Frame Sync MUX Select */

#define BITM_SPORT_CTL2_A_LBSEL              0x00000004    /* Loopback Select */
#define ENUM_SPORT_CTL2_A_LOOPBACK_DIS       0x00000000    /* LBSEL: Disable the loopback */
#define ENUM_SPORT_CTL2_A_LOOPBACK_EN        0x00000004    /* LBSEL: Enable the loopback. */

#define BITM_SPORT_CTL2_A_CKMUXSEL           0x00000002    /* Clock MUX Select */
#define ENUM_SPORT_CTL2_A_CLK_MUX_DIS        0x00000000    /* CKMUXSEL: Disable the clock muxing. */
#define ENUM_SPORT_CTL2_A_CLK_MUX_EN         0x00000002    /* CKMUXSEL: Enable the clock muxing. */

#define BITM_SPORT_CTL2_A_FSMUXSEL           0x00000001    /* Frame Sync MUX Select */
#define ENUM_SPORT_CTL2_A_FS_MUX_DIS         0x00000000    /* FSMUXSEL: Disable the frame sync muxing. */
#define ENUM_SPORT_CTL2_A_FS_MUX_EN          0x00000001    /* FSMUXSEL: Enable the frame sync muxing. */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_CTL_B                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_CTL_B_DXSPRI              30            /* Primary channel data buffer status */
#define BITP_SPORT_CTL_B_DERRPRI             29            /* Primary channel error status */
#define BITP_SPORT_CTL_B_DXSSEC              27            /* Secondary channel data buffer status */
#define BITP_SPORT_CTL_B_DERRSEC             26            /* Secondary channel error status */
#define BITP_SPORT_CTL_B_SPTRAN              25            /* Data direction control */
#define BITP_SPORT_CTL_B_SPENSEC             24            /* Enable secondary channel */
#define BITP_SPORT_CTL_B_GCLKEN              21            /* Gated clock mode select */
#define BITP_SPORT_CTL_B_TFIEN               20            /* Transmit finish interrrupt enable select */
#define BITP_SPORT_CTL_B_FSED                19            /* External frame sync edge select */
#define BITP_SPORT_CTL_B_RJUST               18            /* Right Justified mode select */
#define BITP_SPORT_CTL_B_LAFS                17            /* Late Transmit frame select */
#define BITP_SPORT_CTL_B_LFS                 16            /* Active low frame sync select */
#define BITP_SPORT_CTL_B_DIFS                15            /* Data-independent frame sync select */
#define BITP_SPORT_CTL_B_IFS                 14            /* Internal Frame Sync select */
#define BITP_SPORT_CTL_B_FSR                 13            /* Frame Sync required */
#define BITP_SPORT_CTL_B_CKRE                12            /* Clock rising edge select */
#define BITP_SPORT_CTL_B_OPMODE              11            /* Operation mode */
#define BITP_SPORT_CTL_B_ICLK                10            /* Internal Clock Select */
#define BITP_SPORT_CTL_B_PACK                 9            /* 16-bit to 32-bit packing enable */
#define BITP_SPORT_CTL_B_SLEN                 4            /* Serial Word length select */
#define BITP_SPORT_CTL_B_LSBF                 3            /* Serial bit endian select */
#define BITP_SPORT_CTL_B_DTYPE                1            /* Data type select */
#define BITP_SPORT_CTL_B_SPENPRI              0            /* Enable Primary Channel */

#define BITM_SPORT_CTL_B_DXSPRI              0xC0000000    /* Primary channel data buffer status */
#define ENUM_SPORT_CTL_B_PRM_EMPTY           0x00000000    /* DXSPRI: Empty */
#define ENUM_SPORT_CTL_B_RM_PART_FULL        0x80000000    /* DXSPRI: Partially full */
#define ENUM_SPORT_CTL_B_PRM_FULL            0xC0000000    /* DXSPRI: Full */

#define BITM_SPORT_CTL_B_DERRPRI             0x20000000    /* Primary channel error status */
#define ENUM_SPORT_CTL_B_PRM_NO_ERR          0x00000000    /* DERRPRI: No error */
#define ENUM_SPORT_CTL_B_PRM_ERR             0x20000000    /* DERRPRI: TX underflow or RX overflow */

#define BITM_SPORT_CTL_B_DXSSEC              0x18000000    /* Secondary channel data buffer status */
#define ENUM_SPORT_CTL_B_SEC_EMPTY           0x00000000    /* DXSSEC: Empty */
#define ENUM_SPORT_CTL_B_SEC_PART_FULL       0x10000000    /* DXSSEC: Partially full */
#define ENUM_SPORT_CTL_B_SEC_FULL            0x18000000    /* DXSSEC: Full */

#define BITM_SPORT_CTL_B_DERRSEC             0x04000000    /* Secondary channel error status */
#define ENUM_SPORT_CTL_B_SEC_NO_ERR          0x00000000    /* DERRSEC: No error */
#define ENUM_SPORT_CTL_B_SEC_ERR             0x04000000    /* DERRSEC: TX underflow or RX overflow */

#define BITM_SPORT_CTL_B_SPTRAN              0x02000000    /* Data direction control */
#define ENUM_SPORT_CTL_B_RX                  0x00000000    /* SPTRAN: Receive */
#define ENUM_SPORT_CTL_B_TX                  0x02000000    /* SPTRAN: Transmit */

#define BITM_SPORT_CTL_B_SPENSEC             0x01000000    /* Enable secondary channel */
#define ENUM_SPORT_CTL_B_SECONDARY_DIS       0x00000000    /* SPENSEC: Disable */
#define ENUM_SPORT_CTL_B_SECONDARY_EN        0x01000000    /* SPENSEC: Enable */

#define BITM_SPORT_CTL_B_GCLKEN              0x00200000    /* Gated clock mode select */
#define ENUM_SPORT_CTL_B_GCLK_DIS            0x00000000    /* GCLKEN: Disable */
#define ENUM_SPORT_CTL_B_GCLK_EN             0x00200000    /* GCLKEN: Enable */

#define BITM_SPORT_CTL_B_TFIEN               0x00100000    /* Transmit finish interrrupt enable select */
#define ENUM_SPORT_CTL_B_TXFIN_DIS           0x00000000    /* TFIEN: Disable */
#define ENUM_SPORT_CTL_B_TXFIN_EN            0x00100000    /* TFIEN: Enable */

#define BITM_SPORT_CTL_B_FSED                0x00080000    /* External frame sync edge select */
#define ENUM_SPORT_CTL_B_LEVEL_FS            0x00000000    /* FSED: Level-sensitive detection for FS */
#define ENUM_SPORT_CTL_B_EDGE_FS             0x00080000    /* FSED: Edge-sensitive detection for FS */

#define BITM_SPORT_CTL_B_RJUST               0x00040000    /* Right Justified mode select */
#define ENUM_SPORT_CTL_B_RJUST_DIS           0x00000000    /* RJUST: Disable RJ mode */
#define ENUM_SPORT_CTL_B_RJUST_EN            0x00040000    /* RJUST: Enable RJ mode */

#define BITM_SPORT_CTL_B_LAFS                0x00020000    /* Late Transmit frame select */
#define ENUM_SPORT_CTL_B_EARLY_FS            0x00000000    /* LAFS: Early FS */
#define ENUM_SPORT_CTL_B_LATE_FS             0x00020000    /* LAFS: Late FS */

#define BITM_SPORT_CTL_B_LFS                 0x00010000    /* Active low frame sync select */
#define ENUM_SPORT_CTL_B_FS_LO               0x00000000    /* LFS: Active low Frame Sync Select */
#define ENUM_SPORT_CTL_B_FS_HI               0x00010000    /* LFS: Active high Frame Sync Select */

#define BITM_SPORT_CTL_B_DIFS                0x00008000    /* Data-independent frame sync select */
#define ENUM_SPORT_CTL_B_DATA_DEP_FS         0x00000000    /* DIFS: Data-dependent FS */
#define ENUM_SPORT_CTL_B_DATA_INDP_FS        0x00008000    /* DIFS: Data-independent FS */

#define BITM_SPORT_CTL_B_IFS                 0x00004000    /* Internal Frame Sync select */
#define ENUM_SPORT_CTL_B_EXTERNAL_FS         0x00000000    /* IFS: External FS */
#define ENUM_SPORT_CTL_B_INTERNAL_FS         0x00004000    /* IFS: Internal FS */

#define BITM_SPORT_CTL_B_FSR                 0x00002000    /* Frame Sync required */
#define ENUM_SPORT_CTL_B_FS_NOT_REQ          0x00000000    /* FSR: Frame sync not required */
#define ENUM_SPORT_CTL_B_FS_REQ              0x00002000    /* FSR: Frame sync required */

#define BITM_SPORT_CTL_B_CKRE                0x00001000    /* Clock rising edge select */
#define ENUM_SPORT_CTL_B_CLK_FALL_EDGE       0x00000000    /* CKRE: Falling edge */
#define ENUM_SPORT_CTL_B_CLK_RISE_EDGE       0x00001000    /* CKRE: Rising edge */

#define BITM_SPORT_CTL_B_OPMODE              0x00000800    /* Operation mode */
#define ENUM_SPORT_CTL_B_SERIAL_MC_MODE      0x00000000    /* OPMODE: DSP serial/MCM mode */
#define ENUM_SPORT_CTL_B_I2S_MODE            0x00000800    /* OPMODE: Packed I2S, LJ sample pair mode */

#define BITM_SPORT_CTL_B_ICLK                0x00000400    /* Internal Clock Select */
#define ENUM_SPORT_CTL_B_EXTERNAL_CLK        0x00000000    /* ICLK: Select external clock */
#define ENUM_SPORT_CTL_B_INTERNAL_CLK        0x00000400    /* ICLK: Select internal clock */

#define BITM_SPORT_CTL_B_PACK                0x00000200    /* 16-bit to 32-bit packing enable */
#define ENUM_SPORT_CTL_B_PACK_DIS            0x00000000    /* PACK: Disable 16- to 32-bit word packing */
#define ENUM_SPORT_CTL_B_PACK_EN             0x00000200    /* PACK: Enable 16- to 32-bit word packing */
#define BITM_SPORT_CTL_B_SLEN                0x000001F0    /* Serial Word length select */

#define BITM_SPORT_CTL_B_LSBF                0x00000008    /* Serial bit endian select */
#define ENUM_SPORT_CTL_B_MSB_FIRST           0x00000000    /* LSBF: MSB first */
#define ENUM_SPORT_CTL_B_LSB_FIRST           0x00000008    /* LSBF: LSB first */

#define BITM_SPORT_CTL_B_DTYPE               0x00000006    /* Data type select */
#define ENUM_SPORT_CTL_B_RJUSTIFY_ZFILL      0x00000000    /* DTYPE: MCM mode: Right-justify, zero-fill unused MSBs */
#define ENUM_SPORT_CTL_B_RJUSTIFY_SFILL      0x00000002    /* DTYPE: MCM mode: Right-justify, sign-extend unused MSBs */
#define ENUM_SPORT_CTL_B_USE_U_LAW           0x00000004    /* DTYPE: MCM mode: Compand using u-law */
#define ENUM_SPORT_CTL_B_USE_A_LAW           0x00000006    /* DTYPE: MCM mode: Compand using A-law */

#define BITM_SPORT_CTL_B_SPENPRI             0x00000001    /* Enable Primary Channel */
#define ENUM_SPORT_CTL_B_DIS                 0x00000000    /* SPENPRI: Disabled */
#define ENUM_SPORT_CTL_B_EN                  0x00000001    /* SPENPRI: Enabled */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_DIV_B                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_DIV_B_FSDIV               16            /* Frame sync divisor */
#define BITP_SPORT_DIV_B_CLKDIV               0            /* Clock divisor */
#define BITM_SPORT_DIV_B_FSDIV               0xFFFF0000    /* Frame sync divisor */
#define BITM_SPORT_DIV_B_CLKDIV              0x0000FFFF    /* Clock divisor */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_MCTL_B                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_MCTL_B_WOFFSET            16            /* Window offset size */
#define BITP_SPORT_MCTL_B_WSIZE               8            /* Number of multichannel slots */
#define BITP_SPORT_MCTL_B_MFD                 4            /* Multichannel frame delay */
#define BITP_SPORT_MCTL_B_MCPDE               2            /* Multichannel data packing select */
#define BITP_SPORT_MCTL_B_MCE                 0            /* Multichannel enable */
#define BITM_SPORT_MCTL_B_WOFFSET            0x03FF0000    /* Window offset size */
#define BITM_SPORT_MCTL_B_WSIZE              0x00007F00    /* Number of multichannel slots */
#define BITM_SPORT_MCTL_B_MFD                0x000000F0    /* Multichannel frame delay */

#define BITM_SPORT_MCTL_B_MCPDE              0x00000004    /* Multichannel data packing select */
#define ENUM_SPORT_MCTL_B_DPACK_DIS          0x00000000    /* MCPDE: Disable multichannel DMA data packing */
#define ENUM_SPORT_MCTL_B_DPACK_EN           0x00000004    /* MCPDE: Enable multichannel DMA data packing */

#define BITM_SPORT_MCTL_B_MCE                0x00000001    /* Multichannel enable */
#define ENUM_SPORT_MCTL_B_DIS                0x00000000    /* MCE: Disable */
#define ENUM_SPORT_MCTL_B_EN                 0x00000001    /* MCE: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_CNT_B                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_CNT_B_FSDIVCNT            16            /* Current state of frame div counter */
#define BITP_SPORT_CNT_B_CLKCNT               0            /* Current state of clk div counter */
#define BITM_SPORT_CNT_B_FSDIVCNT            0xFFFF0000    /* Current state of frame div counter */
#define BITM_SPORT_CNT_B_CLKCNT              0x0000FFFF    /* Current state of clk div counter */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_ERR_B                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_ERR_B_FSERRSTAT            6            /* Frame sync error status */
#define BITP_SPORT_ERR_B_DERRSSTAT            5            /* Secondary channel data error status */
#define BITP_SPORT_ERR_B_DERRPSTAT            4            /* Primary channel data error status */
#define BITP_SPORT_ERR_B_FSERRMSK             2            /* Frame sync error interrupt enable */
#define BITP_SPORT_ERR_B_DERRSMSK             1            /* Secondary channel data error interrupt enable */
#define BITP_SPORT_ERR_B_DERRPMSK             0            /* Primary channel data error interrupt enable */
#define BITM_SPORT_ERR_B_FSERRSTAT           0x00000040    /* Frame sync error status */
#define BITM_SPORT_ERR_B_DERRSSTAT           0x00000020    /* Secondary channel data error status */
#define BITM_SPORT_ERR_B_DERRPSTAT           0x00000010    /* Primary channel data error status */
#define BITM_SPORT_ERR_B_FSERRMSK            0x00000004    /* Frame sync error interrupt enable */
#define BITM_SPORT_ERR_B_DERRSMSK            0x00000002    /* Secondary channel data error interrupt enable */
#define BITM_SPORT_ERR_B_DERRPMSK            0x00000001    /* Primary channel data error interrupt enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_MSTAT_B                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_MSTAT_B_CURCHAN            0            /* Channel which is being serviced in the multichannel operation */
#define BITM_SPORT_MSTAT_B_CURCHAN           0x000003FF    /* Channel which is being serviced in the multichannel operation */

/* ------------------------------------------------------------------------------------------------------------------------
        SPORT_CTL2_B                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPORT_CTL2_B_LBSEL               2            /* Loopback Select */
#define BITP_SPORT_CTL2_B_CKMUXSEL            1            /* Clock MUX Select */
#define BITP_SPORT_CTL2_B_FSMUXSEL            0            /* Frame Sync MUX Select */

#define BITM_SPORT_CTL2_B_LBSEL              0x00000004    /* Loopback Select */
#define ENUM_SPORT_CTL2_B_LOOPBACK_DIS       0x00000000    /* LBSEL: Disable the loopback. */
#define ENUM_SPORT_CTL2_B_LOOPBACK_EN        0x00000004    /* LBSEL: Enable the loopback. */

#define BITM_SPORT_CTL2_B_CKMUXSEL           0x00000002    /* Clock MUX Select */
#define ENUM_SPORT_CTL2_B_CLK_MUX_DIS        0x00000000    /* CKMUXSEL: Disable the clock  muxing. */
#define ENUM_SPORT_CTL2_B_CLK_MUX_EN         0x00000002    /* CKMUXSEL: Enable the clock muxing. */

#define BITM_SPORT_CTL2_B_FSMUXSEL           0x00000001    /* Frame Sync MUX Select */
#define ENUM_SPORT_CTL2_B_FS_MUX_DIS         0x00000000    /* FSMUXSEL: Disable the frame sync muxing. */
#define ENUM_SPORT_CTL2_B_FS_MUX_EN          0x00000001    /* FSMUXSEL: Enable the frame sync muxing. */

/* =========================
        SPI Registers
   ========================= */

/* =========================
        SPI0
   ========================= */
#define REG_SPI0_CTL                    0xFFC40404         /* SPI0 Control Register */
#define REG_SPI0_RXCTL                  0xFFC40408         /* SPI0 RX Control Register */
#define REG_SPI0_TXCTL                  0xFFC4040C         /* SPI0 TX Control Register */
#define REG_SPI0_CLK                    0xFFC40410         /* SPI0 Clock Rate Register */
#define REG_SPI0_DLY                    0xFFC40414         /* SPI0 Delay Register */
#define REG_SPI0_SLVSEL                 0xFFC40418         /* SPI0 Slave Select Register */
#define REG_SPI0_RWC                    0xFFC4041C         /* SPI0 Received Word-Count Register */
#define REG_SPI0_RWCR                   0xFFC40420         /* SPI0 Received Word-Count Reload Register */
#define REG_SPI0_TWC                    0xFFC40424         /* SPI0 Transmitted Word-Count Register */
#define REG_SPI0_TWCR                   0xFFC40428         /* SPI0 Transmitted Word-Count Reload Register */
#define REG_SPI0_IMSK                   0xFFC40430         /* SPI0 Interrupt Mask Register */
#define REG_SPI0_IMSK_CLR               0xFFC40434         /* SPI0 Interrupt Mask Clear Register */
#define REG_SPI0_IMSK_SET               0xFFC40438         /* SPI0 Interrupt Mask Set Register */
#define REG_SPI0_STAT                   0xFFC40440         /* SPI0 Status Register */
#define REG_SPI0_ILAT                   0xFFC40444         /* SPI0 Masked Interrupt Condition Register */
#define REG_SPI0_ILAT_CLR               0xFFC40448         /* SPI0 Masked Interrupt Clear Register */
#define REG_SPI0_RFIFO                  0xFFC40450         /* SPI0 Receive FIFO Data Register */
#define REG_SPI0_TFIFO                  0xFFC40458         /* SPI0 Transmit FIFO Data Register */

/* =========================
        SPI1
   ========================= */
#define REG_SPI1_CTL                    0xFFC40504         /* SPI1 Control Register */
#define REG_SPI1_RXCTL                  0xFFC40508         /* SPI1 RX Control Register */
#define REG_SPI1_TXCTL                  0xFFC4050C         /* SPI1 TX Control Register */
#define REG_SPI1_CLK                    0xFFC40510         /* SPI1 Clock Rate Register */
#define REG_SPI1_DLY                    0xFFC40514         /* SPI1 Delay Register */
#define REG_SPI1_SLVSEL                 0xFFC40518         /* SPI1 Slave Select Register */
#define REG_SPI1_RWC                    0xFFC4051C         /* SPI1 Received Word-Count Register */
#define REG_SPI1_RWCR                   0xFFC40520         /* SPI1 Received Word-Count Reload Register */
#define REG_SPI1_TWC                    0xFFC40524         /* SPI1 Transmitted Word-Count Register */
#define REG_SPI1_TWCR                   0xFFC40528         /* SPI1 Transmitted Word-Count Reload Register */
#define REG_SPI1_IMSK                   0xFFC40530         /* SPI1 Interrupt Mask Register */
#define REG_SPI1_IMSK_CLR               0xFFC40534         /* SPI1 Interrupt Mask Clear Register */
#define REG_SPI1_IMSK_SET               0xFFC40538         /* SPI1 Interrupt Mask Set Register */
#define REG_SPI1_STAT                   0xFFC40540         /* SPI1 Status Register */
#define REG_SPI1_ILAT                   0xFFC40544         /* SPI1 Masked Interrupt Condition Register */
#define REG_SPI1_ILAT_CLR               0xFFC40548         /* SPI1 Masked Interrupt Clear Register */
#define REG_SPI1_RFIFO                  0xFFC40550         /* SPI1 Receive FIFO Data Register */
#define REG_SPI1_TFIFO                  0xFFC40558         /* SPI1 Transmit FIFO Data Register */

/* =========================
        SPI
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SPI_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_CTL_PTMM                    25            /* PTM Mode Select */
#define BITP_SPI_CTL_PTME                    24            /* Pipeline Transfer Mode (PTM) Enable */
#define BITP_SPI_CTL_SOSI                    22            /* Start on MOSI */
#define BITP_SPI_CTL_MIOM                    20            /* Multiple I/O Mode */
#define BITP_SPI_CTL_FMODE                   18            /* Fast-mode Enable */
#define BITP_SPI_CTL_FCWM                    16            /* Flow-Control Water-Mark */
#define BITP_SPI_CTL_FCPL                    15            /* Flow-Control Polarity */
#define BITP_SPI_CTL_FCCH                    14            /* Flow-Control Channel Selection */
#define BITP_SPI_CTL_FCEN                    13            /* Flow-Control Enable */
#define BITP_SPI_CTL_LSBF                    12            /* LSB First */
#define BITP_SPI_CTL_SIZE                     9            /* Word Transfer Size */
#define BITP_SPI_CTL_EMISO                    8            /* Enable MISO */
#define BITP_SPI_CTL_SELST                    7            /* Slave Select Polarity in-between transfers */
#define BITP_SPI_CTL_ASSEL                    6            /* Slave Select Pin Control */
#define BITP_SPI_CTL_CPOL                     5            /* Clock Polarity */
#define BITP_SPI_CTL_CPHA                     4            /* Clock Phase */
#define BITP_SPI_CTL_ODM                      3            /* Open Drain Mode */
#define BITP_SPI_CTL_PSSE                     2            /* Slave Select Enable and controls modf error in master mode */
#define BITP_SPI_CTL_MSTR                     1            /* Master/Slave */
#define BITP_SPI_CTL_EN                       0            /* Enable */

#define BITM_SPI_CTL_PTMM                    0x02000000    /* PTM Mode Select */
#define ENUM_SPI_CTL_PTM0                    0x00000000    /* PTMM: Mode 0 */
#define ENUM_SPI_CTL_PTM3                    0x02000000    /* PTMM: Mode 3 */

#define BITM_SPI_CTL_PTME                    0x01000000    /* Pipeline Transfer Mode (PTM) Enable */
#define ENUM_SPI_CTL_PIPE_DIS                0x00000000    /* PTME: Disable */
#define ENUM_SPI_CTL_PIPE_EN                 0x01000000    /* PTME: Enable */

#define BITM_SPI_CTL_SOSI                    0x00400000    /* Start on MOSI */
#define ENUM_SPI_CTL_STMISO                  0x00000000    /* SOSI: Start on MISO (DUAL mode) or SPIQ3 (QUAD mode) */
#define ENUM_SPI_CTL_STMOSI                  0x00400000    /* SOSI: Start on MOSI */

#define BITM_SPI_CTL_MIOM                    0x00300000    /* Multiple I/O Mode */
#define ENUM_SPI_CTL_MIO_DIS                 0x00000000    /* MIOM: Disable */
#define ENUM_SPI_CTL_MIO_DUAL                0x00100000    /* MIOM: Enable DIOM (Dual I/O Mode) */
#define ENUM_SPI_CTL_MIO_QUAD                0x00200000    /* MIOM: Enable QUAD (Quad SPI Mode) */

#define BITM_SPI_CTL_FMODE                   0x00040000    /* Fast-mode Enable */
#define ENUM_SPI_CTL_FAST_DIS                0x00000000    /* FMODE: Disable */
#define ENUM_SPI_CTL_FAST_EN                 0x00040000    /* FMODE: Enable */

#define BITM_SPI_CTL_FCWM                    0x00030000    /* Flow-Control Water-Mark */
#define ENUM_SPI_CTL_FIFO0                   0x00000000    /* FCWM: TFIFO empty or RFIFO Full */
#define ENUM_SPI_CTL_FIFO1                   0x00010000    /* FCWM: TFIFO 75% or more empty or RFIFO 75% or more full */
#define ENUM_SPI_CTL_FIFO2                   0x00020000    /* FCWM: TFIFO 50% or more empty or RFIFO 50% or more full */

#define BITM_SPI_CTL_FCPL                    0x00008000    /* Flow-Control Polarity */
#define ENUM_SPI_CTL_FLOW_LO                 0x00000000    /* FCPL: Active-low */
#define ENUM_SPI_CTL_FLOW_HI                 0x00008000    /* FCPL: Active-high */

#define BITM_SPI_CTL_FCCH                    0x00004000    /* Flow-Control Channel Selection */
#define ENUM_SPI_CTL_FLOW_RX                 0x00000000    /* FCCH: Flow-control on RX buffer */
#define ENUM_SPI_CTL_FLOW_TX                 0x00004000    /* FCCH: Flow-control on TX buffer */

#define BITM_SPI_CTL_FCEN                    0x00002000    /* Flow-Control Enable */
#define ENUM_SPI_CTL_FLOW_DIS                0x00000000    /* FCEN: Flow-control disabled */
#define ENUM_SPI_CTL_FLOW_EN                 0x00002000    /* FCEN: Flow-control enabled */

#define BITM_SPI_CTL_LSBF                    0x00001000    /* LSB First */
#define ENUM_SPI_CTL_MSB_FIRST               0x00000000    /* LSBF: MSB sent/received first */
#define ENUM_SPI_CTL_LSB_FIRST               0x00001000    /* LSBF: LSB sent/received first */

#define BITM_SPI_CTL_SIZE                    0x00000600    /* Word Transfer Size */
#define ENUM_SPI_CTL_SIZE08                  0x00000000    /* SIZE: 8 bits */
#define ENUM_SPI_CTL_SIZE16                  0x00000200    /* SIZE: 16 bits */
#define ENUM_SPI_CTL_SIZE32                  0x00000400    /* SIZE: 32 bits */

#define BITM_SPI_CTL_EMISO                   0x00000100    /* Enable MISO */
#define ENUM_SPI_CTL_MISO_DIS                0x00000000    /* EMISO: MISO Disable */
#define ENUM_SPI_CTL_MISO_EN                 0x00000100    /* EMISO: MISO Enable */

#define BITM_SPI_CTL_SELST                   0x00000080    /* Slave Select Polarity in-between transfers */
#define ENUM_SPI_CTL_DEASSRT_SSEL            0x00000000    /* SELST: De-asserted (one) */
#define ENUM_SPI_CTL_ASSRT_SSEL              0x00000080    /* SELST: Asserted (zero) */

#define BITM_SPI_CTL_ASSEL                   0x00000040    /* Slave Select Pin Control */
#define ENUM_SPI_CTL_SW_SSEL                 0x00000000    /* ASSEL: Slave select pin controlled by software */
#define ENUM_SPI_CTL_HW_SSEL                 0x00000040    /* ASSEL: Slave select pin controlled by hardware */

#define BITM_SPI_CTL_CPOL                    0x00000020    /* Clock Polarity */
#define ENUM_SPI_CTL_SCKHI                   0x00000000    /* CPOL: Active High SCK */
#define ENUM_SPI_CTL_SCKLO                   0x00000020    /* CPOL: Active Low SCK */

#define BITM_SPI_CTL_CPHA                    0x00000010    /* Clock Phase */
#define ENUM_SPI_CTL_SCKMID                  0x00000000    /* CPHA: SCK toggles from middle of the first data bit */
#define ENUM_SPI_CTL_SCKBEG                  0x00000010    /* CPHA: SCK toggles from beginning of the first data bit */

#define BITM_SPI_CTL_ODM                     0x00000008    /* Open Drain Mode */
#define ENUM_SPI_CTL_ODM_DIS                 0x00000000    /* ODM: Disable */
#define ENUM_SPI_CTL_ODM_EN                  0x00000008    /* ODM: Enable */

#define BITM_SPI_CTL_PSSE                    0x00000004    /* Slave Select Enable and controls modf error in master mode */
#define ENUM_SPI_CTL_PSSE_DIS                0x00000000    /* PSSE: Disable */
#define ENUM_SPI_CTL_PSSE_EN                 0x00000004    /* PSSE: Enable */

#define BITM_SPI_CTL_MSTR                    0x00000002    /* Master/Slave */
#define ENUM_SPI_CTL_SLAVE                   0x00000000    /* MSTR: Sets SPI to behave as a slave */
#define ENUM_SPI_CTL_MASTER                  0x00000002    /* MSTR: Sets SPI to behave as a master */

#define BITM_SPI_CTL_EN                      0x00000001    /* Enable */
#define ENUM_SPI_CTL_DIS                     0x00000000    /* EN: Disable SPI module */
#define ENUM_SPI_CTL_EN                      0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_RXCTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_RXCTL_RUWM                  16            /* FIFO Urgent Water-Mark */
#define BITP_SPI_RXCTL_RRWM                  12            /* FIFO Regular Water-Mark */
#define BITP_SPI_RXCTL_RDO                    8            /* Receive Data Over-Run */
#define BITP_SPI_RXCTL_RDR                    4            /* Receive Data Request */
#define BITP_SPI_RXCTL_RWCEN                  3            /* Receive Word Counter Enable */
#define BITP_SPI_RXCTL_RTI                    2            /* Receive Transfer Initiate */
#define BITP_SPI_RXCTL_REN                    0            /* Receive Channel Enable */

#define BITM_SPI_RXCTL_RUWM                  0x00070000    /* FIFO Urgent Water-Mark */
#define ENUM_SPI_RXCTL_UWM_DIS               0x00000000    /* RUWM: Disabled */
#define ENUM_SPI_RXCTL_UWM_25                0x00010000    /* RUWM: RFIFO 25% full */
#define ENUM_SPI_RXCTL_UWM_50                0x00020000    /* RUWM: RFIFO 50% full */
#define ENUM_SPI_RXCTL_UWM_75                0x00030000    /* RUWM: RFIFO 75% full */
#define ENUM_SPI_RXCTL_UWM_FULL              0x00040000    /* RUWM: RFIFO full */

#define BITM_SPI_RXCTL_RRWM                  0x00003000    /* FIFO Regular Water-Mark */
#define ENUM_SPI_RXCTL_RWM_0                 0x00000000    /* RRWM: RFIFO Empty */
#define ENUM_SPI_RXCTL_RWM_25                0x00001000    /* RRWM: RFIFO 25% full */
#define ENUM_SPI_RXCTL_RWM_50                0x00002000    /* RRWM: RFIFO 50% full */
#define ENUM_SPI_RXCTL_RWM_75                0x00003000    /* RRWM: RFIFO 75% full */

#define BITM_SPI_RXCTL_RDO                   0x00000100    /* Receive Data Over-Run */
#define ENUM_SPI_RXCTL_DISCARD               0x00000000    /* RDO: Discard incoming data if SPI_RFIFO is full */
#define ENUM_SPI_RXCTL_OVERWRITE             0x00000100    /* RDO: Overwrite old data if SPI_RFIFO is full */

#define BITM_SPI_RXCTL_RDR                   0x00000070    /* Receive Data Request */
#define ENUM_SPI_RXCTL_RDR_DIS               0x00000000    /* RDR: Disabled */
#define ENUM_SPI_RXCTL_RDR_NE                0x00000010    /* RDR: RFIFO not empty */
#define ENUM_SPI_RXCTL_RDR_25                0x00000020    /* RDR: RFIFO 25% full */
#define ENUM_SPI_RXCTL_RDR_50                0x00000030    /* RDR: RFIFO 50% full */
#define ENUM_SPI_RXCTL_RDR_75                0x00000040    /* RDR: RFIFO 75% full */
#define ENUM_SPI_RXCTL_RDR_FULL              0x00000050    /* RDR: RFIFO full */

#define BITM_SPI_RXCTL_RWCEN                 0x00000008    /* Receive Word Counter Enable */
#define ENUM_SPI_RXCTL_RWC_DIS               0x00000000    /* RWCEN: Disable */
#define ENUM_SPI_RXCTL_RWC_EN                0x00000008    /* RWCEN: Enable */

#define BITM_SPI_RXCTL_RTI                   0x00000004    /* Receive Transfer Initiate */
#define ENUM_SPI_RXCTL_RTI_DIS               0x00000000    /* RTI: Disable */
#define ENUM_SPI_RXCTL_RTI_EN                0x00000004    /* RTI: Enable */

#define BITM_SPI_RXCTL_REN                   0x00000001    /* Receive Channel Enable */
#define ENUM_SPI_RXCTL_RX_DIS                0x00000000    /* REN: Disable */
#define ENUM_SPI_RXCTL_RX_EN                 0x00000001    /* REN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_TXCTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_TXCTL_TUWM                  16            /* FIFO Urgent Water-Mark */
#define BITP_SPI_TXCTL_TRWM                  12            /* FIFO Regular Water-Mark */
#define BITP_SPI_TXCTL_TDU                    8            /* Transmit Data Under-Run */
#define BITP_SPI_TXCTL_TDR                    4            /* Transmit Data Request */
#define BITP_SPI_TXCTL_TWCEN                  3            /* Transmit Word Counter Enable */
#define BITP_SPI_TXCTL_TTI                    2            /* Transmit Transfer Initiate */
#define BITP_SPI_TXCTL_TEN                    0            /* Transmit Channel Enable */

#define BITM_SPI_TXCTL_TUWM                  0x00070000    /* FIFO Urgent Water-Mark */
#define ENUM_SPI_TXCTL_UWM_DIS               0x00000000    /* TUWM: Disabled */
#define ENUM_SPI_TXCTL_UWM_25                0x00010000    /* TUWM: TFIFO 25% empty */
#define ENUM_SPI_TXCTL_UWM_50                0x00020000    /* TUWM: TFIFO 50% empty */
#define ENUM_SPI_TXCTL_UWM_75                0x00030000    /* TUWM: TFIFO 75% empty */
#define ENUM_SPI_TXCTL_UWM_EMPTY             0x00040000    /* TUWM: TFIFO empty */

#define BITM_SPI_TXCTL_TRWM                  0x00003000    /* FIFO Regular Water-Mark */
#define ENUM_SPI_TXCTL_RWM_FULL              0x00000000    /* TRWM: TFIFO full */
#define ENUM_SPI_TXCTL_RWM_25                0x00001000    /* TRWM: TFIFO 25% empty */
#define ENUM_SPI_TXCTL_RWM_50                0x00002000    /* TRWM: TFIFO 50% empty */
#define ENUM_SPI_TXCTL_RWM_75                0x00003000    /* TRWM: TFIFO 75% empty */

#define BITM_SPI_TXCTL_TDU                   0x00000100    /* Transmit Data Under-Run */
#define ENUM_SPI_TXCTL_LASTWD                0x00000000    /* TDU: Send last word when SPI_TFIFO is empty */
#define ENUM_SPI_TXCTL_ZERO                  0x00000100    /* TDU: Send zero when SPI_TFIFO is empty */

#define BITM_SPI_TXCTL_TDR                   0x00000070    /* Transmit Data Request */
#define ENUM_SPI_TXCTL_TDR_DIS               0x00000000    /* TDR: Disabled */
#define ENUM_SPI_TXCTL_TDR_NF                0x00000010    /* TDR: TFIFO not full */
#define ENUM_SPI_TXCTL_TDR_25                0x00000020    /* TDR: TFIFO 25% empty */
#define ENUM_SPI_TXCTL_TDR_50                0x00000030    /* TDR: TFIFO 50% empty */
#define ENUM_SPI_TXCTL_TDR_75                0x00000040    /* TDR: TFIFO 75% empty */
#define ENUM_SPI_TXCTL_TDR_EMPTY             0x00000050    /* TDR: TFIFO empty */

#define BITM_SPI_TXCTL_TWCEN                 0x00000008    /* Transmit Word Counter Enable */
#define ENUM_SPI_TXCTL_TWC_DIS               0x00000000    /* TWCEN: Disable */
#define ENUM_SPI_TXCTL_TWC_EN                0x00000008    /* TWCEN: Enable */

#define BITM_SPI_TXCTL_TTI                   0x00000004    /* Transmit Transfer Initiate */
#define ENUM_SPI_TXCTL_TTI_DIS               0x00000000    /* TTI: Disable */
#define ENUM_SPI_TXCTL_TTI_EN                0x00000004    /* TTI: Enable */

#define BITM_SPI_TXCTL_TEN                   0x00000001    /* Transmit Channel Enable */
#define ENUM_SPI_TXCTL_TX_DIS                0x00000000    /* TEN: Disable */
#define ENUM_SPI_TXCTL_TX_EN                 0x00000001    /* TEN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_CLK                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_CLK_BAUD                     0            /* Baud Rate */
#define BITM_SPI_CLK_BAUD                    0x0000FFFF    /* Baud Rate */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_DLY                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_DLY_LAGX                     9            /* Extended (1 SCK) LAG control */
#define BITP_SPI_DLY_LEADX                    8            /* Extended (SCK) LEAD Control */
#define BITP_SPI_DLY_STOP                     0            /* Transfer delay time in multiples of SCK period */
#define BITM_SPI_DLY_LAGX                    0x00000200    /* Extended (1 SCK) LAG control */
#define BITM_SPI_DLY_LEADX                   0x00000100    /* Extended (SCK) LEAD Control */
#define BITM_SPI_DLY_STOP                    0x000000FF    /* Transfer delay time in multiples of SCK period */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_SLVSEL                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_SLVSEL_SSEL7                15            /* SPISSEL7 Value */
#define BITP_SPI_SLVSEL_SSEL6                14            /* SPISSEL6 Value */
#define BITP_SPI_SLVSEL_SSEL5                13            /* SPISSEL5 Value */
#define BITP_SPI_SLVSEL_SSEL4                12            /* SPISSEL4 Value */
#define BITP_SPI_SLVSEL_SSEL3                11            /* SPISSEL3 Value */
#define BITP_SPI_SLVSEL_SSEL2                10            /* SPISSEL2 Value */
#define BITP_SPI_SLVSEL_SSEL1                 9            /* SPISSEL1 Value */
#define BITP_SPI_SLVSEL_SSE7                  7            /* SPISSEL7 Enable */
#define BITP_SPI_SLVSEL_SSE6                  6            /* SPISSEL6 Enable */
#define BITP_SPI_SLVSEL_SSE5                  5            /* SPISSEL5 Enable */
#define BITP_SPI_SLVSEL_SSE4                  4            /* SPISSEL4 Enable */
#define BITP_SPI_SLVSEL_SSE3                  3            /* SPISSEL3 Enable */
#define BITP_SPI_SLVSEL_SSE2                  2            /* SPISSEL2 Enable */
#define BITP_SPI_SLVSEL_SSE1                  1            /* SPISSEL1 Enable */

#define BITM_SPI_SLVSEL_SSEL7                0x00008000    /* SPISSEL7 Value */
#define ENUM_SPI_SLVSEL_SSEL7_LO             0x00000000    /* SSEL7: Slave Select 7 Low */
#define ENUM_SPI_SLVSEL_SSEL7_HI             0x00008000    /* SSEL7: Slave Select 7 High */

#define BITM_SPI_SLVSEL_SSEL6                0x00004000    /* SPISSEL6 Value */
#define ENUM_SPI_SLVSEL_SSEL6_LO             0x00000000    /* SSEL6: Slave Select 6 Low */
#define ENUM_SPI_SLVSEL_SSEL6_HI             0x00004000    /* SSEL6: Slave Select 6 High */

#define BITM_SPI_SLVSEL_SSEL5                0x00002000    /* SPISSEL5 Value */
#define ENUM_SPI_SLVSEL_SSEL5_LO             0x00000000    /* SSEL5: Slave Select 5 Low */
#define ENUM_SPI_SLVSEL_SSEL5_HI             0x00002000    /* SSEL5: Slave Select 5 High */

#define BITM_SPI_SLVSEL_SSEL4                0x00001000    /* SPISSEL4 Value */
#define ENUM_SPI_SLVSEL_SSEL4_LO             0x00000000    /* SSEL4: Slave Select 4 Low */
#define ENUM_SPI_SLVSEL_SSEL4_HI             0x00001000    /* SSEL4: Slave Select 4 High */

#define BITM_SPI_SLVSEL_SSEL3                0x00000800    /* SPISSEL3 Value */
#define ENUM_SPI_SLVSEL_SSEL3_LO             0x00000000    /* SSEL3: Slave Select 3 Low */
#define ENUM_SPI_SLVSEL_SSEL3_HI             0x00000800    /* SSEL3: Slave Select 3 High */

#define BITM_SPI_SLVSEL_SSEL2                0x00000400    /* SPISSEL2 Value */
#define ENUM_SPI_SLVSEL_SSEL2_LO             0x00000000    /* SSEL2: Slave Select 2 Low */
#define ENUM_SPI_SLVSEL_SSEL2_HI             0x00000400    /* SSEL2: Slave Select 2 High */

#define BITM_SPI_SLVSEL_SSEL1                0x00000200    /* SPISSEL1 Value */
#define ENUM_SPI_SLVSEL_SSEL1_LO             0x00000000    /* SSEL1: Slave Select 1 Low */
#define ENUM_SPI_SLVSEL_SSEL1_HI             0x00000200    /* SSEL1: Slave Select 1 High */

#define BITM_SPI_SLVSEL_SSE7                 0x00000080    /* SPISSEL7 Enable */
#define ENUM_SPI_SLVSEL_SSEL7_DIS            0x00000000    /* SSE7: SPISSEL7 Disabled */
#define ENUM_SPI_SLVSEL_SSEL7_EN             0x00000080    /* SSE7: SPISSEL7 Enabled */

#define BITM_SPI_SLVSEL_SSE6                 0x00000040    /* SPISSEL6 Enable */
#define ENUM_SPI_SLVSEL_SSEL6_DIS            0x00000000    /* SSE6: SPISSEL6 Disabled */
#define ENUM_SPI_SLVSEL_SSEL6_EN             0x00000040    /* SSE6: SPISSEL6 Enabled */

#define BITM_SPI_SLVSEL_SSE5                 0x00000020    /* SPISSEL5 Enable */
#define ENUM_SPI_SLVSEL_SSEL5_DIS            0x00000000    /* SSE5: SPISSEL5 Disabled */
#define ENUM_SPI_SLVSEL_SSEL5_EN             0x00000020    /* SSE5: SPISSEL5 Enabled */

#define BITM_SPI_SLVSEL_SSE4                 0x00000010    /* SPISSEL4 Enable */
#define ENUM_SPI_SLVSEL_SSEL4_DIS            0x00000000    /* SSE4: SPISSEL4 Disabled */
#define ENUM_SPI_SLVSEL_SSEL4_EN             0x00000010    /* SSE4: SPISSEL4 Enabled */

#define BITM_SPI_SLVSEL_SSE3                 0x00000008    /* SPISSEL3 Enable */
#define ENUM_SPI_SLVSEL_SSEL3_DIS            0x00000000    /* SSE3: SPISSEL3 Disabled */
#define ENUM_SPI_SLVSEL_SSEL3_EN             0x00000008    /* SSE3: SPISSEL3 Enabled */

#define BITM_SPI_SLVSEL_SSE2                 0x00000004    /* SPISSEL2 Enable */
#define ENUM_SPI_SLVSEL_SSEL2_DIS            0x00000000    /* SSE2: SPISSEL2 Disabled */
#define ENUM_SPI_SLVSEL_SSEL2_EN             0x00000004    /* SSE2: SPISSEL2 Enabled */

#define BITM_SPI_SLVSEL_SSE1                 0x00000002    /* SPISSEL1 Enable */
#define ENUM_SPI_SLVSEL_SSEL1_DIS            0x00000000    /* SSE1: SPISSEL1 Disabled */
#define ENUM_SPI_SLVSEL_SSEL1_EN             0x00000002    /* SSE1: SPISSEL1 Enabled */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_RWC                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_RWC_VALUE                    0            /* Received Word-Count */
#define BITM_SPI_RWC_VALUE                   0x0000FFFF    /* Received Word-Count */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_RWCR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_RWCR_VALUE                   0            /* Received Word-Count Reload */
#define BITM_SPI_RWCR_VALUE                  0x0000FFFF    /* Received Word-Count Reload */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_TWC                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_TWC_VALUE                    0            /* Transmitted Word-Count */
#define BITM_SPI_TWC_VALUE                   0x0000FFFF    /* Transmitted Word-Count */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_TWCR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_TWCR_VALUE                   0            /* Transmitted Word-Count Reload */
#define BITM_SPI_TWCR_VALUE                  0x0000FFFF    /* Transmitted Word-Count Reload */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_IMSK                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_IMSK_TF                     11            /* Transmit Finish Interrupt Mask */
#define BITP_SPI_IMSK_RF                     10            /* Receive Finish Interrupt Mask */
#define BITP_SPI_IMSK_TS                      9            /* Transmit Start Interrupt Mask */
#define BITP_SPI_IMSK_RS                      8            /* Receive Start Interrupt Mask */
#define BITP_SPI_IMSK_MF                      7            /* Mode Fault Error Interrupt Mask */
#define BITP_SPI_IMSK_TC                      6            /* Transmit Collision Error Interrupt Mask */
#define BITP_SPI_IMSK_TUR                     5            /* Transmit Under-Run Error Interrupt Mask */
#define BITP_SPI_IMSK_ROR                     4            /* Receive Over-Run Error Interrupt Mask */
#define BITP_SPI_IMSK_TUWM                    2            /* Transmit Urgent Water-Mark Interrupt Mask */
#define BITP_SPI_IMSK_RUWM                    1            /* Receive Urgent Water-Mark Interrupt Mask */

#define BITM_SPI_IMSK_TF                     0x00000800    /* Transmit Finish Interrupt Mask */
#define ENUM_SPI_TF_LO                       0x00000000    /* TF: Transmit Finish Interrupt */
#define ENUM_SPI_TF_HI                       0x00000800    /* TF: Transmit Finish Interrupt */

#define BITM_SPI_IMSK_RF                     0x00000400    /* Receive Finish Interrupt Mask */
#define ENUM_SPI_RF_LO                       0x00000000    /* RF: Receive Finish Interrupt */
#define ENUM_SPI_RF_HI                       0x00000400    /* RF: Receive Finish Interrupt */

#define BITM_SPI_IMSK_TS                     0x00000200    /* Transmit Start Interrupt Mask */
#define ENUM_SPI_TS_LO                       0x00000000    /* TS: Transmit Start Interrupt */
#define ENUM_SPI_TS_HI                       0x00000200    /* TS: Transmit Start Interrupt */

#define BITM_SPI_IMSK_RS                     0x00000100    /* Receive Start Interrupt Mask */
#define ENUM_SPI_RS_LO                       0x00000000    /* RS: Receive Start Interrupt */
#define ENUM_SPI_RS_HI                       0x00000100    /* RS: Receive Start Interrupt */

#define BITM_SPI_IMSK_MF                     0x00000080    /* Mode Fault Error Interrupt Mask */
#define ENUM_SPI_MF_LO                       0x00000000    /* MF: Mode Fault Error Interrupt */
#define ENUM_SPI_MF_HI                       0x00000080    /* MF: Mode Fault Error Interrupt */

#define BITM_SPI_IMSK_TC                     0x00000040    /* Transmit Collision Error Interrupt Mask */
#define ENUM_SPI_TC_LO                       0x00000000    /* TC: Transmit Collision Error Interrupt */
#define ENUM_SPI_TC_HI                       0x00000040    /* TC: Transmit Collision Error Interrupt */

#define BITM_SPI_IMSK_TUR                    0x00000020    /* Transmit Under-Run Error Interrupt Mask */
#define ENUM_SPI_TUR_LO                      0x00000000    /* TUR: Transmit Underrun Error Interrupt */
#define ENUM_SPI_TUR_HI                      0x00000020    /* TUR: Transmit Underrun Error Interrupt */

#define BITM_SPI_IMSK_ROR                    0x00000010    /* Receive Over-Run Error Interrupt Mask */
#define ENUM_SPI_ROR_LO                      0x00000000    /* ROR: Receive Overrun Error Interrupt */
#define ENUM_SPI_ROR_HI                      0x00000010    /* ROR: Receive Overrun Error Interrupt */

#define BITM_SPI_IMSK_TUWM                   0x00000004    /* Transmit Urgent Water-Mark Interrupt Mask */
#define ENUM_SPI_TUWM_LO                     0x00000000    /* TUWM: Transmit Urgent Watermark Interrupt */
#define ENUM_SPI_TUWM_HI                     0x00000004    /* TUWM: Transmit Urgent Watermark Interrupt */

#define BITM_SPI_IMSK_RUWM                   0x00000002    /* Receive Urgent Water-Mark Interrupt Mask */
#define ENUM_SPI_RUWM_LO                     0x00000000    /* RUWM: Receive Urgent Watermark Interrupt */
#define ENUM_SPI_RUWM_HI                     0x00000002    /* RUWM: Receive Urgent Watermark Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_IMSK_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_IMSK_CLR_TF                 11            /* Transmit Finish Interrupt Mask */
#define BITP_SPI_IMSK_CLR_RF                 10            /* Receive Finish Interrupt Mask */
#define BITP_SPI_IMSK_CLR_TS                  9            /* Transmit Start Interrupt Mask */
#define BITP_SPI_IMSK_CLR_RS                  8            /* Receive Start Interrupt Mask */
#define BITP_SPI_IMSK_CLR_MF                  7            /* Mode Fault Error Interrupt Mask */
#define BITP_SPI_IMSK_CLR_TC                  6            /* Transmit Collision Error Interrupt Mask */
#define BITP_SPI_IMSK_CLR_TUR                 5            /* Transmit Under-Run Error Interrupt Mask */
#define BITP_SPI_IMSK_CLR_ROR                 4            /* Receive Over-Run Error Interrupt Mask */
#define BITP_SPI_IMSK_CLR_TUWM                2            /* Transmit Urgent Water-Mark Interrupt Mask */
#define BITP_SPI_IMSK_CLR_RUWM                1            /* Receive Urgent Water-Mark Interrupt Mask */

/* The fields and enumerations for SPI_IMSK_CLR are also in SPI - see the common set of ENUM_SPI_* #defines located with register SPI_IMSK */

#define BITM_SPI_IMSK_CLR_TF                 0x00000800    /* Transmit Finish Interrupt Mask */
#define BITM_SPI_IMSK_CLR_RF                 0x00000400    /* Receive Finish Interrupt Mask */
#define BITM_SPI_IMSK_CLR_TS                 0x00000200    /* Transmit Start Interrupt Mask */
#define BITM_SPI_IMSK_CLR_RS                 0x00000100    /* Receive Start Interrupt Mask */
#define BITM_SPI_IMSK_CLR_MF                 0x00000080    /* Mode Fault Error Interrupt Mask */
#define BITM_SPI_IMSK_CLR_TC                 0x00000040    /* Transmit Collision Error Interrupt Mask */
#define BITM_SPI_IMSK_CLR_TUR                0x00000020    /* Transmit Under-Run Error Interrupt Mask */
#define BITM_SPI_IMSK_CLR_ROR                0x00000010    /* Receive Over-Run Error Interrupt Mask */
#define BITM_SPI_IMSK_CLR_TUWM               0x00000004    /* Transmit Urgent Water-Mark Interrupt Mask */
#define BITM_SPI_IMSK_CLR_RUWM               0x00000002    /* Receive Urgent Water-Mark Interrupt Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_IMSK_SET                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_IMSK_SET_TF                 11            /* Transmit Finish Interrupt Mask */
#define BITP_SPI_IMSK_SET_RF                 10            /* Receive Finish Interrupt Mask */
#define BITP_SPI_IMSK_SET_TS                  9            /* Transmit Start Interrupt Mask */
#define BITP_SPI_IMSK_SET_RS                  8            /* Receive Start Interrupt Mask */
#define BITP_SPI_IMSK_SET_MF                  7            /* Mode Fault Error Interrupt Mask */
#define BITP_SPI_IMSK_SET_TC                  6            /* Transmit Collision Error Interrupt Mask */
#define BITP_SPI_IMSK_SET_TUR                 5            /* Transmit Under-Run Error Interrupt Mask */
#define BITP_SPI_IMSK_SET_ROR                 4            /* Receive Over-Run Error Interrupt Mask */
#define BITP_SPI_IMSK_SET_TUWM                2            /* Transmit Urgent Water-Mark Interrupt Mask */
#define BITP_SPI_IMSK_SET_RUWM                1            /* Receive Urgent Water-Mark Interrupt Mask */

/* The fields and enumerations for SPI_IMSK_SET are also in SPI - see the common set of ENUM_SPI_* #defines located with register SPI_IMSK */

#define BITM_SPI_IMSK_SET_TF                 0x00000800    /* Transmit Finish Interrupt Mask */
#define BITM_SPI_IMSK_SET_RF                 0x00000400    /* Receive Finish Interrupt Mask */
#define BITM_SPI_IMSK_SET_TS                 0x00000200    /* Transmit Start Interrupt Mask */
#define BITM_SPI_IMSK_SET_RS                 0x00000100    /* Receive Start Interrupt Mask */
#define BITM_SPI_IMSK_SET_MF                 0x00000080    /* Mode Fault Error Interrupt Mask */
#define BITM_SPI_IMSK_SET_TC                 0x00000040    /* Transmit Collision Error Interrupt Mask */
#define BITM_SPI_IMSK_SET_TUR                0x00000020    /* Transmit Under-Run Error Interrupt Mask */
#define BITM_SPI_IMSK_SET_ROR                0x00000010    /* Receive Over-Run Error Interrupt Mask */
#define BITM_SPI_IMSK_SET_TUWM               0x00000004    /* Transmit Urgent Water-Mark Interrupt Mask */
#define BITM_SPI_IMSK_SET_RUWM               0x00000002    /* Receive Urgent Water-Mark Interrupt Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_STAT_TFF                    23            /* SPI_TFIFO Full */
#define BITP_SPI_STAT_RFE                    22            /* SPI_RFIFO Empty */
#define BITP_SPI_STAT_FCS                    20            /* Flow-Control Stall Indication */
#define BITP_SPI_STAT_TFS                    16            /* SPI_TFIFO status */
#define BITP_SPI_STAT_RFS                    12            /* SPI_RFIFO status */
#define BITP_SPI_STAT_TF                     11            /* Transmit Finish Indication */
#define BITP_SPI_STAT_RF                     10            /* Receive Finish Indication */
#define BITP_SPI_STAT_TS                      9            /* Transmit Start Indication */
#define BITP_SPI_STAT_RS                      8            /* Receive Start Indication */
#define BITP_SPI_STAT_MF                      7            /* Mode Fault Error Indication */
#define BITP_SPI_STAT_TC                      6            /* Transmit Collision Error Indication */
#define BITP_SPI_STAT_TUR                     5            /* Transmit Under-Run Error Indication */
#define BITP_SPI_STAT_ROR                     4            /* Receive Over-Run Error Indication */
#define BITP_SPI_STAT_TUWM                    2            /* Transmit Urgent Water-Mark Breached */
#define BITP_SPI_STAT_RUWM                    1            /* Receive Urgent Water-Mark Breached */
#define BITP_SPI_STAT_SPIF                    0            /* SPI Finished */

#define BITM_SPI_STAT_TFF                    0x00800000    /* SPI_TFIFO Full */
#define ENUM_SPI_STAT_TFIFO_NF               0x00000000    /* TFF: TX FIFO Not Full */
#define ENUM_SPI_STAT_TFIFO_F                0x00800000    /* TFF: TX FIFO Full */

#define BITM_SPI_STAT_RFE                    0x00400000    /* SPI_RFIFO Empty */
#define ENUM_SPI_STAT_RFIFO_E                0x00000000    /* RFE: RX FIFO Empty */
#define ENUM_SPI_STAT_RFIFO_NE               0x00400000    /* RFE: RX FIFO Not Empty */

#define BITM_SPI_STAT_FCS                    0x00100000    /* Flow-Control Stall Indication */
#define ENUM_SPI_STAT_STALL                  0x00000000    /* FCS: FCS Asserted */
#define ENUM_SPI_STAT_NOSTALL                0x00100000    /* FCS: FCS Deasserted */

#define BITM_SPI_STAT_TFS                    0x00070000    /* SPI_TFIFO status */
#define ENUM_SPI_STAT_TFIFO_FULL             0x00000000    /* TFS: TFIFO full */
#define ENUM_SPI_STAT_TFIFO_25               0x00010000    /* TFS: TFIFO 25% empty */
#define ENUM_SPI_STAT_TFIFO_50               0x00020000    /* TFS: TFIFO 50% empty */
#define ENUM_SPI_STAT_TFIFO_75               0x00030000    /* TFS: TFIFO 75% empty */
#define ENUM_SPI_STAT_TFIFO_EMPTY            0x00040000    /* TFS: TFIFO empty */

#define BITM_SPI_STAT_RFS                    0x00007000    /* SPI_RFIFO status */
#define ENUM_SPI_STAT_RFIFO_EMPTY            0x00000000    /* RFS: RFIFO Empty */
#define ENUM_SPI_STAT_RFIFO_25               0x00001000    /* RFS: RFIFO 25% Full */
#define ENUM_SPI_STAT_RFIFO_50               0x00002000    /* RFS: RFIFO 50% Full */
#define ENUM_SPI_STAT_RFIFO_75               0x00003000    /* RFS: RFIFO 75% Full */
#define ENUM_SPI_STAT_RFIFO_FULL             0x00004000    /* RFS: RFIFO Full */

#define BITM_SPI_STAT_TF                     0x00000800    /* Transmit Finish Indication */
#define ENUM_SPI_STAT_TF_LO                  0x00000000    /* TF: No Transmit Finish Indication */
#define ENUM_SPI_STAT_TF_HI                  0x00000800    /* TF: Transmit Finish Indication */

#define BITM_SPI_STAT_RF                     0x00000400    /* Receive Finish Indication */
#define ENUM_SPI_STAT_RF_LO                  0x00000000    /* RF: No Receive Finish Indication */
#define ENUM_SPI_STAT_RF_HI                  0x00000400    /* RF: Receive Finish Indication */

#define BITM_SPI_STAT_TS                     0x00000200    /* Transmit Start Indication */
#define ENUM_SPI_STAT_TS_LO                  0x00000000    /* TS: No Transmit Burst Start detected */
#define ENUM_SPI_STAT_TS_HI                  0x00000200    /* TS: Transmit Burst Start detected */

#define BITM_SPI_STAT_RS                     0x00000100    /* Receive Start Indication */
#define ENUM_SPI_STAT_RS_LO                  0x00000000    /* RS: Receive Burst Start not detected */
#define ENUM_SPI_STAT_RS_HI                  0x00000100    /* RS: Receive Burst Start detected */

#define BITM_SPI_STAT_MF                     0x00000080    /* Mode Fault Error Indication */
#define ENUM_SPI_STAT_MF_LO                  0x00000000    /* MF: No Mode Fault Error */
#define ENUM_SPI_STAT_MF_HI                  0x00000080    /* MF: Mode Fault Error occurred */

#define BITM_SPI_STAT_TC                     0x00000040    /* Transmit Collision Error Indication */
#define ENUM_SPI_STAT_TC_LO                  0x00000000    /* TC: No Transmit Collision Error */
#define ENUM_SPI_STAT_TC_HI                  0x00000040    /* TC: Transmit Collision Error occurred */

#define BITM_SPI_STAT_TUR                    0x00000020    /* Transmit Under-Run Error Indication */
#define ENUM_SPI_STAT_TUR_LO                 0x00000000    /* TUR: No Transmit Underrun Error */
#define ENUM_SPI_STAT_TUR_HI                 0x00000020    /* TUR: Transmit Underrun Error occurred */

#define BITM_SPI_STAT_ROR                    0x00000010    /* Receive Over-Run Error Indication */
#define ENUM_SPI_STAT_ROR_LO                 0x00000000    /* ROR: No Receive Overrun Error */
#define ENUM_SPI_STAT_ROR_HI                 0x00000010    /* ROR: Receive Overrun Error occurred */

#define BITM_SPI_STAT_TUWM                   0x00000004    /* Transmit Urgent Water-Mark Breached */
#define ENUM_SPI_STAT_TUWM_LO                0x00000000    /* TUWM: TX Regular Watermark Reached */
#define ENUM_SPI_STAT_TUWM_HI                0x00000004    /* TUWM: TX Urgent Watermark Breached */

#define BITM_SPI_STAT_RUWM                   0x00000002    /* Receive Urgent Water-Mark Breached */
#define ENUM_SPI_STAT_RUWM_LO                0x00000000    /* RUWM: RX Regular Watermark reached */
#define ENUM_SPI_STAT_RUWM_HI                0x00000002    /* RUWM: RX Urgent Watermark breached */

#define BITM_SPI_STAT_SPIF                   0x00000001    /* SPI Finished */
#define ENUM_SPI_STAT_SPIF_LO                0x00000000    /* SPIF: Single-word transfer not complete */
#define ENUM_SPI_STAT_SPIF_HI                0x00000001    /* SPIF: Single-word transfer complete */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_ILAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_ILAT_TF                     11            /* Transmit Finish Indication */
#define BITP_SPI_ILAT_RF                     10            /* Receive Finish Indication */
#define BITP_SPI_ILAT_TS                      9            /* Transmit Start Indication */
#define BITP_SPI_ILAT_RS                      8            /* Receive Start Indication */
#define BITP_SPI_ILAT_MF                      7            /* Mode Fault Error Indication */
#define BITP_SPI_ILAT_TC                      6            /* Transmit Collision Error Indication */
#define BITP_SPI_ILAT_TUR                     5            /* Transmit Under-Run Error Indication */
#define BITP_SPI_ILAT_ROR                     4            /* Receive Over-Run Error Indication */
#define BITP_SPI_ILAT_TUWM                    2            /* Transmit Urgent Water Mark Interrupt */
#define BITP_SPI_ILAT_RUWM                    1            /* Receive Urgent Water Mark Interrupt */

/* The fields and enumerations for SPI_ILAT are also in SPI - see the common set of ENUM_SPI_* #defines located with register SPI_IMSK */

#define BITM_SPI_ILAT_TF                     0x00000800    /* Transmit Finish Indication */
#define BITM_SPI_ILAT_RF                     0x00000400    /* Receive Finish Indication */
#define BITM_SPI_ILAT_TS                     0x00000200    /* Transmit Start Indication */
#define BITM_SPI_ILAT_RS                     0x00000100    /* Receive Start Indication */
#define BITM_SPI_ILAT_MF                     0x00000080    /* Mode Fault Error Indication */
#define BITM_SPI_ILAT_TC                     0x00000040    /* Transmit Collision Error Indication */
#define BITM_SPI_ILAT_TUR                    0x00000020    /* Transmit Under-Run Error Indication */
#define BITM_SPI_ILAT_ROR                    0x00000010    /* Receive Over-Run Error Indication */
#define BITM_SPI_ILAT_TUWM                   0x00000004    /* Transmit Urgent Water Mark Interrupt */
#define BITM_SPI_ILAT_RUWM                   0x00000002    /* Receive Urgent Water Mark Interrupt */

/* ------------------------------------------------------------------------------------------------------------------------
        SPI_ILAT_CLR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPI_ILAT_CLR_TF                 11            /* Transmit Finish Indication */
#define BITP_SPI_ILAT_CLR_RF                 10            /* Receive Finish Indication */
#define BITP_SPI_ILAT_CLR_TS                  9            /* Transmit Start Indication */
#define BITP_SPI_ILAT_CLR_RS                  8            /* Receive Start Indication */
#define BITP_SPI_ILAT_CLR_MF                  7            /* Mode Fault Error Indication */
#define BITP_SPI_ILAT_CLR_TC                  6            /* Transmit Collision Error Indication */
#define BITP_SPI_ILAT_CLR_TUR                 5            /* Transmit Under-Run Error Indication */
#define BITP_SPI_ILAT_CLR_ROR                 4            /* Receive Over-Run Error Indication */
#define BITP_SPI_ILAT_CLR_TUWM                2            /* Transmit Urgent Water Mark Interrupt */
#define BITP_SPI_ILAT_CLR_RUWM                1            /* Receive Urgent Water Mark Interrupt */

/* The fields and enumerations for SPI_ILAT_CLR are also in SPI - see the common set of ENUM_SPI_* #defines located with register SPI_IMSK */

#define BITM_SPI_ILAT_CLR_TF                 0x00000800    /* Transmit Finish Indication */
#define BITM_SPI_ILAT_CLR_RF                 0x00000400    /* Receive Finish Indication */
#define BITM_SPI_ILAT_CLR_TS                 0x00000200    /* Transmit Start Indication */
#define BITM_SPI_ILAT_CLR_RS                 0x00000100    /* Receive Start Indication */
#define BITM_SPI_ILAT_CLR_MF                 0x00000080    /* Mode Fault Error Indication */
#define BITM_SPI_ILAT_CLR_TC                 0x00000040    /* Transmit Collision Error Indication */
#define BITM_SPI_ILAT_CLR_TUR                0x00000020    /* Transmit Under-Run Error Indication */
#define BITM_SPI_ILAT_CLR_ROR                0x00000010    /* Receive Over-Run Error Indication */
#define BITM_SPI_ILAT_CLR_TUWM               0x00000004    /* Transmit Urgent Water Mark Interrupt */
#define BITM_SPI_ILAT_CLR_RUWM               0x00000002    /* Receive Urgent Water Mark Interrupt */

/* =========================
        DDE Registers
   ========================= */

/* =========================
        DMA0
   ========================= */
#define REG_DMA0_DSCPTR_NXT             0xFFC41000         /* DMA0 Pointer to Next Initial Descriptor */
#define REG_DMA0_ADDRSTART              0xFFC41004         /* DMA0 Start Address of Current Buffer */
#define REG_DMA0_CFG                    0xFFC41008         /* DMA0 Configuration Register */
#define REG_DMA0_XCNT                   0xFFC4100C         /* DMA0 Inner Loop Count Start Value */
#define REG_DMA0_XMOD                   0xFFC41010         /* DMA0 Inner Loop Address Increment */
#define REG_DMA0_YCNT                   0xFFC41014         /* DMA0 Outer Loop Count Start Value (2D only) */
#define REG_DMA0_YMOD                   0xFFC41018         /* DMA0 Outer Loop Address Increment (2D only) */
#define REG_DMA0_DSCPTR_CUR             0xFFC41024         /* DMA0 Current Descriptor Pointer */
#define REG_DMA0_DSCPTR_PRV             0xFFC41028         /* DMA0 Previous Initial Descriptor Pointer */
#define REG_DMA0_ADDR_CUR               0xFFC4102C         /* DMA0 Current Address */
#define REG_DMA0_STAT                   0xFFC41030         /* DMA0 Status Register */
#define REG_DMA0_XCNT_CUR               0xFFC41034         /* DMA0 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA0_YCNT_CUR               0xFFC41038         /* DMA0 Current Row Count (2D only) */
#define REG_DMA0_BWLCNT                 0xFFC41040         /* DMA0 Bandwidth Limit Count */
#define REG_DMA0_BWLCNT_CUR             0xFFC41044         /* DMA0 Bandwidth Limit Count Current */
#define REG_DMA0_BWMCNT                 0xFFC41048         /* DMA0 Bandwidth Monitor Count */
#define REG_DMA0_BWMCNT_CUR             0xFFC4104C         /* DMA0 Bandwidth Monitor Count Current */

/* =========================
        DMA1
   ========================= */
#define REG_DMA1_DSCPTR_NXT             0xFFC41080         /* DMA1 Pointer to Next Initial Descriptor */
#define REG_DMA1_ADDRSTART              0xFFC41084         /* DMA1 Start Address of Current Buffer */
#define REG_DMA1_CFG                    0xFFC41088         /* DMA1 Configuration Register */
#define REG_DMA1_XCNT                   0xFFC4108C         /* DMA1 Inner Loop Count Start Value */
#define REG_DMA1_XMOD                   0xFFC41090         /* DMA1 Inner Loop Address Increment */
#define REG_DMA1_YCNT                   0xFFC41094         /* DMA1 Outer Loop Count Start Value (2D only) */
#define REG_DMA1_YMOD                   0xFFC41098         /* DMA1 Outer Loop Address Increment (2D only) */
#define REG_DMA1_DSCPTR_CUR             0xFFC410A4         /* DMA1 Current Descriptor Pointer */
#define REG_DMA1_DSCPTR_PRV             0xFFC410A8         /* DMA1 Previous Initial Descriptor Pointer */
#define REG_DMA1_ADDR_CUR               0xFFC410AC         /* DMA1 Current Address */
#define REG_DMA1_STAT                   0xFFC410B0         /* DMA1 Status Register */
#define REG_DMA1_XCNT_CUR               0xFFC410B4         /* DMA1 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA1_YCNT_CUR               0xFFC410B8         /* DMA1 Current Row Count (2D only) */
#define REG_DMA1_BWLCNT                 0xFFC410C0         /* DMA1 Bandwidth Limit Count */
#define REG_DMA1_BWLCNT_CUR             0xFFC410C4         /* DMA1 Bandwidth Limit Count Current */
#define REG_DMA1_BWMCNT                 0xFFC410C8         /* DMA1 Bandwidth Monitor Count */
#define REG_DMA1_BWMCNT_CUR             0xFFC410CC         /* DMA1 Bandwidth Monitor Count Current */

/* =========================
        DMA2
   ========================= */
#define REG_DMA2_DSCPTR_NXT             0xFFC41100         /* DMA2 Pointer to Next Initial Descriptor */
#define REG_DMA2_ADDRSTART              0xFFC41104         /* DMA2 Start Address of Current Buffer */
#define REG_DMA2_CFG                    0xFFC41108         /* DMA2 Configuration Register */
#define REG_DMA2_XCNT                   0xFFC4110C         /* DMA2 Inner Loop Count Start Value */
#define REG_DMA2_XMOD                   0xFFC41110         /* DMA2 Inner Loop Address Increment */
#define REG_DMA2_YCNT                   0xFFC41114         /* DMA2 Outer Loop Count Start Value (2D only) */
#define REG_DMA2_YMOD                   0xFFC41118         /* DMA2 Outer Loop Address Increment (2D only) */
#define REG_DMA2_DSCPTR_CUR             0xFFC41124         /* DMA2 Current Descriptor Pointer */
#define REG_DMA2_DSCPTR_PRV             0xFFC41128         /* DMA2 Previous Initial Descriptor Pointer */
#define REG_DMA2_ADDR_CUR               0xFFC4112C         /* DMA2 Current Address */
#define REG_DMA2_STAT                   0xFFC41130         /* DMA2 Status Register */
#define REG_DMA2_XCNT_CUR               0xFFC41134         /* DMA2 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA2_YCNT_CUR               0xFFC41138         /* DMA2 Current Row Count (2D only) */
#define REG_DMA2_BWLCNT                 0xFFC41140         /* DMA2 Bandwidth Limit Count */
#define REG_DMA2_BWLCNT_CUR             0xFFC41144         /* DMA2 Bandwidth Limit Count Current */
#define REG_DMA2_BWMCNT                 0xFFC41148         /* DMA2 Bandwidth Monitor Count */
#define REG_DMA2_BWMCNT_CUR             0xFFC4114C         /* DMA2 Bandwidth Monitor Count Current */

/* =========================
        DMA3
   ========================= */
#define REG_DMA3_DSCPTR_NXT             0xFFC41180         /* DMA3 Pointer to Next Initial Descriptor */
#define REG_DMA3_ADDRSTART              0xFFC41184         /* DMA3 Start Address of Current Buffer */
#define REG_DMA3_CFG                    0xFFC41188         /* DMA3 Configuration Register */
#define REG_DMA3_XCNT                   0xFFC4118C         /* DMA3 Inner Loop Count Start Value */
#define REG_DMA3_XMOD                   0xFFC41190         /* DMA3 Inner Loop Address Increment */
#define REG_DMA3_YCNT                   0xFFC41194         /* DMA3 Outer Loop Count Start Value (2D only) */
#define REG_DMA3_YMOD                   0xFFC41198         /* DMA3 Outer Loop Address Increment (2D only) */
#define REG_DMA3_DSCPTR_CUR             0xFFC411A4         /* DMA3 Current Descriptor Pointer */
#define REG_DMA3_DSCPTR_PRV             0xFFC411A8         /* DMA3 Previous Initial Descriptor Pointer */
#define REG_DMA3_ADDR_CUR               0xFFC411AC         /* DMA3 Current Address */
#define REG_DMA3_STAT                   0xFFC411B0         /* DMA3 Status Register */
#define REG_DMA3_XCNT_CUR               0xFFC411B4         /* DMA3 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA3_YCNT_CUR               0xFFC411B8         /* DMA3 Current Row Count (2D only) */
#define REG_DMA3_BWLCNT                 0xFFC411C0         /* DMA3 Bandwidth Limit Count */
#define REG_DMA3_BWLCNT_CUR             0xFFC411C4         /* DMA3 Bandwidth Limit Count Current */
#define REG_DMA3_BWMCNT                 0xFFC411C8         /* DMA3 Bandwidth Monitor Count */
#define REG_DMA3_BWMCNT_CUR             0xFFC411CC         /* DMA3 Bandwidth Monitor Count Current */

/* =========================
        DMA4
   ========================= */
#define REG_DMA4_DSCPTR_NXT             0xFFC41200         /* DMA4 Pointer to Next Initial Descriptor */
#define REG_DMA4_ADDRSTART              0xFFC41204         /* DMA4 Start Address of Current Buffer */
#define REG_DMA4_CFG                    0xFFC41208         /* DMA4 Configuration Register */
#define REG_DMA4_XCNT                   0xFFC4120C         /* DMA4 Inner Loop Count Start Value */
#define REG_DMA4_XMOD                   0xFFC41210         /* DMA4 Inner Loop Address Increment */
#define REG_DMA4_YCNT                   0xFFC41214         /* DMA4 Outer Loop Count Start Value (2D only) */
#define REG_DMA4_YMOD                   0xFFC41218         /* DMA4 Outer Loop Address Increment (2D only) */
#define REG_DMA4_DSCPTR_CUR             0xFFC41224         /* DMA4 Current Descriptor Pointer */
#define REG_DMA4_DSCPTR_PRV             0xFFC41228         /* DMA4 Previous Initial Descriptor Pointer */
#define REG_DMA4_ADDR_CUR               0xFFC4122C         /* DMA4 Current Address */
#define REG_DMA4_STAT                   0xFFC41230         /* DMA4 Status Register */
#define REG_DMA4_XCNT_CUR               0xFFC41234         /* DMA4 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA4_YCNT_CUR               0xFFC41238         /* DMA4 Current Row Count (2D only) */
#define REG_DMA4_BWLCNT                 0xFFC41240         /* DMA4 Bandwidth Limit Count */
#define REG_DMA4_BWLCNT_CUR             0xFFC41244         /* DMA4 Bandwidth Limit Count Current */
#define REG_DMA4_BWMCNT                 0xFFC41248         /* DMA4 Bandwidth Monitor Count */
#define REG_DMA4_BWMCNT_CUR             0xFFC4124C         /* DMA4 Bandwidth Monitor Count Current */

/* =========================
        DMA5
   ========================= */
#define REG_DMA5_DSCPTR_NXT             0xFFC41280         /* DMA5 Pointer to Next Initial Descriptor */
#define REG_DMA5_ADDRSTART              0xFFC41284         /* DMA5 Start Address of Current Buffer */
#define REG_DMA5_CFG                    0xFFC41288         /* DMA5 Configuration Register */
#define REG_DMA5_XCNT                   0xFFC4128C         /* DMA5 Inner Loop Count Start Value */
#define REG_DMA5_XMOD                   0xFFC41290         /* DMA5 Inner Loop Address Increment */
#define REG_DMA5_YCNT                   0xFFC41294         /* DMA5 Outer Loop Count Start Value (2D only) */
#define REG_DMA5_YMOD                   0xFFC41298         /* DMA5 Outer Loop Address Increment (2D only) */
#define REG_DMA5_DSCPTR_CUR             0xFFC412A4         /* DMA5 Current Descriptor Pointer */
#define REG_DMA5_DSCPTR_PRV             0xFFC412A8         /* DMA5 Previous Initial Descriptor Pointer */
#define REG_DMA5_ADDR_CUR               0xFFC412AC         /* DMA5 Current Address */
#define REG_DMA5_STAT                   0xFFC412B0         /* DMA5 Status Register */
#define REG_DMA5_XCNT_CUR               0xFFC412B4         /* DMA5 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA5_YCNT_CUR               0xFFC412B8         /* DMA5 Current Row Count (2D only) */
#define REG_DMA5_BWLCNT                 0xFFC412C0         /* DMA5 Bandwidth Limit Count */
#define REG_DMA5_BWLCNT_CUR             0xFFC412C4         /* DMA5 Bandwidth Limit Count Current */
#define REG_DMA5_BWMCNT                 0xFFC412C8         /* DMA5 Bandwidth Monitor Count */
#define REG_DMA5_BWMCNT_CUR             0xFFC412CC         /* DMA5 Bandwidth Monitor Count Current */

/* =========================
        DMA6
   ========================= */
#define REG_DMA6_DSCPTR_NXT             0xFFC41300         /* DMA6 Pointer to Next Initial Descriptor */
#define REG_DMA6_ADDRSTART              0xFFC41304         /* DMA6 Start Address of Current Buffer */
#define REG_DMA6_CFG                    0xFFC41308         /* DMA6 Configuration Register */
#define REG_DMA6_XCNT                   0xFFC4130C         /* DMA6 Inner Loop Count Start Value */
#define REG_DMA6_XMOD                   0xFFC41310         /* DMA6 Inner Loop Address Increment */
#define REG_DMA6_YCNT                   0xFFC41314         /* DMA6 Outer Loop Count Start Value (2D only) */
#define REG_DMA6_YMOD                   0xFFC41318         /* DMA6 Outer Loop Address Increment (2D only) */
#define REG_DMA6_DSCPTR_CUR             0xFFC41324         /* DMA6 Current Descriptor Pointer */
#define REG_DMA6_DSCPTR_PRV             0xFFC41328         /* DMA6 Previous Initial Descriptor Pointer */
#define REG_DMA6_ADDR_CUR               0xFFC4132C         /* DMA6 Current Address */
#define REG_DMA6_STAT                   0xFFC41330         /* DMA6 Status Register */
#define REG_DMA6_XCNT_CUR               0xFFC41334         /* DMA6 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA6_YCNT_CUR               0xFFC41338         /* DMA6 Current Row Count (2D only) */
#define REG_DMA6_BWLCNT                 0xFFC41340         /* DMA6 Bandwidth Limit Count */
#define REG_DMA6_BWLCNT_CUR             0xFFC41344         /* DMA6 Bandwidth Limit Count Current */
#define REG_DMA6_BWMCNT                 0xFFC41348         /* DMA6 Bandwidth Monitor Count */
#define REG_DMA6_BWMCNT_CUR             0xFFC4134C         /* DMA6 Bandwidth Monitor Count Current */

/* =========================
        DMA7
   ========================= */
#define REG_DMA7_DSCPTR_NXT             0xFFC41380         /* DMA7 Pointer to Next Initial Descriptor */
#define REG_DMA7_ADDRSTART              0xFFC41384         /* DMA7 Start Address of Current Buffer */
#define REG_DMA7_CFG                    0xFFC41388         /* DMA7 Configuration Register */
#define REG_DMA7_XCNT                   0xFFC4138C         /* DMA7 Inner Loop Count Start Value */
#define REG_DMA7_XMOD                   0xFFC41390         /* DMA7 Inner Loop Address Increment */
#define REG_DMA7_YCNT                   0xFFC41394         /* DMA7 Outer Loop Count Start Value (2D only) */
#define REG_DMA7_YMOD                   0xFFC41398         /* DMA7 Outer Loop Address Increment (2D only) */
#define REG_DMA7_DSCPTR_CUR             0xFFC413A4         /* DMA7 Current Descriptor Pointer */
#define REG_DMA7_DSCPTR_PRV             0xFFC413A8         /* DMA7 Previous Initial Descriptor Pointer */
#define REG_DMA7_ADDR_CUR               0xFFC413AC         /* DMA7 Current Address */
#define REG_DMA7_STAT                   0xFFC413B0         /* DMA7 Status Register */
#define REG_DMA7_XCNT_CUR               0xFFC413B4         /* DMA7 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA7_YCNT_CUR               0xFFC413B8         /* DMA7 Current Row Count (2D only) */
#define REG_DMA7_BWLCNT                 0xFFC413C0         /* DMA7 Bandwidth Limit Count */
#define REG_DMA7_BWLCNT_CUR             0xFFC413C4         /* DMA7 Bandwidth Limit Count Current */
#define REG_DMA7_BWMCNT                 0xFFC413C8         /* DMA7 Bandwidth Monitor Count */
#define REG_DMA7_BWMCNT_CUR             0xFFC413CC         /* DMA7 Bandwidth Monitor Count Current */

/* =========================
        DMA8
   ========================= */
#define REG_DMA8_DSCPTR_NXT             0xFFC41400         /* DMA8 Pointer to Next Initial Descriptor */
#define REG_DMA8_ADDRSTART              0xFFC41404         /* DMA8 Start Address of Current Buffer */
#define REG_DMA8_CFG                    0xFFC41408         /* DMA8 Configuration Register */
#define REG_DMA8_XCNT                   0xFFC4140C         /* DMA8 Inner Loop Count Start Value */
#define REG_DMA8_XMOD                   0xFFC41410         /* DMA8 Inner Loop Address Increment */
#define REG_DMA8_YCNT                   0xFFC41414         /* DMA8 Outer Loop Count Start Value (2D only) */
#define REG_DMA8_YMOD                   0xFFC41418         /* DMA8 Outer Loop Address Increment (2D only) */
#define REG_DMA8_DSCPTR_CUR             0xFFC41424         /* DMA8 Current Descriptor Pointer */
#define REG_DMA8_DSCPTR_PRV             0xFFC41428         /* DMA8 Previous Initial Descriptor Pointer */
#define REG_DMA8_ADDR_CUR               0xFFC4142C         /* DMA8 Current Address */
#define REG_DMA8_STAT                   0xFFC41430         /* DMA8 Status Register */
#define REG_DMA8_XCNT_CUR               0xFFC41434         /* DMA8 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA8_YCNT_CUR               0xFFC41438         /* DMA8 Current Row Count (2D only) */
#define REG_DMA8_BWLCNT                 0xFFC41440         /* DMA8 Bandwidth Limit Count */
#define REG_DMA8_BWLCNT_CUR             0xFFC41444         /* DMA8 Bandwidth Limit Count Current */
#define REG_DMA8_BWMCNT                 0xFFC41448         /* DMA8 Bandwidth Monitor Count */
#define REG_DMA8_BWMCNT_CUR             0xFFC4144C         /* DMA8 Bandwidth Monitor Count Current */

/* =========================
        DMA9
   ========================= */
#define REG_DMA9_DSCPTR_NXT             0xFFC41480         /* DMA9 Pointer to Next Initial Descriptor */
#define REG_DMA9_ADDRSTART              0xFFC41484         /* DMA9 Start Address of Current Buffer */
#define REG_DMA9_CFG                    0xFFC41488         /* DMA9 Configuration Register */
#define REG_DMA9_XCNT                   0xFFC4148C         /* DMA9 Inner Loop Count Start Value */
#define REG_DMA9_XMOD                   0xFFC41490         /* DMA9 Inner Loop Address Increment */
#define REG_DMA9_YCNT                   0xFFC41494         /* DMA9 Outer Loop Count Start Value (2D only) */
#define REG_DMA9_YMOD                   0xFFC41498         /* DMA9 Outer Loop Address Increment (2D only) */
#define REG_DMA9_DSCPTR_CUR             0xFFC414A4         /* DMA9 Current Descriptor Pointer */
#define REG_DMA9_DSCPTR_PRV             0xFFC414A8         /* DMA9 Previous Initial Descriptor Pointer */
#define REG_DMA9_ADDR_CUR               0xFFC414AC         /* DMA9 Current Address */
#define REG_DMA9_STAT                   0xFFC414B0         /* DMA9 Status Register */
#define REG_DMA9_XCNT_CUR               0xFFC414B4         /* DMA9 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA9_YCNT_CUR               0xFFC414B8         /* DMA9 Current Row Count (2D only) */
#define REG_DMA9_BWLCNT                 0xFFC414C0         /* DMA9 Bandwidth Limit Count */
#define REG_DMA9_BWLCNT_CUR             0xFFC414C4         /* DMA9 Bandwidth Limit Count Current */
#define REG_DMA9_BWMCNT                 0xFFC414C8         /* DMA9 Bandwidth Monitor Count */
#define REG_DMA9_BWMCNT_CUR             0xFFC414CC         /* DMA9 Bandwidth Monitor Count Current */

/* =========================
        DMA10
   ========================= */
#define REG_DMA10_DSCPTR_NXT            0xFFC05000         /* DMA10 Pointer to Next Initial Descriptor */
#define REG_DMA10_ADDRSTART             0xFFC05004         /* DMA10 Start Address of Current Buffer */
#define REG_DMA10_CFG                   0xFFC05008         /* DMA10 Configuration Register */
#define REG_DMA10_XCNT                  0xFFC0500C         /* DMA10 Inner Loop Count Start Value */
#define REG_DMA10_XMOD                  0xFFC05010         /* DMA10 Inner Loop Address Increment */
#define REG_DMA10_YCNT                  0xFFC05014         /* DMA10 Outer Loop Count Start Value (2D only) */
#define REG_DMA10_YMOD                  0xFFC05018         /* DMA10 Outer Loop Address Increment (2D only) */
#define REG_DMA10_DSCPTR_CUR            0xFFC05024         /* DMA10 Current Descriptor Pointer */
#define REG_DMA10_DSCPTR_PRV            0xFFC05028         /* DMA10 Previous Initial Descriptor Pointer */
#define REG_DMA10_ADDR_CUR              0xFFC0502C         /* DMA10 Current Address */
#define REG_DMA10_STAT                  0xFFC05030         /* DMA10 Status Register */
#define REG_DMA10_XCNT_CUR              0xFFC05034         /* DMA10 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA10_YCNT_CUR              0xFFC05038         /* DMA10 Current Row Count (2D only) */
#define REG_DMA10_BWLCNT                0xFFC05040         /* DMA10 Bandwidth Limit Count */
#define REG_DMA10_BWLCNT_CUR            0xFFC05044         /* DMA10 Bandwidth Limit Count Current */
#define REG_DMA10_BWMCNT                0xFFC05048         /* DMA10 Bandwidth Monitor Count */
#define REG_DMA10_BWMCNT_CUR            0xFFC0504C         /* DMA10 Bandwidth Monitor Count Current */

/* =========================
        DMA11
   ========================= */
#define REG_DMA11_DSCPTR_NXT            0xFFC05080         /* DMA11 Pointer to Next Initial Descriptor */
#define REG_DMA11_ADDRSTART             0xFFC05084         /* DMA11 Start Address of Current Buffer */
#define REG_DMA11_CFG                   0xFFC05088         /* DMA11 Configuration Register */
#define REG_DMA11_XCNT                  0xFFC0508C         /* DMA11 Inner Loop Count Start Value */
#define REG_DMA11_XMOD                  0xFFC05090         /* DMA11 Inner Loop Address Increment */
#define REG_DMA11_YCNT                  0xFFC05094         /* DMA11 Outer Loop Count Start Value (2D only) */
#define REG_DMA11_YMOD                  0xFFC05098         /* DMA11 Outer Loop Address Increment (2D only) */
#define REG_DMA11_DSCPTR_CUR            0xFFC050A4         /* DMA11 Current Descriptor Pointer */
#define REG_DMA11_DSCPTR_PRV            0xFFC050A8         /* DMA11 Previous Initial Descriptor Pointer */
#define REG_DMA11_ADDR_CUR              0xFFC050AC         /* DMA11 Current Address */
#define REG_DMA11_STAT                  0xFFC050B0         /* DMA11 Status Register */
#define REG_DMA11_XCNT_CUR              0xFFC050B4         /* DMA11 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA11_YCNT_CUR              0xFFC050B8         /* DMA11 Current Row Count (2D only) */
#define REG_DMA11_BWLCNT                0xFFC050C0         /* DMA11 Bandwidth Limit Count */
#define REG_DMA11_BWLCNT_CUR            0xFFC050C4         /* DMA11 Bandwidth Limit Count Current */
#define REG_DMA11_BWMCNT                0xFFC050C8         /* DMA11 Bandwidth Monitor Count */
#define REG_DMA11_BWMCNT_CUR            0xFFC050CC         /* DMA11 Bandwidth Monitor Count Current */

/* =========================
        DMA12
   ========================= */
#define REG_DMA12_DSCPTR_NXT            0xFFC05100         /* DMA12 Pointer to Next Initial Descriptor */
#define REG_DMA12_ADDRSTART             0xFFC05104         /* DMA12 Start Address of Current Buffer */
#define REG_DMA12_CFG                   0xFFC05108         /* DMA12 Configuration Register */
#define REG_DMA12_XCNT                  0xFFC0510C         /* DMA12 Inner Loop Count Start Value */
#define REG_DMA12_XMOD                  0xFFC05110         /* DMA12 Inner Loop Address Increment */
#define REG_DMA12_YCNT                  0xFFC05114         /* DMA12 Outer Loop Count Start Value (2D only) */
#define REG_DMA12_YMOD                  0xFFC05118         /* DMA12 Outer Loop Address Increment (2D only) */
#define REG_DMA12_DSCPTR_CUR            0xFFC05124         /* DMA12 Current Descriptor Pointer */
#define REG_DMA12_DSCPTR_PRV            0xFFC05128         /* DMA12 Previous Initial Descriptor Pointer */
#define REG_DMA12_ADDR_CUR              0xFFC0512C         /* DMA12 Current Address */
#define REG_DMA12_STAT                  0xFFC05130         /* DMA12 Status Register */
#define REG_DMA12_XCNT_CUR              0xFFC05134         /* DMA12 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA12_YCNT_CUR              0xFFC05138         /* DMA12 Current Row Count (2D only) */
#define REG_DMA12_BWLCNT                0xFFC05140         /* DMA12 Bandwidth Limit Count */
#define REG_DMA12_BWLCNT_CUR            0xFFC05144         /* DMA12 Bandwidth Limit Count Current */
#define REG_DMA12_BWMCNT                0xFFC05148         /* DMA12 Bandwidth Monitor Count */
#define REG_DMA12_BWMCNT_CUR            0xFFC0514C         /* DMA12 Bandwidth Monitor Count Current */

/* =========================
        DMA13
   ========================= */
#define REG_DMA13_DSCPTR_NXT            0xFFC07000         /* DMA13 Pointer to Next Initial Descriptor */
#define REG_DMA13_ADDRSTART             0xFFC07004         /* DMA13 Start Address of Current Buffer */
#define REG_DMA13_CFG                   0xFFC07008         /* DMA13 Configuration Register */
#define REG_DMA13_XCNT                  0xFFC0700C         /* DMA13 Inner Loop Count Start Value */
#define REG_DMA13_XMOD                  0xFFC07010         /* DMA13 Inner Loop Address Increment */
#define REG_DMA13_YCNT                  0xFFC07014         /* DMA13 Outer Loop Count Start Value (2D only) */
#define REG_DMA13_YMOD                  0xFFC07018         /* DMA13 Outer Loop Address Increment (2D only) */
#define REG_DMA13_DSCPTR_CUR            0xFFC07024         /* DMA13 Current Descriptor Pointer */
#define REG_DMA13_DSCPTR_PRV            0xFFC07028         /* DMA13 Previous Initial Descriptor Pointer */
#define REG_DMA13_ADDR_CUR              0xFFC0702C         /* DMA13 Current Address */
#define REG_DMA13_STAT                  0xFFC07030         /* DMA13 Status Register */
#define REG_DMA13_XCNT_CUR              0xFFC07034         /* DMA13 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA13_YCNT_CUR              0xFFC07038         /* DMA13 Current Row Count (2D only) */
#define REG_DMA13_BWLCNT                0xFFC07040         /* DMA13 Bandwidth Limit Count */
#define REG_DMA13_BWLCNT_CUR            0xFFC07044         /* DMA13 Bandwidth Limit Count Current */
#define REG_DMA13_BWMCNT                0xFFC07048         /* DMA13 Bandwidth Monitor Count */
#define REG_DMA13_BWMCNT_CUR            0xFFC0704C         /* DMA13 Bandwidth Monitor Count Current */

/* =========================
        DMA14
   ========================= */
#define REG_DMA14_DSCPTR_NXT            0xFFC07080         /* DMA14 Pointer to Next Initial Descriptor */
#define REG_DMA14_ADDRSTART             0xFFC07084         /* DMA14 Start Address of Current Buffer */
#define REG_DMA14_CFG                   0xFFC07088         /* DMA14 Configuration Register */
#define REG_DMA14_XCNT                  0xFFC0708C         /* DMA14 Inner Loop Count Start Value */
#define REG_DMA14_XMOD                  0xFFC07090         /* DMA14 Inner Loop Address Increment */
#define REG_DMA14_YCNT                  0xFFC07094         /* DMA14 Outer Loop Count Start Value (2D only) */
#define REG_DMA14_YMOD                  0xFFC07098         /* DMA14 Outer Loop Address Increment (2D only) */
#define REG_DMA14_DSCPTR_CUR            0xFFC070A4         /* DMA14 Current Descriptor Pointer */
#define REG_DMA14_DSCPTR_PRV            0xFFC070A8         /* DMA14 Previous Initial Descriptor Pointer */
#define REG_DMA14_ADDR_CUR              0xFFC070AC         /* DMA14 Current Address */
#define REG_DMA14_STAT                  0xFFC070B0         /* DMA14 Status Register */
#define REG_DMA14_XCNT_CUR              0xFFC070B4         /* DMA14 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA14_YCNT_CUR              0xFFC070B8         /* DMA14 Current Row Count (2D only) */
#define REG_DMA14_BWLCNT                0xFFC070C0         /* DMA14 Bandwidth Limit Count */
#define REG_DMA14_BWLCNT_CUR            0xFFC070C4         /* DMA14 Bandwidth Limit Count Current */
#define REG_DMA14_BWMCNT                0xFFC070C8         /* DMA14 Bandwidth Monitor Count */
#define REG_DMA14_BWMCNT_CUR            0xFFC070CC         /* DMA14 Bandwidth Monitor Count Current */

/* =========================
        DMA15
   ========================= */
#define REG_DMA15_DSCPTR_NXT            0xFFC07100         /* DMA15 Pointer to Next Initial Descriptor */
#define REG_DMA15_ADDRSTART             0xFFC07104         /* DMA15 Start Address of Current Buffer */
#define REG_DMA15_CFG                   0xFFC07108         /* DMA15 Configuration Register */
#define REG_DMA15_XCNT                  0xFFC0710C         /* DMA15 Inner Loop Count Start Value */
#define REG_DMA15_XMOD                  0xFFC07110         /* DMA15 Inner Loop Address Increment */
#define REG_DMA15_YCNT                  0xFFC07114         /* DMA15 Outer Loop Count Start Value (2D only) */
#define REG_DMA15_YMOD                  0xFFC07118         /* DMA15 Outer Loop Address Increment (2D only) */
#define REG_DMA15_DSCPTR_CUR            0xFFC07124         /* DMA15 Current Descriptor Pointer */
#define REG_DMA15_DSCPTR_PRV            0xFFC07128         /* DMA15 Previous Initial Descriptor Pointer */
#define REG_DMA15_ADDR_CUR              0xFFC0712C         /* DMA15 Current Address */
#define REG_DMA15_STAT                  0xFFC07130         /* DMA15 Status Register */
#define REG_DMA15_XCNT_CUR              0xFFC07134         /* DMA15 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA15_YCNT_CUR              0xFFC07138         /* DMA15 Current Row Count (2D only) */
#define REG_DMA15_BWLCNT                0xFFC07140         /* DMA15 Bandwidth Limit Count */
#define REG_DMA15_BWLCNT_CUR            0xFFC07144         /* DMA15 Bandwidth Limit Count Current */
#define REG_DMA15_BWMCNT                0xFFC07148         /* DMA15 Bandwidth Monitor Count */
#define REG_DMA15_BWMCNT_CUR            0xFFC0714C         /* DMA15 Bandwidth Monitor Count Current */

/* =========================
        DMA16
   ========================= */
#define REG_DMA16_DSCPTR_NXT            0xFFC07180         /* DMA16 Pointer to Next Initial Descriptor */
#define REG_DMA16_ADDRSTART             0xFFC07184         /* DMA16 Start Address of Current Buffer */
#define REG_DMA16_CFG                   0xFFC07188         /* DMA16 Configuration Register */
#define REG_DMA16_XCNT                  0xFFC0718C         /* DMA16 Inner Loop Count Start Value */
#define REG_DMA16_XMOD                  0xFFC07190         /* DMA16 Inner Loop Address Increment */
#define REG_DMA16_YCNT                  0xFFC07194         /* DMA16 Outer Loop Count Start Value (2D only) */
#define REG_DMA16_YMOD                  0xFFC07198         /* DMA16 Outer Loop Address Increment (2D only) */
#define REG_DMA16_DSCPTR_CUR            0xFFC071A4         /* DMA16 Current Descriptor Pointer */
#define REG_DMA16_DSCPTR_PRV            0xFFC071A8         /* DMA16 Previous Initial Descriptor Pointer */
#define REG_DMA16_ADDR_CUR              0xFFC071AC         /* DMA16 Current Address */
#define REG_DMA16_STAT                  0xFFC071B0         /* DMA16 Status Register */
#define REG_DMA16_XCNT_CUR              0xFFC071B4         /* DMA16 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA16_YCNT_CUR              0xFFC071B8         /* DMA16 Current Row Count (2D only) */
#define REG_DMA16_BWLCNT                0xFFC071C0         /* DMA16 Bandwidth Limit Count */
#define REG_DMA16_BWLCNT_CUR            0xFFC071C4         /* DMA16 Bandwidth Limit Count Current */
#define REG_DMA16_BWMCNT                0xFFC071C8         /* DMA16 Bandwidth Monitor Count */
#define REG_DMA16_BWMCNT_CUR            0xFFC071CC         /* DMA16 Bandwidth Monitor Count Current */

/* =========================
        DMA17
   ========================= */
#define REG_DMA17_DSCPTR_NXT            0xFFC07200         /* DMA17 Pointer to Next Initial Descriptor */
#define REG_DMA17_ADDRSTART             0xFFC07204         /* DMA17 Start Address of Current Buffer */
#define REG_DMA17_CFG                   0xFFC07208         /* DMA17 Configuration Register */
#define REG_DMA17_XCNT                  0xFFC0720C         /* DMA17 Inner Loop Count Start Value */
#define REG_DMA17_XMOD                  0xFFC07210         /* DMA17 Inner Loop Address Increment */
#define REG_DMA17_YCNT                  0xFFC07214         /* DMA17 Outer Loop Count Start Value (2D only) */
#define REG_DMA17_YMOD                  0xFFC07218         /* DMA17 Outer Loop Address Increment (2D only) */
#define REG_DMA17_DSCPTR_CUR            0xFFC07224         /* DMA17 Current Descriptor Pointer */
#define REG_DMA17_DSCPTR_PRV            0xFFC07228         /* DMA17 Previous Initial Descriptor Pointer */
#define REG_DMA17_ADDR_CUR              0xFFC0722C         /* DMA17 Current Address */
#define REG_DMA17_STAT                  0xFFC07230         /* DMA17 Status Register */
#define REG_DMA17_XCNT_CUR              0xFFC07234         /* DMA17 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA17_YCNT_CUR              0xFFC07238         /* DMA17 Current Row Count (2D only) */
#define REG_DMA17_BWLCNT                0xFFC07240         /* DMA17 Bandwidth Limit Count */
#define REG_DMA17_BWLCNT_CUR            0xFFC07244         /* DMA17 Bandwidth Limit Count Current */
#define REG_DMA17_BWMCNT                0xFFC07248         /* DMA17 Bandwidth Monitor Count */
#define REG_DMA17_BWMCNT_CUR            0xFFC0724C         /* DMA17 Bandwidth Monitor Count Current */

/* =========================
        DMA18
   ========================= */
#define REG_DMA18_DSCPTR_NXT            0xFFC07280         /* DMA18 Pointer to Next Initial Descriptor */
#define REG_DMA18_ADDRSTART             0xFFC07284         /* DMA18 Start Address of Current Buffer */
#define REG_DMA18_CFG                   0xFFC07288         /* DMA18 Configuration Register */
#define REG_DMA18_XCNT                  0xFFC0728C         /* DMA18 Inner Loop Count Start Value */
#define REG_DMA18_XMOD                  0xFFC07290         /* DMA18 Inner Loop Address Increment */
#define REG_DMA18_YCNT                  0xFFC07294         /* DMA18 Outer Loop Count Start Value (2D only) */
#define REG_DMA18_YMOD                  0xFFC07298         /* DMA18 Outer Loop Address Increment (2D only) */
#define REG_DMA18_DSCPTR_CUR            0xFFC072A4         /* DMA18 Current Descriptor Pointer */
#define REG_DMA18_DSCPTR_PRV            0xFFC072A8         /* DMA18 Previous Initial Descriptor Pointer */
#define REG_DMA18_ADDR_CUR              0xFFC072AC         /* DMA18 Current Address */
#define REG_DMA18_STAT                  0xFFC072B0         /* DMA18 Status Register */
#define REG_DMA18_XCNT_CUR              0xFFC072B4         /* DMA18 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA18_YCNT_CUR              0xFFC072B8         /* DMA18 Current Row Count (2D only) */
#define REG_DMA18_BWLCNT                0xFFC072C0         /* DMA18 Bandwidth Limit Count */
#define REG_DMA18_BWLCNT_CUR            0xFFC072C4         /* DMA18 Bandwidth Limit Count Current */
#define REG_DMA18_BWMCNT                0xFFC072C8         /* DMA18 Bandwidth Monitor Count */
#define REG_DMA18_BWMCNT_CUR            0xFFC072CC         /* DMA18 Bandwidth Monitor Count Current */

/* =========================
        DMA19
   ========================= */
#define REG_DMA19_DSCPTR_NXT            0xFFC07300         /* DMA19 Pointer to Next Initial Descriptor */
#define REG_DMA19_ADDRSTART             0xFFC07304         /* DMA19 Start Address of Current Buffer */
#define REG_DMA19_CFG                   0xFFC07308         /* DMA19 Configuration Register */
#define REG_DMA19_XCNT                  0xFFC0730C         /* DMA19 Inner Loop Count Start Value */
#define REG_DMA19_XMOD                  0xFFC07310         /* DMA19 Inner Loop Address Increment */
#define REG_DMA19_YCNT                  0xFFC07314         /* DMA19 Outer Loop Count Start Value (2D only) */
#define REG_DMA19_YMOD                  0xFFC07318         /* DMA19 Outer Loop Address Increment (2D only) */
#define REG_DMA19_DSCPTR_CUR            0xFFC07324         /* DMA19 Current Descriptor Pointer */
#define REG_DMA19_DSCPTR_PRV            0xFFC07328         /* DMA19 Previous Initial Descriptor Pointer */
#define REG_DMA19_ADDR_CUR              0xFFC0732C         /* DMA19 Current Address */
#define REG_DMA19_STAT                  0xFFC07330         /* DMA19 Status Register */
#define REG_DMA19_XCNT_CUR              0xFFC07334         /* DMA19 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA19_YCNT_CUR              0xFFC07338         /* DMA19 Current Row Count (2D only) */
#define REG_DMA19_BWLCNT                0xFFC07340         /* DMA19 Bandwidth Limit Count */
#define REG_DMA19_BWLCNT_CUR            0xFFC07344         /* DMA19 Bandwidth Limit Count Current */
#define REG_DMA19_BWMCNT                0xFFC07348         /* DMA19 Bandwidth Monitor Count */
#define REG_DMA19_BWMCNT_CUR            0xFFC0734C         /* DMA19 Bandwidth Monitor Count Current */

/* =========================
        DMA20
   ========================= */
#define REG_DMA20_DSCPTR_NXT            0xFFC07380         /* DMA20 Pointer to Next Initial Descriptor */
#define REG_DMA20_ADDRSTART             0xFFC07384         /* DMA20 Start Address of Current Buffer */
#define REG_DMA20_CFG                   0xFFC07388         /* DMA20 Configuration Register */
#define REG_DMA20_XCNT                  0xFFC0738C         /* DMA20 Inner Loop Count Start Value */
#define REG_DMA20_XMOD                  0xFFC07390         /* DMA20 Inner Loop Address Increment */
#define REG_DMA20_YCNT                  0xFFC07394         /* DMA20 Outer Loop Count Start Value (2D only) */
#define REG_DMA20_YMOD                  0xFFC07398         /* DMA20 Outer Loop Address Increment (2D only) */
#define REG_DMA20_DSCPTR_CUR            0xFFC073A4         /* DMA20 Current Descriptor Pointer */
#define REG_DMA20_DSCPTR_PRV            0xFFC073A8         /* DMA20 Previous Initial Descriptor Pointer */
#define REG_DMA20_ADDR_CUR              0xFFC073AC         /* DMA20 Current Address */
#define REG_DMA20_STAT                  0xFFC073B0         /* DMA20 Status Register */
#define REG_DMA20_XCNT_CUR              0xFFC073B4         /* DMA20 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA20_YCNT_CUR              0xFFC073B8         /* DMA20 Current Row Count (2D only) */
#define REG_DMA20_BWLCNT                0xFFC073C0         /* DMA20 Bandwidth Limit Count */
#define REG_DMA20_BWLCNT_CUR            0xFFC073C4         /* DMA20 Bandwidth Limit Count Current */
#define REG_DMA20_BWMCNT                0xFFC073C8         /* DMA20 Bandwidth Monitor Count */
#define REG_DMA20_BWMCNT_CUR            0xFFC073CC         /* DMA20 Bandwidth Monitor Count Current */

/* =========================
        DMA21
   ========================= */
#define REG_DMA21_DSCPTR_NXT            0xFFC09000         /* DMA21 Pointer to Next Initial Descriptor */
#define REG_DMA21_ADDRSTART             0xFFC09004         /* DMA21 Start Address of Current Buffer */
#define REG_DMA21_CFG                   0xFFC09008         /* DMA21 Configuration Register */
#define REG_DMA21_XCNT                  0xFFC0900C         /* DMA21 Inner Loop Count Start Value */
#define REG_DMA21_XMOD                  0xFFC09010         /* DMA21 Inner Loop Address Increment */
#define REG_DMA21_YCNT                  0xFFC09014         /* DMA21 Outer Loop Count Start Value (2D only) */
#define REG_DMA21_YMOD                  0xFFC09018         /* DMA21 Outer Loop Address Increment (2D only) */
#define REG_DMA21_DSCPTR_CUR            0xFFC09024         /* DMA21 Current Descriptor Pointer */
#define REG_DMA21_DSCPTR_PRV            0xFFC09028         /* DMA21 Previous Initial Descriptor Pointer */
#define REG_DMA21_ADDR_CUR              0xFFC0902C         /* DMA21 Current Address */
#define REG_DMA21_STAT                  0xFFC09030         /* DMA21 Status Register */
#define REG_DMA21_XCNT_CUR              0xFFC09034         /* DMA21 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA21_YCNT_CUR              0xFFC09038         /* DMA21 Current Row Count (2D only) */
#define REG_DMA21_BWLCNT                0xFFC09040         /* DMA21 Bandwidth Limit Count */
#define REG_DMA21_BWLCNT_CUR            0xFFC09044         /* DMA21 Bandwidth Limit Count Current */
#define REG_DMA21_BWMCNT                0xFFC09048         /* DMA21 Bandwidth Monitor Count */
#define REG_DMA21_BWMCNT_CUR            0xFFC0904C         /* DMA21 Bandwidth Monitor Count Current */

/* =========================
        DMA22
   ========================= */
#define REG_DMA22_DSCPTR_NXT            0xFFC09080         /* DMA22 Pointer to Next Initial Descriptor */
#define REG_DMA22_ADDRSTART             0xFFC09084         /* DMA22 Start Address of Current Buffer */
#define REG_DMA22_CFG                   0xFFC09088         /* DMA22 Configuration Register */
#define REG_DMA22_XCNT                  0xFFC0908C         /* DMA22 Inner Loop Count Start Value */
#define REG_DMA22_XMOD                  0xFFC09090         /* DMA22 Inner Loop Address Increment */
#define REG_DMA22_YCNT                  0xFFC09094         /* DMA22 Outer Loop Count Start Value (2D only) */
#define REG_DMA22_YMOD                  0xFFC09098         /* DMA22 Outer Loop Address Increment (2D only) */
#define REG_DMA22_DSCPTR_CUR            0xFFC090A4         /* DMA22 Current Descriptor Pointer */
#define REG_DMA22_DSCPTR_PRV            0xFFC090A8         /* DMA22 Previous Initial Descriptor Pointer */
#define REG_DMA22_ADDR_CUR              0xFFC090AC         /* DMA22 Current Address */
#define REG_DMA22_STAT                  0xFFC090B0         /* DMA22 Status Register */
#define REG_DMA22_XCNT_CUR              0xFFC090B4         /* DMA22 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA22_YCNT_CUR              0xFFC090B8         /* DMA22 Current Row Count (2D only) */
#define REG_DMA22_BWLCNT                0xFFC090C0         /* DMA22 Bandwidth Limit Count */
#define REG_DMA22_BWLCNT_CUR            0xFFC090C4         /* DMA22 Bandwidth Limit Count Current */
#define REG_DMA22_BWMCNT                0xFFC090C8         /* DMA22 Bandwidth Monitor Count */
#define REG_DMA22_BWMCNT_CUR            0xFFC090CC         /* DMA22 Bandwidth Monitor Count Current */

/* =========================
        DMA23
   ========================= */
#define REG_DMA23_DSCPTR_NXT            0xFFC09100         /* DMA23 Pointer to Next Initial Descriptor */
#define REG_DMA23_ADDRSTART             0xFFC09104         /* DMA23 Start Address of Current Buffer */
#define REG_DMA23_CFG                   0xFFC09108         /* DMA23 Configuration Register */
#define REG_DMA23_XCNT                  0xFFC0910C         /* DMA23 Inner Loop Count Start Value */
#define REG_DMA23_XMOD                  0xFFC09110         /* DMA23 Inner Loop Address Increment */
#define REG_DMA23_YCNT                  0xFFC09114         /* DMA23 Outer Loop Count Start Value (2D only) */
#define REG_DMA23_YMOD                  0xFFC09118         /* DMA23 Outer Loop Address Increment (2D only) */
#define REG_DMA23_DSCPTR_CUR            0xFFC09124         /* DMA23 Current Descriptor Pointer */
#define REG_DMA23_DSCPTR_PRV            0xFFC09128         /* DMA23 Previous Initial Descriptor Pointer */
#define REG_DMA23_ADDR_CUR              0xFFC0912C         /* DMA23 Current Address */
#define REG_DMA23_STAT                  0xFFC09130         /* DMA23 Status Register */
#define REG_DMA23_XCNT_CUR              0xFFC09134         /* DMA23 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA23_YCNT_CUR              0xFFC09138         /* DMA23 Current Row Count (2D only) */
#define REG_DMA23_BWLCNT                0xFFC09140         /* DMA23 Bandwidth Limit Count */
#define REG_DMA23_BWLCNT_CUR            0xFFC09144         /* DMA23 Bandwidth Limit Count Current */
#define REG_DMA23_BWMCNT                0xFFC09148         /* DMA23 Bandwidth Monitor Count */
#define REG_DMA23_BWMCNT_CUR            0xFFC0914C         /* DMA23 Bandwidth Monitor Count Current */

/* =========================
        DMA24
   ========================= */
#define REG_DMA24_DSCPTR_NXT            0xFFC09180         /* DMA24 Pointer to Next Initial Descriptor */
#define REG_DMA24_ADDRSTART             0xFFC09184         /* DMA24 Start Address of Current Buffer */
#define REG_DMA24_CFG                   0xFFC09188         /* DMA24 Configuration Register */
#define REG_DMA24_XCNT                  0xFFC0918C         /* DMA24 Inner Loop Count Start Value */
#define REG_DMA24_XMOD                  0xFFC09190         /* DMA24 Inner Loop Address Increment */
#define REG_DMA24_YCNT                  0xFFC09194         /* DMA24 Outer Loop Count Start Value (2D only) */
#define REG_DMA24_YMOD                  0xFFC09198         /* DMA24 Outer Loop Address Increment (2D only) */
#define REG_DMA24_DSCPTR_CUR            0xFFC091A4         /* DMA24 Current Descriptor Pointer */
#define REG_DMA24_DSCPTR_PRV            0xFFC091A8         /* DMA24 Previous Initial Descriptor Pointer */
#define REG_DMA24_ADDR_CUR              0xFFC091AC         /* DMA24 Current Address */
#define REG_DMA24_STAT                  0xFFC091B0         /* DMA24 Status Register */
#define REG_DMA24_XCNT_CUR              0xFFC091B4         /* DMA24 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA24_YCNT_CUR              0xFFC091B8         /* DMA24 Current Row Count (2D only) */
#define REG_DMA24_BWLCNT                0xFFC091C0         /* DMA24 Bandwidth Limit Count */
#define REG_DMA24_BWLCNT_CUR            0xFFC091C4         /* DMA24 Bandwidth Limit Count Current */
#define REG_DMA24_BWMCNT                0xFFC091C8         /* DMA24 Bandwidth Monitor Count */
#define REG_DMA24_BWMCNT_CUR            0xFFC091CC         /* DMA24 Bandwidth Monitor Count Current */

/* =========================
        DMA25
   ========================= */
#define REG_DMA25_DSCPTR_NXT            0xFFC09200         /* DMA25 Pointer to Next Initial Descriptor */
#define REG_DMA25_ADDRSTART             0xFFC09204         /* DMA25 Start Address of Current Buffer */
#define REG_DMA25_CFG                   0xFFC09208         /* DMA25 Configuration Register */
#define REG_DMA25_XCNT                  0xFFC0920C         /* DMA25 Inner Loop Count Start Value */
#define REG_DMA25_XMOD                  0xFFC09210         /* DMA25 Inner Loop Address Increment */
#define REG_DMA25_YCNT                  0xFFC09214         /* DMA25 Outer Loop Count Start Value (2D only) */
#define REG_DMA25_YMOD                  0xFFC09218         /* DMA25 Outer Loop Address Increment (2D only) */
#define REG_DMA25_DSCPTR_CUR            0xFFC09224         /* DMA25 Current Descriptor Pointer */
#define REG_DMA25_DSCPTR_PRV            0xFFC09228         /* DMA25 Previous Initial Descriptor Pointer */
#define REG_DMA25_ADDR_CUR              0xFFC0922C         /* DMA25 Current Address */
#define REG_DMA25_STAT                  0xFFC09230         /* DMA25 Status Register */
#define REG_DMA25_XCNT_CUR              0xFFC09234         /* DMA25 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA25_YCNT_CUR              0xFFC09238         /* DMA25 Current Row Count (2D only) */
#define REG_DMA25_BWLCNT                0xFFC09240         /* DMA25 Bandwidth Limit Count */
#define REG_DMA25_BWLCNT_CUR            0xFFC09244         /* DMA25 Bandwidth Limit Count Current */
#define REG_DMA25_BWMCNT                0xFFC09248         /* DMA25 Bandwidth Monitor Count */
#define REG_DMA25_BWMCNT_CUR            0xFFC0924C         /* DMA25 Bandwidth Monitor Count Current */

/* =========================
        DMA26
   ========================= */
#define REG_DMA26_DSCPTR_NXT            0xFFC09280         /* DMA26 Pointer to Next Initial Descriptor */
#define REG_DMA26_ADDRSTART             0xFFC09284         /* DMA26 Start Address of Current Buffer */
#define REG_DMA26_CFG                   0xFFC09288         /* DMA26 Configuration Register */
#define REG_DMA26_XCNT                  0xFFC0928C         /* DMA26 Inner Loop Count Start Value */
#define REG_DMA26_XMOD                  0xFFC09290         /* DMA26 Inner Loop Address Increment */
#define REG_DMA26_YCNT                  0xFFC09294         /* DMA26 Outer Loop Count Start Value (2D only) */
#define REG_DMA26_YMOD                  0xFFC09298         /* DMA26 Outer Loop Address Increment (2D only) */
#define REG_DMA26_DSCPTR_CUR            0xFFC092A4         /* DMA26 Current Descriptor Pointer */
#define REG_DMA26_DSCPTR_PRV            0xFFC092A8         /* DMA26 Previous Initial Descriptor Pointer */
#define REG_DMA26_ADDR_CUR              0xFFC092AC         /* DMA26 Current Address */
#define REG_DMA26_STAT                  0xFFC092B0         /* DMA26 Status Register */
#define REG_DMA26_XCNT_CUR              0xFFC092B4         /* DMA26 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA26_YCNT_CUR              0xFFC092B8         /* DMA26 Current Row Count (2D only) */
#define REG_DMA26_BWLCNT                0xFFC092C0         /* DMA26 Bandwidth Limit Count */
#define REG_DMA26_BWLCNT_CUR            0xFFC092C4         /* DMA26 Bandwidth Limit Count Current */
#define REG_DMA26_BWMCNT                0xFFC092C8         /* DMA26 Bandwidth Monitor Count */
#define REG_DMA26_BWMCNT_CUR            0xFFC092CC         /* DMA26 Bandwidth Monitor Count Current */

/* =========================
        DMA27
   ========================= */
#define REG_DMA27_DSCPTR_NXT            0xFFC09300         /* DMA27 Pointer to Next Initial Descriptor */
#define REG_DMA27_ADDRSTART             0xFFC09304         /* DMA27 Start Address of Current Buffer */
#define REG_DMA27_CFG                   0xFFC09308         /* DMA27 Configuration Register */
#define REG_DMA27_XCNT                  0xFFC0930C         /* DMA27 Inner Loop Count Start Value */
#define REG_DMA27_XMOD                  0xFFC09310         /* DMA27 Inner Loop Address Increment */
#define REG_DMA27_YCNT                  0xFFC09314         /* DMA27 Outer Loop Count Start Value (2D only) */
#define REG_DMA27_YMOD                  0xFFC09318         /* DMA27 Outer Loop Address Increment (2D only) */
#define REG_DMA27_DSCPTR_CUR            0xFFC09324         /* DMA27 Current Descriptor Pointer */
#define REG_DMA27_DSCPTR_PRV            0xFFC09328         /* DMA27 Previous Initial Descriptor Pointer */
#define REG_DMA27_ADDR_CUR              0xFFC0932C         /* DMA27 Current Address */
#define REG_DMA27_STAT                  0xFFC09330         /* DMA27 Status Register */
#define REG_DMA27_XCNT_CUR              0xFFC09334         /* DMA27 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA27_YCNT_CUR              0xFFC09338         /* DMA27 Current Row Count (2D only) */
#define REG_DMA27_BWLCNT                0xFFC09340         /* DMA27 Bandwidth Limit Count */
#define REG_DMA27_BWLCNT_CUR            0xFFC09344         /* DMA27 Bandwidth Limit Count Current */
#define REG_DMA27_BWMCNT                0xFFC09348         /* DMA27 Bandwidth Monitor Count */
#define REG_DMA27_BWMCNT_CUR            0xFFC0934C         /* DMA27 Bandwidth Monitor Count Current */

/* =========================
        DMA28
   ========================= */
#define REG_DMA28_DSCPTR_NXT            0xFFC09380         /* DMA28 Pointer to Next Initial Descriptor */
#define REG_DMA28_ADDRSTART             0xFFC09384         /* DMA28 Start Address of Current Buffer */
#define REG_DMA28_CFG                   0xFFC09388         /* DMA28 Configuration Register */
#define REG_DMA28_XCNT                  0xFFC0938C         /* DMA28 Inner Loop Count Start Value */
#define REG_DMA28_XMOD                  0xFFC09390         /* DMA28 Inner Loop Address Increment */
#define REG_DMA28_YCNT                  0xFFC09394         /* DMA28 Outer Loop Count Start Value (2D only) */
#define REG_DMA28_YMOD                  0xFFC09398         /* DMA28 Outer Loop Address Increment (2D only) */
#define REG_DMA28_DSCPTR_CUR            0xFFC093A4         /* DMA28 Current Descriptor Pointer */
#define REG_DMA28_DSCPTR_PRV            0xFFC093A8         /* DMA28 Previous Initial Descriptor Pointer */
#define REG_DMA28_ADDR_CUR              0xFFC093AC         /* DMA28 Current Address */
#define REG_DMA28_STAT                  0xFFC093B0         /* DMA28 Status Register */
#define REG_DMA28_XCNT_CUR              0xFFC093B4         /* DMA28 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA28_YCNT_CUR              0xFFC093B8         /* DMA28 Current Row Count (2D only) */
#define REG_DMA28_BWLCNT                0xFFC093C0         /* DMA28 Bandwidth Limit Count */
#define REG_DMA28_BWLCNT_CUR            0xFFC093C4         /* DMA28 Bandwidth Limit Count Current */
#define REG_DMA28_BWMCNT                0xFFC093C8         /* DMA28 Bandwidth Monitor Count */
#define REG_DMA28_BWMCNT_CUR            0xFFC093CC         /* DMA28 Bandwidth Monitor Count Current */

/* =========================
        DMA29
   ========================= */
#define REG_DMA29_DSCPTR_NXT            0xFFC0B000         /* DMA29 Pointer to Next Initial Descriptor */
#define REG_DMA29_ADDRSTART             0xFFC0B004         /* DMA29 Start Address of Current Buffer */
#define REG_DMA29_CFG                   0xFFC0B008         /* DMA29 Configuration Register */
#define REG_DMA29_XCNT                  0xFFC0B00C         /* DMA29 Inner Loop Count Start Value */
#define REG_DMA29_XMOD                  0xFFC0B010         /* DMA29 Inner Loop Address Increment */
#define REG_DMA29_YCNT                  0xFFC0B014         /* DMA29 Outer Loop Count Start Value (2D only) */
#define REG_DMA29_YMOD                  0xFFC0B018         /* DMA29 Outer Loop Address Increment (2D only) */
#define REG_DMA29_DSCPTR_CUR            0xFFC0B024         /* DMA29 Current Descriptor Pointer */
#define REG_DMA29_DSCPTR_PRV            0xFFC0B028         /* DMA29 Previous Initial Descriptor Pointer */
#define REG_DMA29_ADDR_CUR              0xFFC0B02C         /* DMA29 Current Address */
#define REG_DMA29_STAT                  0xFFC0B030         /* DMA29 Status Register */
#define REG_DMA29_XCNT_CUR              0xFFC0B034         /* DMA29 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA29_YCNT_CUR              0xFFC0B038         /* DMA29 Current Row Count (2D only) */
#define REG_DMA29_BWLCNT                0xFFC0B040         /* DMA29 Bandwidth Limit Count */
#define REG_DMA29_BWLCNT_CUR            0xFFC0B044         /* DMA29 Bandwidth Limit Count Current */
#define REG_DMA29_BWMCNT                0xFFC0B048         /* DMA29 Bandwidth Monitor Count */
#define REG_DMA29_BWMCNT_CUR            0xFFC0B04C         /* DMA29 Bandwidth Monitor Count Current */

/* =========================
        DMA30
   ========================= */
#define REG_DMA30_DSCPTR_NXT            0xFFC0B080         /* DMA30 Pointer to Next Initial Descriptor */
#define REG_DMA30_ADDRSTART             0xFFC0B084         /* DMA30 Start Address of Current Buffer */
#define REG_DMA30_CFG                   0xFFC0B088         /* DMA30 Configuration Register */
#define REG_DMA30_XCNT                  0xFFC0B08C         /* DMA30 Inner Loop Count Start Value */
#define REG_DMA30_XMOD                  0xFFC0B090         /* DMA30 Inner Loop Address Increment */
#define REG_DMA30_YCNT                  0xFFC0B094         /* DMA30 Outer Loop Count Start Value (2D only) */
#define REG_DMA30_YMOD                  0xFFC0B098         /* DMA30 Outer Loop Address Increment (2D only) */
#define REG_DMA30_DSCPTR_CUR            0xFFC0B0A4         /* DMA30 Current Descriptor Pointer */
#define REG_DMA30_DSCPTR_PRV            0xFFC0B0A8         /* DMA30 Previous Initial Descriptor Pointer */
#define REG_DMA30_ADDR_CUR              0xFFC0B0AC         /* DMA30 Current Address */
#define REG_DMA30_STAT                  0xFFC0B0B0         /* DMA30 Status Register */
#define REG_DMA30_XCNT_CUR              0xFFC0B0B4         /* DMA30 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA30_YCNT_CUR              0xFFC0B0B8         /* DMA30 Current Row Count (2D only) */
#define REG_DMA30_BWLCNT                0xFFC0B0C0         /* DMA30 Bandwidth Limit Count */
#define REG_DMA30_BWLCNT_CUR            0xFFC0B0C4         /* DMA30 Bandwidth Limit Count Current */
#define REG_DMA30_BWMCNT                0xFFC0B0C8         /* DMA30 Bandwidth Monitor Count */
#define REG_DMA30_BWMCNT_CUR            0xFFC0B0CC         /* DMA30 Bandwidth Monitor Count Current */

/* =========================
        DMA31
   ========================= */
#define REG_DMA31_DSCPTR_NXT            0xFFC0B100         /* DMA31 Pointer to Next Initial Descriptor */
#define REG_DMA31_ADDRSTART             0xFFC0B104         /* DMA31 Start Address of Current Buffer */
#define REG_DMA31_CFG                   0xFFC0B108         /* DMA31 Configuration Register */
#define REG_DMA31_XCNT                  0xFFC0B10C         /* DMA31 Inner Loop Count Start Value */
#define REG_DMA31_XMOD                  0xFFC0B110         /* DMA31 Inner Loop Address Increment */
#define REG_DMA31_YCNT                  0xFFC0B114         /* DMA31 Outer Loop Count Start Value (2D only) */
#define REG_DMA31_YMOD                  0xFFC0B118         /* DMA31 Outer Loop Address Increment (2D only) */
#define REG_DMA31_DSCPTR_CUR            0xFFC0B124         /* DMA31 Current Descriptor Pointer */
#define REG_DMA31_DSCPTR_PRV            0xFFC0B128         /* DMA31 Previous Initial Descriptor Pointer */
#define REG_DMA31_ADDR_CUR              0xFFC0B12C         /* DMA31 Current Address */
#define REG_DMA31_STAT                  0xFFC0B130         /* DMA31 Status Register */
#define REG_DMA31_XCNT_CUR              0xFFC0B134         /* DMA31 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA31_YCNT_CUR              0xFFC0B138         /* DMA31 Current Row Count (2D only) */
#define REG_DMA31_BWLCNT                0xFFC0B140         /* DMA31 Bandwidth Limit Count */
#define REG_DMA31_BWLCNT_CUR            0xFFC0B144         /* DMA31 Bandwidth Limit Count Current */
#define REG_DMA31_BWMCNT                0xFFC0B148         /* DMA31 Bandwidth Monitor Count */
#define REG_DMA31_BWMCNT_CUR            0xFFC0B14C         /* DMA31 Bandwidth Monitor Count Current */

/* =========================
        DMA32
   ========================= */
#define REG_DMA32_DSCPTR_NXT            0xFFC0B180         /* DMA32 Pointer to Next Initial Descriptor */
#define REG_DMA32_ADDRSTART             0xFFC0B184         /* DMA32 Start Address of Current Buffer */
#define REG_DMA32_CFG                   0xFFC0B188         /* DMA32 Configuration Register */
#define REG_DMA32_XCNT                  0xFFC0B18C         /* DMA32 Inner Loop Count Start Value */
#define REG_DMA32_XMOD                  0xFFC0B190         /* DMA32 Inner Loop Address Increment */
#define REG_DMA32_YCNT                  0xFFC0B194         /* DMA32 Outer Loop Count Start Value (2D only) */
#define REG_DMA32_YMOD                  0xFFC0B198         /* DMA32 Outer Loop Address Increment (2D only) */
#define REG_DMA32_DSCPTR_CUR            0xFFC0B1A4         /* DMA32 Current Descriptor Pointer */
#define REG_DMA32_DSCPTR_PRV            0xFFC0B1A8         /* DMA32 Previous Initial Descriptor Pointer */
#define REG_DMA32_ADDR_CUR              0xFFC0B1AC         /* DMA32 Current Address */
#define REG_DMA32_STAT                  0xFFC0B1B0         /* DMA32 Status Register */
#define REG_DMA32_XCNT_CUR              0xFFC0B1B4         /* DMA32 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA32_YCNT_CUR              0xFFC0B1B8         /* DMA32 Current Row Count (2D only) */
#define REG_DMA32_BWLCNT                0xFFC0B1C0         /* DMA32 Bandwidth Limit Count */
#define REG_DMA32_BWLCNT_CUR            0xFFC0B1C4         /* DMA32 Bandwidth Limit Count Current */
#define REG_DMA32_BWMCNT                0xFFC0B1C8         /* DMA32 Bandwidth Monitor Count */
#define REG_DMA32_BWMCNT_CUR            0xFFC0B1CC         /* DMA32 Bandwidth Monitor Count Current */

/* =========================
        DMA33
   ========================= */
#define REG_DMA33_DSCPTR_NXT            0xFFC0D000         /* DMA33 Pointer to Next Initial Descriptor */
#define REG_DMA33_ADDRSTART             0xFFC0D004         /* DMA33 Start Address of Current Buffer */
#define REG_DMA33_CFG                   0xFFC0D008         /* DMA33 Configuration Register */
#define REG_DMA33_XCNT                  0xFFC0D00C         /* DMA33 Inner Loop Count Start Value */
#define REG_DMA33_XMOD                  0xFFC0D010         /* DMA33 Inner Loop Address Increment */
#define REG_DMA33_YCNT                  0xFFC0D014         /* DMA33 Outer Loop Count Start Value (2D only) */
#define REG_DMA33_YMOD                  0xFFC0D018         /* DMA33 Outer Loop Address Increment (2D only) */
#define REG_DMA33_DSCPTR_CUR            0xFFC0D024         /* DMA33 Current Descriptor Pointer */
#define REG_DMA33_DSCPTR_PRV            0xFFC0D028         /* DMA33 Previous Initial Descriptor Pointer */
#define REG_DMA33_ADDR_CUR              0xFFC0D02C         /* DMA33 Current Address */
#define REG_DMA33_STAT                  0xFFC0D030         /* DMA33 Status Register */
#define REG_DMA33_XCNT_CUR              0xFFC0D034         /* DMA33 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA33_YCNT_CUR              0xFFC0D038         /* DMA33 Current Row Count (2D only) */
#define REG_DMA33_BWLCNT                0xFFC0D040         /* DMA33 Bandwidth Limit Count */
#define REG_DMA33_BWLCNT_CUR            0xFFC0D044         /* DMA33 Bandwidth Limit Count Current */
#define REG_DMA33_BWMCNT                0xFFC0D048         /* DMA33 Bandwidth Monitor Count */
#define REG_DMA33_BWMCNT_CUR            0xFFC0D04C         /* DMA33 Bandwidth Monitor Count Current */

/* =========================
        DMA34
   ========================= */
#define REG_DMA34_DSCPTR_NXT            0xFFC0D080         /* DMA34 Pointer to Next Initial Descriptor */
#define REG_DMA34_ADDRSTART             0xFFC0D084         /* DMA34 Start Address of Current Buffer */
#define REG_DMA34_CFG                   0xFFC0D088         /* DMA34 Configuration Register */
#define REG_DMA34_XCNT                  0xFFC0D08C         /* DMA34 Inner Loop Count Start Value */
#define REG_DMA34_XMOD                  0xFFC0D090         /* DMA34 Inner Loop Address Increment */
#define REG_DMA34_YCNT                  0xFFC0D094         /* DMA34 Outer Loop Count Start Value (2D only) */
#define REG_DMA34_YMOD                  0xFFC0D098         /* DMA34 Outer Loop Address Increment (2D only) */
#define REG_DMA34_DSCPTR_CUR            0xFFC0D0A4         /* DMA34 Current Descriptor Pointer */
#define REG_DMA34_DSCPTR_PRV            0xFFC0D0A8         /* DMA34 Previous Initial Descriptor Pointer */
#define REG_DMA34_ADDR_CUR              0xFFC0D0AC         /* DMA34 Current Address */
#define REG_DMA34_STAT                  0xFFC0D0B0         /* DMA34 Status Register */
#define REG_DMA34_XCNT_CUR              0xFFC0D0B4         /* DMA34 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA34_YCNT_CUR              0xFFC0D0B8         /* DMA34 Current Row Count (2D only) */
#define REG_DMA34_BWLCNT                0xFFC0D0C0         /* DMA34 Bandwidth Limit Count */
#define REG_DMA34_BWLCNT_CUR            0xFFC0D0C4         /* DMA34 Bandwidth Limit Count Current */
#define REG_DMA34_BWMCNT                0xFFC0D0C8         /* DMA34 Bandwidth Monitor Count */
#define REG_DMA34_BWMCNT_CUR            0xFFC0D0CC         /* DMA34 Bandwidth Monitor Count Current */

/* =========================
        DMA35
   ========================= */
#define REG_DMA35_DSCPTR_NXT            0xFFC10000         /* DMA35 Pointer to Next Initial Descriptor */
#define REG_DMA35_ADDRSTART             0xFFC10004         /* DMA35 Start Address of Current Buffer */
#define REG_DMA35_CFG                   0xFFC10008         /* DMA35 Configuration Register */
#define REG_DMA35_XCNT                  0xFFC1000C         /* DMA35 Inner Loop Count Start Value */
#define REG_DMA35_XMOD                  0xFFC10010         /* DMA35 Inner Loop Address Increment */
#define REG_DMA35_YCNT                  0xFFC10014         /* DMA35 Outer Loop Count Start Value (2D only) */
#define REG_DMA35_YMOD                  0xFFC10018         /* DMA35 Outer Loop Address Increment (2D only) */
#define REG_DMA35_DSCPTR_CUR            0xFFC10024         /* DMA35 Current Descriptor Pointer */
#define REG_DMA35_DSCPTR_PRV            0xFFC10028         /* DMA35 Previous Initial Descriptor Pointer */
#define REG_DMA35_ADDR_CUR              0xFFC1002C         /* DMA35 Current Address */
#define REG_DMA35_STAT                  0xFFC10030         /* DMA35 Status Register */
#define REG_DMA35_XCNT_CUR              0xFFC10034         /* DMA35 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA35_YCNT_CUR              0xFFC10038         /* DMA35 Current Row Count (2D only) */
#define REG_DMA35_BWLCNT                0xFFC10040         /* DMA35 Bandwidth Limit Count */
#define REG_DMA35_BWLCNT_CUR            0xFFC10044         /* DMA35 Bandwidth Limit Count Current */
#define REG_DMA35_BWMCNT                0xFFC10048         /* DMA35 Bandwidth Monitor Count */
#define REG_DMA35_BWMCNT_CUR            0xFFC1004C         /* DMA35 Bandwidth Monitor Count Current */

/* =========================
        DMA36
   ========================= */
#define REG_DMA36_DSCPTR_NXT            0xFFC10080         /* DMA36 Pointer to Next Initial Descriptor */
#define REG_DMA36_ADDRSTART             0xFFC10084         /* DMA36 Start Address of Current Buffer */
#define REG_DMA36_CFG                   0xFFC10088         /* DMA36 Configuration Register */
#define REG_DMA36_XCNT                  0xFFC1008C         /* DMA36 Inner Loop Count Start Value */
#define REG_DMA36_XMOD                  0xFFC10090         /* DMA36 Inner Loop Address Increment */
#define REG_DMA36_YCNT                  0xFFC10094         /* DMA36 Outer Loop Count Start Value (2D only) */
#define REG_DMA36_YMOD                  0xFFC10098         /* DMA36 Outer Loop Address Increment (2D only) */
#define REG_DMA36_DSCPTR_CUR            0xFFC100A4         /* DMA36 Current Descriptor Pointer */
#define REG_DMA36_DSCPTR_PRV            0xFFC100A8         /* DMA36 Previous Initial Descriptor Pointer */
#define REG_DMA36_ADDR_CUR              0xFFC100AC         /* DMA36 Current Address */
#define REG_DMA36_STAT                  0xFFC100B0         /* DMA36 Status Register */
#define REG_DMA36_XCNT_CUR              0xFFC100B4         /* DMA36 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA36_YCNT_CUR              0xFFC100B8         /* DMA36 Current Row Count (2D only) */
#define REG_DMA36_BWLCNT                0xFFC100C0         /* DMA36 Bandwidth Limit Count */
#define REG_DMA36_BWLCNT_CUR            0xFFC100C4         /* DMA36 Bandwidth Limit Count Current */
#define REG_DMA36_BWMCNT                0xFFC100C8         /* DMA36 Bandwidth Monitor Count */
#define REG_DMA36_BWMCNT_CUR            0xFFC100CC         /* DMA36 Bandwidth Monitor Count Current */

/* =========================
        DMA37
   ========================= */
#define REG_DMA37_DSCPTR_NXT            0xFFC10100         /* DMA37 Pointer to Next Initial Descriptor */
#define REG_DMA37_ADDRSTART             0xFFC10104         /* DMA37 Start Address of Current Buffer */
#define REG_DMA37_CFG                   0xFFC10108         /* DMA37 Configuration Register */
#define REG_DMA37_XCNT                  0xFFC1010C         /* DMA37 Inner Loop Count Start Value */
#define REG_DMA37_XMOD                  0xFFC10110         /* DMA37 Inner Loop Address Increment */
#define REG_DMA37_YCNT                  0xFFC10114         /* DMA37 Outer Loop Count Start Value (2D only) */
#define REG_DMA37_YMOD                  0xFFC10118         /* DMA37 Outer Loop Address Increment (2D only) */
#define REG_DMA37_DSCPTR_CUR            0xFFC10124         /* DMA37 Current Descriptor Pointer */
#define REG_DMA37_DSCPTR_PRV            0xFFC10128         /* DMA37 Previous Initial Descriptor Pointer */
#define REG_DMA37_ADDR_CUR              0xFFC1012C         /* DMA37 Current Address */
#define REG_DMA37_STAT                  0xFFC10130         /* DMA37 Status Register */
#define REG_DMA37_XCNT_CUR              0xFFC10134         /* DMA37 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA37_YCNT_CUR              0xFFC10138         /* DMA37 Current Row Count (2D only) */
#define REG_DMA37_BWLCNT                0xFFC10140         /* DMA37 Bandwidth Limit Count */
#define REG_DMA37_BWLCNT_CUR            0xFFC10144         /* DMA37 Bandwidth Limit Count Current */
#define REG_DMA37_BWMCNT                0xFFC10148         /* DMA37 Bandwidth Monitor Count */
#define REG_DMA37_BWMCNT_CUR            0xFFC1014C         /* DMA37 Bandwidth Monitor Count Current */

/* =========================
        DMA38
   ========================= */
#define REG_DMA38_DSCPTR_NXT            0xFFC12000         /* DMA38 Pointer to Next Initial Descriptor */
#define REG_DMA38_ADDRSTART             0xFFC12004         /* DMA38 Start Address of Current Buffer */
#define REG_DMA38_CFG                   0xFFC12008         /* DMA38 Configuration Register */
#define REG_DMA38_XCNT                  0xFFC1200C         /* DMA38 Inner Loop Count Start Value */
#define REG_DMA38_XMOD                  0xFFC12010         /* DMA38 Inner Loop Address Increment */
#define REG_DMA38_YCNT                  0xFFC12014         /* DMA38 Outer Loop Count Start Value (2D only) */
#define REG_DMA38_YMOD                  0xFFC12018         /* DMA38 Outer Loop Address Increment (2D only) */
#define REG_DMA38_DSCPTR_CUR            0xFFC12024         /* DMA38 Current Descriptor Pointer */
#define REG_DMA38_DSCPTR_PRV            0xFFC12028         /* DMA38 Previous Initial Descriptor Pointer */
#define REG_DMA38_ADDR_CUR              0xFFC1202C         /* DMA38 Current Address */
#define REG_DMA38_STAT                  0xFFC12030         /* DMA38 Status Register */
#define REG_DMA38_XCNT_CUR              0xFFC12034         /* DMA38 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA38_YCNT_CUR              0xFFC12038         /* DMA38 Current Row Count (2D only) */
#define REG_DMA38_BWLCNT                0xFFC12040         /* DMA38 Bandwidth Limit Count */
#define REG_DMA38_BWLCNT_CUR            0xFFC12044         /* DMA38 Bandwidth Limit Count Current */
#define REG_DMA38_BWMCNT                0xFFC12048         /* DMA38 Bandwidth Monitor Count */
#define REG_DMA38_BWMCNT_CUR            0xFFC1204C         /* DMA38 Bandwidth Monitor Count Current */

/* =========================
        DMA39
   ========================= */
#define REG_DMA39_DSCPTR_NXT            0xFFC12080         /* DMA39 Pointer to Next Initial Descriptor */
#define REG_DMA39_ADDRSTART             0xFFC12084         /* DMA39 Start Address of Current Buffer */
#define REG_DMA39_CFG                   0xFFC12088         /* DMA39 Configuration Register */
#define REG_DMA39_XCNT                  0xFFC1208C         /* DMA39 Inner Loop Count Start Value */
#define REG_DMA39_XMOD                  0xFFC12090         /* DMA39 Inner Loop Address Increment */
#define REG_DMA39_YCNT                  0xFFC12094         /* DMA39 Outer Loop Count Start Value (2D only) */
#define REG_DMA39_YMOD                  0xFFC12098         /* DMA39 Outer Loop Address Increment (2D only) */
#define REG_DMA39_DSCPTR_CUR            0xFFC120A4         /* DMA39 Current Descriptor Pointer */
#define REG_DMA39_DSCPTR_PRV            0xFFC120A8         /* DMA39 Previous Initial Descriptor Pointer */
#define REG_DMA39_ADDR_CUR              0xFFC120AC         /* DMA39 Current Address */
#define REG_DMA39_STAT                  0xFFC120B0         /* DMA39 Status Register */
#define REG_DMA39_XCNT_CUR              0xFFC120B4         /* DMA39 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA39_YCNT_CUR              0xFFC120B8         /* DMA39 Current Row Count (2D only) */
#define REG_DMA39_BWLCNT                0xFFC120C0         /* DMA39 Bandwidth Limit Count */
#define REG_DMA39_BWLCNT_CUR            0xFFC120C4         /* DMA39 Bandwidth Limit Count Current */
#define REG_DMA39_BWMCNT                0xFFC120C8         /* DMA39 Bandwidth Monitor Count */
#define REG_DMA39_BWMCNT_CUR            0xFFC120CC         /* DMA39 Bandwidth Monitor Count Current */

/* =========================
        DMA40
   ========================= */
#define REG_DMA40_DSCPTR_NXT            0xFFC12100         /* DMA40 Pointer to Next Initial Descriptor */
#define REG_DMA40_ADDRSTART             0xFFC12104         /* DMA40 Start Address of Current Buffer */
#define REG_DMA40_CFG                   0xFFC12108         /* DMA40 Configuration Register */
#define REG_DMA40_XCNT                  0xFFC1210C         /* DMA40 Inner Loop Count Start Value */
#define REG_DMA40_XMOD                  0xFFC12110         /* DMA40 Inner Loop Address Increment */
#define REG_DMA40_YCNT                  0xFFC12114         /* DMA40 Outer Loop Count Start Value (2D only) */
#define REG_DMA40_YMOD                  0xFFC12118         /* DMA40 Outer Loop Address Increment (2D only) */
#define REG_DMA40_DSCPTR_CUR            0xFFC12124         /* DMA40 Current Descriptor Pointer */
#define REG_DMA40_DSCPTR_PRV            0xFFC12128         /* DMA40 Previous Initial Descriptor Pointer */
#define REG_DMA40_ADDR_CUR              0xFFC1212C         /* DMA40 Current Address */
#define REG_DMA40_STAT                  0xFFC12130         /* DMA40 Status Register */
#define REG_DMA40_XCNT_CUR              0xFFC12134         /* DMA40 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA40_YCNT_CUR              0xFFC12138         /* DMA40 Current Row Count (2D only) */
#define REG_DMA40_BWLCNT                0xFFC12140         /* DMA40 Bandwidth Limit Count */
#define REG_DMA40_BWLCNT_CUR            0xFFC12144         /* DMA40 Bandwidth Limit Count Current */
#define REG_DMA40_BWMCNT                0xFFC12148         /* DMA40 Bandwidth Monitor Count */
#define REG_DMA40_BWMCNT_CUR            0xFFC1214C         /* DMA40 Bandwidth Monitor Count Current */

/* =========================
        DMA41
   ========================= */
#define REG_DMA41_DSCPTR_NXT            0xFFC12180         /* DMA41 Pointer to Next Initial Descriptor */
#define REG_DMA41_ADDRSTART             0xFFC12184         /* DMA41 Start Address of Current Buffer */
#define REG_DMA41_CFG                   0xFFC12188         /* DMA41 Configuration Register */
#define REG_DMA41_XCNT                  0xFFC1218C         /* DMA41 Inner Loop Count Start Value */
#define REG_DMA41_XMOD                  0xFFC12190         /* DMA41 Inner Loop Address Increment */
#define REG_DMA41_YCNT                  0xFFC12194         /* DMA41 Outer Loop Count Start Value (2D only) */
#define REG_DMA41_YMOD                  0xFFC12198         /* DMA41 Outer Loop Address Increment (2D only) */
#define REG_DMA41_DSCPTR_CUR            0xFFC121A4         /* DMA41 Current Descriptor Pointer */
#define REG_DMA41_DSCPTR_PRV            0xFFC121A8         /* DMA41 Previous Initial Descriptor Pointer */
#define REG_DMA41_ADDR_CUR              0xFFC121AC         /* DMA41 Current Address */
#define REG_DMA41_STAT                  0xFFC121B0         /* DMA41 Status Register */
#define REG_DMA41_XCNT_CUR              0xFFC121B4         /* DMA41 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA41_YCNT_CUR              0xFFC121B8         /* DMA41 Current Row Count (2D only) */
#define REG_DMA41_BWLCNT                0xFFC121C0         /* DMA41 Bandwidth Limit Count */
#define REG_DMA41_BWLCNT_CUR            0xFFC121C4         /* DMA41 Bandwidth Limit Count Current */
#define REG_DMA41_BWMCNT                0xFFC121C8         /* DMA41 Bandwidth Monitor Count */
#define REG_DMA41_BWMCNT_CUR            0xFFC121CC         /* DMA41 Bandwidth Monitor Count Current */

/* =========================
        DMA42
   ========================= */
#define REG_DMA42_DSCPTR_NXT            0xFFC14000         /* DMA42 Pointer to Next Initial Descriptor */
#define REG_DMA42_ADDRSTART             0xFFC14004         /* DMA42 Start Address of Current Buffer */
#define REG_DMA42_CFG                   0xFFC14008         /* DMA42 Configuration Register */
#define REG_DMA42_XCNT                  0xFFC1400C         /* DMA42 Inner Loop Count Start Value */
#define REG_DMA42_XMOD                  0xFFC14010         /* DMA42 Inner Loop Address Increment */
#define REG_DMA42_YCNT                  0xFFC14014         /* DMA42 Outer Loop Count Start Value (2D only) */
#define REG_DMA42_YMOD                  0xFFC14018         /* DMA42 Outer Loop Address Increment (2D only) */
#define REG_DMA42_DSCPTR_CUR            0xFFC14024         /* DMA42 Current Descriptor Pointer */
#define REG_DMA42_DSCPTR_PRV            0xFFC14028         /* DMA42 Previous Initial Descriptor Pointer */
#define REG_DMA42_ADDR_CUR              0xFFC1402C         /* DMA42 Current Address */
#define REG_DMA42_STAT                  0xFFC14030         /* DMA42 Status Register */
#define REG_DMA42_XCNT_CUR              0xFFC14034         /* DMA42 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA42_YCNT_CUR              0xFFC14038         /* DMA42 Current Row Count (2D only) */
#define REG_DMA42_BWLCNT                0xFFC14040         /* DMA42 Bandwidth Limit Count */
#define REG_DMA42_BWLCNT_CUR            0xFFC14044         /* DMA42 Bandwidth Limit Count Current */
#define REG_DMA42_BWMCNT                0xFFC14048         /* DMA42 Bandwidth Monitor Count */
#define REG_DMA42_BWMCNT_CUR            0xFFC1404C         /* DMA42 Bandwidth Monitor Count Current */

/* =========================
        DMA43
   ========================= */
#define REG_DMA43_DSCPTR_NXT            0xFFC14080         /* DMA43 Pointer to Next Initial Descriptor */
#define REG_DMA43_ADDRSTART             0xFFC14084         /* DMA43 Start Address of Current Buffer */
#define REG_DMA43_CFG                   0xFFC14088         /* DMA43 Configuration Register */
#define REG_DMA43_XCNT                  0xFFC1408C         /* DMA43 Inner Loop Count Start Value */
#define REG_DMA43_XMOD                  0xFFC14090         /* DMA43 Inner Loop Address Increment */
#define REG_DMA43_YCNT                  0xFFC14094         /* DMA43 Outer Loop Count Start Value (2D only) */
#define REG_DMA43_YMOD                  0xFFC14098         /* DMA43 Outer Loop Address Increment (2D only) */
#define REG_DMA43_DSCPTR_CUR            0xFFC140A4         /* DMA43 Current Descriptor Pointer */
#define REG_DMA43_DSCPTR_PRV            0xFFC140A8         /* DMA43 Previous Initial Descriptor Pointer */
#define REG_DMA43_ADDR_CUR              0xFFC140AC         /* DMA43 Current Address */
#define REG_DMA43_STAT                  0xFFC140B0         /* DMA43 Status Register */
#define REG_DMA43_XCNT_CUR              0xFFC140B4         /* DMA43 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA43_YCNT_CUR              0xFFC140B8         /* DMA43 Current Row Count (2D only) */
#define REG_DMA43_BWLCNT                0xFFC140C0         /* DMA43 Bandwidth Limit Count */
#define REG_DMA43_BWLCNT_CUR            0xFFC140C4         /* DMA43 Bandwidth Limit Count Current */
#define REG_DMA43_BWMCNT                0xFFC140C8         /* DMA43 Bandwidth Monitor Count */
#define REG_DMA43_BWMCNT_CUR            0xFFC140CC         /* DMA43 Bandwidth Monitor Count Current */

/* =========================
        DMA44
   ========================= */
#define REG_DMA44_DSCPTR_NXT            0xFFC14100         /* DMA44 Pointer to Next Initial Descriptor */
#define REG_DMA44_ADDRSTART             0xFFC14104         /* DMA44 Start Address of Current Buffer */
#define REG_DMA44_CFG                   0xFFC14108         /* DMA44 Configuration Register */
#define REG_DMA44_XCNT                  0xFFC1410C         /* DMA44 Inner Loop Count Start Value */
#define REG_DMA44_XMOD                  0xFFC14110         /* DMA44 Inner Loop Address Increment */
#define REG_DMA44_YCNT                  0xFFC14114         /* DMA44 Outer Loop Count Start Value (2D only) */
#define REG_DMA44_YMOD                  0xFFC14118         /* DMA44 Outer Loop Address Increment (2D only) */
#define REG_DMA44_DSCPTR_CUR            0xFFC14124         /* DMA44 Current Descriptor Pointer */
#define REG_DMA44_DSCPTR_PRV            0xFFC14128         /* DMA44 Previous Initial Descriptor Pointer */
#define REG_DMA44_ADDR_CUR              0xFFC1412C         /* DMA44 Current Address */
#define REG_DMA44_STAT                  0xFFC14130         /* DMA44 Status Register */
#define REG_DMA44_XCNT_CUR              0xFFC14134         /* DMA44 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA44_YCNT_CUR              0xFFC14138         /* DMA44 Current Row Count (2D only) */
#define REG_DMA44_BWLCNT                0xFFC14140         /* DMA44 Bandwidth Limit Count */
#define REG_DMA44_BWLCNT_CUR            0xFFC14144         /* DMA44 Bandwidth Limit Count Current */
#define REG_DMA44_BWMCNT                0xFFC14148         /* DMA44 Bandwidth Monitor Count */
#define REG_DMA44_BWMCNT_CUR            0xFFC1414C         /* DMA44 Bandwidth Monitor Count Current */

/* =========================
        DMA45
   ========================= */
#define REG_DMA45_DSCPTR_NXT            0xFFC14180         /* DMA45 Pointer to Next Initial Descriptor */
#define REG_DMA45_ADDRSTART             0xFFC14184         /* DMA45 Start Address of Current Buffer */
#define REG_DMA45_CFG                   0xFFC14188         /* DMA45 Configuration Register */
#define REG_DMA45_XCNT                  0xFFC1418C         /* DMA45 Inner Loop Count Start Value */
#define REG_DMA45_XMOD                  0xFFC14190         /* DMA45 Inner Loop Address Increment */
#define REG_DMA45_YCNT                  0xFFC14194         /* DMA45 Outer Loop Count Start Value (2D only) */
#define REG_DMA45_YMOD                  0xFFC14198         /* DMA45 Outer Loop Address Increment (2D only) */
#define REG_DMA45_DSCPTR_CUR            0xFFC141A4         /* DMA45 Current Descriptor Pointer */
#define REG_DMA45_DSCPTR_PRV            0xFFC141A8         /* DMA45 Previous Initial Descriptor Pointer */
#define REG_DMA45_ADDR_CUR              0xFFC141AC         /* DMA45 Current Address */
#define REG_DMA45_STAT                  0xFFC141B0         /* DMA45 Status Register */
#define REG_DMA45_XCNT_CUR              0xFFC141B4         /* DMA45 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA45_YCNT_CUR              0xFFC141B8         /* DMA45 Current Row Count (2D only) */
#define REG_DMA45_BWLCNT                0xFFC141C0         /* DMA45 Bandwidth Limit Count */
#define REG_DMA45_BWLCNT_CUR            0xFFC141C4         /* DMA45 Bandwidth Limit Count Current */
#define REG_DMA45_BWMCNT                0xFFC141C8         /* DMA45 Bandwidth Monitor Count */
#define REG_DMA45_BWMCNT_CUR            0xFFC141CC         /* DMA45 Bandwidth Monitor Count Current */

/* =========================
        DMA46
   ========================= */
#define REG_DMA46_DSCPTR_NXT            0xFFC14200         /* DMA46 Pointer to Next Initial Descriptor */
#define REG_DMA46_ADDRSTART             0xFFC14204         /* DMA46 Start Address of Current Buffer */
#define REG_DMA46_CFG                   0xFFC14208         /* DMA46 Configuration Register */
#define REG_DMA46_XCNT                  0xFFC1420C         /* DMA46 Inner Loop Count Start Value */
#define REG_DMA46_XMOD                  0xFFC14210         /* DMA46 Inner Loop Address Increment */
#define REG_DMA46_YCNT                  0xFFC14214         /* DMA46 Outer Loop Count Start Value (2D only) */
#define REG_DMA46_YMOD                  0xFFC14218         /* DMA46 Outer Loop Address Increment (2D only) */
#define REG_DMA46_DSCPTR_CUR            0xFFC14224         /* DMA46 Current Descriptor Pointer */
#define REG_DMA46_DSCPTR_PRV            0xFFC14228         /* DMA46 Previous Initial Descriptor Pointer */
#define REG_DMA46_ADDR_CUR              0xFFC1422C         /* DMA46 Current Address */
#define REG_DMA46_STAT                  0xFFC14230         /* DMA46 Status Register */
#define REG_DMA46_XCNT_CUR              0xFFC14234         /* DMA46 Current Count(1D) or intra-row XCNT (2D) */
#define REG_DMA46_YCNT_CUR              0xFFC14238         /* DMA46 Current Row Count (2D only) */
#define REG_DMA46_BWLCNT                0xFFC14240         /* DMA46 Bandwidth Limit Count */
#define REG_DMA46_BWLCNT_CUR            0xFFC14244         /* DMA46 Bandwidth Limit Count Current */
#define REG_DMA46_BWMCNT                0xFFC14248         /* DMA46 Bandwidth Monitor Count */
#define REG_DMA46_BWMCNT_CUR            0xFFC1424C         /* DMA46 Bandwidth Monitor Count Current */

/* =========================
        DMA
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        DMA_CFG                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DMA_CFG_PDRF                    28            /* Peripheral Data Request Forward */
#define BITP_DMA_CFG_TWOD                    26            /* Two Dimension Addressing Enable */
#define BITP_DMA_CFG_DESCIDCPY               25            /* Descriptor ID Copy Control */
#define BITP_DMA_CFG_TOVEN                   24            /* Trigger Overrun Error Enable */
#define BITP_DMA_CFG_TRIG                    22            /* Generate Outgoing Trigger */
#define BITP_DMA_CFG_INT                     20            /* Generate Interrupt */
#define BITP_DMA_CFG_NDSIZE                  16            /* Next Descriptor Set Size */
#define BITP_DMA_CFG_TWAIT                   15            /* Wait for Trigger */
#define BITP_DMA_CFG_FLOW                    12            /* Next Operation */
#define BITP_DMA_CFG_MSIZE                    8            /* Memory Transfer Word Size */
#define BITP_DMA_CFG_PSIZE                    4            /* Peripheral Transfer Word Size */
#define BITP_DMA_CFG_CADDR                    3            /* Use Current Address */
#define BITP_DMA_CFG_SYNC                     2            /* Synchronize Work Unit Transitions */
#define BITP_DMA_CFG_WNR                      1            /* Channel Direction */
#define BITP_DMA_CFG_EN                       0            /* DMA Channel Enable */

#define BITM_DMA_CFG_PDRF                    0x10000000    /* Peripheral Data Request Forward */
#define ENUM_DMA_CFG_PDAT_NOTFWD             0x00000000    /* PDRF: Peripheral Data Request Not Forwarded */
#define ENUM_DMA_CFG_PDAT_FWD                0x10000000    /* PDRF: Peripheral Data Request Forwarded */

#define BITM_DMA_CFG_TWOD                    0x04000000    /* Two Dimension Addressing Enable */
#define ENUM_DMA_CFG_ADDR1D                  0x00000000    /* TWOD: One-Dimensional Addressing */
#define ENUM_DMA_CFG_ADDR2D                  0x04000000    /* TWOD: Two-Dimensional Addressing */

#define BITM_DMA_CFG_DESCIDCPY               0x02000000    /* Descriptor ID Copy Control */
#define ENUM_DMA_CFG_NO_COPY                 0x00000000    /* DESCIDCPY: Never Copy */
#define ENUM_DMA_CFG_COPY                    0x02000000    /* DESCIDCPY: Copy on Work Unit Complete */

#define BITM_DMA_CFG_TOVEN                   0x01000000    /* Trigger Overrun Error Enable */
#define ENUM_DMA_CFG_TOV_DIS                 0x00000000    /* TOVEN: Ignore Trigger Overrun */
#define ENUM_DMA_CFG_TOV_EN                  0x01000000    /* TOVEN: Assert Error on Trigger Overrun */

#define BITM_DMA_CFG_TRIG                    0x00C00000    /* Generate Outgoing Trigger */
#define ENUM_DMA_CFG_NO_TRIG                 0x00000000    /* TRIG: Never assert Trigger */
#define ENUM_DMA_CFG_XCNT_TRIG               0x00400000    /* TRIG: Trigger when XCNTCUR reaches 0 */
#define ENUM_DMA_CFG_YCNT_TRIG               0x00800000    /* TRIG: Trigger when YCNTCUR reaches 0 */

#define BITM_DMA_CFG_INT                     0x00300000    /* Generate Interrupt */
#define ENUM_DMA_CFG_NO_INT                  0x00000000    /* INT: Never assert Interrupt */
#define ENUM_DMA_CFG_XCNT_INT                0x00100000    /* INT: Interrupt when XCNTCUR reaches 0 */
#define ENUM_DMA_CFG_YCNT_INT                0x00200000    /* INT: Interrupt when YCNTCUR reaches 0 */
#define ENUM_DMA_CFG_PERIPH_INT              0x00300000    /* INT: Peripheral Interrupt */

#define BITM_DMA_CFG_NDSIZE                  0x00070000    /* Next Descriptor Set Size */
#define ENUM_DMA_CFG_FETCH01                 0x00000000    /* NDSIZE: Fetch one Descriptor Element */
#define ENUM_DMA_CFG_FETCH02                 0x00010000    /* NDSIZE: Fetch two Descriptor Elements */
#define ENUM_DMA_CFG_FETCH03                 0x00020000    /* NDSIZE: Fetch three Descriptor Elements */
#define ENUM_DMA_CFG_FETCH04                 0x00030000    /* NDSIZE: Fetch four Descriptor Elements */
#define ENUM_DMA_CFG_FETCH05                 0x00040000    /* NDSIZE: Fetch five Descriptor Elements */
#define ENUM_DMA_CFG_FETCH06                 0x00050000    /* NDSIZE: Fetch six Descriptor Elements */
#define ENUM_DMA_CFG_FETCH07                 0x00060000    /* NDSIZE: Fetch seven Descriptor Elements */

#define BITM_DMA_CFG_TWAIT                   0x00008000    /* Wait for Trigger */
#define ENUM_DMA_CFG_NO_TRGWAIT              0x00000000    /* TWAIT: Automatically begin Work Unit */
#define ENUM_DMA_CFG_TRGWAIT                 0x00008000    /* TWAIT: Halt before Work Unit until Incoming Trigger */

#define BITM_DMA_CFG_FLOW                    0x00007000    /* Next Operation */
#define ENUM_DMA_CFG_STOP                    0x00000000    /* FLOW: STOP - Stop */
#define ENUM_DMA_CFG_AUTO                    0x00001000    /* FLOW: AUTO - Autobuffer */
#define ENUM_DMA_CFG_DSCLIST                 0x00004000    /* FLOW: DSCL - Descriptor List */
#define ENUM_DMA_CFG_DSCARRAY                0x00005000    /* FLOW: DSCA - Descriptor Array */
#define ENUM_DMA_CFG_DODLIST                 0x00006000    /* FLOW: Descriptor On Demand List */
#define ENUM_DMA_CFG_DODARRAY                0x00007000    /* FLOW: Descriptor On Demand Array */

#define BITM_DMA_CFG_MSIZE                   0x00000700    /* Memory Transfer Word Size */
#define ENUM_DMA_CFG_MSIZE01                 0x00000000    /* MSIZE: 1 Byte */
#define ENUM_DMA_CFG_MSIZE02                 0x00000100    /* MSIZE: 2 Bytes */
#define ENUM_DMA_CFG_MSIZE04                 0x00000200    /* MSIZE: 4 Bytes */
#define ENUM_DMA_CFG_MSIZE08                 0x00000300    /* MSIZE: 8 Bytes */
#define ENUM_DMA_CFG_MSIZE16                 0x00000400    /* MSIZE: 16 Bytes */
#define ENUM_DMA_CFG_MSIZE32                 0x00000500    /* MSIZE: 32 Bytes */

#define BITM_DMA_CFG_PSIZE                   0x00000070    /* Peripheral Transfer Word Size */
#define ENUM_DMA_CFG_PSIZE01                 0x00000000    /* PSIZE: 1 Byte */
#define ENUM_DMA_CFG_PSIZE02                 0x00000010    /* PSIZE: 2 Bytes */
#define ENUM_DMA_CFG_PSIZE04                 0x00000020    /* PSIZE: 4 Bytes */
#define ENUM_DMA_CFG_PSIZE08                 0x00000030    /* PSIZE: 8 Bytes */

#define BITM_DMA_CFG_CADDR                   0x00000008    /* Use Current Address */
#define ENUM_DMA_CFG_LD_STARTADDR            0x00000000    /* CADDR: Load Starting Address at Beginning of Work Unit */
#define ENUM_DMA_CFG_LD_CURADDR              0x00000008    /* CADDR: Use Current Address at Beginning of Work Unit */

#define BITM_DMA_CFG_SYNC                    0x00000004    /* Synchronize Work Unit Transitions */
#define ENUM_DMA_CFG_NO_SYNC                 0x00000000    /* SYNC: No Synchronization */
#define ENUM_DMA_CFG_SYNC                    0x00000004    /* SYNC: Synchronize  Channel */

#define BITM_DMA_CFG_WNR                     0x00000002    /* Channel Direction */
#define ENUM_DMA_CFG_READ                    0x00000000    /* WNR: Transmit (Read from memory) */
#define ENUM_DMA_CFG_WRITE                   0x00000002    /* WNR: Receive (Write to memory) */

#define BITM_DMA_CFG_EN                      0x00000001    /* DMA Channel Enable */
#define ENUM_DMA_CFG_DIS                     0x00000000    /* EN: Disable */
#define ENUM_DMA_CFG_EN                      0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        DMA_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DMA_STAT_TWAIT                  20            /* Trigger Wait Status */
#define BITP_DMA_STAT_FIFOFILL               16            /* FIFO Fill Status */
#define BITP_DMA_STAT_MBWID                  14            /* Memory Bus Width */
#define BITP_DMA_STAT_PBWID                  12            /* Peripheral Bus Width */
#define BITP_DMA_STAT_RUN                     8            /* Run Status */
#define BITP_DMA_STAT_ERRC                    4            /* Error Cause */
#define BITP_DMA_STAT_PIRQ                    2            /* Peripheral Interrupt Request */
#define BITP_DMA_STAT_IRQERR                  1            /* Error Interrupt */
#define BITP_DMA_STAT_IRQDONE                 0            /* Work Unit/Row Done Interrupt */

#define BITM_DMA_STAT_TWAIT                  0x00100000    /* Trigger Wait Status */
#define ENUM_DMA_STAT_NOTRIGRX               0x00000000    /* TWAIT: No trigger received */
#define ENUM_DMA_STAT_TRIGRX                 0x00100000    /* TWAIT: Trigger received, still process work unit */

#define BITM_DMA_STAT_FIFOFILL               0x00070000    /* FIFO Fill Status */
#define ENUM_DMA_STAT_FIFOEMPTY              0x00000000    /* FIFOFILL: Empty */
#define ENUM_DMA_STAT_FIFO25                 0x00010000    /* FIFOFILL: Empty < FIFO = 1/4 Full */
#define ENUM_DMA_STAT_FIFO50                 0x00020000    /* FIFOFILL: 1/4 Full < FIFO = 1/2 Full */
#define ENUM_DMA_STAT_FIFO75                 0x00030000    /* FIFOFILL: 1/2 Full < FIFO = 3/4 Full */
#define ENUM_DMA_STAT_FIFOFULL               0x00070000    /* FIFOFILL: Full */

#define BITM_DMA_STAT_MBWID                  0x0000C000    /* Memory Bus Width */
#define ENUM_DMA_STAT_MBUS02                 0x00000000    /* MBWID: 2 Bytes */
#define ENUM_DMA_STAT_MBUS04                 0x00004000    /* MBWID: 4 Bytes */
#define ENUM_DMA_STAT_MBUS08                 0x00008000    /* MBWID: 8 Bytes */
#define ENUM_DMA_STAT_MBUS16                 0x0000C000    /* MBWID: 16 Bytes */

#define BITM_DMA_STAT_PBWID                  0x00003000    /* Peripheral Bus Width */
#define ENUM_DMA_STAT_PBUS01                 0x00000000    /* PBWID: 1 Byte */
#define ENUM_DMA_STAT_PBUS02                 0x00001000    /* PBWID: 2 Bytes */
#define ENUM_DMA_STAT_PBUS04                 0x00002000    /* PBWID: 4 Bytes */
#define ENUM_DMA_STAT_PBUS08                 0x00003000    /* PBWID: 8 Bytes */

#define BITM_DMA_STAT_RUN                    0x00000700    /* Run Status */
#define ENUM_DMA_STAT_STOPPED                0x00000000    /* RUN: Idle/Stop State */
#define ENUM_DMA_STAT_DSCFETCH               0x00000100    /* RUN: Descriptor Fetch */
#define ENUM_DMA_STAT_DATAXFER               0x00000200    /* RUN: Data Transfer */
#define ENUM_DMA_STAT_TRGWAIT                0x00000300    /* RUN: Waiting for Trigger */
#define ENUM_DMA_STAT_ACKWAIT                0x00000400    /* RUN: Waiting for Write ACK/FIFO Drain to Peripheral */

#define BITM_DMA_STAT_ERRC                   0x00000070    /* Error Cause */
#define ENUM_DMA_STAT_CFGERR                 0x00000000    /* ERRC: Configuration Error */
#define ENUM_DMA_STAT_ILLWRERR               0x00000010    /* ERRC: Illegal Write Occurred While Channel Running */
#define ENUM_DMA_STAT_ALGNERR                0x00000020    /* ERRC: Address Alignment Error */
#define ENUM_DMA_STAT_MEMERR                 0x00000030    /* ERRC: Memory Access/Fabric Error */
#define ENUM_DMA_STAT_TRGOVERR               0x00000050    /* ERRC: Trigger Overrun */
#define ENUM_DMA_STAT_BWMONERR               0x00000060    /* ERRC: Bandwidth Monitor Error */

#define BITM_DMA_STAT_PIRQ                   0x00000004    /* Peripheral Interrupt Request */
#define ENUM_DMA_STAT_NO_PIRQ                0x00000000    /* PIRQ: No Interrupt */
#define ENUM_DMA_STAT_PIRQ                   0x00000004    /* PIRQ: Interrupt Signaled by Peripheral */

#define BITM_DMA_STAT_IRQERR                 0x00000002    /* Error Interrupt */
#define ENUM_DMA_STAT_NO_IRQERR              0x00000000    /* IRQERR: No Error */
#define ENUM_DMA_STAT_IRQERR                 0x00000002    /* IRQERR: Error Occurred */

#define BITM_DMA_STAT_IRQDONE                0x00000001    /* Work Unit/Row Done Interrupt */
#define ENUM_DMA_STAT_NO_IRQ                 0x00000000    /* IRQDONE: Inactive */
#define ENUM_DMA_STAT_IRQDONE                0x00000001    /* IRQDONE: Active */

/* ------------------------------------------------------------------------------------------------------------------------
        DMA_BWLCNT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DMA_BWLCNT_VALUE                 0            /* Bandwidth Limit Count */
#define BITM_DMA_BWLCNT_VALUE                0x0000FFFF    /* Bandwidth Limit Count */

/* ------------------------------------------------------------------------------------------------------------------------
        DMA_BWLCNT_CUR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DMA_BWLCNT_CUR_VALUE             0            /* Bandwidth Limit Count Current */
#define BITM_DMA_BWLCNT_CUR_VALUE            0x0000FFFF    /* Bandwidth Limit Count Current */

/* =========================
        ACM Registers
   ========================= */

/* =========================
        ACM0
   ========================= */
#define REG_ACM0_CTL                    0xFFC45000         /* ACM0 ACM Control Register */
#define REG_ACM0_TC0                    0xFFC45004         /* ACM0 ACM Timing Configuration 0 Register */
#define REG_ACM0_TC1                    0xFFC45008         /* ACM0 ACM Timing Configuration 1 Register */
#define REG_ACM0_STAT                   0xFFC4500C         /* ACM0 ACM Status Register */
#define REG_ACM0_EVSTAT                 0xFFC45010         /* ACM0 ACM Event Status Register */
#define REG_ACM0_EVMSK                  0xFFC45014         /* ACM0 ACM Completed Event Interrupt Mask Register */
#define REG_ACM0_MEVSTAT                0xFFC45018         /* ACM0 ACM Missed Event Status Register */
#define REG_ACM0_MEVMSK                 0xFFC4501C         /* ACM0 ACM Missed Event Interrupt Mask Register */
#define REG_ACM0_EVCTL0                 0xFFC45020         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL1                 0xFFC45024         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL2                 0xFFC45028         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL3                 0xFFC4502C         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL4                 0xFFC45030         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL5                 0xFFC45034         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL6                 0xFFC45038         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL7                 0xFFC4503C         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL8                 0xFFC45040         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL9                 0xFFC45044         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL10                0xFFC45048         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL11                0xFFC4504C         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL12                0xFFC45050         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL13                0xFFC45054         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL14                0xFFC45058         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVCTL15                0xFFC4505C         /* ACM0 ACM Eventn Control Register */
#define REG_ACM0_EVTIME0                0xFFC45060         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME1                0xFFC45064         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME2                0xFFC45068         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME3                0xFFC4506C         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME4                0xFFC45070         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME5                0xFFC45074         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME6                0xFFC45078         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME7                0xFFC4507C         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME8                0xFFC45080         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME9                0xFFC45084         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME10               0xFFC45088         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME11               0xFFC4508C         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME12               0xFFC45090         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME13               0xFFC45094         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME14               0xFFC45098         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVTIME15               0xFFC4509C         /* ACM0 ACM Eventn Time Register */
#define REG_ACM0_EVORD0                 0xFFC450A0         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD1                 0xFFC450A4         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD2                 0xFFC450A8         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD3                 0xFFC450AC         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD4                 0xFFC450B0         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD5                 0xFFC450B4         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD6                 0xFFC450B8         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD7                 0xFFC450BC         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD8                 0xFFC450C0         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD9                 0xFFC450C4         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD10                0xFFC450C8         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD11                0xFFC450CC         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD12                0xFFC450D0         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD13                0xFFC450D4         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD14                0xFFC450D8         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_EVORD15                0xFFC450DC         /* ACM0 ACM Eventn Order Register */
#define REG_ACM0_TMR0                   0xFFC450E8         /* ACM0 ACM Timer 0 Register */
#define REG_ACM0_TMR1                   0xFFC450EC         /* ACM0 ACM Timer 1 Register */

/* =========================
        ACM
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        ACM_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_CTL_EPS                     15            /* External Peripheral Select */
#define BITP_ACM_CTL_OTSEL                   14            /* Trigger Select for Order Register Reset */
#define BITP_ACM_CTL_AOREN                   13            /* Automatic Order Reset Enable */
#define BITP_ACM_CTL_ORST                    12            /* Order Register Reset Bit */
#define BITP_ACM_CTL_CLKMOD                  11            /* ADC Clock Mode */
#define BITP_ACM_CTL_CLKPOL                  10            /* ADC_CLK Polarity */
#define BITP_ACM_CTL_CSPOL                    9            /* CS Polarity */
#define BITP_ACM_CTL_TRGPOL1                  8            /* Trigger Polarity for Timer1 Triggers */
#define BITP_ACM_CTL_TRGPOL0                  7            /* Trigger Polarity for Timer0 Triggers */
#define BITP_ACM_CTL_TRGSEL1                  5            /* Trigger Select 1 */
#define BITP_ACM_CTL_TRGSEL0                  3            /* Trigger Select 0 */
#define BITP_ACM_CTL_TMR1EN                   2            /* Enable ACM Timer1 */
#define BITP_ACM_CTL_TMR0EN                   1            /* Enable ACM Timer0 */
#define BITP_ACM_CTL_EN                       0            /* ACM Enable */
#define BITM_ACM_CTL_EPS                     0x00008000    /* External Peripheral Select */
#define BITM_ACM_CTL_OTSEL                   0x00004000    /* Trigger Select for Order Register Reset */
#define BITM_ACM_CTL_AOREN                   0x00002000    /* Automatic Order Reset Enable */
#define BITM_ACM_CTL_ORST                    0x00001000    /* Order Register Reset Bit */
#define BITM_ACM_CTL_CLKMOD                  0x00000800    /* ADC Clock Mode */
#define BITM_ACM_CTL_CLKPOL                  0x00000400    /* ADC_CLK Polarity */
#define BITM_ACM_CTL_CSPOL                   0x00000200    /* CS Polarity */
#define BITM_ACM_CTL_TRGPOL1                 0x00000100    /* Trigger Polarity for Timer1 Triggers */
#define BITM_ACM_CTL_TRGPOL0                 0x00000080    /* Trigger Polarity for Timer0 Triggers */
#define BITM_ACM_CTL_TRGSEL1                 0x00000060    /* Trigger Select 1 */
#define BITM_ACM_CTL_TRGSEL0                 0x00000018    /* Trigger Select 0 */
#define BITM_ACM_CTL_TMR1EN                  0x00000004    /* Enable ACM Timer1 */
#define BITM_ACM_CTL_TMR0EN                  0x00000002    /* Enable ACM Timer0 */
#define BITM_ACM_CTL_EN                      0x00000001    /* ACM Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_TC0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_TC0_SC                      16            /* Setup Cycle - ADC Control setup in SCLK cycles */
#define BITP_ACM_TC0_CKDIV                    0            /* Serial Clock Divide Modulus[7:0] CKDIV=0 is Reserved */
#define BITM_ACM_TC0_SC                      0x0FFF0000    /* Setup Cycle - ADC Control setup in SCLK cycles */
#define BITM_ACM_TC0_CKDIV                   0x000000FF    /* Serial Clock Divide Modulus[7:0] CKDIV=0 is Reserved */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_TC1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_TC1_ZC                      12            /* Zero Cycle - ADC Control zero duration */
#define BITP_ACM_TC1_HC                       8            /* Hold Cycle - ADC Control hold in ACLK cycle */
#define BITP_ACM_TC1_CSW                      0            /* CS Width. Active duration of CS in ACLK cycles */
#define BITM_ACM_TC1_ZC                      0x0000F000    /* Zero Cycle - ADC Control zero duration */
#define BITM_ACM_TC1_HC                      0x00000F00    /* Hold Cycle - ADC Control hold in ACLK cycle */
#define BITM_ACM_TC1_CSW                     0x000000FF    /* CS Width. Active duration of CS in ACLK cycles */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_STAT_CEVNT                   4            /* Current Event. */
#define BITP_ACM_STAT_ECOM1                   3            /* ACM Timer1 Event Completion. This bit gets cleared with each trigger. */
#define BITP_ACM_STAT_ECOM0                   2            /* ACM Timer0 Event Completion. This bit gets cleared with each trigger. */
#define BITP_ACM_STAT_EMISS                   1            /* Event Missed This bit will be set if any of the bits in MEVSTAT is set, this bit has to be cleared by writing into the MEVSTAT register */
#define BITP_ACM_STAT_BSY                     0            /* ACM Busy */
#define BITM_ACM_STAT_CEVNT                  0x000000F0    /* Current Event. */
#define BITM_ACM_STAT_ECOM1                  0x00000008    /* ACM Timer1 Event Completion. This bit gets cleared with each trigger. */
#define BITM_ACM_STAT_ECOM0                  0x00000004    /* ACM Timer0 Event Completion. This bit gets cleared with each trigger. */
#define BITM_ACM_STAT_EMISS                  0x00000002    /* Event Missed This bit will be set if any of the bits in MEVSTAT is set, this bit has to be cleared by writing into the MEVSTAT register */
#define BITM_ACM_STAT_BSY                    0x00000001    /* ACM Busy */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_EVSTAT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_EVSTAT_ECOM1S               17            /* Reflects the ECOM1 bit of ACM_STAT register but this bit will not be cleared by trigger. W1C bit */
#define BITP_ACM_EVSTAT_ECOM0S               16            /* Reflects the ECOM0 bit of ACM_STAT register but this bit will not be cleared by trigger. W1C bit */
#define BITP_ACM_EVSTAT_EV15                 15            /* Event15 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV14                 14            /* Event14 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV13                 13            /* Event13 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV12                 12            /* Event12 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV11                 11            /* Event11 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV10                 10            /* Event10 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV9                   9            /* Event9 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV8                   8            /* Event8 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV7                   7            /* Event7 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV6                   6            /* Event6 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV5                   5            /* Event5 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV4                   4            /* Event4 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV3                   3            /* Event3 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV2                   2            /* Event2 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV1                   1            /* Event1 Status. W1C bit. */
#define BITP_ACM_EVSTAT_EV0                   0            /* Event0 Status. W1C bit. Creates an interrupt if corresponding bit in EVMSK register is set. */
#define BITM_ACM_EVSTAT_ECOM1S               0x00020000    /* Reflects the ECOM1 bit of ACM_STAT register but this bit will not be cleared by trigger. W1C bit */
#define BITM_ACM_EVSTAT_ECOM0S               0x00010000    /* Reflects the ECOM0 bit of ACM_STAT register but this bit will not be cleared by trigger. W1C bit */
#define BITM_ACM_EVSTAT_EV15                 0x00008000    /* Event15 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV14                 0x00004000    /* Event14 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV13                 0x00002000    /* Event13 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV12                 0x00001000    /* Event12 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV11                 0x00000800    /* Event11 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV10                 0x00000400    /* Event10 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV9                  0x00000200    /* Event9 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV8                  0x00000100    /* Event8 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV7                  0x00000080    /* Event7 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV6                  0x00000040    /* Event6 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV5                  0x00000020    /* Event5 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV4                  0x00000010    /* Event4 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV3                  0x00000008    /* Event3 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV2                  0x00000004    /* Event2 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV1                  0x00000002    /* Event1 Status. W1C bit. */
#define BITM_ACM_EVSTAT_EV0                  0x00000001    /* Event0 Status. W1C bit. Creates an interrupt if corresponding bit in EVMSK register is set. */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_EVMSK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_EVMSK_IECOM1                17            /* Timer1 Event Completion Status Interrupt Enable */
#define BITP_ACM_EVMSK_IECOM0                16            /* Timer0 Event Completion Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV15                  15            /* Event15 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV14                  14            /* Event14 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV13                  13            /* Event13 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV12                  12            /* Event12 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV11                  11            /* Event11 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV10                  10            /* Event10 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV9                    9            /* Event9 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV8                    8            /* Event8 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV7                    7            /* Event7 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV6                    6            /* Event6 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV5                    5            /* Event5 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV4                    4            /* Event4 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV3                    3            /* Event3 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV2                    2            /* Event2 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV1                    1            /* Event1 Status Interrupt Enable */
#define BITP_ACM_EVMSK_EV0                    0            /* Event0 Status Interrupt Enable */
#define BITM_ACM_EVMSK_IECOM1                0x00020000    /* Timer1 Event Completion Status Interrupt Enable */
#define BITM_ACM_EVMSK_IECOM0                0x00010000    /* Timer0 Event Completion Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV15                  0x00008000    /* Event15 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV14                  0x00004000    /* Event14 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV13                  0x00002000    /* Event13 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV12                  0x00001000    /* Event12 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV11                  0x00000800    /* Event11 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV10                  0x00000400    /* Event10 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV9                   0x00000200    /* Event9 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV8                   0x00000100    /* Event8 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV7                   0x00000080    /* Event7 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV6                   0x00000040    /* Event6 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV5                   0x00000020    /* Event5 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV4                   0x00000010    /* Event4 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV3                   0x00000008    /* Event3 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV2                   0x00000004    /* Event2 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV1                   0x00000002    /* Event1 Status Interrupt Enable */
#define BITM_ACM_EVMSK_EV0                   0x00000001    /* Event0 Status Interrupt Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_MEVSTAT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_MEVSTAT_EV15                15            /* Event15 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV14                14            /* Event14 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV13                13            /* Event13 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV12                12            /* Event12 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV11                11            /* Event11 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV10                10            /* Event10 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV9                  9            /* Event9 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV8                  8            /* Event8 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV7                  7            /* Event7 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV6                  6            /* Event6 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV5                  5            /* Event5 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV4                  4            /* Event4 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV3                  3            /* Event3 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV2                  2            /* Event2 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV1                  1            /* Event1 Missed. W1C bit. */
#define BITP_ACM_MEVSTAT_EV0                  0            /* Event0 Missed. W1C bit. Creates an interrupt if corresponding bit in MEVMSK register is set. */
#define BITM_ACM_MEVSTAT_EV15                0x00008000    /* Event15 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV14                0x00004000    /* Event14 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV13                0x00002000    /* Event13 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV12                0x00001000    /* Event12 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV11                0x00000800    /* Event11 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV10                0x00000400    /* Event10 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV9                 0x00000200    /* Event9 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV8                 0x00000100    /* Event8 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV7                 0x00000080    /* Event7 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV6                 0x00000040    /* Event6 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV5                 0x00000020    /* Event5 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV4                 0x00000010    /* Event4 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV3                 0x00000008    /* Event3 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV2                 0x00000004    /* Event2 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV1                 0x00000002    /* Event1 Missed. W1C bit. */
#define BITM_ACM_MEVSTAT_EV0                 0x00000001    /* Event0 Missed. W1C bit. Creates an interrupt if corresponding bit in MEVMSK register is set. */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_MEVMSK                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_MEVMSK_EV15                 15            /* Event15 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV14                 14            /* Event14 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV13                 13            /* Event13 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV12                 12            /* Event12 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV11                 11            /* Event11 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV10                 10            /* Event10 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV9                   9            /* Event9 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV8                   8            /* Event8 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV7                   7            /* Event7 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV6                   6            /* Event6 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV5                   5            /* Event5 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV4                   4            /* Event4 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV3                   3            /* Event3 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV2                   2            /* Event2 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV1                   1            /* Event1 Missed Interrupt Enable */
#define BITP_ACM_MEVMSK_EV0                   0            /* Event0 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV15                 0x00008000    /* Event15 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV14                 0x00004000    /* Event14 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV13                 0x00002000    /* Event13 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV12                 0x00001000    /* Event12 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV11                 0x00000800    /* Event11 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV10                 0x00000400    /* Event10 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV9                  0x00000200    /* Event9 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV8                  0x00000100    /* Event8 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV7                  0x00000080    /* Event7 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV6                  0x00000040    /* Event6 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV5                  0x00000020    /* Event5 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV4                  0x00000010    /* Event4 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV3                  0x00000008    /* Event3 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV2                  0x00000004    /* Event2 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV1                  0x00000002    /* Event1 Missed Interrupt Enable */
#define BITM_ACM_MEVMSK_EV0                  0x00000001    /* Event0 Missed Interrupt Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_EVCTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_EVCTL_EPF                    1            /* Event Parameter Field. All EPF[4:0] has same external pin timing. */
#define BITP_ACM_EVCTL_ENAEV                  0            /* Enable Event */
#define BITM_ACM_EVCTL_EPF                   0x0000003E    /* Event Parameter Field. All EPF[4:0] has same external pin timing. */
#define BITM_ACM_EVCTL_ENAEV                 0x00000001    /* Enable Event */

/* ------------------------------------------------------------------------------------------------------------------------
        ACM_EVORD                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ACM_EVORD_EVSTAT                17            /* Reflects the EVSTATn Bit in the EVSTAT Register */
#define BITP_ACM_EVORD_MEVSTAT               16            /* Reflects the MEVSTATn Bit in the MEVSTAT Register */
#define BITP_ACM_EVORD_ORD                    0            /* Order of Event Completion */
#define BITM_ACM_EVORD_EVSTAT                0x00020000    /* Reflects the EVSTATn Bit in the EVSTAT Register */
#define BITM_ACM_EVORD_MEVSTAT               0x00010000    /* Reflects the MEVSTATn Bit in the MEVSTAT Register */
#define BITM_ACM_EVORD_ORD                   0x000000FF    /* Order of Event Completion */

/* =========================
        DDR Registers
   ========================= */

/* =========================
        DDR0
   ========================= */
#define REG_DDR0_ID                     0xFFC80000         /* DDR0 Identification Register */
#define REG_DDR0_CTL                    0xFFC80004         /* DDR0 Control Register */
#define REG_DDR0_STAT                   0xFFC80008         /* DDR0 Status Register */
#define REG_DDR0_EFFCTL                 0xFFC8000C         /* DDR0 Efficiency Controller */
#define REG_DDR0_PRIO                   0xFFC80010         /* DDR0 Priority ID Register */
#define REG_DDR0_PRIOMSK                0xFFC80014         /* DDR0 Priority ID Mask */
#define REG_DDR0_CFG                    0xFFC80040         /* DDR0 SDRAM Configuration */
#define REG_DDR0_TR0                    0xFFC80044         /* DDR0 Timing Register 0 */
#define REG_DDR0_TR1                    0xFFC80048         /* DDR0 Timing Register 1 */
#define REG_DDR0_TR2                    0xFFC8004C         /* DDR0 Timing Register 2 */
#define REG_DDR0_MSK                    0xFFC8005C         /* DDR0 Mode Register Mask */
#define REG_DDR0_MR                     0xFFC80060         /* DDR0 Mode Shadow register */
#define REG_DDR0_EMR1                   0xFFC80064         /* DDR0 EMR1 Shadow Register */
#define REG_DDR0_EMR2                   0xFFC80068         /* DDR0 EMR2 Shadow Register */
#define REG_DDR0_EMR3                   0xFFC8006C         /* DDR0 EMR3 Shadow Register */
#define REG_DDR0_DLLCTL                 0xFFC80080         /* DDR0 DLL Control Register */
#define REG_DDR0_PADCTL                 0xFFC800C0         /* DDR0 PAD Control Register 0 */

/* =========================
        DDR
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        DDR_ID                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_ID_MAJOR                     4            /* Major Revision ID */
#define BITP_DDR_ID_REV                       0            /* Incremental Revsion ID */
#define BITM_DDR_ID_MAJOR                    0x000000F0    /* Major Revision ID */
#define BITM_DDR_ID_REV                      0x0000000F    /* Incremental Revsion ID */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_CTL_DCMDEN                  15            /* Enable Direct Command Control */
#define BITP_DDR_CTL_DLLCAL                  13            /* Start PHY DLL Calibration Sequence */
#define BITP_DDR_CTL_PPREF                   12            /* Postpone Sending Auto-Refresh Commands */
#define BITP_DDR_CTL_RDTOWR                   9            /* Add extra cycles when a write follows read back to back */
#define BITP_DDR_CTL_ADDRMODE                 8            /* Select Page or Bank Interleaving */
#define BITP_DDR_CTL_PREC                     6            /* Precharge */
#define BITP_DDR_CTL_DPDREQ                   5            /* Deep Power Down Mode (LPDDR only Feature) */
#define BITP_DDR_CTL_PDREQ                    4            /* Power Down Mode */
#define BITP_DDR_CTL_SRREQ                    3            /* Self Refresh Mode */
#define BITP_DDR_CTL_INIT                     2            /* DRAM Initialization */
#define BITP_DDR_CTL_LPDDR                    1            /* LPDDR Mode Enable */
#define BITM_DDR_CTL_DCMDEN                  0x00008000    /* Enable Direct Command Control */
#define BITM_DDR_CTL_DLLCAL                  0x00002000    /* Start PHY DLL Calibration Sequence */
#define BITM_DDR_CTL_PPREF                   0x00001000    /* Postpone Sending Auto-Refresh Commands */
#define BITM_DDR_CTL_RDTOWR                  0x00000E00    /* Add extra cycles when a write follows read back to back */
#define BITM_DDR_CTL_ADDRMODE                0x00000100    /* Select Page or Bank Interleaving */
#define BITM_DDR_CTL_PREC                    0x00000040    /* Precharge */
#define BITM_DDR_CTL_DPDREQ                  0x00000020    /* Deep Power Down Mode (LPDDR only Feature) */
#define BITM_DDR_CTL_PDREQ                   0x00000010    /* Power Down Mode */
#define BITM_DDR_CTL_SRREQ                   0x00000008    /* Self Refresh Mode */
#define BITM_DDR_CTL_INIT                    0x00000004    /* DRAM Initialization */
#define BITM_DDR_CTL_LPDDR                   0x00000002    /* LPDDR Mode Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_STAT_PHYRDPHASE             20            /* Read latency from PHY */
#define BITP_DDR_STAT_PENDREF                16            /* Pending refreshes */
#define BITP_DDR_STAT_DLLCALDONE             13            /* Calibration Complete */
#define BITP_DDR_STAT_DPDACK                  5            /* Deep Power Down Active (LPDDR Only) */
#define BITP_DDR_STAT_PDACK                   4            /* Power Down Active */
#define BITP_DDR_STAT_SRACK                   3            /* Self Refresh Active */
#define BITP_DDR_STAT_INITDONE                2            /* Initialization Complete */
#define BITP_DDR_STAT_IDLE                    0            /* Controller Idle */
#define BITM_DDR_STAT_PHYRDPHASE             0x00F00000    /* Read latency from PHY */
#define BITM_DDR_STAT_PENDREF                0x000F0000    /* Pending refreshes */
#define BITM_DDR_STAT_DLLCALDONE             0x00002000    /* Calibration Complete */
#define BITM_DDR_STAT_DPDACK                 0x00000020    /* Deep Power Down Active (LPDDR Only) */
#define BITM_DDR_STAT_PDACK                  0x00000010    /* Power Down Active */
#define BITM_DDR_STAT_SRACK                  0x00000008    /* Self Refresh Active */
#define BITM_DDR_STAT_INITDONE               0x00000004    /* Initialization Complete */
#define BITM_DDR_STAT_IDLE                   0x00000001    /* Controller Idle */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_EFFCTL                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_EFFCTL_IDLECYC              20            /* Number of cycles after which accumulated auto-refresh commands are issued */
#define BITP_DDR_EFFCTL_NUMREF               16            /* Number of accumulated auto-refresh commands */
#define BITP_DDR_EFFCTL_PRECBANK              8            /* Precharge */
#define BITP_DDR_EFFCTL_WAITWRDATA            7            /* Wait in write snapshot for full data */
#define BITP_DDR_EFFCTL_FULLWRDATA            6            /* Start transfer only if full data available */
#define BITM_DDR_EFFCTL_IDLECYC              0x00F00000    /* Number of cycles after which accumulated auto-refresh commands are issued */
#define BITM_DDR_EFFCTL_NUMREF               0x000F0000    /* Number of accumulated auto-refresh commands */
#define BITM_DDR_EFFCTL_PRECBANK             0x0000FF00    /* Precharge */
#define BITM_DDR_EFFCTL_WAITWRDATA           0x00000080    /* Wait in write snapshot for full data */
#define BITM_DDR_EFFCTL_FULLWRDATA           0x00000040    /* Start transfer only if full data available */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_PRIO                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_PRIO_ID2                    16            /* ID2 Requiring Elevated Priority */
#define BITP_DDR_PRIO_ID1                     0            /* ID1 Requiring Elevated Priority */
#define BITM_DDR_PRIO_ID2                    0xFFFF0000    /* ID2 Requiring Elevated Priority */
#define BITM_DDR_PRIO_ID1                    0x0000FFFF    /* ID1 Requiring Elevated Priority */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_PRIOMSK                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_PRIOMSK_ID2MSK              16            /* Mask for ID2 */
#define BITP_DDR_PRIOMSK_ID1MSK               0            /* Mask for ID1 */
#define BITM_DDR_PRIOMSK_ID2MSK              0xFFFF0000    /* Mask for ID2 */
#define BITM_DDR_PRIOMSK_ID1MSK              0x0000FFFF    /* Mask for ID1 */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_CFG                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_CFG_RTT                     20            /* Set Controller Side Termination Resistance */
#define BITP_DDR_CFG_EXTBANK                 12            /* Num External Banks */
#define BITP_DDR_CFG_SDRSIZE                  8            /* SDRAM Size */
#define BITP_DDR_CFG_SDRWID                   4            /* SDRAM Width */
#define BITP_DDR_CFG_IFWID                    0            /* Interface Width */
#define BITM_DDR_CFG_RTT                     0x00F00000    /* Set Controller Side Termination Resistance */
#define BITM_DDR_CFG_EXTBANK                 0x0000F000    /* Num External Banks */
#define BITM_DDR_CFG_SDRSIZE                 0x00000F00    /* SDRAM Size */
#define BITM_DDR_CFG_SDRWID                  0x000000F0    /* SDRAM Width */
#define BITM_DDR_CFG_IFWID                   0x0000000F    /* Interface Width */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_TR0                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_TR0_TMRD                    28            /* Mode register set-to-active */
#define BITP_DDR_TR0_TRC                     20            /* Active-to-Active time */
#define BITP_DDR_TR0_TRAS                    12            /* Active-to- Precharge time */
#define BITP_DDR_TR0_TRP                      8            /* Precharge-to-Active time */
#define BITP_DDR_TR0_TWTR                     4            /* Write-to-Read delay */
#define BITP_DDR_TR0_TRCD                     0            /* RAS to CAS delay time */
#define BITM_DDR_TR0_TMRD                    0xF0000000    /* Mode register set-to-active */
#define BITM_DDR_TR0_TRC                     0x03F00000    /* Active-to-Active time */
#define BITM_DDR_TR0_TRAS                    0x0001F000    /* Active-to- Precharge time */
#define BITM_DDR_TR0_TRP                     0x00000F00    /* Precharge-to-Active time */
#define BITM_DDR_TR0_TWTR                    0x000000F0    /* Write-to-Read delay */
#define BITM_DDR_TR0_TRCD                    0x0000000F    /* RAS to CAS delay time */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_TR1                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_TR1_TRRD                    28            /* Active-to-Active time */
#define BITP_DDR_TR1_TRFC                    16            /* Refresh-to-Active command delay */
#define BITP_DDR_TR1_TREF                     0            /* Refresh Interval */
#define BITM_DDR_TR1_TRRD                    0x70000000    /* Active-to-Active time */
#define BITM_DDR_TR1_TRFC                    0x00FF0000    /* Refresh-to-Active command delay */
#define BITM_DDR_TR1_TREF                    0x00003FFF    /* Refresh Interval */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_TR2                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_TR2_TCKE                    20            /* CKE Minimum Pulse Width */
#define BITP_DDR_TR2_TXP                     16            /* Exit Power Down to Next Valid Command */
#define BITP_DDR_TR2_TWR                     12            /* Write Recovery Time (LPDDR only) */
#define BITP_DDR_TR2_TRTP                     8            /* Internal Read to Precharge */
#define BITP_DDR_TR2_TFAW                     0            /* Four Activate Window */
#define BITM_DDR_TR2_TCKE                    0x00F00000    /* CKE Minimum Pulse Width */
#define BITM_DDR_TR2_TXP                     0x000F0000    /* Exit Power Down to Next Valid Command */
#define BITM_DDR_TR2_TWR                     0x0000F000    /* Write Recovery Time (LPDDR only) */
#define BITM_DDR_TR2_TRTP                    0x00000F00    /* Internal Read to Precharge */
#define BITM_DDR_TR2_TFAW                    0x0000001F    /* Four Activate Window */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_MSK                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_MSK_EMR3                    11
#define BITP_DDR_MSK_EMR2                    10
#define BITP_DDR_MSK_EMR1                     9
#define BITP_DDR_MSK_MR                       8
#define BITM_DDR_MSK_EMR3                    0x00000800
#define BITM_DDR_MSK_EMR2                    0x00000400
#define BITM_DDR_MSK_EMR1                    0x00000200
#define BITM_DDR_MSK_MR                      0x00000100

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_MR                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_MR_PD                       12            /* Active Power Down Exit time */
#define BITP_DDR_MR_WRRECOV                   9            /* Write Recovery */
#define BITP_DDR_MR_DLLRST                    8            /* DLL Reset */
#define BITP_DDR_MR_CL                        4            /* CAS Latency */
#define BITP_DDR_MR_BLEN                      0            /* Burst Length */
#define BITM_DDR_MR_PD                       0x00001000    /* Active Power Down Exit time */
#define BITM_DDR_MR_WRRECOV                  0x00000E00    /* Write Recovery */
#define BITM_DDR_MR_DLLRST                   0x00000100    /* DLL Reset */
#define BITM_DDR_MR_CL                       0x00000070    /* CAS Latency */
#define BITM_DDR_MR_BLEN                     0x00000007    /* Burst Length */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_EMR1                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_EMR1_QOFF                   12            /* Output Buffer Enable */
#define BITP_DDR_EMR1_DQS                    10
#define BITP_DDR_EMR1_RTT1                    6
#define BITP_DDR_EMR1_AL                      3            /* Additive Latency */
#define BITP_DDR_EMR1_RTT0                    2
#define BITP_DDR_EMR1_DIC                     1            /* Output Driver Impedance Control (D.I.C.) */
#define BITP_DDR_EMR1_DLLEN                   0            /* DLL Enable */
#define BITM_DDR_EMR1_QOFF                   0x00001000    /* Output Buffer Enable */
#define BITM_DDR_EMR1_DQS                    0x00000400
#define BITM_DDR_EMR1_RTT1                   0x00000040
#define BITM_DDR_EMR1_AL                     0x00000038    /* Additive Latency */
#define BITM_DDR_EMR1_RTT0                   0x00000004
#define BITM_DDR_EMR1_DIC                    0x00000002    /* Output Driver Impedance Control (D.I.C.) */
#define BITM_DDR_EMR1_DLLEN                  0x00000001    /* DLL Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_EMR2                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_EMR2_SRF                     7            /* High Temperature Self-Refresh Rate Enable */
#define BITP_DDR_EMR2_PASR                    0            /* Partial Array Self Refresh */
#define BITM_DDR_EMR2_SRF                    0x00000080    /* High Temperature Self-Refresh Rate Enable */
#define BITM_DDR_EMR2_PASR                   0x00000007    /* Partial Array Self Refresh */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_DLLCTL                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_DLLCTL_DATACYC               8            /* Controller Latency */
#define BITP_DDR_DLLCTL_DLLCALRDCNT           0            /* Number of Reads Required for DLL Calibration */
#define BITM_DDR_DLLCTL_DATACYC              0x00000F00    /* Controller Latency */
#define BITM_DDR_DLLCTL_DLLCALRDCNT          0x000000FF    /* Number of Reads Required for DLL Calibration */

/* ------------------------------------------------------------------------------------------------------------------------
        DDR_PADCTL                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DDR_PADCTL_CKEOE                22            /* CKE Pad OE value */
#define BITP_DDR_PADCTL_CKEPWD               18            /* CKE pad receiver power down */
#define BITP_DDR_PADCTL_CKEODS               16            /* CKE pads output drive strength control */
#define BITP_DDR_PADCTL_CMDOE                15            /* CMD pads OE value */
#define BITP_DDR_PADCTL_CMDPWD               14            /* Command/address/control pads receiver power down */
#define BITP_DDR_PADCTL_CMDODS               12            /* Command/address/control drive strength control */
#define BITP_DDR_PADCTL_CLKOE                11            /* CLK Pads OE value */
#define BITP_DDR_PADCTL_CLKPWD               10            /* CLK pads receiver power down */
#define BITP_DDR_PADCTL_CLKODS                8            /* CLK Pad output drive strength control */
#define BITP_DDR_PADCTL_DQSPWD                6            /* DQ and DQS Pads Receiver Power Down */
#define BITP_DDR_PADCTL_DQSODS                4            /* DQS Pads Output Drive Strength Control */
#define BITP_DDR_PADCTL_DQPWD                 2            /* DQ Pads Receiver Power Down */
#define BITP_DDR_PADCTL_DQODS                 0            /* DQ Pads Output Drive Strength */
#define BITM_DDR_PADCTL_CKEOE                0x00400000    /* CKE Pad OE value */
#define BITM_DDR_PADCTL_CKEPWD               0x00040000    /* CKE pad receiver power down */
#define BITM_DDR_PADCTL_CKEODS               0x00030000    /* CKE pads output drive strength control */
#define BITM_DDR_PADCTL_CMDOE                0x00008000    /* CMD pads OE value */
#define BITM_DDR_PADCTL_CMDPWD               0x00004000    /* Command/address/control pads receiver power down */
#define BITM_DDR_PADCTL_CMDODS               0x00003000    /* Command/address/control drive strength control */
#define BITM_DDR_PADCTL_CLKOE                0x00000800    /* CLK Pads OE value */
#define BITM_DDR_PADCTL_CLKPWD               0x00000400    /* CLK pads receiver power down */
#define BITM_DDR_PADCTL_CLKODS               0x00000300    /* CLK Pad output drive strength control */
#define BITM_DDR_PADCTL_DQSPWD               0x00000040    /* DQ and DQS Pads Receiver Power Down */
#define BITM_DDR_PADCTL_DQSODS               0x00000030    /* DQS Pads Output Drive Strength Control */
#define BITM_DDR_PADCTL_DQPWD                0x00000004    /* DQ Pads Receiver Power Down */
#define BITM_DDR_PADCTL_DQODS                0x00000003    /* DQ Pads Output Drive Strength */

/* =========================
        SCB Registers
   ========================= */

/* =========================
        SCB0
   ========================= */
#define REG_SCB0_ARBR0                  0xFFCA2408         /* SCB0 Read-channel Arbitration Register for MIn */
#define REG_SCB0_ARBR1                  0xFFCA2428         /* SCB0 Read-channel Arbitration Register for MIn */
#define REG_SCB0_ARBR2                  0xFFCA2448         /* SCB0 Read-channel Arbitration Register for MIn */
#define REG_SCB0_ARBR3                  0xFFCA2468         /* SCB0 Read-channel Arbitration Register for MIn */
#define REG_SCB0_ARBR4                  0xFFCA2488         /* SCB0 Read-channel Arbitration Register for MIn */
#define REG_SCB0_ARBR5                  0xFFCA24A8         /* SCB0 Read-channel Arbitration Register for MIn */
#define REG_SCB0_ARBW0                  0xFFCA240C         /* SCB0 Write-channel Arbitration Register for MIn */
#define REG_SCB0_ARBW1                  0xFFCA242C         /* SCB0 Write-channel Arbitration Register for MIn */
#define REG_SCB0_ARBW2                  0xFFCA244C         /* SCB0 Write-channel Arbitration Register for MIn */
#define REG_SCB0_ARBW3                  0xFFCA246C         /* SCB0 Write-channel Arbitration Register for MIn */
#define REG_SCB0_ARBW4                  0xFFCA248C         /* SCB0 Write-channel Arbitration Register for MIn */
#define REG_SCB0_ARBW5                  0xFFCA24AC         /* SCB0 Write-channel Arbitration Register for MIn */
#define REG_SCB0_SLAVES                 0xFFCA2FC0         /* SCB0 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB0_MASTERS                0xFFCA2FC4         /* SCB0 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB1
   ========================= */
#define REG_SCB1_ARBR0                  0xFFC42408         /* SCB1 Read-channel Arbitration Register for MIn */
#define REG_SCB1_ARBW0                  0xFFC4240C         /* SCB1 Write-channel Arbitration Register for MIn */
#define REG_SCB1_SLAVES                 0xFFC42FC0         /* SCB1 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB1_MASTERS                0xFFC42FC4         /* SCB1 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB2
   ========================= */
#define REG_SCB2_ARBR0                  0xFFC06408         /* SCB2 Read-channel Arbitration Register for MIn */
#define REG_SCB2_ARBW0                  0xFFC0640C         /* SCB2 Write-channel Arbitration Register for MIn */
#define REG_SCB2_SLAVES                 0xFFC06FC0         /* SCB2 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB2_MASTERS                0xFFC06FC4         /* SCB2 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB3
   ========================= */
#define REG_SCB3_ARBR0                  0xFFC08408         /* SCB3 Read-channel Arbitration Register for MIn */
#define REG_SCB3_ARBW0                  0xFFC0840C         /* SCB3 Write-channel Arbitration Register for MIn */
#define REG_SCB3_SLAVES                 0xFFC08FC0         /* SCB3 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB3_MASTERS                0xFFC08FC4         /* SCB3 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB4
   ========================= */
#define REG_SCB4_ARBR0                  0xFFC0A408         /* SCB4 Read-channel Arbitration Register for MIn */
#define REG_SCB4_ARBW0                  0xFFC0A40C         /* SCB4 Write-channel Arbitration Register for MIn */
#define REG_SCB4_SLAVES                 0xFFC0AFC0         /* SCB4 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB4_MASTERS                0xFFC0AFC4         /* SCB4 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB5
   ========================= */
#define REG_SCB5_ARBR0                  0xFFC0C408         /* SCB5 Read-channel Arbitration Register for MIn */
#define REG_SCB5_ARBW0                  0xFFC0C40C         /* SCB5 Write-channel Arbitration Register for MIn */
#define REG_SCB5_SLAVES                 0xFFC0CFC0         /* SCB5 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB5_MASTERS                0xFFC0CFC4         /* SCB5 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB6
   ========================= */
#define REG_SCB6_ARBR0                  0xFFC0E408         /* SCB6 Read-channel Arbitration Register for MIn */
#define REG_SCB6_ARBW0                  0xFFC0E40C         /* SCB6 Write-channel Arbitration Register for MIn */
#define REG_SCB6_SLAVES                 0xFFC0EFC0         /* SCB6 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB6_MASTERS                0xFFC0EFC4         /* SCB6 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB7
   ========================= */
#define REG_SCB7_ARBR0                  0xFFC11408         /* SCB7 Read-channel Arbitration Register for MIn */
#define REG_SCB7_ARBW0                  0xFFC1140C         /* SCB7 Write-channel Arbitration Register for MIn */
#define REG_SCB7_SLAVES                 0xFFC11FC0         /* SCB7 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB7_MASTERS                0xFFC11FC4         /* SCB7 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB8
   ========================= */
#define REG_SCB8_ARBR0                  0xFFC13408         /* SCB8 Read-channel Arbitration Register for MIn */
#define REG_SCB8_ARBW0                  0xFFC1340C         /* SCB8 Write-channel Arbitration Register for MIn */
#define REG_SCB8_SLAVES                 0xFFC13FC0         /* SCB8 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB8_MASTERS                0xFFC13FC4         /* SCB8 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB9
   ========================= */
#define REG_SCB9_ARBR0                  0xFFC15408         /* SCB9 Read-channel Arbitration Register for MIn */
#define REG_SCB9_ARBW0                  0xFFC1540C         /* SCB9 Write-channel Arbitration Register for MIn */
#define REG_SCB9_SLAVES                 0xFFC15FC0         /* SCB9 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB9_MASTERS                0xFFC15FC4         /* SCB9 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB10
   ========================= */
#define REG_SCB10_ARBR0                 0xFFCA1408         /* SCB10 Read-channel Arbitration Register for MIn */
#define REG_SCB10_ARBR1                 0xFFCA1428         /* SCB10 Read-channel Arbitration Register for MIn */
#define REG_SCB10_ARBR2                 0xFFCA1448         /* SCB10 Read-channel Arbitration Register for MIn */
#define REG_SCB10_ARBW0                 0xFFCA140C         /* SCB10 Write-channel Arbitration Register for MIn */
#define REG_SCB10_ARBW1                 0xFFCA142C         /* SCB10 Write-channel Arbitration Register for MIn */
#define REG_SCB10_ARBW2                 0xFFCA144C         /* SCB10 Write-channel Arbitration Register for MIn */
#define REG_SCB10_SLAVES                0xFFCA1FC0         /* SCB10 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB10_MASTERS               0xFFCA1FC4         /* SCB10 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB11
   ========================= */
#define REG_SCB11_ARBR0                 0xFFCA0408         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBR1                 0xFFCA0428         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBR2                 0xFFCA0448         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBR3                 0xFFCA0468         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBR4                 0xFFCA0488         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBR5                 0xFFCA04A8         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBR6                 0xFFCA04C8         /* SCB11 Read-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW0                 0xFFCA040C         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW1                 0xFFCA042C         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW2                 0xFFCA044C         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW3                 0xFFCA046C         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW4                 0xFFCA048C         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW5                 0xFFCA04AC         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_ARBW6                 0xFFCA04CC         /* SCB11 Write-channel Arbitration Register for MIn */
#define REG_SCB11_SLAVES                0xFFCA0FC0         /* SCB11 Number of Slave Interfaces in Matrix (Reset = $NUM_SLOTS) */
#define REG_SCB11_MASTERS               0xFFCA0FC4         /* SCB11 Number of Master Interfaces in Matrix (Reset = $NUM_MASTERS) */

/* =========================
        SCB
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SCB_ARBR                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SCB_ARBR_SLOT                   24            /* Arbitration Slot Number */
#define BITP_SCB_ARBR_SLAVE                   0            /* Slave Interface ID */
#define BITM_SCB_ARBR_SLOT                   0xFF000000    /* Arbitration Slot Number */
#define BITM_SCB_ARBR_SLAVE                  0x000000FF    /* Slave Interface ID */

/* ------------------------------------------------------------------------------------------------------------------------
        SCB_ARBW                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SCB_ARBW_SLOT                   24            /* Arbitration Slot Number */
#define BITP_SCB_ARBW_SLAVE                   0            /* Slave Interface ID */
#define BITM_SCB_ARBW_SLOT                   0xFF000000    /* Arbitration Slot Number */
#define BITM_SCB_ARBW_SLAVE                  0x000000FF    /* Slave Interface ID */

/* ------------------------------------------------------------------------------------------------------------------------
        SCB_SLAVES                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SCB_SLAVES_SI                    0            /* Number of slave interfaces in matrix */
#define BITM_SCB_SLAVES_SI                   0x000000FF    /* Number of slave interfaces in matrix */

/* ------------------------------------------------------------------------------------------------------------------------
        SCB_MASTERS                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SCB_MASTERS_MI                   0            /* Number of master interfaces in matrix */
#define BITM_SCB_MASTERS_MI                  0x000000FF    /* Number of master interfaces in matrix */

/* =========================
        L2CTL Registers
   ========================= */

/* =========================
        L2CTL0
   ========================= */
#define REG_L2CTL0_CTL                  0xFFCA3000         /* L2CTL0 L2 Control Register */
#define REG_L2CTL0_ACTL_C0              0xFFCA3004         /* L2CTL0 L2 Core 0 Access Control Register */
#define REG_L2CTL0_ACTL_C1              0xFFCA3008         /* L2CTL0 L2 Core 1 Access Control Register */
#define REG_L2CTL0_ACTL_SYS             0xFFCA300C         /* L2CTL0 L2 System Access Control Register */
#define REG_L2CTL0_STAT                 0xFFCA3010         /* L2CTL0 L2 Status Register */
#define REG_L2CTL0_RPCR                 0xFFCA3014         /* L2CTL0 L2 Read Priority Count Register */
#define REG_L2CTL0_WPCR                 0xFFCA3018         /* L2CTL0 L2 Write Priority Count Register */
#define REG_L2CTL0_RFA                  0xFFCA3024         /* L2CTL0 L2 Refresh Address Regsiter */
#define REG_L2CTL0_ERRADDR0             0xFFCA3040         /* L2CTL0 L2 Bank 0 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR1             0xFFCA3044         /* L2CTL0 L2 Bank 1 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR2             0xFFCA3048         /* L2CTL0 L2 Bank 2 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR3             0xFFCA304C         /* L2CTL0 L2 Bank 3 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR4             0xFFCA3050         /* L2CTL0 L2 Bank 4 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR5             0xFFCA3054         /* L2CTL0 L2 Bank 5 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR6             0xFFCA3058         /* L2CTL0 L2 Bank 6 ECC Error Address Register */
#define REG_L2CTL0_ERRADDR7             0xFFCA305C         /* L2CTL0 L2 Bank 7 ECC Error Address Register */
#define REG_L2CTL0_ET0                  0xFFCA3080         /* L2CTL0 L2 AXI Error 0 Type Register */
#define REG_L2CTL0_EADDR0               0xFFCA3084         /* L2CTL0 L2 AXI Error 0 Address Register */
#define REG_L2CTL0_ET1                  0xFFCA3088         /* L2CTL0 L2 AXI Error 1 Type Register */
#define REG_L2CTL0_EADDR1               0xFFCA308C         /* L2CTL0 L2 AXI Error 1 Address Register */

/* =========================
        L2CTL
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_CTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_CTL_LOCK                  31            /* Lock L2 Control Register */
#define BITP_L2CTL_CTL_DISURP                16            /* Disable Urgent Priority Request Mode */
#define BITP_L2CTL_CTL_ECCMAP7               15            /* Address Map ECC RAM for Bank 7 */
#define BITP_L2CTL_CTL_ECCMAP6               14            /* Address Map ECC RAM for Bank 6 */
#define BITP_L2CTL_CTL_ECCMAP5               13            /* Address Map ECC RAM for Bank 5 */
#define BITP_L2CTL_CTL_ECCMAP4               12            /* Address Map ECC RAM for Bank 4 */
#define BITP_L2CTL_CTL_ECCMAP3               11            /* Address Map ECC RAM for Bank 3 */
#define BITP_L2CTL_CTL_ECCMAP2               10            /* Address Map ECC RAM for Bank 2 */
#define BITP_L2CTL_CTL_ECCMAP1                9            /* Address Map ECC RAM for Bank 1 */
#define BITP_L2CTL_CTL_ECCMAP0                8            /* Address Map ECC RAM for Bank 0 */
#define BITP_L2CTL_CTL_BK7EDIS                7            /* RAM Bank 7 ECC Disable */
#define BITP_L2CTL_CTL_BK6EDIS                6            /* RAM Bank 6 ECC Disable */
#define BITP_L2CTL_CTL_BK5EDIS                5            /* RAM Bank 5 ECC Disable */
#define BITP_L2CTL_CTL_BK4EDIS                4            /* RAM Bank 4 ECC Disable */
#define BITP_L2CTL_CTL_BK3EDIS                3            /* RAM Bank 3 ECC Disable */
#define BITP_L2CTL_CTL_BK2EDIS                2            /* RAM Bank 2 ECC Disable */
#define BITP_L2CTL_CTL_BK1EDIS                1            /* RAM Bank 1 ECC Disable */
#define BITP_L2CTL_CTL_BK0EDIS                0            /* RAM Bank 0 ECC Disable */
#define BITM_L2CTL_CTL_LOCK                  0x80000000    /* Lock L2 Control Register */
#define BITM_L2CTL_CTL_DISURP                0x00010000    /* Disable Urgent Priority Request Mode */
#define BITM_L2CTL_CTL_ECCMAP7               0x00008000    /* Address Map ECC RAM for Bank 7 */
#define BITM_L2CTL_CTL_ECCMAP6               0x00004000    /* Address Map ECC RAM for Bank 6 */
#define BITM_L2CTL_CTL_ECCMAP5               0x00002000    /* Address Map ECC RAM for Bank 5 */
#define BITM_L2CTL_CTL_ECCMAP4               0x00001000    /* Address Map ECC RAM for Bank 4 */
#define BITM_L2CTL_CTL_ECCMAP3               0x00000800    /* Address Map ECC RAM for Bank 3 */
#define BITM_L2CTL_CTL_ECCMAP2               0x00000400    /* Address Map ECC RAM for Bank 2 */
#define BITM_L2CTL_CTL_ECCMAP1               0x00000200    /* Address Map ECC RAM for Bank 1 */
#define BITM_L2CTL_CTL_ECCMAP0               0x00000100    /* Address Map ECC RAM for Bank 0 */
#define BITM_L2CTL_CTL_BK7EDIS               0x00000080    /* RAM Bank 7 ECC Disable */
#define BITM_L2CTL_CTL_BK6EDIS               0x00000040    /* RAM Bank 6 ECC Disable */
#define BITM_L2CTL_CTL_BK5EDIS               0x00000020    /* RAM Bank 5 ECC Disable */
#define BITM_L2CTL_CTL_BK4EDIS               0x00000010    /* RAM Bank 4 ECC Disable */
#define BITM_L2CTL_CTL_BK3EDIS               0x00000008    /* RAM Bank 3 ECC Disable */
#define BITM_L2CTL_CTL_BK2EDIS               0x00000004    /* RAM Bank 2 ECC Disable */
#define BITM_L2CTL_CTL_BK1EDIS               0x00000002    /* RAM Bank 1 ECC Disable */
#define BITM_L2CTL_CTL_BK0EDIS               0x00000001    /* RAM Bank 0 ECC Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_ACTL_C0                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_ACTL_C0_LOCK              31            /* Lock L2 Core 0 Access Control Register */
#define BITP_L2CTL_ACTL_C0_BK7WDIS            7            /* RAM Bank7 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK6WDIS            6            /* RAM Bank6 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK5WDIS            5            /* RAM Bank5 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK4WDIS            4            /* RAM Bank4 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK3WDIS            3            /* RAM Bank3 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK2WDIS            2            /* RAM Bank2 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK1WDIS            1            /* RAM Bank1 Write Disable */
#define BITP_L2CTL_ACTL_C0_BK0WDIS            0            /* RAM Bank0 Write Disable */
#define BITM_L2CTL_ACTL_C0_LOCK              0x80000000    /* Lock L2 Core 0 Access Control Register */
#define BITM_L2CTL_ACTL_C0_BK7WDIS           0x00000080    /* RAM Bank7 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK6WDIS           0x00000040    /* RAM Bank6 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK5WDIS           0x00000020    /* RAM Bank5 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK4WDIS           0x00000010    /* RAM Bank4 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK3WDIS           0x00000008    /* RAM Bank3 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK2WDIS           0x00000004    /* RAM Bank2 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK1WDIS           0x00000002    /* RAM Bank1 Write Disable */
#define BITM_L2CTL_ACTL_C0_BK0WDIS           0x00000001    /* RAM Bank0 Write Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_ACTL_C1                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_ACTL_C1_LOCK              31            /* Lock L2 Core1 Access Control Register */
#define BITP_L2CTL_ACTL_C1_BK7WDIS            7            /* RAM Bank7 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK6WDIS            6            /* RAM Bank6 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK5WDIS            5            /* RAM Bank5 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK4WDIS            4            /* RAM Bank4 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK3WDIS            3            /* RAM Bank3 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK2WDIS            2            /* RAM Bank2 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK1WDIS            1            /* RAM Bank1 Write Disable */
#define BITP_L2CTL_ACTL_C1_BK0WDIS            0            /* RAM Bank0 Write Disable */
#define BITM_L2CTL_ACTL_C1_LOCK              0x80000000    /* Lock L2 Core1 Access Control Register */
#define BITM_L2CTL_ACTL_C1_BK7WDIS           0x00000080    /* RAM Bank7 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK6WDIS           0x00000040    /* RAM Bank6 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK5WDIS           0x00000020    /* RAM Bank5 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK4WDIS           0x00000010    /* RAM Bank4 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK3WDIS           0x00000008    /* RAM Bank3 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK2WDIS           0x00000004    /* RAM Bank2 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK1WDIS           0x00000002    /* RAM Bank1 Write Disable */
#define BITM_L2CTL_ACTL_C1_BK0WDIS           0x00000001    /* RAM Bank0 Write Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_ACTL_SYS                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_ACTL_SYS_LOCK             31            /* Lock L2 System Access Control Register */
#define BITP_L2CTL_ACTL_SYS_BK7WDIS           7            /* RAM Bank7 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK6WDIS           6            /* RAM Bank6 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK5WDIS           5            /* RAM Bank5 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK4WDIS           4            /* RAM Bank4 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK3WDIS           3            /* RAM Bank3 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK2WDIS           2            /* RAM Bank2 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK1WDIS           1            /* RAM Bank1 Write Disable */
#define BITP_L2CTL_ACTL_SYS_BK0WDIS           0            /* RAM Bank0 Write Disable */
#define BITM_L2CTL_ACTL_SYS_LOCK             0x80000000    /* Lock L2 System Access Control Register */
#define BITM_L2CTL_ACTL_SYS_BK7WDIS          0x00000080    /* RAM Bank7 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK6WDIS          0x00000040    /* RAM Bank6 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK5WDIS          0x00000020    /* RAM Bank5 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK4WDIS          0x00000010    /* RAM Bank4 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK3WDIS          0x00000008    /* RAM Bank3 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK2WDIS          0x00000004    /* RAM Bank2 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK1WDIS          0x00000002    /* RAM Bank1 Write Disable */
#define BITM_L2CTL_ACTL_SYS_BK0WDIS          0x00000001    /* RAM Bank0 Write Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_STAT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_STAT_BFAIL                25            /* Bist Fail */
#define BITP_L2CTL_STAT_BRDY                 24            /* Bist Ready */
#define BITP_L2CTL_STAT_ECCWRN7              23            /* RAM Bank 7 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN6              22            /* RAM Bank 6 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN5              21            /* RAM Bank 5 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN4              20            /* RAM Bank 4 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN3              19            /* RAM Bank 3 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN2              18            /* RAM Bank 2 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN1              17            /* RAM Bank 1 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCWRN0              16            /* RAM Bank 0 ECC Single Bit Error */
#define BITP_L2CTL_STAT_ECCERR7              15            /* RAM Bank 7 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR6              14            /* RAM Bank 6 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR5              13            /* RAM Bank 5 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR4              12            /* RAM Bank 4 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR3              11            /* RAM Bank 3 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR2              10            /* RAM Bank 2 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR1               9            /* RAM Bank 1 ECC Double Bit Error */
#define BITP_L2CTL_STAT_ECCERR0               8            /* RAM Bank 0 ECC Double Bit Error */
#define BITP_L2CTL_STAT_RFRS                  4            /* Refresh Register Status */
#define BITP_L2CTL_STAT_ERR1                  1            /* AXI access error on Port 1 */
#define BITP_L2CTL_STAT_ERR0                  0            /* AXI access error on Port 0 */
#define BITM_L2CTL_STAT_BFAIL                0x02000000    /* Bist Fail */
#define BITM_L2CTL_STAT_BRDY                 0x01000000    /* Bist Ready */
#define BITM_L2CTL_STAT_ECCWRN7              0x00800000    /* RAM Bank 7 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN6              0x00400000    /* RAM Bank 6 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN5              0x00200000    /* RAM Bank 5 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN4              0x00100000    /* RAM Bank 4 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN3              0x00080000    /* RAM Bank 3 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN2              0x00040000    /* RAM Bank 2 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN1              0x00020000    /* RAM Bank 1 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCWRN0              0x00010000    /* RAM Bank 0 ECC Single Bit Error */
#define BITM_L2CTL_STAT_ECCERR7              0x00008000    /* RAM Bank 7 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR6              0x00004000    /* RAM Bank 6 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR5              0x00002000    /* RAM Bank 5 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR4              0x00001000    /* RAM Bank 4 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR3              0x00000800    /* RAM Bank 3 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR2              0x00000400    /* RAM Bank 2 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR1              0x00000200    /* RAM Bank 1 ECC Double Bit Error */
#define BITM_L2CTL_STAT_ECCERR0              0x00000100    /* RAM Bank 0 ECC Double Bit Error */
#define BITM_L2CTL_STAT_RFRS                 0x00000010    /* Refresh Register Status */
#define BITM_L2CTL_STAT_ERR1                 0x00000002    /* AXI access error on Port 1 */
#define BITM_L2CTL_STAT_ERR0                 0x00000001    /* AXI access error on Port 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_RPCR                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_RPCR_RPC1                  8            /* Priority Count for AXI Read Channel 1 */
#define BITP_L2CTL_RPCR_RPC0                  0            /* Priority Count for AXI Read Channel 0 */
#define BITM_L2CTL_RPCR_RPC1                 0x0000FF00    /* Priority Count for AXI Read Channel 1 */
#define BITM_L2CTL_RPCR_RPC0                 0x000000FF    /* Priority Count for AXI Read Channel 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_WPCR                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_WPCR_WPC1                  8            /* Priority Count for AXI Write Channel 1 */
#define BITP_L2CTL_WPCR_WPC0                  0            /* Priority Count for AXI Write Channel 0 */
#define BITM_L2CTL_WPCR_WPC1                 0x0000FF00    /* Priority Count for AXI Write Channel 1 */
#define BITM_L2CTL_WPCR_WPC0                 0x000000FF    /* Priority Count for AXI Write Channel 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_RFA                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_RFA_ADDRHI                18            /* L2 Refresh Address High Bits */
#define BITP_L2CTL_RFA_ADDRLO                 0            /* L2 Refresh Address Low Bits */
#define BITM_L2CTL_RFA_ADDRHI                0xFFFC0000    /* L2 Refresh Address High Bits */
#define BITM_L2CTL_RFA_ADDRLO                0x0003FFFF    /* L2 Refresh Address Low Bits */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_ET0                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_ET0_ID                     8            /* ID of the access that caused error */
#define BITP_L2CTL_ET0_RDWR                   4            /* Read/Write Access createed Error */
#define BITP_L2CTL_ET0_ECCERR                 3            /* ECC Double Bit Error */
#define BITP_L2CTL_ET0_ACCERR                 2            /* Access to restricted bank */
#define BITP_L2CTL_ET0_RSVERR                 1            /* Access to reserved location */
#define BITP_L2CTL_ET0_ROMERR                 0            /* Write Access to ROM Area */
#define BITM_L2CTL_ET0_ID                    0x0000FF00    /* ID of the access that caused error */
#define BITM_L2CTL_ET0_RDWR                  0x00000010    /* Read/Write Access createed Error */
#define BITM_L2CTL_ET0_ECCERR                0x00000008    /* ECC Double Bit Error */
#define BITM_L2CTL_ET0_ACCERR                0x00000004    /* Access to restricted bank */
#define BITM_L2CTL_ET0_RSVERR                0x00000002    /* Access to reserved location */
#define BITM_L2CTL_ET0_ROMERR                0x00000001    /* Write Access to ROM Area */

/* ------------------------------------------------------------------------------------------------------------------------
        L2CTL_ET1                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L2CTL_ET1_ID                     8            /* ID of the access that caused error */
#define BITP_L2CTL_ET1_RDWR                   4            /* Read/Write Access createed Error */
#define BITP_L2CTL_ET1_ECCERR                 3            /* ECC Double Bit Error */
#define BITP_L2CTL_ET1_ACCERR                 2            /* Access to restricted bank */
#define BITP_L2CTL_ET1_RSVERR                 1            /* Access to reserved location */
#define BITP_L2CTL_ET1_ROMERR                 0            /* Write Access to ROM Area */
#define BITM_L2CTL_ET1_ID                    0x0000FF00    /* ID of the access that caused error */
#define BITM_L2CTL_ET1_RDWR                  0x00000010    /* Read/Write Access createed Error */
#define BITM_L2CTL_ET1_ECCERR                0x00000008    /* ECC Double Bit Error */
#define BITM_L2CTL_ET1_ACCERR                0x00000004    /* Access to restricted bank */
#define BITM_L2CTL_ET1_RSVERR                0x00000002    /* Access to reserved location */
#define BITM_L2CTL_ET1_ROMERR                0x00000001    /* Write Access to ROM Area */

/* =========================
        SEC Registers
   ========================= */

/* =========================
        SEC0
   ========================= */

/* ------------------------------------------------------------------------------------------------------------------------
       SEC Core Interface (SCI) Register Definitions
   ------------------------------------------------------------------------------------------------------------------------ */
#define REG_SEC0_CCTL0                  0xFFCA4400         /* SEC0 Core Control Register n */
#define REG_SEC0_CCTL1                  0xFFCA4440         /* SEC0 Core Control Register n */
#define REG_SEC0_CSTAT0                 0xFFCA4404         /* SEC0 Core Status Register n */
#define REG_SEC0_CSTAT1                 0xFFCA4444         /* SEC0 Core Status Register n */
#define REG_SEC0_CPND0                  0xFFCA4408         /* SEC0 Core Pending IRQ Register n */
#define REG_SEC0_CPND1                  0xFFCA4448         /* SEC0 Core Pending IRQ Register n */
#define REG_SEC0_CACT0                  0xFFCA440C         /* SEC0 Core Active IRQ Register n */
#define REG_SEC0_CACT1                  0xFFCA444C         /* SEC0 Core Active IRQ Register n */
#define REG_SEC0_CPMSK0                 0xFFCA4410         /* SEC0 Core IRQ Priority Mask Register n */
#define REG_SEC0_CPMSK1                 0xFFCA4450         /* SEC0 Core IRQ Priority Mask Register n */
#define REG_SEC0_CGMSK0                 0xFFCA4414         /* SEC0 Core IRQ Group Mask Register n */
#define REG_SEC0_CGMSK1                 0xFFCA4454         /* SEC0 Core IRQ Group Mask Register n */
#define REG_SEC0_CPLVL0                 0xFFCA4418         /* SEC0 Core IRQ Priority Level Register n */
#define REG_SEC0_CPLVL1                 0xFFCA4458         /* SEC0 Core IRQ Priority Level Register n */
#define REG_SEC0_CSID0                  0xFFCA441C         /* SEC0 Core IRQ Source ID Register n */
#define REG_SEC0_CSID1                  0xFFCA445C         /* SEC0 Core IRQ Source ID Register n */

/* ------------------------------------------------------------------------------------------------------------------------
       SEC Fault Management Interface (SFI) Register Definitions
   ------------------------------------------------------------------------------------------------------------------------ */
#define REG_SEC0_FCTL                   0xFFCA4010         /* SEC0 Fault Control Register */
#define REG_SEC0_FSTAT                  0xFFCA4014         /* SEC0 Fault Status Register */
#define REG_SEC0_FSID                   0xFFCA4018         /* SEC0 Fault Source ID Register */
#define REG_SEC0_FEND                   0xFFCA401C         /* SEC0 Fault End Register */
#define REG_SEC0_FDLY                   0xFFCA4020         /* SEC0 Fault Delay Register */
#define REG_SEC0_FDLY_CUR               0xFFCA4024         /* SEC0 Fault Delay Current Register */
#define REG_SEC0_FSRDLY                 0xFFCA4028         /* SEC0 Fault System Reset Delay Register */
#define REG_SEC0_FSRDLY_CUR             0xFFCA402C         /* SEC0 Fault System Reset Delay Current Register */
#define REG_SEC0_FCOPP                  0xFFCA4030         /* SEC0 Fault COP Period Register */
#define REG_SEC0_FCOPP_CUR              0xFFCA4034         /* SEC0 Fault COP Period Current Register */

/* ------------------------------------------------------------------------------------------------------------------------
       SEC Global Register Definitions
   ------------------------------------------------------------------------------------------------------------------------ */
#define REG_SEC0_GCTL                   0xFFCA4000         /* SEC0 Global Control Register */
#define REG_SEC0_GSTAT                  0xFFCA4004         /* SEC0 Global Status Register */
#define REG_SEC0_RAISE                  0xFFCA4008         /* SEC0 Global Raise Register */
#define REG_SEC0_END                    0xFFCA400C         /* SEC0 Global End Register */

/* ------------------------------------------------------------------------------------------------------------------------
       SEC Source Interface (SSI) Register Definitions
   ------------------------------------------------------------------------------------------------------------------------ */
#define REG_SEC0_SCTL0                  0xFFCA4800         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL1                  0xFFCA4808         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL2                  0xFFCA4810         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL3                  0xFFCA4818         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL4                  0xFFCA4820         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL5                  0xFFCA4828         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL6                  0xFFCA4830         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL7                  0xFFCA4838         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL8                  0xFFCA4840         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL9                  0xFFCA4848         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL10                 0xFFCA4850         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL11                 0xFFCA4858         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL12                 0xFFCA4860         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL13                 0xFFCA4868         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL14                 0xFFCA4870         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL15                 0xFFCA4878         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL16                 0xFFCA4880         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL17                 0xFFCA4888         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL18                 0xFFCA4890         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL19                 0xFFCA4898         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL20                 0xFFCA48A0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL21                 0xFFCA48A8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL22                 0xFFCA48B0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL23                 0xFFCA48B8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL24                 0xFFCA48C0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL25                 0xFFCA48C8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL26                 0xFFCA48D0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL27                 0xFFCA48D8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL28                 0xFFCA48E0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL29                 0xFFCA48E8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL30                 0xFFCA48F0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL31                 0xFFCA48F8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL32                 0xFFCA4900         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL33                 0xFFCA4908         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL34                 0xFFCA4910         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL35                 0xFFCA4918         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL36                 0xFFCA4920         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL37                 0xFFCA4928         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL38                 0xFFCA4930         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL39                 0xFFCA4938         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL40                 0xFFCA4940         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL41                 0xFFCA4948         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL42                 0xFFCA4950         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL43                 0xFFCA4958         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL44                 0xFFCA4960         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL45                 0xFFCA4968         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL46                 0xFFCA4970         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL47                 0xFFCA4978         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL48                 0xFFCA4980         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL49                 0xFFCA4988         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL50                 0xFFCA4990         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL51                 0xFFCA4998         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL52                 0xFFCA49A0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL53                 0xFFCA49A8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL54                 0xFFCA49B0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL55                 0xFFCA49B8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL56                 0xFFCA49C0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL57                 0xFFCA49C8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL58                 0xFFCA49D0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL59                 0xFFCA49D8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL60                 0xFFCA49E0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL61                 0xFFCA49E8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL62                 0xFFCA49F0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL63                 0xFFCA49F8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL64                 0xFFCA4A00         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL65                 0xFFCA4A08         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL66                 0xFFCA4A10         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL67                 0xFFCA4A18         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL68                 0xFFCA4A20         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL69                 0xFFCA4A28         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL70                 0xFFCA4A30         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL71                 0xFFCA4A38         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL72                 0xFFCA4A40         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL73                 0xFFCA4A48         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL74                 0xFFCA4A50         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL75                 0xFFCA4A58         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL76                 0xFFCA4A60         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL77                 0xFFCA4A68         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL78                 0xFFCA4A70         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL79                 0xFFCA4A78         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL80                 0xFFCA4A80         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL81                 0xFFCA4A88         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL82                 0xFFCA4A90         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL83                 0xFFCA4A98         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL84                 0xFFCA4AA0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL85                 0xFFCA4AA8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL86                 0xFFCA4AB0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL87                 0xFFCA4AB8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL88                 0xFFCA4AC0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL89                 0xFFCA4AC8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL90                 0xFFCA4AD0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL91                 0xFFCA4AD8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL92                 0xFFCA4AE0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL93                 0xFFCA4AE8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL94                 0xFFCA4AF0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL95                 0xFFCA4AF8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL96                 0xFFCA4B00         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL97                 0xFFCA4B08         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL98                 0xFFCA4B10         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL99                 0xFFCA4B18         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL100                0xFFCA4B20         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL101                0xFFCA4B28         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL102                0xFFCA4B30         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL103                0xFFCA4B38         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL104                0xFFCA4B40         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL105                0xFFCA4B48         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL106                0xFFCA4B50         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL107                0xFFCA4B58         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL108                0xFFCA4B60         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL109                0xFFCA4B68         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL110                0xFFCA4B70         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL111                0xFFCA4B78         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL112                0xFFCA4B80         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL113                0xFFCA4B88         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL114                0xFFCA4B90         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL115                0xFFCA4B98         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL116                0xFFCA4BA0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL117                0xFFCA4BA8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL118                0xFFCA4BB0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL119                0xFFCA4BB8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL120                0xFFCA4BC0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL121                0xFFCA4BC8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL122                0xFFCA4BD0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL123                0xFFCA4BD8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL124                0xFFCA4BE0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL125                0xFFCA4BE8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL126                0xFFCA4BF0         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL127                0xFFCA4BF8         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL128                0xFFCA4C00         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL129                0xFFCA4C08         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL130                0xFFCA4C10         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL131                0xFFCA4C18         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL132                0xFFCA4C20         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL133                0xFFCA4C28         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL134                0xFFCA4C30         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL135                0xFFCA4C38         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL136                0xFFCA4C40         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL137                0xFFCA4C48         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL138                0xFFCA4C50         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SCTL139                0xFFCA4C58         /* SEC0 IRQ Source Control Register n */
#define REG_SEC0_SSTAT0                 0xFFCA4804         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT1                 0xFFCA480C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT2                 0xFFCA4814         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT3                 0xFFCA481C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT4                 0xFFCA4824         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT5                 0xFFCA482C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT6                 0xFFCA4834         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT7                 0xFFCA483C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT8                 0xFFCA4844         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT9                 0xFFCA484C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT10                0xFFCA4854         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT11                0xFFCA485C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT12                0xFFCA4864         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT13                0xFFCA486C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT14                0xFFCA4874         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT15                0xFFCA487C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT16                0xFFCA4884         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT17                0xFFCA488C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT18                0xFFCA4894         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT19                0xFFCA489C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT20                0xFFCA48A4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT21                0xFFCA48AC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT22                0xFFCA48B4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT23                0xFFCA48BC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT24                0xFFCA48C4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT25                0xFFCA48CC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT26                0xFFCA48D4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT27                0xFFCA48DC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT28                0xFFCA48E4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT29                0xFFCA48EC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT30                0xFFCA48F4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT31                0xFFCA48FC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT32                0xFFCA4904         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT33                0xFFCA490C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT34                0xFFCA4914         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT35                0xFFCA491C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT36                0xFFCA4924         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT37                0xFFCA492C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT38                0xFFCA4934         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT39                0xFFCA493C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT40                0xFFCA4944         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT41                0xFFCA494C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT42                0xFFCA4954         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT43                0xFFCA495C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT44                0xFFCA4964         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT45                0xFFCA496C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT46                0xFFCA4974         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT47                0xFFCA497C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT48                0xFFCA4984         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT49                0xFFCA498C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT50                0xFFCA4994         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT51                0xFFCA499C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT52                0xFFCA49A4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT53                0xFFCA49AC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT54                0xFFCA49B4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT55                0xFFCA49BC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT56                0xFFCA49C4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT57                0xFFCA49CC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT58                0xFFCA49D4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT59                0xFFCA49DC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT60                0xFFCA49E4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT61                0xFFCA49EC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT62                0xFFCA49F4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT63                0xFFCA49FC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT64                0xFFCA4A04         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT65                0xFFCA4A0C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT66                0xFFCA4A14         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT67                0xFFCA4A1C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT68                0xFFCA4A24         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT69                0xFFCA4A2C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT70                0xFFCA4A34         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT71                0xFFCA4A3C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT72                0xFFCA4A44         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT73                0xFFCA4A4C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT74                0xFFCA4A54         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT75                0xFFCA4A5C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT76                0xFFCA4A64         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT77                0xFFCA4A6C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT78                0xFFCA4A74         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT79                0xFFCA4A7C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT80                0xFFCA4A84         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT81                0xFFCA4A8C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT82                0xFFCA4A94         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT83                0xFFCA4A9C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT84                0xFFCA4AA4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT85                0xFFCA4AAC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT86                0xFFCA4AB4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT87                0xFFCA4ABC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT88                0xFFCA4AC4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT89                0xFFCA4ACC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT90                0xFFCA4AD4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT91                0xFFCA4ADC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT92                0xFFCA4AE4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT93                0xFFCA4AEC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT94                0xFFCA4AF4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT95                0xFFCA4AFC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT96                0xFFCA4B04         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT97                0xFFCA4B0C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT98                0xFFCA4B14         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT99                0xFFCA4B1C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT100               0xFFCA4B24         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT101               0xFFCA4B2C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT102               0xFFCA4B34         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT103               0xFFCA4B3C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT104               0xFFCA4B44         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT105               0xFFCA4B4C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT106               0xFFCA4B54         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT107               0xFFCA4B5C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT108               0xFFCA4B64         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT109               0xFFCA4B6C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT110               0xFFCA4B74         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT111               0xFFCA4B7C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT112               0xFFCA4B84         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT113               0xFFCA4B8C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT114               0xFFCA4B94         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT115               0xFFCA4B9C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT116               0xFFCA4BA4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT117               0xFFCA4BAC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT118               0xFFCA4BB4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT119               0xFFCA4BBC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT120               0xFFCA4BC4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT121               0xFFCA4BCC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT122               0xFFCA4BD4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT123               0xFFCA4BDC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT124               0xFFCA4BE4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT125               0xFFCA4BEC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT126               0xFFCA4BF4         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT127               0xFFCA4BFC         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT128               0xFFCA4C04         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT129               0xFFCA4C0C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT130               0xFFCA4C14         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT131               0xFFCA4C1C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT132               0xFFCA4C24         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT133               0xFFCA4C2C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT134               0xFFCA4C34         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT135               0xFFCA4C3C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT136               0xFFCA4C44         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT137               0xFFCA4C4C         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT138               0xFFCA4C54         /* SEC0 IRQ Source Status Register n */
#define REG_SEC0_SSTAT139               0xFFCA4C5C         /* SEC0 IRQ Source Status Register n */

/* =========================
        SEC
   ========================= */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CCTL_LOCK                   31            /* Lock */
#define BITP_SEC_CCTL_NMIEN                  16            /* NMI Enable */
#define BITP_SEC_CCTL_WFI                    12            /* Wait For Idle */
#define BITP_SEC_CCTL_RESET                   1            /* Reset */
#define BITP_SEC_CCTL_EN                      0            /* Enable */

#define BITM_SEC_CCTL_LOCK                   0x80000000    /* Lock */
#define ENUM_SEC_CCTL_UNLOCK                 0x00000000    /* LOCK: Unlock */
#define ENUM_SEC_CCTL_LOCK                   0x80000000    /* LOCK: Lock */

#define BITM_SEC_CCTL_NMIEN                  0x00010000    /* NMI Enable */
#define ENUM_SEC_CCTL_NMI_DIS                0x00000000    /* NMIEN: Disable */
#define ENUM_SEC_CCTL_NMI_EN                 0x00010000    /* NMIEN: Enable */

#define BITM_SEC_CCTL_WFI                    0x00001000    /* Wait For Idle */
#define ENUM_SEC_CCTL_NO_WAITIDLE            0x00000000    /* WFI: No Action */
#define ENUM_SEC_CCTL_WAITIDLE               0x00001000    /* WFI: Wait for Idle */

#define BITM_SEC_CCTL_RESET                  0x00000002    /* Reset */
#define ENUM_SEC_CCTL_NO_RESET               0x00000000    /* RESET: No Action */
#define ENUM_SEC_CCTL_RESET                  0x00000002    /* RESET: Reset */

#define BITM_SEC_CCTL_EN                     0x00000001    /* Enable */
#define ENUM_SEC_CCTL_DIS                    0x00000000    /* EN: Disable */
#define ENUM_SEC_CCTL_EN                     0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CSTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CSTAT_NMI                   16            /* NMI Status */
#define BITP_SEC_CSTAT_WFI                   12            /* Wait For Idle */
#define BITP_SEC_CSTAT_SIDV                  10            /* SID Valid */
#define BITP_SEC_CSTAT_ACTV                   9            /* ACT Valid */
#define BITP_SEC_CSTAT_PNDV                   8            /* PND Valid */
#define BITP_SEC_CSTAT_ERRC                   4            /* Error Cause */
#define BITP_SEC_CSTAT_ERR                    1            /* Error */

#define BITM_SEC_CSTAT_NMI                   0x00010000    /* NMI Status */
#define ENUM_SEC_CSTAT_NO_NMI                0x00000000    /* NMI: No NMI Occured */
#define ENUM_SEC_CSTAT_NMI                   0x00010000    /* NMI: NMI Occurred */

#define BITM_SEC_CSTAT_WFI                   0x00001000    /* Wait For Idle */
#define ENUM_SEC_CSTAT_NOT_WAITING           0x00000000    /* WFI: Not Waiting */
#define ENUM_SEC_CSTAT_WAITING               0x00001000    /* WFI: Waiting */

#define BITM_SEC_CSTAT_SIDV                  0x00000400    /* SID Valid */
#define ENUM_SEC_CSTAT_INVALID_SID           0x00000000    /* SIDV: Invalid */
#define ENUM_SEC_CSTAT_VALID_SID             0x00000400    /* SIDV: Valid */

#define BITM_SEC_CSTAT_ACTV                  0x00000200    /* ACT Valid */
#define ENUM_SEC_CSTAT_INVALID_ACT           0x00000000    /* ACTV: Invalid */
#define ENUM_SEC_CSTAT_VALID_ACT             0x00000200    /* ACTV: Valid */

#define BITM_SEC_CSTAT_PNDV                  0x00000100    /* PND Valid */
#define ENUM_SEC_CSTAT_INVALID_PND           0x00000000    /* PNDV: Invalid */
#define ENUM_SEC_CSTAT_VALID_PND             0x00000100    /* PNDV: Valid */

#define BITM_SEC_CSTAT_ERRC                  0x00000030    /* Error Cause */
#define ENUM_SEC_CSTAT_ACKERR                0x00000010    /* ERRC: Acknowledge Error */

#define BITM_SEC_CSTAT_ERR                   0x00000002    /* Error */
#define ENUM_SEC_CSTAT_NO_ERR                0x00000000    /* ERR: No Error */
#define ENUM_SEC_CSTAT_ERR                   0x00000002    /* ERR: Error Occurred */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CPND                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CPND_PRIO                    8            /* Highest Pending IRQ Priority */
#define BITP_SEC_CPND_SID                     0            /* Highest Pending IRQ Source ID */
#define BITM_SEC_CPND_PRIO                   0x0000FF00    /* Highest Pending IRQ Priority */
#define BITM_SEC_CPND_SID                    0x000000FF    /* Highest Pending IRQ Source ID */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CACT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CACT_PRIO                    8            /* Highest Active IRQ Priority */
#define BITP_SEC_CACT_SID                     0            /* Highest Active IRQ Source ID */
#define BITM_SEC_CACT_PRIO                   0x0000FF00    /* Highest Active IRQ Priority */
#define BITM_SEC_CACT_SID                    0x000000FF    /* Highest Active IRQ Source ID */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CPMSK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CPMSK_LOCK                  31            /* Lock */
#define BITP_SEC_CPMSK_PRIO                   0            /* IRQ Priority Mask */

#define BITM_SEC_CPMSK_LOCK                  0x80000000    /* Lock */
#define ENUM_SEC_CPMSK_UNLOCK                0x00000000    /* LOCK: Unlock */
#define ENUM_SEC_CPMSK_LOCK                  0x80000000    /* LOCK: Lock */
#define BITM_SEC_CPMSK_PRIO                  0x000000FF    /* IRQ Priority Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CGMSK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CGMSK_LOCK                  31            /* Lock */
#define BITP_SEC_CGMSK_UGRP                   8            /* Ungrouped Mask */
#define BITP_SEC_CGMSK_GRP                    0            /* Grouped Mask */

#define BITM_SEC_CGMSK_LOCK                  0x80000000    /* Lock */
#define ENUM_SEC_CGMSK_UNLOCK                0x00000000    /* LOCK: Unlock */
#define ENUM_SEC_CGMSK_LOCK                  0x80000000    /* LOCK: Lock */

#define BITM_SEC_CGMSK_UGRP                  0x00000100    /* Ungrouped Mask */
#define ENUM_SEC_CGMSK_UNMASK                0x00000000    /* UGRP: Unmask Ungrouped Sources */
#define ENUM_SEC_CGMSK_MASK                  0x00000100    /* UGRP: Mask Ungrouped Sources */
#define BITM_SEC_CGMSK_GRP                   0x0000000F    /* Grouped Mask */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CPLVL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CPLVL_LOCK                  31            /* Lock */
#define BITP_SEC_CPLVL_PLVL                   0            /* Priority Levels */

#define BITM_SEC_CPLVL_LOCK                  0x80000000    /* Lock */
#define ENUM_SEC_CPLVL_UNLOCK                0x00000000    /* LOCK: Unlock */
#define ENUM_SEC_CPLVL_LOCK                  0x80000000    /* LOCK: Lock */
#define BITM_SEC_CPLVL_PLVL                  0x00000007    /* Priority Levels */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_CSID                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_CSID_SID                     0            /* Source ID */
#define BITM_SEC_CSID_SID                    0x000000FF    /* Source ID */


/* ------------------------------------------------------------------------------------------------------------------------
        SEC_FCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_FCTL_LOCK                   31            /* Lock */
#define BITP_SEC_FCTL_TES                    13            /* Trigger Event Select */
#define BITP_SEC_FCTL_CMS                    12            /* COP Mode Select */
#define BITP_SEC_FCTL_FIEN                    7            /* Fault Input Enable */
#define BITP_SEC_FCTL_SREN                    6            /* System Reset Enable */
#define BITP_SEC_FCTL_TOEN                    5            /* Trigger Output Enable */
#define BITP_SEC_FCTL_FOEN                    4            /* Fault Output Enable */
#define BITP_SEC_FCTL_RESET                   1            /* Reset */
#define BITP_SEC_FCTL_EN                      0            /* Enable */

#define BITM_SEC_FCTL_LOCK                   0x80000000    /* Lock */
#define ENUM_SEC_FCTL_UNLOCK                 0x00000000    /* LOCK: UnLock */
#define ENUM_SEC_FCTL_LOCK                   0x80000000    /* LOCK: Lock */

#define BITM_SEC_FCTL_TES                    0x00002000    /* Trigger Event Select */
#define ENUM_SEC_FCTL_FLTACT_MODE            0x00000000    /* TES: Fault Active Mode */
#define ENUM_SEC_FCTL_FLTPND_MODE            0x00002000    /* TES: Fault Pending Mode */

#define BITM_SEC_FCTL_CMS                    0x00001000    /* COP Mode Select */
#define ENUM_SEC_FCTL_FLT_MODE               0x00000000    /* CMS: Fault Mode */
#define ENUM_SEC_FCTL_COP_MODE               0x00001000    /* CMS: COP Mode */

#define BITM_SEC_FCTL_FIEN                   0x00000080    /* Fault Input Enable */
#define ENUM_SEC_FCTL_FLTIN_DIS              0x00000000    /* FIEN: Disable */
#define ENUM_SEC_FCTL_FLTIN_EN               0x00000080    /* FIEN: Enable */

#define BITM_SEC_FCTL_SREN                   0x00000040    /* System Reset Enable */
#define ENUM_SEC_FCTL_SYSRST_DIS             0x00000000    /* SREN: Disable */
#define ENUM_SEC_FCTL_SYSRST_EN              0x00000040    /* SREN: Enable */

#define BITM_SEC_FCTL_TOEN                   0x00000020    /* Trigger Output Enable */
#define ENUM_SEC_FCTL_TRGOUT_DIS             0x00000000    /* TOEN: Disable */
#define ENUM_SEC_FCTL_TRGOUT_EN              0x00000020    /* TOEN: Enable */

#define BITM_SEC_FCTL_FOEN                   0x00000010    /* Fault Output Enable */
#define ENUM_SEC_FCTL_FLTOUT_DIS             0x00000000    /* FOEN: Disable */
#define ENUM_SEC_FCTL_FLTOUT_EN              0x00000010    /* FOEN: Enable */

#define BITM_SEC_FCTL_RESET                  0x00000002    /* Reset */
#define ENUM_SEC_FCTL_NO_RESET               0x00000000    /* RESET: No Action */
#define ENUM_SEC_FCTL_RESET                  0x00000002    /* RESET: Reset */

#define BITM_SEC_FCTL_EN                     0x00000001    /* Enable */
#define ENUM_SEC_FCTL_DIS                    0x00000000    /* EN: Disable */
#define ENUM_SEC_FCTL_EN                     0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_FSTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_FSTAT_NPND                  10            /* Next Pending Fault */
#define BITP_SEC_FSTAT_ACT                    9            /* Fault Active */
#define BITP_SEC_FSTAT_PND                    8            /* Pending Fault */
#define BITP_SEC_FSTAT_ERRC                   4            /* Error Cause */
#define BITP_SEC_FSTAT_ERR                    1            /* Error */

#define BITM_SEC_FSTAT_NPND                  0x00000400    /* Next Pending Fault */
#define ENUM_SEC_FSTAT_NO_NXTFLT             0x00000000    /* NPND: Not Pending */
#define ENUM_SEC_FSTAT_NXTFLT                0x00000400    /* NPND: Pending */

#define BITM_SEC_FSTAT_ACT                   0x00000200    /* Fault Active */
#define ENUM_SEC_FSTAT_NO_FLTACT             0x00000000    /* ACT: No Fault */
#define ENUM_SEC_FSTAT_FLTACT                0x00000200    /* ACT: Active Fault */

#define BITM_SEC_FSTAT_PND                   0x00000100    /* Pending Fault */
#define ENUM_SEC_FSTAT_NO_FLTPND             0x00000000    /* PND: Not Pending */
#define ENUM_SEC_FSTAT_FLTPND                0x00000100    /* PND: Pending */

#define BITM_SEC_FSTAT_ERRC                  0x00000030    /* Error Cause */
#define ENUM_SEC_FSTAT_ENDERR                0x00000020    /* ERRC: End Error */

#define BITM_SEC_FSTAT_ERR                   0x00000002    /* Error */
#define ENUM_SEC_FSTAT_NO_ERR                0x00000000    /* ERR: No Error */
#define ENUM_SEC_FSTAT_ERR                   0x00000002    /* ERR: Error Occurred */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_FSID                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_FSID_FEXT                   16            /* Fault External */
#define BITP_SEC_FSID_SID                     0            /* Source ID */

#define BITM_SEC_FSID_FEXT                   0x00010000    /* Fault External */
#define ENUM_SEC_FSID_SRC_INTFLT             0x00000000    /* FEXT: Fault Internal */
#define ENUM_SEC_FSID_SRC_EXTFLT             0x00010000    /* FEXT: Fault External */
#define BITM_SEC_FSID_SID                    0x000000FF    /* Source ID */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_FEND                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_FEND_FEXT                   16            /* Fault External */
#define BITP_SEC_FEND_SID                     0            /* Source ID */

#define BITM_SEC_FEND_FEXT                   0x00010000    /* Fault External */
#define ENUM_SEC_FEND_END_INTFLT             0x00000000    /* FEXT: Fault Internal */
#define ENUM_SEC_FEND_END_EXTFLT             0x00010000    /* FEXT: Fault External */
#define BITM_SEC_FEND_SID                    0x000000FF    /* Source ID */


/* ------------------------------------------------------------------------------------------------------------------------
        SEC_GCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_GCTL_LOCK                   31            /* Lock */
#define BITP_SEC_GCTL_RESET                   1            /* Reset */
#define BITP_SEC_GCTL_EN                      0            /* Enable */

#define BITM_SEC_GCTL_LOCK                   0x80000000    /* Lock */
#define ENUM_SEC_GCTL_UNLOCK                 0x00000000    /* LOCK: Unlock */
#define ENUM_SEC_GCTL_LOCK                   0x80000000    /* LOCK: Lock */

#define BITM_SEC_GCTL_RESET                  0x00000002    /* Reset */
#define ENUM_SEC_GCTL_NO_RESET               0x00000000    /* RESET: No Action */
#define ENUM_SEC_GCTL_RESET                  0x00000002    /* RESET: Reset */

#define BITM_SEC_GCTL_EN                     0x00000001    /* Enable */
#define ENUM_SEC_GCTL_DIS                    0x00000000    /* EN: Disable */
#define ENUM_SEC_GCTL_EN                     0x00000001    /* EN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_GSTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_GSTAT_LWERR                 31            /* Lock Write Error */
#define BITP_SEC_GSTAT_ADRERR                30            /* Address Error */
#define BITP_SEC_GSTAT_SID                   16            /* Source ID for SSI Error */
#define BITP_SEC_GSTAT_SCI                    8            /* SCI ID for SCI Error */
#define BITP_SEC_GSTAT_ERRC                   4            /* Error Cause */
#define BITP_SEC_GSTAT_ERR                    1            /* Error */

#define BITM_SEC_GSTAT_LWERR                 0x80000000    /* Lock Write Error */
#define ENUM_SEC_GSTAT_NO_LWERR              0x00000000    /* LWERR: No Error */
#define ENUM_SEC_GSTAT_LWERR                 0x80000000    /* LWERR: Error Occurred */

#define BITM_SEC_GSTAT_ADRERR                0x40000000    /* Address Error */
#define ENUM_SEC_GSTAT_NO_ADRERR             0x00000000    /* ADRERR: No Error */
#define ENUM_SEC_GSTAT_ADRERR                0x40000000    /* ADRERR: Error Occurred */
#define BITM_SEC_GSTAT_SID                   0x00FF0000    /* Source ID for SSI Error */
#define BITM_SEC_GSTAT_SCI                   0x00000F00    /* SCI ID for SCI Error */

#define BITM_SEC_GSTAT_ERRC                  0x00000030    /* Error Cause */
#define ENUM_SEC_GSTAT_SFIERR                0x00000000    /* ERRC: SFI Error */
#define ENUM_SEC_GSTAT_SCIERR                0x00000010    /* ERRC: SCI Error */
#define ENUM_SEC_GSTAT_SSIERR                0x00000020    /* ERRC: SSI Error */

#define BITM_SEC_GSTAT_ERR                   0x00000002    /* Error */
#define ENUM_SEC_GSTAT_NO_ERR                0x00000000    /* ERR: No Error */
#define ENUM_SEC_GSTAT_ERR                   0x00000002    /* ERR: Error Occurred */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_RAISE                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_RAISE_SID                    0            /* Source ID IRQ Set to Pending */
#define BITM_SEC_RAISE_SID                   0x000000FF    /* Source ID IRQ Set to Pending */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_END                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_END_SID                      0            /* Source ID IRQ to End */
#define BITM_SEC_END_SID                     0x000000FF    /* Source ID IRQ to End */


/* ------------------------------------------------------------------------------------------------------------------------
        SEC_SCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_SCTL_LOCK                   31            /* Lock */
#define BITP_SEC_SCTL_CTG                    24            /* Core Target Select */
#define BITP_SEC_SCTL_GRP                    16            /* Group Select */
#define BITP_SEC_SCTL_PRIO                    8            /* Priority Level Select */
#define BITP_SEC_SCTL_ERREN                   4            /* Error Enable */
#define BITP_SEC_SCTL_ES                      3            /* Edge Select */
#define BITP_SEC_SCTL_SEN                     2            /* Source (signal) Enable */
#define BITP_SEC_SCTL_FEN                     1            /* Fault Enable */
#define BITP_SEC_SCTL_IEN                     0            /* Interrupt Enable */

#define BITM_SEC_SCTL_LOCK                   0x80000000    /* Lock */
#define ENUM_SEC_SCTL_UNLOCK                 0x00000000    /* LOCK: Unlock */
#define ENUM_SEC_SCTL_LOCK                   0x80000000    /* LOCK: Lock */
#define BITM_SEC_SCTL_CTG                    0x0F000000    /* Core Target Select */
#define BITM_SEC_SCTL_GRP                    0x000F0000    /* Group Select */
#define BITM_SEC_SCTL_PRIO                   0x0000FF00    /* Priority Level Select */

#define BITM_SEC_SCTL_ERREN                  0x00000010    /* Error Enable */
#define ENUM_SEC_SCTL_ERR_DIS                0x00000000    /* ERREN: Disable */
#define ENUM_SEC_SCTL_ERR_EN                 0x00000010    /* ERREN: Enable */

#define BITM_SEC_SCTL_ES                     0x00000008    /* Edge Select */
#define ENUM_SEC_SCTL_LEVEL                  0x00000000    /* ES: Level Sensitive */
#define ENUM_SEC_SCTL_EDGE                   0x00000008    /* ES: Edge Sensitive */

#define BITM_SEC_SCTL_SEN                    0x00000004    /* Source (signal) Enable */
#define ENUM_SEC_SCTL_SRC_DIS                0x00000000    /* SEN: Disable */
#define ENUM_SEC_SCTL_SRC_EN                 0x00000004    /* SEN: Enable */

#define BITM_SEC_SCTL_FEN                    0x00000002    /* Fault Enable */
#define ENUM_SEC_SCTL_FAULT_DIS              0x00000000    /* FEN: Disable */
#define ENUM_SEC_SCTL_FAULT_EN               0x00000002    /* FEN: Enable */

#define BITM_SEC_SCTL_IEN                    0x00000001    /* Interrupt Enable */
#define ENUM_SEC_SCTL_INT_DIS                0x00000000    /* IEN: Disable */
#define ENUM_SEC_SCTL_INT_EN                 0x00000001    /* IEN: Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        SEC_SSTAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SEC_SSTAT_CHID                  16            /* Channel ID */
#define BITP_SEC_SSTAT_ACT                    9            /* Active Source */
#define BITP_SEC_SSTAT_PND                    8            /* Pending Source */
#define BITP_SEC_SSTAT_ERRC                   4            /* Error Cause */
#define BITP_SEC_SSTAT_ERR                    1            /* Error */
#define BITM_SEC_SSTAT_CHID                  0x00FF0000    /* Channel ID */

#define BITM_SEC_SSTAT_ACT                   0x00000200    /* Active Source */
#define ENUM_SEC_SSTAT_NO_SRC                0x00000000    /* ACT: No Source */
#define ENUM_SEC_SSTAT_ACTIVE_SRC            0x00000200    /* ACT: Active Source */

#define BITM_SEC_SSTAT_PND                   0x00000100    /* Pending Source */
#define ENUM_SEC_SSTAT_NOTPENDING            0x00000000    /* PND: Not Pending */
#define ENUM_SEC_SSTAT_PENDING               0x00000100    /* PND: Pending */

#define BITM_SEC_SSTAT_ERRC                  0x00000030    /* Error Cause */
#define ENUM_SEC_SSTAT_SOVFERR               0x00000000    /* ERRC: Source Overflow Error */
#define ENUM_SEC_SSTAT_ENDERR                0x00000020    /* ERRC: End Error */

#define BITM_SEC_SSTAT_ERR                   0x00000002    /* Error */
#define ENUM_SEC_SSTAT_NO_ERR                0x00000000    /* ERR: No Error */
#define ENUM_SEC_SSTAT_ERR                   0x00000002    /* ERR: Error Occurred */

/* =========================
        TRU Registers
   ========================= */

/* =========================
        TRU0
   ========================= */
#define REG_TRU0_SSR0                   0xFFCA5000         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR1                   0xFFCA5004         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR2                   0xFFCA5008         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR3                   0xFFCA500C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR4                   0xFFCA5010         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR5                   0xFFCA5014         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR6                   0xFFCA5018         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR7                   0xFFCA501C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR8                   0xFFCA5020         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR9                   0xFFCA5024         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR10                  0xFFCA5028         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR11                  0xFFCA502C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR12                  0xFFCA5030         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR13                  0xFFCA5034         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR14                  0xFFCA5038         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR15                  0xFFCA503C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR16                  0xFFCA5040         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR17                  0xFFCA5044         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR18                  0xFFCA5048         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR19                  0xFFCA504C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR20                  0xFFCA5050         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR21                  0xFFCA5054         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR22                  0xFFCA5058         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR23                  0xFFCA505C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR24                  0xFFCA5060         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR25                  0xFFCA5064         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR26                  0xFFCA5068         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR27                  0xFFCA506C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR28                  0xFFCA5070         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR29                  0xFFCA5074         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR30                  0xFFCA5078         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR31                  0xFFCA507C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR32                  0xFFCA5080         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR33                  0xFFCA5084         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR34                  0xFFCA5088         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR35                  0xFFCA508C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR36                  0xFFCA5090         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR37                  0xFFCA5094         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR38                  0xFFCA5098         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR39                  0xFFCA509C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR40                  0xFFCA50A0         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR41                  0xFFCA50A4         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR42                  0xFFCA50A8         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR43                  0xFFCA50AC         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR44                  0xFFCA50B0         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR45                  0xFFCA50B4         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR46                  0xFFCA50B8         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR47                  0xFFCA50BC         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR48                  0xFFCA50C0         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR49                  0xFFCA50C4         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR50                  0xFFCA50C8         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR51                  0xFFCA50CC         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR52                  0xFFCA50D0         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR53                  0xFFCA50D4         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR54                  0xFFCA50D8         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR55                  0xFFCA50DC         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR56                  0xFFCA50E0         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR57                  0xFFCA50E4         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR58                  0xFFCA50E8         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR59                  0xFFCA50EC         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR60                  0xFFCA50F0         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR61                  0xFFCA50F4         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR62                  0xFFCA50F8         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR63                  0xFFCA50FC         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR64                  0xFFCA5100         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR65                  0xFFCA5104         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR66                  0xFFCA5108         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR67                  0xFFCA510C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR68                  0xFFCA5110         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR69                  0xFFCA5114         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR70                  0xFFCA5118         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR71                  0xFFCA511C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR72                  0xFFCA5120         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR73                  0xFFCA5124         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR74                  0xFFCA5128         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR75                  0xFFCA512C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR76                  0xFFCA5130         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR77                  0xFFCA5134         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR78                  0xFFCA5138         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR79                  0xFFCA513C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR80                  0xFFCA5140         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR81                  0xFFCA5144         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR82                  0xFFCA5148         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR83                  0xFFCA514C         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR84                  0xFFCA5150         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR85                  0xFFCA5154         /* TRU0 Slave Select Register */
#define REG_TRU0_SSR86                  0xFFCA5158         /* TRU0 Slave Select Register */
#define REG_TRU0_MTR                    0xFFCA57E0         /* TRU0 Master Trigger Register */
#define REG_TRU0_ERRADDR                0xFFCA57E8         /* TRU0 Error Address Register */
#define REG_TRU0_STAT                   0xFFCA57EC         /* TRU0 Status Information Register */
#define REG_TRU0_REVID                  0xFFCA57F0         /* TRU0 Revision ID Register */
#define REG_TRU0_GCTL                   0xFFCA57F4         /* TRU0 Global Control Register */

/* =========================
        TRU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        TRU_SSR                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TRU_SSR_LOCK                    31            /* SSRn Lock */
#define BITP_TRU_SSR_SSR                      0            /* SSRn Slave Select */
#define BITM_TRU_SSR_LOCK                    0x80000000    /* SSRn Lock */
#define BITM_TRU_SSR_SSR                     0x000000FF    /* SSRn Slave Select */

/* ------------------------------------------------------------------------------------------------------------------------
        TRU_MTR                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TRU_MTR_MTR3                    24            /* Master Trigger Register 3 */
#define BITP_TRU_MTR_MTR2                    16            /* Master Trigger Register 2 */
#define BITP_TRU_MTR_MTR1                     8            /* Master Trigger Register 1 */
#define BITP_TRU_MTR_MTR0                     0            /* Master Trigger Register 0 */
#define BITM_TRU_MTR_MTR3                    0xFF000000    /* Master Trigger Register 3 */
#define BITM_TRU_MTR_MTR2                    0x00FF0000    /* Master Trigger Register 2 */
#define BITM_TRU_MTR_MTR1                    0x0000FF00    /* Master Trigger Register 1 */
#define BITM_TRU_MTR_MTR0                    0x000000FF    /* Master Trigger Register 0 */

/* ------------------------------------------------------------------------------------------------------------------------
        TRU_ERRADDR                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TRU_ERRADDR_ADDR                 0            /* Error Address */
#define BITM_TRU_ERRADDR_ADDR                0x00000FFF    /* Error Address */

/* ------------------------------------------------------------------------------------------------------------------------
        TRU_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TRU_STAT_ADDRERR                 1            /* Address Error Status */
#define BITP_TRU_STAT_LWERR                   0            /* Lock Write Error Status */
#define BITM_TRU_STAT_ADDRERR                0x00000002    /* Address Error Status */
#define BITM_TRU_STAT_LWERR                  0x00000001    /* Lock Write Error Status */

/* ------------------------------------------------------------------------------------------------------------------------
        TRU_REVID                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TRU_REVID_MAJOR                  4            /* Major Version ID */
#define BITP_TRU_REVID_REV                    0            /* Incremental Version ID */
#define BITM_TRU_REVID_MAJOR                 0x000000F0    /* Major Version ID */
#define BITM_TRU_REVID_REV                   0x0000000F    /* Incremental Version ID */

/* ------------------------------------------------------------------------------------------------------------------------
        TRU_GCTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TRU_GCTL_LOCK                   31            /* GCTL Lock Bit */
#define BITP_TRU_GCTL_MTRL                    2            /* MTR Lock Bit */
#define BITP_TRU_GCTL_RESET                   1            /* Soft Reset */
#define BITP_TRU_GCTL_EN                      0            /* Non-MMR Enable */
#define BITM_TRU_GCTL_LOCK                   0x80000000    /* GCTL Lock Bit */
#define BITM_TRU_GCTL_MTRL                   0x00000004    /* MTR Lock Bit */
#define BITM_TRU_GCTL_RESET                  0x00000002    /* Soft Reset */
#define BITM_TRU_GCTL_EN                     0x00000001    /* Non-MMR Enable */

/* =========================
        RCU Registers
   ========================= */

/* =========================
        RCU0
   ========================= */
#define REG_RCU0_CTL                    0xFFCA6000         /* RCU0 Control Register */
#define REG_RCU0_STAT                   0xFFCA6004         /* RCU0 Status Register */
#define REG_RCU0_CRCTL                  0xFFCA6008         /* RCU0 Core Reset Control Register */
#define REG_RCU0_CRSTAT                 0xFFCA600C         /* RCU0 Core Reset Status Register */
#define REG_RCU0_SIDIS                  0xFFCA6010         /* RCU0 System Interface Disable Register */
#define REG_RCU0_SISTAT                 0xFFCA6014         /* RCU0 System Interface Status Register */
#define REG_RCU0_SVECT_LCK              0xFFCA6018         /* RCU0 SVECT Lock Register */
#define REG_RCU0_BCODE                  0xFFCA601C         /* RCU0 Boot Code Register */
#define REG_RCU0_SVECT0                 0xFFCA6020         /* RCU0 Software Vector Register n */
#define REG_RCU0_SVECT1                 0xFFCA6024         /* RCU0 Software Vector Register n */

/* =========================
        RCU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        RCU_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_CTL_LOCK                    31            /* Lock */
#define BITP_RCU_CTL_RSTOUTDSRT               2            /* RSTOUT (Reset Out) Deassert */
#define BITP_RCU_CTL_RSTOUTASRT               1            /* RSTOUT (Reset Out) Assert */
#define BITP_RCU_CTL_SYSRST                   0            /* System Reset */
#define BITM_RCU_CTL_LOCK                    0x80000000    /* Lock */
#define BITM_RCU_CTL_RSTOUTDSRT              0x00000004    /* RSTOUT (Reset Out) Deassert */
#define BITM_RCU_CTL_RSTOUTASRT              0x00000002    /* RSTOUT (Reset Out) Assert */
#define BITM_RCU_CTL_SYSRST                  0x00000001    /* System Reset */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_STAT_RSTOUTERR              18            /* RSTOUT (Reset Out) Error */
#define BITP_RCU_STAT_LWERR                  17            /* Lock Write Error */
#define BITP_RCU_STAT_ADDRERR                16            /* Address Error */
#define BITP_RCU_STAT_BMODE                   8            /* Boot Mode */
#define BITP_RCU_STAT_RSTOUT                  5            /* RSTOUT (Reset Out) Status */
#define BITP_RCU_STAT_SWRST                   3            /* Software Reset */
#define BITP_RCU_STAT_SSRST                   2            /* System Source Reset */
#define BITP_RCU_STAT_HBRST                   1            /* Hibernate Reset */
#define BITP_RCU_STAT_HWRST                   0            /* Hardware Reset */
#define BITM_RCU_STAT_RSTOUTERR              0x00040000    /* RSTOUT (Reset Out) Error */
#define BITM_RCU_STAT_LWERR                  0x00020000    /* Lock Write Error */
#define BITM_RCU_STAT_ADDRERR                0x00010000    /* Address Error */
#define BITM_RCU_STAT_BMODE                  0x00000F00    /* Boot Mode */
#define BITM_RCU_STAT_RSTOUT                 0x00000020    /* RSTOUT (Reset Out) Status */
#define BITM_RCU_STAT_SWRST                  0x00000008    /* Software Reset */
#define BITM_RCU_STAT_SSRST                  0x00000004    /* System Source Reset */
#define BITM_RCU_STAT_HBRST                  0x00000002    /* Hibernate Reset */
#define BITM_RCU_STAT_HWRST                  0x00000001    /* Hardware Reset */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_CRCTL                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_CRCTL_LOCK                  31            /* Lock */
#define BITP_RCU_CRCTL_CR0                    0            /* Core Reset n */
#define BITP_RCU_CRCTL_CR1                    1            /* Core Reset n */
#define BITM_RCU_CRCTL_LOCK                  0x80000000    /* Lock */
#define BITM_RCU_CRCTL_CR0                   0x00000003    /* Core Reset n */
#define BITM_RCU_CRCTL_CR1                   0x00000003    /* Core Reset n */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_CRSTAT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_CRSTAT_CR0                   0            /* Core Reset n */
#define BITP_RCU_CRSTAT_CR1                   1            /* Core Reset n */
#define BITM_RCU_CRSTAT_CR0                  0x00000003    /* Core Reset n */
#define BITM_RCU_CRSTAT_CR1                  0x00000003    /* Core Reset n */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_SIDIS                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_SIDIS_LOCK                  31            /* Lock */
#define BITP_RCU_SIDIS_SI0                    0            /* System Interface n */
#define BITP_RCU_SIDIS_SI1                    1            /* System Interface n */
#define BITM_RCU_SIDIS_LOCK                  0x80000000    /* Lock */
#define BITM_RCU_SIDIS_SI0                   0x00000003    /* System Interface n */
#define BITM_RCU_SIDIS_SI1                   0x00000003    /* System Interface n */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_SISTAT                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_SISTAT_SI0                   0            /* System Interface n */
#define BITP_RCU_SISTAT_SI1                   1            /* System Interface n */
#define BITM_RCU_SISTAT_SI0                  0x00000003    /* System Interface n */
#define BITM_RCU_SISTAT_SI1                  0x00000003    /* System Interface n */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_SVECT_LCK                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_SVECT_LCK_LOCK              31            /* Lock */
#define BITP_RCU_SVECT_LCK_SVECT0             0            /* Software Vector Register n */
#define BITP_RCU_SVECT_LCK_SVECT1             1            /* Software Vector Register n */
#define BITM_RCU_SVECT_LCK_LOCK              0x80000000    /* Lock */
#define BITM_RCU_SVECT_LCK_SVECT0            0x00000003    /* Software Vector Register n */
#define BITM_RCU_SVECT_LCK_SVECT1            0x00000003    /* Software Vector Register n */

/* ------------------------------------------------------------------------------------------------------------------------
        RCU_BCODE                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_RCU_BCODE_LOCK                  31            /* Lock */
#define BITP_RCU_BCODE_BCODE                  0            /* Boot Code */
#define BITM_RCU_BCODE_LOCK                  0x80000000    /* Lock */
#define BITM_RCU_BCODE_BCODE                 0x7FFFFFFF    /* Boot Code */

/* =========================
        SPU Registers
   ========================= */

/* =========================
        SPU0
   ========================= */
#define REG_SPU0_CTL                    0xFFCA7000         /* SPU0 Control Register */
#define REG_SPU0_STAT                   0xFFCA7004         /* SPU0 Status Register */
#define REG_SPU0_WP0                    0xFFCA7400         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP1                    0xFFCA7404         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP2                    0xFFCA7408         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP3                    0xFFCA740C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP4                    0xFFCA7410         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP5                    0xFFCA7414         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP6                    0xFFCA7418         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP7                    0xFFCA741C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP8                    0xFFCA7420         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP9                    0xFFCA7424         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP10                   0xFFCA7428         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP11                   0xFFCA742C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP12                   0xFFCA7430         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP13                   0xFFCA7434         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP14                   0xFFCA7438         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP15                   0xFFCA743C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP16                   0xFFCA7440         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP17                   0xFFCA7444         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP18                   0xFFCA7448         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP19                   0xFFCA744C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP20                   0xFFCA7450         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP21                   0xFFCA7454         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP22                   0xFFCA7458         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP23                   0xFFCA745C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP24                   0xFFCA7460         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP25                   0xFFCA7464         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP26                   0xFFCA7468         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP27                   0xFFCA746C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP28                   0xFFCA7470         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP29                   0xFFCA7474         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP30                   0xFFCA7478         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP31                   0xFFCA747C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP32                   0xFFCA7480         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP33                   0xFFCA7484         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP34                   0xFFCA7488         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP35                   0xFFCA748C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP36                   0xFFCA7490         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP37                   0xFFCA7494         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP38                   0xFFCA7498         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP39                   0xFFCA749C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP40                   0xFFCA74A0         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP41                   0xFFCA74A4         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP42                   0xFFCA74A8         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP43                   0xFFCA74AC         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP44                   0xFFCA74B0         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP45                   0xFFCA74B4         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP46                   0xFFCA74B8         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP47                   0xFFCA74BC         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP48                   0xFFCA74C0         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP49                   0xFFCA74C4         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP50                   0xFFCA74C8         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP51                   0xFFCA74CC         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP52                   0xFFCA74D0         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP53                   0xFFCA74D4         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP54                   0xFFCA74D8         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP55                   0xFFCA74DC         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP56                   0xFFCA74E0         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP57                   0xFFCA74E4         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP58                   0xFFCA74E8         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP59                   0xFFCA74EC         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP60                   0xFFCA74F0         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP61                   0xFFCA74F4         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP62                   0xFFCA74F8         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP63                   0xFFCA74FC         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP64                   0xFFCA7500         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP65                   0xFFCA7504         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP66                   0xFFCA7508         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP67                   0xFFCA750C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP68                   0xFFCA7510         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP69                   0xFFCA7514         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP70                   0xFFCA7518         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP71                   0xFFCA751C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP72                   0xFFCA7520         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP73                   0xFFCA7524         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP74                   0xFFCA7528         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP75                   0xFFCA752C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP76                   0xFFCA7530         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP77                   0xFFCA7534         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP78                   0xFFCA7538         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP79                   0xFFCA753C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP80                   0xFFCA7540         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP81                   0xFFCA7544         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP82                   0xFFCA7548         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP83                   0xFFCA754C         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP84                   0xFFCA7550         /* SPU0 Write Protect Register n */
#define REG_SPU0_WP85                   0xFFCA7554         /* SPU0 Write Protect Register n */

/* =========================
        SPU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        SPU_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPU_CTL_WPLCK                   16            /* Write Protect Register Lock */
#define BITP_SPU_CTL_GLCK                     0            /* Global Lock Disable */
#define BITM_SPU_CTL_WPLCK                   0x00010000    /* Write Protect Register Lock */
#define BITM_SPU_CTL_GLCK                    0x000000FF    /* Global Lock Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        SPU_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPU_STAT_LWERR                  31            /* Lock Write Error */
#define BITP_SPU_STAT_ADDRERR                30            /* Address Error */
#define BITP_SPU_STAT_GLCK                    0            /* Global Lock Status */
#define BITM_SPU_STAT_LWERR                  0x80000000    /* Lock Write Error */
#define BITM_SPU_STAT_ADDRERR                0x40000000    /* Address Error */
#define BITM_SPU_STAT_GLCK                   0x00000001    /* Global Lock Status */

/* ------------------------------------------------------------------------------------------------------------------------
        SPU_WP                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SPU_WP_SM0                      16            /* System Master x Write Protect Enable */
#define BITP_SPU_WP_SM1                      17            /* System Master x Write Protect Enable */
#define BITP_SPU_WP_CM0                       0            /* Core Master x Write Protect Enable */
#define BITP_SPU_WP_CM1                       1            /* Core Master x Write Protect Enable */
#define BITM_SPU_WP_SM0                      0x00030000    /* System Master x Write Protect Enable */
#define BITM_SPU_WP_SM1                      0x00030000    /* System Master x Write Protect Enable */
#define BITM_SPU_WP_CM0                      0x00000003    /* Core Master x Write Protect Enable */
#define BITM_SPU_WP_CM1                      0x00000003    /* Core Master x Write Protect Enable */

/* =========================
        CGU Registers
   ========================= */

/* =========================
        CGU0
   ========================= */
#define REG_CGU0_CTL                    0xFFCA8000         /* CGU0 Control Register */
#define REG_CGU0_STAT                   0xFFCA8004         /* CGU0 Status Register */
#define REG_CGU0_DIV                    0xFFCA8008         /* CGU0 Divisor Register */
#define REG_CGU0_CLKOUTSEL              0xFFCA800C         /* CGU0 CLKOUT Select Register */

/* =========================
        CGU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        CGU_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CGU_CTL_LOCK                    31            /* Lock */
#define BITP_CGU_CTL_WFI                     30            /* Wait For Idle */
#define BITP_CGU_CTL_MSEL                     8            /* Multiplier Select */
#define BITP_CGU_CTL_DF                       0            /* Divide Frequency */
#define BITM_CGU_CTL_LOCK                    0x80000000    /* Lock */
#define BITM_CGU_CTL_WFI                     0x40000000    /* Wait For Idle */
#define BITM_CGU_CTL_MSEL                    0x00007F00    /* Multiplier Select */
#define BITM_CGU_CTL_DF                      0x00000001    /* Divide Frequency */

/* ------------------------------------------------------------------------------------------------------------------------
        CGU_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CGU_STAT_PLOCKERR               21            /* PLL Lock Error */
#define BITP_CGU_STAT_WDIVERR                20            /* Write to DIV Error */
#define BITP_CGU_STAT_WDFMSERR               19            /* Write to DF or MSEL Error */
#define BITP_CGU_STAT_DIVERR                 18            /* DIV Error */
#define BITP_CGU_STAT_LWERR                  17            /* Lock Write Error */
#define BITP_CGU_STAT_ADDRERR                16            /* Address Error */
#define BITP_CGU_STAT_OCBF                    9            /* OUTCLK Buffer Status */
#define BITP_CGU_STAT_DCBF                    8            /* DCLK Buffer Status */
#define BITP_CGU_STAT_SCBF1                   7            /* SCLK1 Buffer Status */
#define BITP_CGU_STAT_SCBF0                   6            /* SCLK0 Buffer Status */
#define BITP_CGU_STAT_CCBF1                   5            /* CCLK1 Buffer Status */
#define BITP_CGU_STAT_CCBF0                   4            /* CCLK0 Buffer Status */
#define BITP_CGU_STAT_CLKSALGN                3            /* Clock Alignment */
#define BITP_CGU_STAT_PLOCK                   2            /* PLL Lock */
#define BITP_CGU_STAT_PLLBP                   1            /* PLL Bypass */
#define BITP_CGU_STAT_PLLEN                   0            /* PLL Enable */
#define BITM_CGU_STAT_PLOCKERR               0x00200000    /* PLL Lock Error */
#define BITM_CGU_STAT_WDIVERR                0x00100000    /* Write to DIV Error */
#define BITM_CGU_STAT_WDFMSERR               0x00080000    /* Write to DF or MSEL Error */
#define BITM_CGU_STAT_DIVERR                 0x00040000    /* DIV Error */
#define BITM_CGU_STAT_LWERR                  0x00020000    /* Lock Write Error */
#define BITM_CGU_STAT_ADDRERR                0x00010000    /* Address Error */
#define BITM_CGU_STAT_OCBF                   0x00000200    /* OUTCLK Buffer Status */
#define BITM_CGU_STAT_DCBF                   0x00000100    /* DCLK Buffer Status */
#define BITM_CGU_STAT_SCBF1                  0x00000080    /* SCLK1 Buffer Status */
#define BITM_CGU_STAT_SCBF0                  0x00000040    /* SCLK0 Buffer Status */
#define BITM_CGU_STAT_CCBF1                  0x00000020    /* CCLK1 Buffer Status */
#define BITM_CGU_STAT_CCBF0                  0x00000010    /* CCLK0 Buffer Status */
#define BITM_CGU_STAT_CLKSALGN               0x00000008    /* Clock Alignment */
#define BITM_CGU_STAT_PLOCK                  0x00000004    /* PLL Lock */
#define BITM_CGU_STAT_PLLBP                  0x00000002    /* PLL Bypass */
#define BITM_CGU_STAT_PLLEN                  0x00000001    /* PLL Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        CGU_DIV                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CGU_DIV_LOCK                    31            /* Lock */
#define BITP_CGU_DIV_UPDT                    30            /* Update Clock Divisors */
#define BITP_CGU_DIV_ALGN                    29            /* Align */
#define BITP_CGU_DIV_OSEL                    22            /* OUTCLK Divisor */
#define BITP_CGU_DIV_DSEL                    16            /* DCLK Divisor */
#define BITP_CGU_DIV_S1SEL                   13            /* SCLK 1 Divisor */
#define BITP_CGU_DIV_SYSSEL                   8            /* SYSCLK Divisor */
#define BITP_CGU_DIV_S0SEL                    5            /* SCLK 0 Divisor */
#define BITP_CGU_DIV_CSEL                     0            /* CCLK Divisor */
#define BITM_CGU_DIV_LOCK                    0x80000000    /* Lock */
#define BITM_CGU_DIV_UPDT                    0x40000000    /* Update Clock Divisors */
#define BITM_CGU_DIV_ALGN                    0x20000000    /* Align */
#define BITM_CGU_DIV_OSEL                    0x1FC00000    /* OUTCLK Divisor */
#define BITM_CGU_DIV_DSEL                    0x001F0000    /* DCLK Divisor */
#define BITM_CGU_DIV_S1SEL                   0x0000E000    /* SCLK 1 Divisor */
#define BITM_CGU_DIV_SYSSEL                  0x00001F00    /* SYSCLK Divisor */
#define BITM_CGU_DIV_S0SEL                   0x000000E0    /* SCLK 0 Divisor */
#define BITM_CGU_DIV_CSEL                    0x0000001F    /* CCLK Divisor */

/* ------------------------------------------------------------------------------------------------------------------------
        CGU_CLKOUTSEL                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CGU_CLKOUTSEL_LOCK              31            /* Lock */
#define BITP_CGU_CLKOUTSEL_USBCLKSEL         16            /* USBCLK Select */
#define BITP_CGU_CLKOUTSEL_CLKOUTSEL          0            /* CLKOUT Select */
#define BITM_CGU_CLKOUTSEL_LOCK              0x80000000    /* Lock */
#define BITM_CGU_CLKOUTSEL_USBCLKSEL         0x003F0000    /* USBCLK Select */
#define BITM_CGU_CLKOUTSEL_CLKOUTSEL         0x0000000F    /* CLKOUT Select */

/* =========================
        DPM Registers
   ========================= */

/* =========================
        DPM0
   ========================= */
#define REG_DPM0_CTL                    0xFFCA9000         /* DPM0 Control Register */
#define REG_DPM0_STAT                   0xFFCA9004         /* DPM0 Status Register */
#define REG_DPM0_CCBF_DIS               0xFFCA9008         /* DPM0 Core Clock Buffer Disable Register */
#define REG_DPM0_CCBF_EN                0xFFCA900C         /* DPM0 Core Clock Buffer Enable Register */
#define REG_DPM0_CCBF_STAT              0xFFCA9010         /* DPM0 Core Clock Buffer Status Register */
#define REG_DPM0_CCBF_STAT_STKY         0xFFCA9014         /* DPM0 Core Clock Buffer Status Sticky Register */
#define REG_DPM0_SCBF_DIS               0xFFCA9018         /* DPM0 System Clock Buffer Disable Register */
#define REG_DPM0_WAKE_EN                0xFFCA901C         /* DPM0 Wakeup Enable Register */
#define REG_DPM0_WAKE_POL               0xFFCA9020         /* DPM0 Wakeup Polarity Register */
#define REG_DPM0_WAKE_STAT              0xFFCA9024         /* DPM0 Wakeup Status Register */
#define REG_DPM0_HIB_DIS                0xFFCA9028         /* DPM0 Hibernate Disable Register */
#define REG_DPM0_PGCNTR                 0xFFCA902C         /* DPM0 Power Good Counter Register */
#define REG_DPM0_RESTORE0               0xFFCA9030         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE1               0xFFCA9034         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE2               0xFFCA9038         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE3               0xFFCA903C         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE4               0xFFCA9040         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE5               0xFFCA9044         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE6               0xFFCA9048         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE7               0xFFCA904C         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE8               0xFFCA9050         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE9               0xFFCA9054         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE10              0xFFCA9058         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE11              0xFFCA905C         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE12              0xFFCA9060         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE13              0xFFCA9064         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE14              0xFFCA9068         /* DPM0 Restore Register */
#define REG_DPM0_RESTORE15              0xFFCA906C         /* DPM0 Restore Register */

/* =========================
        DPM
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        DPM_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_CTL_LOCK                    31            /* Lock */
#define BITP_DPM_CTL_HIBERNATE                4            /* Hibernate */
#define BITP_DPM_CTL_DEEPSLEEP                3            /* Deep Sleep */
#define BITP_DPM_CTL_PLLDIS                   2            /* PLL Disable */
#define BITP_DPM_CTL_PLLBPCL                  1            /* PLL Bypass Clear */
#define BITP_DPM_CTL_PLLBPST                  0            /* PLL Bypass Set */
#define BITM_DPM_CTL_LOCK                    0x80000000    /* Lock */
#define BITM_DPM_CTL_HIBERNATE               0x00000010    /* Hibernate */
#define BITM_DPM_CTL_DEEPSLEEP               0x00000008    /* Deep Sleep */
#define BITM_DPM_CTL_PLLDIS                  0x00000004    /* PLL Disable */
#define BITM_DPM_CTL_PLLBPCL                 0x00000002    /* PLL Bypass Clear */
#define BITM_DPM_CTL_PLLBPST                 0x00000001    /* PLL Bypass Set */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_STAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_STAT_PLLCFGERR              19            /* PLL Configuration Error */
#define BITP_DPM_STAT_HVBSYERR               18            /* HV Busy Error */
#define BITP_DPM_STAT_LWERR                  17            /* Lock Write Error */
#define BITP_DPM_STAT_ADDRERR                16            /* Address Error */
#define BITP_DPM_STAT_HVBSY                   9            /* HV Busy */
#define BITP_DPM_STAT_CCLKDIS                 8            /* Core Clock(s) Disabled */
#define BITP_DPM_STAT_PRVMODE                 4            /* Previous Mode */
#define BITP_DPM_STAT_CURMODE                 0            /* Current Mode */
#define BITM_DPM_STAT_PLLCFGERR              0x00080000    /* PLL Configuration Error */
#define BITM_DPM_STAT_HVBSYERR               0x00040000    /* HV Busy Error */
#define BITM_DPM_STAT_LWERR                  0x00020000    /* Lock Write Error */
#define BITM_DPM_STAT_ADDRERR                0x00010000    /* Address Error */
#define BITM_DPM_STAT_HVBSY                  0x00000200    /* HV Busy */
#define BITM_DPM_STAT_CCLKDIS                0x00000100    /* Core Clock(s) Disabled */
#define BITM_DPM_STAT_PRVMODE                0x000000F0    /* Previous Mode */
#define BITM_DPM_STAT_CURMODE                0x0000000F    /* Current Mode */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_CCBF_DIS                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_CCBF_DIS_LOCK               31            /* Lock */
#define BITP_DPM_CCBF_DIS_CCBF0               0            /* Core Clock Buffer n */
#define BITP_DPM_CCBF_DIS_CCBF1               1            /* Core Clock Buffer n */
#define BITM_DPM_CCBF_DIS_LOCK               0x80000000    /* Lock */
#define BITM_DPM_CCBF_DIS_CCBF0              0x00000003    /* Core Clock Buffer n */
#define BITM_DPM_CCBF_DIS_CCBF1              0x00000003    /* Core Clock Buffer n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_CCBF_EN                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_CCBF_EN_LOCK                31            /* Lock */
#define BITP_DPM_CCBF_EN_CCBF0                0            /* Core Clock Buffer n */
#define BITP_DPM_CCBF_EN_CCBF1                1            /* Core Clock Buffer n */
#define BITM_DPM_CCBF_EN_LOCK                0x80000000    /* Lock */
#define BITM_DPM_CCBF_EN_CCBF0               0x00000003    /* Core Clock Buffer n */
#define BITM_DPM_CCBF_EN_CCBF1               0x00000003    /* Core Clock Buffer n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_CCBF_STAT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_CCBF_STAT_CCBF0              0            /* Core Clock Buffer n */
#define BITP_DPM_CCBF_STAT_CCBF1              1            /* Core Clock Buffer n */
#define BITM_DPM_CCBF_STAT_CCBF0             0x00000003    /* Core Clock Buffer n */
#define BITM_DPM_CCBF_STAT_CCBF1             0x00000003    /* Core Clock Buffer n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_CCBF_STAT_STKY                   Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_CCBF_STAT_STKY_CCBF0         0            /* Core Clock Buffer n */
#define BITP_DPM_CCBF_STAT_STKY_CCBF1         1            /* Core Clock Buffer n */
#define BITM_DPM_CCBF_STAT_STKY_CCBF0        0x00000003    /* Core Clock Buffer n */
#define BITM_DPM_CCBF_STAT_STKY_CCBF1        0x00000003    /* Core Clock Buffer n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_SCBF_DIS                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_SCBF_DIS_LOCK               31            /* Lock */
#define BITP_DPM_SCBF_DIS_SCBF0               0            /* System Clock Buffer n */
#define BITP_DPM_SCBF_DIS_SCBF1               1            /* System Clock Buffer n */
#define BITP_DPM_SCBF_DIS_SCBF2               2            /* System Clock Buffer n */
#define BITP_DPM_SCBF_DIS_SCBF3               3            /* System Clock Buffer n */
#define BITM_DPM_SCBF_DIS_LOCK               0x80000000    /* Lock */
#define BITM_DPM_SCBF_DIS_SCBF0              0x0000000F    /* System Clock Buffer n */
#define BITM_DPM_SCBF_DIS_SCBF1              0x0000000F    /* System Clock Buffer n */
#define BITM_DPM_SCBF_DIS_SCBF2              0x0000000F    /* System Clock Buffer n */
#define BITM_DPM_SCBF_DIS_SCBF3              0x0000000F    /* System Clock Buffer n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_WAKE_EN                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_WAKE_EN_LOCK                31            /* Lock */
#define BITP_DPM_WAKE_EN_WS0                  0            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS1                  1            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS2                  2            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS3                  3            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS4                  4            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS5                  5            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS6                  6            /* Wakeup Source n */
#define BITP_DPM_WAKE_EN_WS7                  7            /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_LOCK                0x80000000    /* Lock */
#define BITM_DPM_WAKE_EN_WS0                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS1                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS2                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS3                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS4                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS5                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS6                 0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_EN_WS7                 0x000000FF    /* Wakeup Source n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_WAKE_POL                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_WAKE_POL_LOCK               31            /* Lock */
#define BITP_DPM_WAKE_POL_WS0                 0            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS1                 1            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS2                 2            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS3                 3            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS4                 4            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS5                 5            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS6                 6            /* Wakeup Source n */
#define BITP_DPM_WAKE_POL_WS7                 7            /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_LOCK               0x80000000    /* Lock */
#define BITM_DPM_WAKE_POL_WS0                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS1                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS2                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS3                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS4                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS5                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS6                0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_POL_WS7                0x000000FF    /* Wakeup Source n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_WAKE_STAT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_WAKE_STAT_WS0                0            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS1                1            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS2                2            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS3                3            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS4                4            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS5                5            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS6                6            /* Wakeup Source n */
#define BITP_DPM_WAKE_STAT_WS7                7            /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS0               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS1               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS2               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS3               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS4               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS5               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS6               0x000000FF    /* Wakeup Source n */
#define BITM_DPM_WAKE_STAT_WS7               0x000000FF    /* Wakeup Source n */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_HIB_DIS                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_HIB_DIS_LOCK                31            /* Lock */
#define BITP_DPM_HIB_DIS_HD0                  0            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD1                  1            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD2                  2            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD3                  3            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD4                  4            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD5                  5            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD6                  6            /* Hibernate Disable */
#define BITP_DPM_HIB_DIS_HD7                  7            /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_LOCK                0x80000000    /* Lock */
#define BITM_DPM_HIB_DIS_HD0                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD1                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD2                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD3                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD4                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD5                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD6                 0x000000FF    /* Hibernate Disable */
#define BITM_DPM_HIB_DIS_HD7                 0x000000FF    /* Hibernate Disable */

/* ------------------------------------------------------------------------------------------------------------------------
        DPM_PGCNTR                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DPM_PGCNTR_LOCK                 31            /* Lock */
#define BITP_DPM_PGCNTR_CNT                   0            /* Power Good Count */
#define BITM_DPM_PGCNTR_LOCK                 0x80000000    /* Lock */
#define BITM_DPM_PGCNTR_CNT                  0x0000FFFF    /* Power Good Count */

/* =========================
        EFUSE Registers
   ========================= */

/* =========================
        EFS0
   ========================= */
#define REG_EFS0_CTL                    0xFFCC0000         /* EFS0 Control Register */
#define REG_EFS0_DAT0                   0xFFCC0008         /* EFS0 Data Register 0 */
#define REG_EFS0_DAT1                   0xFFCC000C         /* EFS0 Data Register 1 */
#define REG_EFS0_DAT2                   0xFFCC0010         /* EFS0 Data Register 2 */
#define REG_EFS0_DAT3                   0xFFCC0014         /* EFS0 Data Register 3 */
#define REG_EFS0_DAT4                   0xFFCC0018         /* EFS0 Data Register 4 */
#define REG_EFS0_DAT5                   0xFFCC001C         /* EFS0 Data Register 5 */
#define REG_EFS0_DAT6                   0xFFCC0020         /* EFS0 Data Register 6 */
#define REG_EFS0_DAT7                   0xFFCC0024         /* EFS0 Data Register 7 */
#define REG_EFS0_PGM0                   0xFFCC0028         /* EFS0 Program Register 0 */
#define REG_EFS0_PGM1                   0xFFCC002C         /* EFS0 Program Register 1 */
#define REG_EFS0_PGM2                   0xFFCC0030         /* EFS0 Program Register 2 */
#define REG_EFS0_PGM3                   0xFFCC0034         /* EFS0 Program Register 3 */
#define REG_EFS0_PGM4                   0xFFCC0038         /* EFS0 Program Register 4 */
#define REG_EFS0_PGM5                   0xFFCC003C         /* EFS0 Program Register 5 */
#define REG_EFS0_PGM6                   0xFFCC0040         /* EFS0 Program Register 6 */
#define REG_EFS0_PGM7                   0xFFCC0044         /* EFS0 Program Register 7 */
#define REG_EFS0_PGM_TIMING             0xFFCC007C         /* EFS0 Timing configuration register */

/* =========================
        EFS
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        EFS_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EFS_CTL_PGM                      1            /* Program */
#define BITP_EFS_CTL_READ                     0            /* Read */
#define BITM_EFS_CTL_PGM                     0x00000002    /* Program */
#define BITM_EFS_CTL_READ                    0x00000001    /* Read */

/* ------------------------------------------------------------------------------------------------------------------------
        EFS_PGM7                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EFS_PGM7_WRPROT                 31            /* Write Protect */
#define BITP_EFS_PGM7_VALUE                   0            /* Program value 7 */
#define BITM_EFS_PGM7_WRPROT                 0x80000000    /* Write Protect */
#define BITM_EFS_PGM7_VALUE                  0x7FFFFFFF    /* Program value 7 */

/* ------------------------------------------------------------------------------------------------------------------------
        EFS_PGM_TIMING                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_EFS_PGM_TIMING_PGMWAIT           0            /* FSN program bit wait */
#define BITM_EFS_PGM_TIMING_PGMWAIT          0x00000FFF    /* FSN program bit wait */

/* =========================
        MUSBMHDRC Registers
   ========================= */

/* =========================
        USB0
   ========================= */
#define REG_USB0_FADDR                  0xFFCC1000         /* USB0 Device Address in Peripheral Mode */
#define REG_USB0_POWER                  0xFFCC1001         /* USB0 Power and Device Control */
#define REG_USB0_INTRTX                 0xFFCC1002         /* USB0 Transmit Interrupt */
#define REG_USB0_INTRRX                 0xFFCC1004         /* USB0 Receive Interrupts */
#define REG_USB0_INTRTXE                0xFFCC1006         /* USB0 Transmit Interrupt Enable */
#define REG_USB0_INTRRXE                0xFFCC1008         /* USB0 Receive Interrupt Enable */
#define REG_USB0_IRQ                    0xFFCC100A         /* USB0 USB Interrupts */
#define REG_USB0_IEN                    0xFFCC100B         /* USB0 USB Interrupt Enable */
#define REG_USB0_FRAME                  0xFFCC100C         /* USB0 Frame Number */
#define REG_USB0_INDEX                  0xFFCC100E         /* USB0 Index */
#define REG_USB0_TESTMODE               0xFFCC100F         /* USB0 Testmodes */
#define REG_USB0_EPI_TXMAXP0            0xFFCC1010         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP0I_CSR0_H            0xFFCC1012         /* USB0 Config and Status EP0 */
#define REG_USB0_EPI_TXCSR0_H           0xFFCC1012         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP0I_CSR0_P            0xFFCC1012         /* USB0 Config and Status EP0 */
#define REG_USB0_EPI_TXCSR0_P           0xFFCC1012         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EPI_RXMAXP0            0xFFCC1014         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EPI_RXCSR0_H           0xFFCC1016         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EPI_RXCSR0_P           0xFFCC1016         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP0I_CNT0              0xFFCC1018         /* USB0 Number of Received Bytes for Endpoint 0 */
#define REG_USB0_EPI_RXCNT0             0xFFCC1018         /* USB0 Number of Byte Received */
#define REG_USB0_EP0I_TYPE0             0xFFCC101A         /* USB0 Speed for Endpoint 0 */
#define REG_USB0_EPI_TXTYPE0            0xFFCC101A         /* USB0 Transmit Type */
#define REG_USB0_EP0I_NAKLIMIT0         0xFFCC101B         /* USB0 NAK Response Timeout for Endpoint 0 */
#define REG_USB0_EPI_TXINTERVAL0        0xFFCC101B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EPI_RXTYPE0            0xFFCC101C         /* USB0 Receive Type */
#define REG_USB0_EPI_RXINTERVAL0        0xFFCC101D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP0I_CFGDATA0          0xFFCC101F         /* USB0 Configuration Information */
#define REG_USB0_FIFOB0                 0xFFCC1020         /* USB0 FIFO Data */
#define REG_USB0_FIFOB1                 0xFFCC1024         /* USB0 FIFO Data */
#define REG_USB0_FIFOB2                 0xFFCC1028         /* USB0 FIFO Data */
#define REG_USB0_FIFOB3                 0xFFCC102C         /* USB0 FIFO Data */
#define REG_USB0_FIFOB4                 0xFFCC1030         /* USB0 FIFO Data */
#define REG_USB0_FIFOB5                 0xFFCC1034         /* USB0 FIFO Data */
#define REG_USB0_FIFOB6                 0xFFCC1038         /* USB0 FIFO Data */
#define REG_USB0_FIFOB7                 0xFFCC103C         /* USB0 FIFO Data */
#define REG_USB0_FIFOB8                 0xFFCC1040         /* USB0 FIFO Data */
#define REG_USB0_FIFOB9                 0xFFCC1044         /* USB0 FIFO Data */
#define REG_USB0_FIFOB10                0xFFCC1048         /* USB0 FIFO Data */
#define REG_USB0_FIFOB11                0xFFCC104C         /* USB0 FIFO Data */
#define REG_USB0_FIFOH0                 0xFFCC1020         /* USB0 FIFO Data */
#define REG_USB0_FIFOH1                 0xFFCC1024         /* USB0 FIFO Data */
#define REG_USB0_FIFOH2                 0xFFCC1028         /* USB0 FIFO Data */
#define REG_USB0_FIFOH3                 0xFFCC102C         /* USB0 FIFO Data */
#define REG_USB0_FIFOH4                 0xFFCC1030         /* USB0 FIFO Data */
#define REG_USB0_FIFOH5                 0xFFCC1034         /* USB0 FIFO Data */
#define REG_USB0_FIFOH6                 0xFFCC1038         /* USB0 FIFO Data */
#define REG_USB0_FIFOH7                 0xFFCC103C         /* USB0 FIFO Data */
#define REG_USB0_FIFOH8                 0xFFCC1040         /* USB0 FIFO Data */
#define REG_USB0_FIFOH9                 0xFFCC1044         /* USB0 FIFO Data */
#define REG_USB0_FIFOH10                0xFFCC1048         /* USB0 FIFO Data */
#define REG_USB0_FIFOH11                0xFFCC104C         /* USB0 FIFO Data */
#define REG_USB0_FIFO0                  0xFFCC1020         /* USB0 FIFO Data */
#define REG_USB0_FIFO1                  0xFFCC1024         /* USB0 FIFO Data */
#define REG_USB0_FIFO2                  0xFFCC1028         /* USB0 FIFO Data */
#define REG_USB0_FIFO3                  0xFFCC102C         /* USB0 FIFO Data */
#define REG_USB0_FIFO4                  0xFFCC1030         /* USB0 FIFO Data */
#define REG_USB0_FIFO5                  0xFFCC1034         /* USB0 FIFO Data */
#define REG_USB0_FIFO6                  0xFFCC1038         /* USB0 FIFO Data */
#define REG_USB0_FIFO7                  0xFFCC103C         /* USB0 FIFO Data */
#define REG_USB0_FIFO8                  0xFFCC1040         /* USB0 FIFO Data */
#define REG_USB0_FIFO9                  0xFFCC1044         /* USB0 FIFO Data */
#define REG_USB0_FIFO10                 0xFFCC1048         /* USB0 FIFO Data */
#define REG_USB0_FIFO11                 0xFFCC104C         /* USB0 FIFO Data */
#define REG_USB0_DEV_CTL                0xFFCC1060         /* USB0 Device Control */
#define REG_USB0_TXFIFOSZ               0xFFCC1062         /* USB0 Transmit FIFO Size */
#define REG_USB0_RXFIFOSZ               0xFFCC1063         /* USB0 Receive FIFO Size */
#define REG_USB0_TXFIFOADDR             0xFFCC1064         /* USB0 Transmit FIFO Address */
#define REG_USB0_RXFIFOADDR             0xFFCC1066         /* USB0 Receive FIFO Address */
#define REG_USB0_VENDSTAT               0xFFCC1068         /* USB0 Vendor Status */
#define REG_USB0_HWVERS                 0xFFCC106C         /* USB0 Hardware Version */
#define REG_USB0_EPINFO                 0xFFCC1078         /* USB0 Endpoint Info */
#define REG_USB0_RAMINFO                0xFFCC1079         /* USB0 Ram Information */
#define REG_USB0_LINKINFO               0xFFCC107A         /* USB0 Programmable Delay Values */
#define REG_USB0_VPLEN                  0xFFCC107B         /* USB0 VBus Pulse Duration */
#define REG_USB0_HS_EOF1                0xFFCC107C         /* USB0 High Speed End of Frame Remaining */
#define REG_USB0_FS_EOF1                0xFFCC107D         /* USB0 Full Speed End of Frame Remaining */
#define REG_USB0_LS_EOF1                0xFFCC107E         /* USB0 Low Speed End of Frame Remaining */
#define REG_USB0_SOFT_RST               0xFFCC107F         /* USB0 Software Reset */
#define REG_USB0_TXFUNCADDR0            0xFFCC1080         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR1            0xFFCC1088         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR2            0xFFCC1090         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR3            0xFFCC1098         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR4            0xFFCC10A0         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR5            0xFFCC10A8         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR6            0xFFCC10B0         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR7            0xFFCC10B8         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR8            0xFFCC10C0         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR9            0xFFCC10C8         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR10           0xFFCC10D0         /* USB0 Transmit Function Address */
#define REG_USB0_TXFUNCADDR11           0xFFCC10D8         /* USB0 Transmit Function Address */
#define REG_USB0_TXHUBADDR0             0xFFCC1082         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR1             0xFFCC108A         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR2             0xFFCC1092         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR3             0xFFCC109A         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR4             0xFFCC10A2         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR5             0xFFCC10AA         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR6             0xFFCC10B2         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR7             0xFFCC10BA         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR8             0xFFCC10C2         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR9             0xFFCC10CA         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR10            0xFFCC10D2         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBADDR11            0xFFCC10DA         /* USB0 Transmit Hub Address */
#define REG_USB0_TXHUBPORT0             0xFFCC1083         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT1             0xFFCC108B         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT2             0xFFCC1093         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT3             0xFFCC109B         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT4             0xFFCC10A3         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT5             0xFFCC10AB         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT6             0xFFCC10B3         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT7             0xFFCC10BB         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT8             0xFFCC10C3         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT9             0xFFCC10CB         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT10            0xFFCC10D3         /* USB0 Transmit Hub Port */
#define REG_USB0_TXHUBPORT11            0xFFCC10DB         /* USB0 Transmit Hub Port */
#define REG_USB0_RXFUNCADDR0            0xFFCC1084         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR1            0xFFCC108C         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR2            0xFFCC1094         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR3            0xFFCC109C         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR4            0xFFCC10A4         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR5            0xFFCC10AC         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR6            0xFFCC10B4         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR7            0xFFCC10BC         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR8            0xFFCC10C4         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR9            0xFFCC10CC         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR10           0xFFCC10D4         /* USB0 Receive Function Address */
#define REG_USB0_RXFUNCADDR11           0xFFCC10DC         /* USB0 Receive Function Address */
#define REG_USB0_RXHUBADDR0             0xFFCC1086         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR1             0xFFCC108E         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR2             0xFFCC1096         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR3             0xFFCC109E         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR4             0xFFCC10A6         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR5             0xFFCC10AE         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR6             0xFFCC10B6         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR7             0xFFCC10BE         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR8             0xFFCC10C6         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR9             0xFFCC10CE         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR10            0xFFCC10D6         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBADDR11            0xFFCC10DE         /* USB0 Receive Hub Address */
#define REG_USB0_RXHUBPORT0             0xFFCC1087         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT1             0xFFCC108F         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT2             0xFFCC1097         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT3             0xFFCC109F         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT4             0xFFCC10A7         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT5             0xFFCC10AF         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT6             0xFFCC10B7         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT7             0xFFCC10BF         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT8             0xFFCC10C7         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT9             0xFFCC10CF         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT10            0xFFCC10D7         /* USB0 Receive Hub Port */
#define REG_USB0_RXHUBPORT11            0xFFCC10DF         /* USB0 Receive Hub Port */
#define REG_USB0_EP0_CSR0_H             0xFFCC1102         /* USB0 Config and Status EP0 */
#define REG_USB0_EP0_CSR0_P             0xFFCC1102         /* USB0 Config and Status EP0 */
#define REG_USB0_EP0_CNT0               0xFFCC1108         /* USB0 Number of Received Bytes for Endpoint 0 */
#define REG_USB0_EP0_TYPE0              0xFFCC110A         /* USB0 Speed for Endpoint 0 */
#define REG_USB0_EP0_NAKLIMIT0          0xFFCC110B         /* USB0 NAK Response Timeout for Endpoint 0 */
#define REG_USB0_EP0_CFGDATA0           0xFFCC110F         /* USB0 Configuration Information */
#define REG_USB0_EP_TXMAXP0             0xFFCC1110         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP1             0xFFCC1120         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP2             0xFFCC1130         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP3             0xFFCC1140         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP4             0xFFCC1150         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP5             0xFFCC1160         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP6             0xFFCC1170         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP7             0xFFCC1180         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP8             0xFFCC1190         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP9             0xFFCC11A0         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXMAXP10            0xFFCC11B0         /* USB0 Transmit Maximum Packet Length */
#define REG_USB0_EP_TXCSR0_H            0xFFCC1112         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR1_H            0xFFCC1122         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR2_H            0xFFCC1132         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR3_H            0xFFCC1142         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR4_H            0xFFCC1152         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR5_H            0xFFCC1162         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR6_H            0xFFCC1172         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR7_H            0xFFCC1182         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR8_H            0xFFCC1192         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR9_H            0xFFCC11A2         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR10_H           0xFFCC11B2         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR0_P            0xFFCC1112         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR1_P            0xFFCC1122         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR2_P            0xFFCC1132         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR3_P            0xFFCC1142         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR4_P            0xFFCC1152         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR5_P            0xFFCC1162         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR6_P            0xFFCC1172         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR7_P            0xFFCC1182         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR8_P            0xFFCC1192         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR9_P            0xFFCC11A2         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_TXCSR10_P           0xFFCC11B2         /* USB0 Transmit Configuration and Status */
#define REG_USB0_EP_RXMAXP0             0xFFCC1114         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP1             0xFFCC1124         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP2             0xFFCC1134         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP3             0xFFCC1144         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP4             0xFFCC1154         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP5             0xFFCC1164         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP6             0xFFCC1174         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP7             0xFFCC1184         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP8             0xFFCC1194         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP9             0xFFCC11A4         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXMAXP10            0xFFCC11B4         /* USB0 Receive Maximum Packet Length */
#define REG_USB0_EP_RXCSR0_H            0xFFCC1116         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR1_H            0xFFCC1126         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR2_H            0xFFCC1136         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR3_H            0xFFCC1146         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR4_H            0xFFCC1156         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR5_H            0xFFCC1166         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR6_H            0xFFCC1176         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR7_H            0xFFCC1186         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR8_H            0xFFCC1196         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR9_H            0xFFCC11A6         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR10_H           0xFFCC11B6         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR0_P            0xFFCC1116         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR1_P            0xFFCC1126         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR2_P            0xFFCC1136         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR3_P            0xFFCC1146         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR4_P            0xFFCC1156         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR5_P            0xFFCC1166         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR6_P            0xFFCC1176         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR7_P            0xFFCC1186         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR8_P            0xFFCC1196         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR9_P            0xFFCC11A6         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCSR10_P           0xFFCC11B6         /* USB0 Receive Configuration and Status Register */
#define REG_USB0_EP_RXCNT0              0xFFCC1118         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT1              0xFFCC1128         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT2              0xFFCC1138         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT3              0xFFCC1148         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT4              0xFFCC1158         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT5              0xFFCC1168         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT6              0xFFCC1178         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT7              0xFFCC1188         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT8              0xFFCC1198         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT9              0xFFCC11A8         /* USB0 Number of Byte Received */
#define REG_USB0_EP_RXCNT10             0xFFCC11B8         /* USB0 Number of Byte Received */
#define REG_USB0_EP_TXTYPE0             0xFFCC111A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE1             0xFFCC112A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE2             0xFFCC113A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE3             0xFFCC114A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE4             0xFFCC115A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE5             0xFFCC116A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE6             0xFFCC117A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE7             0xFFCC118A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE8             0xFFCC119A         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE9             0xFFCC11AA         /* USB0 Transmit Type */
#define REG_USB0_EP_TXTYPE10            0xFFCC11BA         /* USB0 Transmit Type */
#define REG_USB0_EP_TXINTERVAL0         0xFFCC111B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL1         0xFFCC112B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL2         0xFFCC113B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL3         0xFFCC114B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL4         0xFFCC115B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL5         0xFFCC116B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL6         0xFFCC117B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL7         0xFFCC118B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL8         0xFFCC119B         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL9         0xFFCC11AB         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_TXINTERVAL10        0xFFCC11BB         /* USB0 Transmit Polling Interval */
#define REG_USB0_EP_RXTYPE0             0xFFCC111C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE1             0xFFCC112C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE2             0xFFCC113C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE3             0xFFCC114C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE4             0xFFCC115C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE5             0xFFCC116C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE6             0xFFCC117C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE7             0xFFCC118C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE8             0xFFCC119C         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE9             0xFFCC11AC         /* USB0 Receive Type */
#define REG_USB0_EP_RXTYPE10            0xFFCC11BC         /* USB0 Receive Type */
#define REG_USB0_EP_RXINTERVAL0         0xFFCC111D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL1         0xFFCC112D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL2         0xFFCC113D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL3         0xFFCC114D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL4         0xFFCC115D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL5         0xFFCC116D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL6         0xFFCC117D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL7         0xFFCC118D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL8         0xFFCC119D         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL9         0xFFCC11AD         /* USB0 Receive Polling Interval */
#define REG_USB0_EP_RXINTERVAL10        0xFFCC11BD         /* USB0 Receive Polling Interval */
#define REG_USB0_DMA_IRQ                0xFFCC1200         /* USB0 Interrupt Register */
#define REG_USB0_DMA_CTL0               0xFFCC1204         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL1               0xFFCC1214         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL2               0xFFCC1224         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL3               0xFFCC1234         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL4               0xFFCC1244         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL5               0xFFCC1254         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL6               0xFFCC1264         /* USB0 DMA Control */
#define REG_USB0_DMA_CTL7               0xFFCC1274         /* USB0 DMA Control */
#define REG_USB0_DMA_ADDR0              0xFFCC1208         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR1              0xFFCC1218         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR2              0xFFCC1228         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR3              0xFFCC1238         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR4              0xFFCC1248         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR5              0xFFCC1258         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR6              0xFFCC1268         /* USB0 DMA Address */
#define REG_USB0_DMA_ADDR7              0xFFCC1278         /* USB0 DMA Address */
#define REG_USB0_DMA_CNT0               0xFFCC120C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT1               0xFFCC121C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT2               0xFFCC122C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT3               0xFFCC123C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT4               0xFFCC124C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT5               0xFFCC125C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT6               0xFFCC126C         /* USB0 DMA Count */
#define REG_USB0_DMA_CNT7               0xFFCC127C         /* USB0 DMA Count */
#define REG_USB0_RQPKTCNT0              0xFFCC1300         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT1              0xFFCC1304         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT2              0xFFCC1308         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT3              0xFFCC130C         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT4              0xFFCC1310         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT5              0xFFCC1314         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT6              0xFFCC1318         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT7              0xFFCC131C         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT8              0xFFCC1320         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT9              0xFFCC1324         /* USB0 Request Packet Count */
#define REG_USB0_RQPKTCNT10             0xFFCC1328         /* USB0 Request Packet Count */
#define REG_USB0_CT_UCH                 0xFFCC1344         /* USB0 Chirp Timeout */
#define REG_USB0_CT_HHSRTN              0xFFCC1346         /* USB0 High Speed Resume Return to Normal */
#define REG_USB0_CT_HSBT                0xFFCC1348         /* USB0 High Speed Timeout */
#define REG_USB0_LPM_ATTR               0xFFCC1360         /* USB0 LPM Attribute */
#define REG_USB0_LPM_CTL                0xFFCC1362         /* USB0 LPM Control */
#define REG_USB0_LPM_IEN                0xFFCC1363         /* USB0 LPM Interrupt Enable */
#define REG_USB0_LPM_IRQ                0xFFCC1364         /* USB0 LPM Interrupt */
#define REG_USB0_LPM_FADDR              0xFFCC1365         /* USB0 LPM Function Address */
#define REG_USB0_VBUS_CTL               0xFFCC1380         /* USB0 VBus Control */
#define REG_USB0_BAT_CHG                0xFFCC1381         /* USB0 Battery Charging */
#define REG_USB0_PHY_CTL                0xFFCC1394         /* USB0 PHY Control */
#define REG_USB0_TESTCTL                0xFFCC1397         /* USB0 Test Control */
#define REG_USB0_PLL_OSC                0xFFCC1398         /* USB0 PLL and Oscillator Control */

/* =========================
        USB
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        USB_FADDR                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_FADDR_VALUE                  0
#define BITM_USB_FADDR_VALUE                 0x0000007F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_POWER                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_POWER_ISOUPDT                7            /* ISO Update */
#define BITP_USB_POWER_SOFTCONN               6            /* Enable the D+/- Termination Resistors */
#define BITP_USB_POWER_HSEN                   5            /* High Speed Mode Enable */
#define BITP_USB_POWER_HSMODE                 4            /* High Speed Mode Indicator */
#define BITP_USB_POWER_RESET                  3            /* Reset */
#define BITP_USB_POWER_RESUME                 2            /* Assert Resume Signaling */
#define BITP_USB_POWER_SUSPEND                1            /* Suspend Mode */
#define BITP_USB_POWER_SUSEN                  0            /* Enable UTMI SuspendM Output */
#define BITM_USB_POWER_ISOUPDT               0x00000080    /* ISO Update */
#define BITM_USB_POWER_SOFTCONN              0x00000040    /* Enable the D+/- Termination Resistors */
#define BITM_USB_POWER_HSEN                  0x00000020    /* High Speed Mode Enable */
#define BITM_USB_POWER_HSMODE                0x00000010    /* High Speed Mode Indicator */
#define BITM_USB_POWER_RESET                 0x00000008    /* Reset */
#define BITM_USB_POWER_RESUME                0x00000004    /* Assert Resume Signaling */
#define BITM_USB_POWER_SUSPEND               0x00000002    /* Suspend Mode */
#define BITM_USB_POWER_SUSEN                 0x00000001    /* Enable UTMI SuspendM Output */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_INTRTX                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_INTRTX_EP11                 11
#define BITP_USB_INTRTX_EP10                 10
#define BITP_USB_INTRTX_EP9                   9
#define BITP_USB_INTRTX_EP8                   8
#define BITP_USB_INTRTX_EP7                   7
#define BITP_USB_INTRTX_EP6                   6
#define BITP_USB_INTRTX_EP5                   5
#define BITP_USB_INTRTX_EP4                   4
#define BITP_USB_INTRTX_EP3                   3
#define BITP_USB_INTRTX_EP2                   2
#define BITP_USB_INTRTX_EP1                   1
#define BITP_USB_INTRTX_EP0                   0
#define BITM_USB_INTRTX_EP11                 0x00000800
#define BITM_USB_INTRTX_EP10                 0x00000400
#define BITM_USB_INTRTX_EP9                  0x00000200
#define BITM_USB_INTRTX_EP8                  0x00000100
#define BITM_USB_INTRTX_EP7                  0x00000080
#define BITM_USB_INTRTX_EP6                  0x00000040
#define BITM_USB_INTRTX_EP5                  0x00000020
#define BITM_USB_INTRTX_EP4                  0x00000010
#define BITM_USB_INTRTX_EP3                  0x00000008
#define BITM_USB_INTRTX_EP2                  0x00000004
#define BITM_USB_INTRTX_EP1                  0x00000002
#define BITM_USB_INTRTX_EP0                  0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_INTRRX                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_INTRRX_EP11                 11
#define BITP_USB_INTRRX_EP10                 10
#define BITP_USB_INTRRX_EP9                   9
#define BITP_USB_INTRRX_EP8                   8
#define BITP_USB_INTRRX_EP7                   7
#define BITP_USB_INTRRX_EP6                   6
#define BITP_USB_INTRRX_EP5                   5
#define BITP_USB_INTRRX_EP4                   4
#define BITP_USB_INTRRX_EP3                   3
#define BITP_USB_INTRRX_EP2                   2
#define BITP_USB_INTRRX_EP1                   1
#define BITM_USB_INTRRX_EP11                 0x00000800
#define BITM_USB_INTRRX_EP10                 0x00000400
#define BITM_USB_INTRRX_EP9                  0x00000200
#define BITM_USB_INTRRX_EP8                  0x00000100
#define BITM_USB_INTRRX_EP7                  0x00000080
#define BITM_USB_INTRRX_EP6                  0x00000040
#define BITM_USB_INTRRX_EP5                  0x00000020
#define BITM_USB_INTRRX_EP4                  0x00000010
#define BITM_USB_INTRRX_EP3                  0x00000008
#define BITM_USB_INTRRX_EP2                  0x00000004
#define BITM_USB_INTRRX_EP1                  0x00000002

/* ------------------------------------------------------------------------------------------------------------------------
        USB_INTRTXE                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_INTRTXE_EP11                11
#define BITP_USB_INTRTXE_EP10                10
#define BITP_USB_INTRTXE_EP9                  9
#define BITP_USB_INTRTXE_EP8                  8
#define BITP_USB_INTRTXE_EP7                  7
#define BITP_USB_INTRTXE_EP6                  6
#define BITP_USB_INTRTXE_EP5                  5
#define BITP_USB_INTRTXE_EP4                  4
#define BITP_USB_INTRTXE_EP3                  3
#define BITP_USB_INTRTXE_EP2                  2
#define BITP_USB_INTRTXE_EP1                  1
#define BITP_USB_INTRTXE_EP0                  0
#define BITM_USB_INTRTXE_EP11                0x00000800
#define BITM_USB_INTRTXE_EP10                0x00000400
#define BITM_USB_INTRTXE_EP9                 0x00000200
#define BITM_USB_INTRTXE_EP8                 0x00000100
#define BITM_USB_INTRTXE_EP7                 0x00000080
#define BITM_USB_INTRTXE_EP6                 0x00000040
#define BITM_USB_INTRTXE_EP5                 0x00000020
#define BITM_USB_INTRTXE_EP4                 0x00000010
#define BITM_USB_INTRTXE_EP3                 0x00000008
#define BITM_USB_INTRTXE_EP2                 0x00000004
#define BITM_USB_INTRTXE_EP1                 0x00000002
#define BITM_USB_INTRTXE_EP0                 0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_INTRRXE                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_INTRRXE_EP11                11
#define BITP_USB_INTRRXE_EP10                10
#define BITP_USB_INTRRXE_EP9                  9
#define BITP_USB_INTRRXE_EP8                  8
#define BITP_USB_INTRRXE_EP7                  7
#define BITP_USB_INTRRXE_EP6                  6
#define BITP_USB_INTRRXE_EP5                  5
#define BITP_USB_INTRRXE_EP4                  4
#define BITP_USB_INTRRXE_EP3                  3
#define BITP_USB_INTRRXE_EP2                  2
#define BITP_USB_INTRRXE_EP1                  1
#define BITM_USB_INTRRXE_EP11                0x00000800
#define BITM_USB_INTRRXE_EP10                0x00000400
#define BITM_USB_INTRRXE_EP9                 0x00000200
#define BITM_USB_INTRRXE_EP8                 0x00000100
#define BITM_USB_INTRRXE_EP7                 0x00000080
#define BITM_USB_INTRRXE_EP6                 0x00000040
#define BITM_USB_INTRRXE_EP5                 0x00000020
#define BITM_USB_INTRRXE_EP4                 0x00000010
#define BITM_USB_INTRRXE_EP3                 0x00000008
#define BITM_USB_INTRRXE_EP2                 0x00000004
#define BITM_USB_INTRRXE_EP1                 0x00000002

/* ------------------------------------------------------------------------------------------------------------------------
        USB_IRQ                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_IRQ_VBUSERR                  7            /* VBus Error */
#define BITP_USB_IRQ_SESSREQ                  6            /* Session Request */
#define BITP_USB_IRQ_DISCON                   5            /* Device Disconnect */
#define BITP_USB_IRQ_CON                      4            /* Device Connection */
#define BITP_USB_IRQ_SOF                      3            /* Start of Frame */
#define BITP_USB_IRQ_RSTBABBLE                2            /* Reset/Babble Detection */
#define BITP_USB_IRQ_RESUME                   1            /* Resume Signaling Detection */
#define BITP_USB_IRQ_SUSPEND                  0            /* Suspend Signaling Detection */
#define BITM_USB_IRQ_VBUSERR                 0x00000080    /* VBus Error */
#define BITM_USB_IRQ_SESSREQ                 0x00000040    /* Session Request */
#define BITM_USB_IRQ_DISCON                  0x00000020    /* Device Disconnect */
#define BITM_USB_IRQ_CON                     0x00000010    /* Device Connection */
#define BITM_USB_IRQ_SOF                     0x00000008    /* Start of Frame */
#define BITM_USB_IRQ_RSTBABBLE               0x00000004    /* Reset/Babble Detection */
#define BITM_USB_IRQ_RESUME                  0x00000002    /* Resume Signaling Detection */
#define BITM_USB_IRQ_SUSPEND                 0x00000001    /* Suspend Signaling Detection */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_IEN                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_IEN_VBUSERR                  7
#define BITP_USB_IEN_SESSREQ                  6
#define BITP_USB_IEN_DISCON                   5
#define BITP_USB_IEN_CON                      4
#define BITP_USB_IEN_SOF                      3
#define BITP_USB_IEN_RSTBABBLE                2
#define BITP_USB_IEN_RESUME                   1
#define BITP_USB_IEN_SUSPEND                  0
#define BITM_USB_IEN_VBUSERR                 0x00000080
#define BITM_USB_IEN_SESSREQ                 0x00000040
#define BITM_USB_IEN_DISCON                  0x00000020
#define BITM_USB_IEN_CON                     0x00000010
#define BITM_USB_IEN_SOF                     0x00000008
#define BITM_USB_IEN_RSTBABBLE               0x00000004
#define BITM_USB_IEN_RESUME                  0x00000002
#define BITM_USB_IEN_SUSPEND                 0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_FRAME                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_FRAME_VALUE                  0            /* Frame Number */
#define BITM_USB_FRAME_VALUE                 0x000007FF    /* Frame Number */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_INDEX                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_INDEX_EP                     0            /* Endpoint */
#define BITM_USB_INDEX_EP                    0x0000000F    /* Endpoint */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TESTMODE                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TESTMODE_FORCEHOST           7            /* Force Host */
#define BITP_USB_TESTMODE_FIFOACCESS          6            /* FIFO Access */
#define BITP_USB_TESTMODE_FORCEFS             5            /* Force FS */
#define BITP_USB_TESTMODE_FORCEHS             4            /* Force HS */
#define BITP_USB_TESTMODE_TESTPACKET          3            /* Test Packet */
#define BITP_USB_TESTMODE_TESTK               2            /* Test K */
#define BITP_USB_TESTMODE_TESTJ               1            /* Test J */
#define BITP_USB_TESTMODE_TESTSE0NAK          0            /* Test SE0 NAK */
#define BITM_USB_TESTMODE_FORCEHOST          0x00000080    /* Force Host */
#define BITM_USB_TESTMODE_FIFOACCESS         0x00000040    /* FIFO Access */
#define BITM_USB_TESTMODE_FORCEFS            0x00000020    /* Force FS */
#define BITM_USB_TESTMODE_FORCEHS            0x00000010    /* Force HS */
#define BITM_USB_TESTMODE_TESTPACKET         0x00000008    /* Test Packet */
#define BITM_USB_TESTMODE_TESTK              0x00000004    /* Test K */
#define BITM_USB_TESTMODE_TESTJ              0x00000002    /* Test J */
#define BITM_USB_TESTMODE_TESTSE0NAK         0x00000001    /* Test SE0 NAK */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_TXMAXP                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_TXMAXP_MULTM1           11            /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be sent in a microframe */
#define BITP_USB_EPI_TXMAXP_MAXPAY            0            /* Maximum number of bytes that may be transferred per transaction */
#define BITM_USB_EPI_TXMAXP_MULTM1           0x00001800    /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be sent in a microframe */
#define BITM_USB_EPI_TXMAXP_MAXPAY           0x000007FF    /* Maximum number of bytes that may be transferred per transaction */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0I_CSR_H                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0I_CSR_H_DISPING          11
#define BITP_USB_EP0I_CSR_H_DATGLEN          10
#define BITP_USB_EP0I_CSR_H_DATGL             9
#define BITP_USB_EP0I_CSR_H_FLUSHFIFO         8
#define BITP_USB_EP0I_CSR_H_NAKTO             7
#define BITP_USB_EP0I_CSR_H_STATUSPKT         6
#define BITP_USB_EP0I_CSR_H_REQPKT            5
#define BITP_USB_EP0I_CSR_H_TOERR             4
#define BITP_USB_EP0I_CSR_H_SETUPPKT          3
#define BITP_USB_EP0I_CSR_H_RXSTALL           2
#define BITP_USB_EP0I_CSR_H_TXPKTRDY          1
#define BITP_USB_EP0I_CSR_H_RXPKTRDY          0
#define BITM_USB_EP0I_CSR_H_DISPING          0x00000800
#define BITM_USB_EP0I_CSR_H_DATGLEN          0x00000400
#define BITM_USB_EP0I_CSR_H_DATGL            0x00000200
#define BITM_USB_EP0I_CSR_H_FLUSHFIFO        0x00000100
#define BITM_USB_EP0I_CSR_H_NAKTO            0x00000080
#define BITM_USB_EP0I_CSR_H_STATUSPKT        0x00000040
#define BITM_USB_EP0I_CSR_H_REQPKT           0x00000020
#define BITM_USB_EP0I_CSR_H_TOERR            0x00000010
#define BITM_USB_EP0I_CSR_H_SETUPPKT         0x00000008
#define BITM_USB_EP0I_CSR_H_RXSTALL          0x00000004
#define BITM_USB_EP0I_CSR_H_TXPKTRDY         0x00000002
#define BITM_USB_EP0I_CSR_H_RXPKTRDY         0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_TXCSR_H                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_TXCSR_H_AUTOSET         15
#define BITP_USB_EPI_TXCSR_H_DMAREQEN        12
#define BITP_USB_EPI_TXCSR_H_FRCDATATGL      11
#define BITP_USB_EPI_TXCSR_H_DMAREQMODE      10
#define BITP_USB_EPI_TXCSR_H_DATGLEN          9
#define BITP_USB_EPI_TXCSR_H_DATGL            8
#define BITP_USB_EPI_TXCSR_H_NAKTOINCMP       7
#define BITP_USB_EPI_TXCSR_H_CLRDATATGL       6
#define BITP_USB_EPI_TXCSR_H_RXSTALL          5
#define BITP_USB_EPI_TXCSR_H_SETUPPKT         4
#define BITP_USB_EPI_TXCSR_H_FLUSHFIFO        3
#define BITP_USB_EPI_TXCSR_H_TXTOERR          2
#define BITP_USB_EPI_TXCSR_H_NEFIFO           1
#define BITP_USB_EPI_TXCSR_H_TXPKTRDY         0
#define BITM_USB_EPI_TXCSR_H_AUTOSET         0x00008000
#define BITM_USB_EPI_TXCSR_H_DMAREQEN        0x00001000
#define BITM_USB_EPI_TXCSR_H_FRCDATATGL      0x00000800
#define BITM_USB_EPI_TXCSR_H_DMAREQMODE      0x00000400
#define BITM_USB_EPI_TXCSR_H_DATGLEN         0x00000200
#define BITM_USB_EPI_TXCSR_H_DATGL           0x00000100
#define BITM_USB_EPI_TXCSR_H_NAKTOINCMP      0x00000080
#define BITM_USB_EPI_TXCSR_H_CLRDATATGL      0x00000040
#define BITM_USB_EPI_TXCSR_H_RXSTALL         0x00000020
#define BITM_USB_EPI_TXCSR_H_SETUPPKT        0x00000010
#define BITM_USB_EPI_TXCSR_H_FLUSHFIFO       0x00000008
#define BITM_USB_EPI_TXCSR_H_TXTOERR         0x00000004
#define BITM_USB_EPI_TXCSR_H_NEFIFO          0x00000002
#define BITM_USB_EPI_TXCSR_H_TXPKTRDY        0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0I_CSR_P                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0I_CSR_P_FLUSHFIFO         8
#define BITP_USB_EP0I_CSR_P_SSETUPEND         7
#define BITP_USB_EP0I_CSR_P_SPKTRDY           6
#define BITP_USB_EP0I_CSR_P_SENDSTALL         5
#define BITP_USB_EP0I_CSR_P_SETUPEND          4
#define BITP_USB_EP0I_CSR_P_DATAEND           3
#define BITP_USB_EP0I_CSR_P_SENTSTALL         2
#define BITP_USB_EP0I_CSR_P_TXPKTRDY          1
#define BITP_USB_EP0I_CSR_P_RXPKTRDY          0
#define BITM_USB_EP0I_CSR_P_FLUSHFIFO        0x00000100
#define BITM_USB_EP0I_CSR_P_SSETUPEND        0x00000080
#define BITM_USB_EP0I_CSR_P_SPKTRDY          0x00000040
#define BITM_USB_EP0I_CSR_P_SENDSTALL        0x00000020
#define BITM_USB_EP0I_CSR_P_SETUPEND         0x00000010
#define BITM_USB_EP0I_CSR_P_DATAEND          0x00000008
#define BITM_USB_EP0I_CSR_P_SENTSTALL        0x00000004
#define BITM_USB_EP0I_CSR_P_TXPKTRDY         0x00000002
#define BITM_USB_EP0I_CSR_P_RXPKTRDY         0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_TXCSR_P                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_TXCSR_P_AUTOSET         15
#define BITP_USB_EPI_TXCSR_P_ISO             14
#define BITP_USB_EPI_TXCSR_P_DMAREQEN        12
#define BITP_USB_EPI_TXCSR_P_FRCDATATGL      11
#define BITP_USB_EPI_TXCSR_P_DMAREQMODE      10
#define BITP_USB_EPI_TXCSR_P_INCOMPTX         7
#define BITP_USB_EPI_TXCSR_P_CLRDATATGL       6
#define BITP_USB_EPI_TXCSR_P_SENTSTALL        5
#define BITP_USB_EPI_TXCSR_P_SENDSTALL        4
#define BITP_USB_EPI_TXCSR_P_FLUSHFIFO        3
#define BITP_USB_EPI_TXCSR_P_URUNERR          2
#define BITP_USB_EPI_TXCSR_P_NEFIFO           1
#define BITP_USB_EPI_TXCSR_P_TXPKTRDY         0
#define BITM_USB_EPI_TXCSR_P_AUTOSET         0x00008000
#define BITM_USB_EPI_TXCSR_P_ISO             0x00004000
#define BITM_USB_EPI_TXCSR_P_DMAREQEN        0x00001000
#define BITM_USB_EPI_TXCSR_P_FRCDATATGL      0x00000800
#define BITM_USB_EPI_TXCSR_P_DMAREQMODE      0x00000400
#define BITM_USB_EPI_TXCSR_P_INCOMPTX        0x00000080
#define BITM_USB_EPI_TXCSR_P_CLRDATATGL      0x00000040
#define BITM_USB_EPI_TXCSR_P_SENTSTALL       0x00000020
#define BITM_USB_EPI_TXCSR_P_SENDSTALL       0x00000010
#define BITM_USB_EPI_TXCSR_P_FLUSHFIFO       0x00000008
#define BITM_USB_EPI_TXCSR_P_URUNERR         0x00000004
#define BITM_USB_EPI_TXCSR_P_NEFIFO          0x00000002
#define BITM_USB_EPI_TXCSR_P_TXPKTRDY        0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_RXMAXP                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_RXMAXP_MULTM1           11            /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be received in a microframe */
#define BITP_USB_EPI_RXMAXP_MAXPAY            0            /* Maximum number of bytes that may be transferred per transaction */
#define BITM_USB_EPI_RXMAXP_MULTM1           0x00001800    /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be received in a microframe */
#define BITM_USB_EPI_RXMAXP_MAXPAY           0x000007FF    /* Maximum number of bytes that may be transferred per transaction */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_RXCSR_H                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_RXCSR_H_AUTOCLR         15
#define BITP_USB_EPI_RXCSR_H_AUTOREQ         14
#define BITP_USB_EPI_RXCSR_H_DMAREQEN        13
#define BITP_USB_EPI_RXCSR_H_PIDERR          12
#define BITP_USB_EPI_RXCSR_H_DMAREQMODE      11
#define BITP_USB_EPI_RXCSR_H_DATGLEN         10
#define BITP_USB_EPI_RXCSR_H_DATGL            9
#define BITP_USB_EPI_RXCSR_H_INCOMPRX         8
#define BITP_USB_EPI_RXCSR_H_CLRDATATGL       7
#define BITP_USB_EPI_RXCSR_H_RXSTALL          6
#define BITP_USB_EPI_RXCSR_H_REQPKT           5
#define BITP_USB_EPI_RXCSR_H_FLUSHFIFO        4
#define BITP_USB_EPI_RXCSR_H_NAKTODERR        3
#define BITP_USB_EPI_RXCSR_H_RXTOERR          2
#define BITP_USB_EPI_RXCSR_H_FIFOFULL         1
#define BITP_USB_EPI_RXCSR_H_RXPKTRDY         0
#define BITM_USB_EPI_RXCSR_H_AUTOCLR         0x00008000
#define BITM_USB_EPI_RXCSR_H_AUTOREQ         0x00004000
#define BITM_USB_EPI_RXCSR_H_DMAREQEN        0x00002000
#define BITM_USB_EPI_RXCSR_H_PIDERR          0x00001000
#define BITM_USB_EPI_RXCSR_H_DMAREQMODE      0x00000800
#define BITM_USB_EPI_RXCSR_H_DATGLEN         0x00000400
#define BITM_USB_EPI_RXCSR_H_DATGL           0x00000200
#define BITM_USB_EPI_RXCSR_H_INCOMPRX        0x00000100
#define BITM_USB_EPI_RXCSR_H_CLRDATATGL      0x00000080
#define BITM_USB_EPI_RXCSR_H_RXSTALL         0x00000040
#define BITM_USB_EPI_RXCSR_H_REQPKT          0x00000020
#define BITM_USB_EPI_RXCSR_H_FLUSHFIFO       0x00000010
#define BITM_USB_EPI_RXCSR_H_NAKTODERR       0x00000008
#define BITM_USB_EPI_RXCSR_H_RXTOERR         0x00000004
#define BITM_USB_EPI_RXCSR_H_FIFOFULL        0x00000002
#define BITM_USB_EPI_RXCSR_H_RXPKTRDY        0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_RXCSR_P                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_RXCSR_P_AUTOCLR         15
#define BITP_USB_EPI_RXCSR_P_ISO             14
#define BITP_USB_EPI_RXCSR_P_DMAREQEN        13
#define BITP_USB_EPI_RXCSR_P_DNYETPERR       12
#define BITP_USB_EPI_RXCSR_P_DMAREQMODE      11
#define BITP_USB_EPI_RXCSR_P_INCOMPRX         8
#define BITP_USB_EPI_RXCSR_P_CLRDATATGL       7
#define BITP_USB_EPI_RXCSR_P_SENTSTALL        6
#define BITP_USB_EPI_RXCSR_P_SENDSTALL        5
#define BITP_USB_EPI_RXCSR_P_FLUSHFIFO        4
#define BITP_USB_EPI_RXCSR_P_DATAERR          3
#define BITP_USB_EPI_RXCSR_P_ORUNERR          2
#define BITP_USB_EPI_RXCSR_P_FIFOFULL         1
#define BITP_USB_EPI_RXCSR_P_RXPKTRDY         0
#define BITM_USB_EPI_RXCSR_P_AUTOCLR         0x00008000
#define BITM_USB_EPI_RXCSR_P_ISO             0x00004000
#define BITM_USB_EPI_RXCSR_P_DMAREQEN        0x00002000
#define BITM_USB_EPI_RXCSR_P_DNYETPERR       0x00001000
#define BITM_USB_EPI_RXCSR_P_DMAREQMODE      0x00000800
#define BITM_USB_EPI_RXCSR_P_INCOMPRX        0x00000100
#define BITM_USB_EPI_RXCSR_P_CLRDATATGL      0x00000080
#define BITM_USB_EPI_RXCSR_P_SENTSTALL       0x00000040
#define BITM_USB_EPI_RXCSR_P_SENDSTALL       0x00000020
#define BITM_USB_EPI_RXCSR_P_FLUSHFIFO       0x00000010
#define BITM_USB_EPI_RXCSR_P_DATAERR         0x00000008
#define BITM_USB_EPI_RXCSR_P_ORUNERR         0x00000004
#define BITM_USB_EPI_RXCSR_P_FIFOFULL        0x00000002
#define BITM_USB_EPI_RXCSR_P_RXPKTRDY        0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0I_CNT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0I_CNT_RXCNT               0
#define BITM_USB_EP0I_CNT_RXCNT              0x0000007F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_RXCNT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_RXCNT_EPRXCNT            0
#define BITM_USB_EPI_RXCNT_EPRXCNT           0x00003FFF

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0I_TYPE                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0I_TYPE_SPEED              0            /* Operating speed of the device */
#define BITM_USB_EP0I_TYPE_SPEED             0x00000003    /* Operating speed of the device */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_TXTYPE                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_TXTYPE_SPEED             6            /* The operating speed of the target peripheral device */
#define BITP_USB_EPI_TXTYPE_PROTOCOL          4            /* Protocol */
#define BITP_USB_EPI_TXTYPE_TGTEP             0            /* Target Endpoint Number */
#define BITM_USB_EPI_TXTYPE_SPEED            0x000000C0    /* The operating speed of the target peripheral device */
#define BITM_USB_EPI_TXTYPE_PROTOCOL         0x00000030    /* Protocol */
#define BITM_USB_EPI_TXTYPE_TGTEP            0x0000000F    /* Target Endpoint Number */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0I_NAKLIMIT                    Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0I_NAKLIMIT_VALUE          0
#define BITM_USB_EP0I_NAKLIMIT_VALUE         0x0000001F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPI_RXTYPE                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPI_RXTYPE_SPEED             6            /* Operating speed of the target peripheral device */
#define BITP_USB_EPI_RXTYPE_PROTOCOL          4            /* Protocol */
#define BITP_USB_EPI_RXTYPE_TGTEP             0            /* Target Endpoint Number */
#define BITM_USB_EPI_RXTYPE_SPEED            0x000000C0    /* Operating speed of the target peripheral device */
#define BITM_USB_EPI_RXTYPE_PROTOCOL         0x00000030    /* Protocol */
#define BITM_USB_EPI_RXTYPE_TGTEP            0x0000000F    /* Target Endpoint Number */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0I_CFGDATA                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0I_CFGDATA_MPRX            7            /* Automatic Splitting of Received Bulk Packets */
#define BITP_USB_EP0I_CFGDATA_MPTX            6            /* Automatic Splitting of Transmitted Bulk Packets */
#define BITP_USB_EP0I_CFGDATA_BIGEND          5            /* Big Endian Configuration */
#define BITP_USB_EP0I_CFGDATA_HBRX            4            /* High Bandwidth Rx ISO Endpoint Support */
#define BITP_USB_EP0I_CFGDATA_HBTX            3            /* High Bandwidth Tx ISO Endpoint Support */
#define BITP_USB_EP0I_CFGDATA_DYNFIFO         2            /* Dynamic FIFO Sizing */
#define BITP_USB_EP0I_CFGDATA_SOFTCON         1            /* Soft Connect Enable */
#define BITP_USB_EP0I_CFGDATA_UTMIWID         0            /* UTMI Data Width */
#define BITM_USB_EP0I_CFGDATA_MPRX           0x00000080    /* Automatic Splitting of Received Bulk Packets */
#define BITM_USB_EP0I_CFGDATA_MPTX           0x00000040    /* Automatic Splitting of Transmitted Bulk Packets */
#define BITM_USB_EP0I_CFGDATA_BIGEND         0x00000020    /* Big Endian Configuration */
#define BITM_USB_EP0I_CFGDATA_HBRX           0x00000010    /* High Bandwidth Rx ISO Endpoint Support */
#define BITM_USB_EP0I_CFGDATA_HBTX           0x00000008    /* High Bandwidth Tx ISO Endpoint Support */
#define BITM_USB_EP0I_CFGDATA_DYNFIFO        0x00000004    /* Dynamic FIFO Sizing */
#define BITM_USB_EP0I_CFGDATA_SOFTCON        0x00000002    /* Soft Connect Enable */
#define BITM_USB_EP0I_CFGDATA_UTMIWID        0x00000001    /* UTMI Data Width */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_DEV_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_DEV_CTL_BDEVICE              7            /* Controller Device Type */
#define BITP_USB_DEV_CTL_FSDEV                6            /* Full or High Speed Device Detect */
#define BITP_USB_DEV_CTL_LSDEV                5            /* Low Speed Device Detect */
#define BITP_USB_DEV_CTL_VBUS                 3            /* VBus Level */
#define BITP_USB_DEV_CTL_HOSTMODE             2            /* Host Mode */
#define BITP_USB_DEV_CTL_HOSTREQ              1            /* Host Negotiation */
#define BITP_USB_DEV_CTL_SESSION              0
#define BITM_USB_DEV_CTL_BDEVICE             0x00000080    /* Controller Device Type */
#define BITM_USB_DEV_CTL_FSDEV               0x00000040    /* Full or High Speed Device Detect */
#define BITM_USB_DEV_CTL_LSDEV               0x00000020    /* Low Speed Device Detect */
#define BITM_USB_DEV_CTL_VBUS                0x00000018    /* VBus Level */
#define BITM_USB_DEV_CTL_HOSTMODE            0x00000004    /* Host Mode */
#define BITM_USB_DEV_CTL_HOSTREQ             0x00000002    /* Host Negotiation */
#define BITM_USB_DEV_CTL_SESSION             0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TXFIFOSZ                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TXFIFOSZ_DPB                 4            /* Enables Double Packet Buffering */
#define BITP_USB_TXFIFOSZ_SZ                  0            /* Maximum Packet Size */
#define BITM_USB_TXFIFOSZ_DPB                0x00000010    /* Enables Double Packet Buffering */
#define BITM_USB_TXFIFOSZ_SZ                 0x0000000F    /* Maximum Packet Size */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_RXFIFOSZ                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_RXFIFOSZ_DPB                 4            /* Enables Double Packet Buffering */
#define BITP_USB_RXFIFOSZ_SZ                  0            /* Maximum Packet Size */
#define BITM_USB_RXFIFOSZ_DPB                0x00000010    /* Enables Double Packet Buffering */
#define BITM_USB_RXFIFOSZ_SZ                 0x0000000F    /* Maximum Packet Size */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TXFIFOADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TXFIFOADDR_VALUE             0
#define BITM_USB_TXFIFOADDR_VALUE            0x00001FFF

/* ------------------------------------------------------------------------------------------------------------------------
        USB_RXFIFOADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_RXFIFOADDR_VALUE             0
#define BITM_USB_RXFIFOADDR_VALUE            0x00000FFF

/* ------------------------------------------------------------------------------------------------------------------------
        USB_VENDSTAT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_VENDSTAT_VSTATUS             0
#define BITM_USB_VENDSTAT_VSTATUS            0x0000000F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_HWVERS                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_HWVERS_RC                   15            /* Release Candidate */
#define BITP_USB_HWVERS_MAJOR                10            /* Major version number */
#define BITP_USB_HWVERS_MINOR                 0            /* Minor version number */
#define BITM_USB_HWVERS_RC                   0x00008000    /* Release Candidate */
#define BITM_USB_HWVERS_MAJOR                0x00007C00    /* Major version number */
#define BITM_USB_HWVERS_MINOR                0x000003FF    /* Minor version number */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EPINFO                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EPINFO_RXEP                  4            /* Number of RX endpoints excluding EP0 */
#define BITP_USB_EPINFO_TXEP                  0            /* Number of TX endpoints excluding EP0 */
#define BITM_USB_EPINFO_RXEP                 0x000000F0    /* Number of RX endpoints excluding EP0 */
#define BITM_USB_EPINFO_TXEP                 0x0000000F    /* Number of TX endpoints excluding EP0 */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_RAMINFO                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_RAMINFO_DMACHANS             4            /* Number of DMA Channels */
#define BITP_USB_RAMINFO_RAMBITS              0            /* Number of RAM Address Bits */
#define BITM_USB_RAMINFO_DMACHANS            0x000000F0    /* Number of DMA Channels */
#define BITM_USB_RAMINFO_RAMBITS             0x0000000F    /* Number of RAM Address Bits */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_LINKINFO                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_LINKINFO_WTCON               4
#define BITP_USB_LINKINFO_WTID                0
#define BITM_USB_LINKINFO_WTCON              0x000000F0
#define BITM_USB_LINKINFO_WTID               0x0000000F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_SOFT_RST                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_SOFT_RST_RSTX                1
#define BITP_USB_SOFT_RST_RST                 0
#define BITM_USB_SOFT_RST_RSTX               0x00000002
#define BITM_USB_SOFT_RST_RST                0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TXFUNCADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TXFUNCADDR_VALUE             0            /* Address of target device for this endpoint */
#define BITM_USB_TXFUNCADDR_VALUE            0x0000007F    /* Address of target device for this endpoint */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TXHUBADDR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TXHUBADDR_MULTTRANS          7            /* Multiple Transaction Translators */
#define BITP_USB_TXHUBADDR_ADDR               0            /* Address of the hub which this device is connected */
#define BITM_USB_TXHUBADDR_MULTTRANS         0x00000080    /* Multiple Transaction Translators */
#define BITM_USB_TXHUBADDR_ADDR              0x0000007F    /* Address of the hub which this device is connected */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TXHUBPORT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TXHUBPORT_VALUE              0            /* Hub port of target device for this endpoint */
#define BITM_USB_TXHUBPORT_VALUE             0x0000007F    /* Hub port of target device for this endpoint */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_RXFUNCADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_RXFUNCADDR_VALUE             0            /* Address of target device for this endpoint */
#define BITM_USB_RXFUNCADDR_VALUE            0x0000007F    /* Address of target device for this endpoint */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_RXHUBADDR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_RXHUBADDR_MULTTRANS          7            /* Multiple Transaction translators */
#define BITP_USB_RXHUBADDR_ADDR               0            /* Address of the hub which this device is connected */
#define BITM_USB_RXHUBADDR_MULTTRANS         0x00000080    /* Multiple Transaction translators */
#define BITM_USB_RXHUBADDR_ADDR              0x0000007F    /* Address of the hub which this device is connected */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_RXHUBPORT                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_RXHUBPORT_VALUE              0            /* Hub port of target device for this endpoint */
#define BITM_USB_RXHUBPORT_VALUE             0x0000007F    /* Hub port of target device for this endpoint */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0_CSR_H                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0_CSR_H_DISPING           11
#define BITP_USB_EP0_CSR_H_DATGLEN           10
#define BITP_USB_EP0_CSR_H_DATGL              9
#define BITP_USB_EP0_CSR_H_FLUSHFIFO          8
#define BITP_USB_EP0_CSR_H_NAKTO              7
#define BITP_USB_EP0_CSR_H_STATUSPKT          6
#define BITP_USB_EP0_CSR_H_REQPKT             5
#define BITP_USB_EP0_CSR_H_TOERR              4
#define BITP_USB_EP0_CSR_H_SETUPPKT           3
#define BITP_USB_EP0_CSR_H_RXSTALL            2
#define BITP_USB_EP0_CSR_H_TXPKTRDY           1
#define BITP_USB_EP0_CSR_H_RXPKTRDY           0
#define BITM_USB_EP0_CSR_H_DISPING           0x00000800
#define BITM_USB_EP0_CSR_H_DATGLEN           0x00000400
#define BITM_USB_EP0_CSR_H_DATGL             0x00000200
#define BITM_USB_EP0_CSR_H_FLUSHFIFO         0x00000100
#define BITM_USB_EP0_CSR_H_NAKTO             0x00000080
#define BITM_USB_EP0_CSR_H_STATUSPKT         0x00000040
#define BITM_USB_EP0_CSR_H_REQPKT            0x00000020
#define BITM_USB_EP0_CSR_H_TOERR             0x00000010
#define BITM_USB_EP0_CSR_H_SETUPPKT          0x00000008
#define BITM_USB_EP0_CSR_H_RXSTALL           0x00000004
#define BITM_USB_EP0_CSR_H_TXPKTRDY          0x00000002
#define BITM_USB_EP0_CSR_H_RXPKTRDY          0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0_CSR_P                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0_CSR_P_FLUSHFIFO          8
#define BITP_USB_EP0_CSR_P_SSETUPEND          7
#define BITP_USB_EP0_CSR_P_SPKTRDY            6
#define BITP_USB_EP0_CSR_P_SENDSTALL          5
#define BITP_USB_EP0_CSR_P_SETUPEND           4
#define BITP_USB_EP0_CSR_P_DATAEND            3
#define BITP_USB_EP0_CSR_P_SENTSTALL          2
#define BITP_USB_EP0_CSR_P_TXPKTRDY           1
#define BITP_USB_EP0_CSR_P_RXPKTRDY           0
#define BITM_USB_EP0_CSR_P_FLUSHFIFO         0x00000100
#define BITM_USB_EP0_CSR_P_SSETUPEND         0x00000080
#define BITM_USB_EP0_CSR_P_SPKTRDY           0x00000040
#define BITM_USB_EP0_CSR_P_SENDSTALL         0x00000020
#define BITM_USB_EP0_CSR_P_SETUPEND          0x00000010
#define BITM_USB_EP0_CSR_P_DATAEND           0x00000008
#define BITM_USB_EP0_CSR_P_SENTSTALL         0x00000004
#define BITM_USB_EP0_CSR_P_TXPKTRDY          0x00000002
#define BITM_USB_EP0_CSR_P_RXPKTRDY          0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0_CNT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0_CNT_RXCNT                0
#define BITM_USB_EP0_CNT_RXCNT               0x0000007F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0_TYPE                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0_TYPE_SPEED               0            /* Operating speed of the device */
#define BITM_USB_EP0_TYPE_SPEED              0x00000003    /* Operating speed of the device */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0_NAKLIMIT                     Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0_NAKLIMIT_VALUE           0
#define BITM_USB_EP0_NAKLIMIT_VALUE          0x0000001F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP0_CFGDATA                      Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP0_CFGDATA_MPRX             7            /* Automatic Splitting of Received Bulk Packets */
#define BITP_USB_EP0_CFGDATA_MPTX             6            /* Automatic Splitting of Transmitted Bulk Packets */
#define BITP_USB_EP0_CFGDATA_BIGEND           5            /* Big Endian Configuration */
#define BITP_USB_EP0_CFGDATA_HBRX             4            /* High Bandwidth Rx ISO Endpoint Support */
#define BITP_USB_EP0_CFGDATA_HBTX             3            /* High Bandwidth Tx ISO Endpoint Support */
#define BITP_USB_EP0_CFGDATA_DYNFIFO          2            /* Dynamic FIFO Sizing */
#define BITP_USB_EP0_CFGDATA_SOFTCON          1            /* Soft Connect Enable */
#define BITP_USB_EP0_CFGDATA_UTMIWID          0            /* UTMI Data Width */
#define BITM_USB_EP0_CFGDATA_MPRX            0x00000080    /* Automatic Splitting of Received Bulk Packets */
#define BITM_USB_EP0_CFGDATA_MPTX            0x00000040    /* Automatic Splitting of Transmitted Bulk Packets */
#define BITM_USB_EP0_CFGDATA_BIGEND          0x00000020    /* Big Endian Configuration */
#define BITM_USB_EP0_CFGDATA_HBRX            0x00000010    /* High Bandwidth Rx ISO Endpoint Support */
#define BITM_USB_EP0_CFGDATA_HBTX            0x00000008    /* High Bandwidth Tx ISO Endpoint Support */
#define BITM_USB_EP0_CFGDATA_DYNFIFO         0x00000004    /* Dynamic FIFO Sizing */
#define BITM_USB_EP0_CFGDATA_SOFTCON         0x00000002    /* Soft Connect Enable */
#define BITM_USB_EP0_CFGDATA_UTMIWID         0x00000001    /* UTMI Data Width */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_TXMAXP                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_TXMAXP_MULTM1            11            /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be sent in a microframe */
#define BITP_USB_EP_TXMAXP_MAXPAY             0            /* Maximum number of bytes that may be transferred per transaction */
#define BITM_USB_EP_TXMAXP_MULTM1            0x00001800    /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be sent in a microframe */
#define BITM_USB_EP_TXMAXP_MAXPAY            0x000007FF    /* Maximum number of bytes that may be transferred per transaction */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_TXCSR_H                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_TXCSR_H_AUTOSET          15
#define BITP_USB_EP_TXCSR_H_DMAREQEN         12
#define BITP_USB_EP_TXCSR_H_FRCDATATGL       11
#define BITP_USB_EP_TXCSR_H_DMAREQMODE       10
#define BITP_USB_EP_TXCSR_H_DATGLEN           9
#define BITP_USB_EP_TXCSR_H_DATGL             8
#define BITP_USB_EP_TXCSR_H_NAKTOINCMP        7
#define BITP_USB_EP_TXCSR_H_CLRDATATGL        6
#define BITP_USB_EP_TXCSR_H_RXSTALL           5
#define BITP_USB_EP_TXCSR_H_SETUPPKT          4
#define BITP_USB_EP_TXCSR_H_FLUSHFIFO         3
#define BITP_USB_EP_TXCSR_H_TXTOERR           2
#define BITP_USB_EP_TXCSR_H_NEFIFO            1
#define BITP_USB_EP_TXCSR_H_TXPKTRDY          0
#define BITM_USB_EP_TXCSR_H_AUTOSET          0x00008000
#define BITM_USB_EP_TXCSR_H_DMAREQEN         0x00001000
#define BITM_USB_EP_TXCSR_H_FRCDATATGL       0x00000800
#define BITM_USB_EP_TXCSR_H_DMAREQMODE       0x00000400
#define BITM_USB_EP_TXCSR_H_DATGLEN          0x00000200
#define BITM_USB_EP_TXCSR_H_DATGL            0x00000100
#define BITM_USB_EP_TXCSR_H_NAKTOINCMP       0x00000080
#define BITM_USB_EP_TXCSR_H_CLRDATATGL       0x00000040
#define BITM_USB_EP_TXCSR_H_RXSTALL          0x00000020
#define BITM_USB_EP_TXCSR_H_SETUPPKT         0x00000010
#define BITM_USB_EP_TXCSR_H_FLUSHFIFO        0x00000008
#define BITM_USB_EP_TXCSR_H_TXTOERR          0x00000004
#define BITM_USB_EP_TXCSR_H_NEFIFO           0x00000002
#define BITM_USB_EP_TXCSR_H_TXPKTRDY         0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_TXCSR_P                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_TXCSR_P_AUTOSET          15
#define BITP_USB_EP_TXCSR_P_ISO              14
#define BITP_USB_EP_TXCSR_P_DMAREQEN         12
#define BITP_USB_EP_TXCSR_P_FRCDATATGL       11
#define BITP_USB_EP_TXCSR_P_DMAREQMODE       10
#define BITP_USB_EP_TXCSR_P_INCOMPTX          7
#define BITP_USB_EP_TXCSR_P_CLRDATATGL        6
#define BITP_USB_EP_TXCSR_P_SENTSTALL         5
#define BITP_USB_EP_TXCSR_P_SENDSTALL         4
#define BITP_USB_EP_TXCSR_P_FLUSHFIFO         3
#define BITP_USB_EP_TXCSR_P_URUNERR           2
#define BITP_USB_EP_TXCSR_P_NEFIFO            1
#define BITP_USB_EP_TXCSR_P_TXPKTRDY          0
#define BITM_USB_EP_TXCSR_P_AUTOSET          0x00008000
#define BITM_USB_EP_TXCSR_P_ISO              0x00004000
#define BITM_USB_EP_TXCSR_P_DMAREQEN         0x00001000
#define BITM_USB_EP_TXCSR_P_FRCDATATGL       0x00000800
#define BITM_USB_EP_TXCSR_P_DMAREQMODE       0x00000400
#define BITM_USB_EP_TXCSR_P_INCOMPTX         0x00000080
#define BITM_USB_EP_TXCSR_P_CLRDATATGL       0x00000040
#define BITM_USB_EP_TXCSR_P_SENTSTALL        0x00000020
#define BITM_USB_EP_TXCSR_P_SENDSTALL        0x00000010
#define BITM_USB_EP_TXCSR_P_FLUSHFIFO        0x00000008
#define BITM_USB_EP_TXCSR_P_URUNERR          0x00000004
#define BITM_USB_EP_TXCSR_P_NEFIFO           0x00000002
#define BITM_USB_EP_TXCSR_P_TXPKTRDY         0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_RXMAXP                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_RXMAXP_MULTM1            11            /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be received in a microframe */
#define BITP_USB_EP_RXMAXP_MAXPAY             0            /* Maximum number of bytes that may be transferred per transaction */
#define BITM_USB_EP_RXMAXP_MULTM1            0x00001800    /* Number of high-speed high-bandwidth isochronous or interrupt packets that may be received in a microframe */
#define BITM_USB_EP_RXMAXP_MAXPAY            0x000007FF    /* Maximum number of bytes that may be transferred per transaction */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_RXCSR_H                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_RXCSR_H_AUTOCLR          15
#define BITP_USB_EP_RXCSR_H_AUTOREQ          14
#define BITP_USB_EP_RXCSR_H_DMAREQEN         13
#define BITP_USB_EP_RXCSR_H_PIDERR           12
#define BITP_USB_EP_RXCSR_H_DMAREQMODE       11
#define BITP_USB_EP_RXCSR_H_DATGLEN          10
#define BITP_USB_EP_RXCSR_H_DATGL             9
#define BITP_USB_EP_RXCSR_H_INCOMPRX          8
#define BITP_USB_EP_RXCSR_H_CLRDATATGL        7
#define BITP_USB_EP_RXCSR_H_RXSTALL           6
#define BITP_USB_EP_RXCSR_H_REQPKT            5
#define BITP_USB_EP_RXCSR_H_FLUSHFIFO         4
#define BITP_USB_EP_RXCSR_H_NAKTODERR         3
#define BITP_USB_EP_RXCSR_H_RXTOERR           2
#define BITP_USB_EP_RXCSR_H_FIFOFULL          1
#define BITP_USB_EP_RXCSR_H_RXPKTRDY          0
#define BITM_USB_EP_RXCSR_H_AUTOCLR          0x00008000
#define BITM_USB_EP_RXCSR_H_AUTOREQ          0x00004000
#define BITM_USB_EP_RXCSR_H_DMAREQEN         0x00002000
#define BITM_USB_EP_RXCSR_H_PIDERR           0x00001000
#define BITM_USB_EP_RXCSR_H_DMAREQMODE       0x00000800
#define BITM_USB_EP_RXCSR_H_DATGLEN          0x00000400
#define BITM_USB_EP_RXCSR_H_DATGL            0x00000200
#define BITM_USB_EP_RXCSR_H_INCOMPRX         0x00000100
#define BITM_USB_EP_RXCSR_H_CLRDATATGL       0x00000080
#define BITM_USB_EP_RXCSR_H_RXSTALL          0x00000040
#define BITM_USB_EP_RXCSR_H_REQPKT           0x00000020
#define BITM_USB_EP_RXCSR_H_FLUSHFIFO        0x00000010
#define BITM_USB_EP_RXCSR_H_NAKTODERR        0x00000008
#define BITM_USB_EP_RXCSR_H_RXTOERR          0x00000004
#define BITM_USB_EP_RXCSR_H_FIFOFULL         0x00000002
#define BITM_USB_EP_RXCSR_H_RXPKTRDY         0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_RXCSR_P                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_RXCSR_P_AUTOCLR          15
#define BITP_USB_EP_RXCSR_P_ISO              14
#define BITP_USB_EP_RXCSR_P_DMAREQEN         13
#define BITP_USB_EP_RXCSR_P_DNYETPERR        12
#define BITP_USB_EP_RXCSR_P_DMAREQMODE       11
#define BITP_USB_EP_RXCSR_P_INCOMPRX          8
#define BITP_USB_EP_RXCSR_P_CLRDATATGL        7
#define BITP_USB_EP_RXCSR_P_SENTSTALL         6
#define BITP_USB_EP_RXCSR_P_SENDSTALL         5
#define BITP_USB_EP_RXCSR_P_FLUSHFIFO         4
#define BITP_USB_EP_RXCSR_P_DATAERR           3
#define BITP_USB_EP_RXCSR_P_ORUNERR           2
#define BITP_USB_EP_RXCSR_P_FIFOFULL          1
#define BITP_USB_EP_RXCSR_P_RXPKTRDY          0
#define BITM_USB_EP_RXCSR_P_AUTOCLR          0x00008000
#define BITM_USB_EP_RXCSR_P_ISO              0x00004000
#define BITM_USB_EP_RXCSR_P_DMAREQEN         0x00002000
#define BITM_USB_EP_RXCSR_P_DNYETPERR        0x00001000
#define BITM_USB_EP_RXCSR_P_DMAREQMODE       0x00000800
#define BITM_USB_EP_RXCSR_P_INCOMPRX         0x00000100
#define BITM_USB_EP_RXCSR_P_CLRDATATGL       0x00000080
#define BITM_USB_EP_RXCSR_P_SENTSTALL        0x00000040
#define BITM_USB_EP_RXCSR_P_SENDSTALL        0x00000020
#define BITM_USB_EP_RXCSR_P_FLUSHFIFO        0x00000010
#define BITM_USB_EP_RXCSR_P_DATAERR          0x00000008
#define BITM_USB_EP_RXCSR_P_ORUNERR          0x00000004
#define BITM_USB_EP_RXCSR_P_FIFOFULL         0x00000002
#define BITM_USB_EP_RXCSR_P_RXPKTRDY         0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_RXCNT                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_RXCNT_EPRXCNT             0
#define BITM_USB_EP_RXCNT_EPRXCNT            0x00003FFF

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_TXTYPE                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_TXTYPE_SPEED              6            /* The operating speed of the target peripheral device */
#define BITP_USB_EP_TXTYPE_PROTOCOL           4            /* Protocol */
#define BITP_USB_EP_TXTYPE_TGTEP              0            /* Target Endpoint Number */
#define BITM_USB_EP_TXTYPE_SPEED             0x000000C0    /* The operating speed of the target peripheral device */
#define BITM_USB_EP_TXTYPE_PROTOCOL          0x00000030    /* Protocol */
#define BITM_USB_EP_TXTYPE_TGTEP             0x0000000F    /* Target Endpoint Number */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_EP_RXTYPE                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_EP_RXTYPE_SPEED              6            /* Operating speed of the target peripheral device */
#define BITP_USB_EP_RXTYPE_PROTOCOL           4            /* Protocol */
#define BITP_USB_EP_RXTYPE_TGTEP              0            /* Target Endpoint Number */
#define BITM_USB_EP_RXTYPE_SPEED             0x000000C0    /* Operating speed of the target peripheral device */
#define BITM_USB_EP_RXTYPE_PROTOCOL          0x00000030    /* Protocol */
#define BITM_USB_EP_RXTYPE_TGTEP             0x0000000F    /* Target Endpoint Number */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_DMA_IRQ                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_DMA_IRQ_D7                   7
#define BITP_USB_DMA_IRQ_D6                   6
#define BITP_USB_DMA_IRQ_D5                   5
#define BITP_USB_DMA_IRQ_D4                   4
#define BITP_USB_DMA_IRQ_D3                   3
#define BITP_USB_DMA_IRQ_D2                   2
#define BITP_USB_DMA_IRQ_D1                   1
#define BITP_USB_DMA_IRQ_D0                   0
#define BITM_USB_DMA_IRQ_D7                  0x00000080
#define BITM_USB_DMA_IRQ_D6                  0x00000040
#define BITM_USB_DMA_IRQ_D5                  0x00000020
#define BITM_USB_DMA_IRQ_D4                  0x00000010
#define BITM_USB_DMA_IRQ_D3                  0x00000008
#define BITM_USB_DMA_IRQ_D2                  0x00000004
#define BITM_USB_DMA_IRQ_D1                  0x00000002
#define BITM_USB_DMA_IRQ_D0                  0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_DMA_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_DMA_CTL_BRSTM                9            /* Burst Mode */
#define BITP_USB_DMA_CTL_ERR                  8            /* Bus Error */
#define BITP_USB_DMA_CTL_EP                   4            /* DMA Endpoint Assignment */
#define BITP_USB_DMA_CTL_IE                   3            /* DMA Interrupt Enable */
#define BITP_USB_DMA_CTL_MODE                 2            /* DMA Mode */
#define BITP_USB_DMA_CTL_DIR                  1            /* DMA Transfer Direction */
#define BITP_USB_DMA_CTL_EN                   0            /* DMA Enable */
#define BITM_USB_DMA_CTL_BRSTM               0x00000600    /* Burst Mode */
#define BITM_USB_DMA_CTL_ERR                 0x00000100    /* Bus Error */
#define BITM_USB_DMA_CTL_EP                  0x000000F0    /* DMA Endpoint Assignment */
#define BITM_USB_DMA_CTL_IE                  0x00000008    /* DMA Interrupt Enable */
#define BITM_USB_DMA_CTL_MODE                0x00000004    /* DMA Mode */
#define BITM_USB_DMA_CTL_DIR                 0x00000002    /* DMA Transfer Direction */
#define BITM_USB_DMA_CTL_EN                  0x00000001    /* DMA Enable */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_CT_UCH                           Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_CT_UCH_VALUE                 0
#define BITM_USB_CT_UCH_VALUE                0x00007FFF

/* ------------------------------------------------------------------------------------------------------------------------
        USB_CT_HHSRTN                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_CT_HHSRTN_VALUE              0
#define BITM_USB_CT_HHSRTN_VALUE             0x00007FFF

/* ------------------------------------------------------------------------------------------------------------------------
        USB_CT_HSBT                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_CT_HSBT_VALUE                0            /* HS Timeout Adder */
#define BITM_USB_CT_HSBT_VALUE               0x0000000F    /* HS Timeout Adder */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_LPM_ATTR                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_LPM_ATTR_EP                 12            /* Endpoint */
#define BITP_USB_LPM_ATTR_RMTWAK              8            /* Remote Wakeup Enable */
#define BITP_USB_LPM_ATTR_HIRD                4            /* Host Initiated Resume Duration */
#define BITP_USB_LPM_ATTR_LINKSTATE           0
#define BITM_USB_LPM_ATTR_EP                 0x0000F000    /* Endpoint */
#define BITM_USB_LPM_ATTR_RMTWAK             0x00000100    /* Remote Wakeup Enable */
#define BITM_USB_LPM_ATTR_HIRD               0x000000F0    /* Host Initiated Resume Duration */
#define BITM_USB_LPM_ATTR_LINKSTATE          0x0000000F

/* ------------------------------------------------------------------------------------------------------------------------
        USB_LPM_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_LPM_CTL_NAK                  4
#define BITP_USB_LPM_CTL_EN                   2
#define BITP_USB_LPM_CTL_RESUME               1
#define BITP_USB_LPM_CTL_TX                   0
#define BITM_USB_LPM_CTL_NAK                 0x00000010
#define BITM_USB_LPM_CTL_EN                  0x0000000C
#define BITM_USB_LPM_CTL_RESUME              0x00000002
#define BITM_USB_LPM_CTL_TX                  0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_LPM_IEN                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_LPM_IEN_LPMERR               5
#define BITP_USB_LPM_IEN_LPMRES               4
#define BITP_USB_LPM_IEN_LPMNC                3
#define BITP_USB_LPM_IEN_LPMACK               2
#define BITP_USB_LPM_IEN_LPMNY                1
#define BITP_USB_LPM_IEN_LPMST                0
#define BITM_USB_LPM_IEN_LPMERR              0x00000020
#define BITM_USB_LPM_IEN_LPMRES              0x00000010
#define BITM_USB_LPM_IEN_LPMNC               0x00000008
#define BITM_USB_LPM_IEN_LPMACK              0x00000004
#define BITM_USB_LPM_IEN_LPMNY               0x00000002
#define BITM_USB_LPM_IEN_LPMST               0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_LPM_IRQ                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_LPM_IRQ_LPMERR               5
#define BITP_USB_LPM_IRQ_LPMRES               4
#define BITP_USB_LPM_IRQ_LPMNC                3
#define BITP_USB_LPM_IRQ_LPMACK               2
#define BITP_USB_LPM_IRQ_LPMNY                1
#define BITP_USB_LPM_IRQ_LPMST                0
#define BITM_USB_LPM_IRQ_LPMERR              0x00000020
#define BITM_USB_LPM_IRQ_LPMRES              0x00000010
#define BITM_USB_LPM_IRQ_LPMNC               0x00000008
#define BITM_USB_LPM_IRQ_LPMACK              0x00000004
#define BITM_USB_LPM_IRQ_LPMNY               0x00000002
#define BITM_USB_LPM_IRQ_LPMST               0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_LPM_FADDR                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_LPM_FADDR_VALUE              0            /* Function Address */
#define BITM_USB_LPM_FADDR_VALUE             0x0000007F    /* Function Address */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_VBUS_CTL                         Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_VBUS_CTL_DRV                 4            /* State of the UTMI+ DrvVbus signal from the controller */
#define BITP_USB_VBUS_CTL_DRVINT              3            /* DrvVbusInt Interrupt */
#define BITP_USB_VBUS_CTL_DRVIEN              2            /* Enable DrvVbus Interrupt */
#define BITP_USB_VBUS_CTL_DRVOD               1            /* Make DrvVbus Output Open Drain */
#define BITP_USB_VBUS_CTL_INVDRV              0            /* Invert DrvVbus Output */
#define BITM_USB_VBUS_CTL_DRV                0x00000010    /* State of the UTMI+ DrvVbus signal from the controller */
#define BITM_USB_VBUS_CTL_DRVINT             0x00000008    /* DrvVbusInt Interrupt */
#define BITM_USB_VBUS_CTL_DRVIEN             0x00000004    /* Enable DrvVbus Interrupt */
#define BITM_USB_VBUS_CTL_DRVOD              0x00000002    /* Make DrvVbus Output Open Drain */
#define BITM_USB_VBUS_CTL_INVDRV             0x00000001    /* Invert DrvVbus Output */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_BAT_CHG                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_BAT_CHG_DEDCHG               4            /* Determine if Attached device is a Dedicated Charging Port */
#define BITP_USB_BAT_CHG_CHGDET               3            /* Sense Charging Port */
#define BITP_USB_BAT_CHG_SNSCHGDET            2            /* Enable Charger Detection. */
#define BITP_USB_BAT_CHG_CONDET               1            /* Connected Detected */
#define BITP_USB_BAT_CHG_SNSCONDET            0            /* Enables Connection Detection */
#define BITM_USB_BAT_CHG_DEDCHG              0x00000010    /* Determine if Attached device is a Dedicated Charging Port */
#define BITM_USB_BAT_CHG_CHGDET              0x00000008    /* Sense Charging Port */
#define BITM_USB_BAT_CHG_SNSCHGDET           0x00000004    /* Enable Charger Detection. */
#define BITM_USB_BAT_CHG_CONDET              0x00000002    /* Connected Detected */
#define BITM_USB_BAT_CHG_SNSCONDET           0x00000001    /* Enables Connection Detection */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_PHY_CTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_PHY_CTL_CNOS                 2            /* Clock Non-Overlap Spacing */
#define BITP_USB_PHY_CTL_RESTORE              1            /* Restore from Hibernate */
#define BITP_USB_PHY_CTL_HIBER                0            /* Hibernate */
#define BITM_USB_PHY_CTL_CNOS                0x0000000C    /* Clock Non-Overlap Spacing */
#define BITM_USB_PHY_CTL_RESTORE             0x00000002    /* Restore from Hibernate */
#define BITM_USB_PHY_CTL_HIBER               0x00000001    /* Hibernate */

/* ------------------------------------------------------------------------------------------------------------------------
        USB_TESTCTL                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_TESTCTL_TM1                  0
#define BITM_USB_TESTCTL_TM1                 0x00000001

/* ------------------------------------------------------------------------------------------------------------------------
        USB_PLL_OSC                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_USB_PLL_OSC_PLLSTABLE           14
#define BITP_USB_PLL_OSC_PLLMSEL              7
#define BITP_USB_PLL_OSC_PLLM                 1
#define BITP_USB_PLL_OSC_DIVCLKIN             0
#define BITM_USB_PLL_OSC_PLLSTABLE           0x00004000
#define BITM_USB_PLL_OSC_PLLMSEL             0x00000080
#define BITM_USB_PLL_OSC_PLLM                0x0000007E
#define BITM_USB_PLL_OSC_DIVCLKIN            0x00000001

/* =========================
        L1_DM Registers
   ========================= */

/* =========================
        L1DM0
   ========================= */
#define SRAM_BASE_ADDRESS               0xFFE00000         /* SRAM Base Address */
#define DMEM_CONTROL                    0xFFE00004         /* Data memory control */
#define DCPLB_STATUS                    0xFFE00008         /* Data Cacheability Protection Lookaside Buffer Status */
#define DCPLB_FAULT_STATUS              0xFFE00008         /*     Older definition or alias of above */
#define DCPLB_FAULT_ADDR                0xFFE0000C         /* Data Cacheability Protection Lookaside Buffer Fault Address */
#define DCPLB_ADDR0                     0xFFE00100         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR1                     0xFFE00104         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR2                     0xFFE00108         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR3                     0xFFE0010C         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR4                     0xFFE00110         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR5                     0xFFE00114         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR6                     0xFFE00118         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR7                     0xFFE0011C         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR8                     0xFFE00120         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR9                     0xFFE00124         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR10                    0xFFE00128         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR11                    0xFFE0012C         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR12                    0xFFE00130         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR13                    0xFFE00134         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR14                    0xFFE00138         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_ADDR15                    0xFFE0013C         /* Data Cacheability Protection Lookaside Buffer Descriptor Address */
#define DCPLB_DATA0                     0xFFE00200         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA1                     0xFFE00204         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA2                     0xFFE00208         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA3                     0xFFE0020C         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA4                     0xFFE00210         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA5                     0xFFE00214         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA6                     0xFFE00218         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA7                     0xFFE0021C         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA8                     0xFFE00220         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA9                     0xFFE00224         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA10                    0xFFE00228         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA11                    0xFFE0022C         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA12                    0xFFE00230         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA13                    0xFFE00234         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA14                    0xFFE00238         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DCPLB_DATA15                    0xFFE0023C         /* Cacheability Protection Lookaside Buffer Descriptor Data */
#define DTEST_COMMAND                   0xFFE00300         /* Data Test Command Register */
#define DTEST_DATA0                     0xFFE00400         /* Data Test Data Register */
#define DTEST_DATA1                     0xFFE00404         /* Data Test Data Register */
#define L1DBNKA_PELOC                   0xFFE00408         /* Data Bank A Parity Error Location */
#define L1DBNKB_PELOC                   0xFFE0040C         /* Data Bank B Parity Error Location */

/* =========================
        L1DM
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_SRAM_BASE_ADDR                  Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_SRAM_BASE_ADDRESS_ADDR          22            /* SRAM Base Address */
#define BITM_SRAM_BASE_ADDRESS_ADDR          0xFFC00000    /* SRAM Base Address */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_CTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DMEM_CONTROL_PARCTL             15            /* L1 Scratch Parity Control */
#define BITP_DMEM_CONTROL_PARSEL             14            /* L1 Scratch Parity Select */
#define BITP_DMEM_CONTROL_PPREF1             13            /* DAG1 Port Preference */
#define BITP_DMEM_CONTROL_PPREF0             12            /* DAG0 Port Preference */
#define BITP_DMEM_CONTROL_RDCHK               9            /* Read Parity Checking */
#define BITP_DMEM_CONTROL_CBYPASS             8            /* Cache Bypass */
#define BITP_DMEM_CONTROL_DCBS                4            /* L1 Data Cache Bank Select */
#define BITP_DMEM_CONTROL_CFG                 2            /* Data Memory Configuration */
#define BITP_DMEM_CONTROL_ENCPLB              1            /* Enable DCPLB */
#define BITM_DMEM_CONTROL_PARCTL             0x00008000    /* L1 Scratch Parity Control */
#define BITM_DMEM_CONTROL_PARSEL             0x00004000    /* L1 Scratch Parity Select */
#define BITM_DMEM_CONTROL_PPREF1             0x00002000    /* DAG1 Port Preference */
#define BITM_DMEM_CONTROL_PPREF0             0x00001000    /* DAG0 Port Preference */
#define BITM_DMEM_CONTROL_RDCHK              0x00000200    /* Read Parity Checking */
#define BITM_DMEM_CONTROL_CBYPASS            0x00000100    /* Cache Bypass */
#define BITM_DMEM_CONTROL_DCBS               0x00000010    /* L1 Data Cache Bank Select */
#define BITM_DMEM_CONTROL_CFG                0x0000000C    /* Data Memory Configuration */
#define BITM_DMEM_CONTROL_ENCPLB             0x00000002    /* Enable DCPLB */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_STAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DCPLB_STATUS_ILLADDR            19            /* Illegal Address */
#define BITP_DCPLB_STATUS_DAG                18            /* Access DAG */
#define BITP_DCPLB_STATUS_MODE               17            /* Access Mode */
#define BITP_DCPLB_STATUS_RW                 16            /* Access Read/Write */
#define BITP_DCPLB_STATUS_FAULT               0            /* Fault Status */
#define BITM_DCPLB_STATUS_ILLADDR            0x00080000    /* Illegal Address */
#define BITM_DCPLB_STATUS_DAG                0x00040000    /* Access DAG */
#define BITM_DCPLB_STATUS_MODE               0x00020000    /* Access Mode */
#define BITM_DCPLB_STATUS_RW                 0x00010000    /* Access Read/Write */
#define BITM_DCPLB_STATUS_FAULT              0x0000FFFF    /* Fault Status */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_CPLB_ADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DCPLB_ADDR_ADDR                 10            /* Address for match */
#define BITM_DCPLB_ADDR_ADDR                 0xFFFFFC00    /* Address for match */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_CPLB_DATA                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DCPLB_DATA_PSIZE                16            /* Page Size */
#define BITP_DCPLB_DATA_WT                   14            /* CPLB Write Through */
#define BITP_DCPLB_DATA_L2_CHBL              13            /* CPLB L2 Cachable */
#define BITP_DCPLB_DATA_L1_CHBL              12            /* CPLB L1 Cachable */
#define BITP_DCPLB_DATA_DIRTY                 7            /* CPLB DIRTY */
#define BITP_DCPLB_DATA_SWRITE                4            /* CPLB Supervisor Write */
#define BITP_DCPLB_DATA_UWRITE                3            /* CPLB User Write */
#define BITP_DCPLB_DATA_UREAD                 2            /* CPLB User Read */
#define BITP_DCPLB_DATA_LOCK                  1            /* CPLB Lock */
#define BITP_DCPLB_DATA_VALID                 0            /* CPLB Valid */

#define BITM_DCPLB_DATA_PSIZE                0x00070000    /* Page Size */
#define ENUM_DCPLB_DATA_PAGE_SIZE_1KB        0x00000000    /* PSIZE: 1 KB Page Size */
#define ENUM_DCPLB_DATA_4KB                  0x00010000    /* PSIZE: 4 KB Page Size */
#define ENUM_DCPLB_DATA_1MB                  0x00020000    /* PSIZE: 1 MB Page Size */
#define ENUM_DCPLB_DATA_4MB                  0x00030000    /* PSIZE: 4 MB Page Size */
#define ENUM_DCPLB_DATA_16KB                 0x00040000    /* PSIZE: 16 KB Page Size */
#define ENUM_DCPLB_DATA_64KB                 0x00050000    /* PSIZE: 64 KB Page Size */
#define ENUM_DCPLB_DATA_16MB                 0x00060000    /* PSIZE: 16 MB Page Size */
#define ENUM_DCPLB_DATA_64MB                 0x00070000    /* PSIZE: 64 MB Page Size */
#define BITM_DCPLB_DATA_WT                   0x00004000    /* CPLB Write Through */
#define BITM_DCPLB_DATA_L2_CHBL              0x00002000    /* CPLB L2 Cachable */
#define BITM_DCPLB_DATA_L1_CHBL              0x00001000    /* CPLB L1 Cachable */
#define BITM_DCPLB_DATA_DIRTY                0x00000080    /* CPLB DIRTY */
#define BITM_DCPLB_DATA_SWRITE               0x00000010    /* CPLB Supervisor Write */
#define BITM_DCPLB_DATA_UWRITE               0x00000008    /* CPLB User Write */
#define BITM_DCPLB_DATA_UREAD                0x00000004    /* CPLB User Read */
#define BITM_DCPLB_DATA_LOCK                 0x00000002    /* CPLB Lock */
#define BITM_DCPLB_DATA_VALID                0x00000001    /* CPLB Valid */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_TEST_CMD                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DTEST_COMMAND_PARCTL            30            /* Parity Control */
#define BITP_DTEST_COMMAND_PARSEL            29            /* Parity Select */
#define BITP_DTEST_COMMAND_WAYSEL            26            /* Access Way/Instruction Address Bit 11 */
#define BITP_DTEST_COMMAND_IDSEL             24            /* Instruction/Data Access */
#define BITP_DTEST_COMMAND_BNKSEL            23            /* Data Bank Access */
#define BITP_DTEST_COMMAND_SBNK              16            /* Subbank Access */
#define BITP_DTEST_COMMAND_SEL16K            14            /* Address bit 14 */
#define BITP_DTEST_COMMAND_SET                5            /* Set Index */
#define BITP_DTEST_COMMAND_DW                 3            /* Double Word Index */
#define BITP_DTEST_COMMAND_TAGSELB            2            /* Array Access */
#define BITP_DTEST_COMMAND_RW                 1            /* Read/Write Access */
#define BITM_DTEST_COMMAND_PARCTL            0x40000000    /* Parity Control */
#define BITM_DTEST_COMMAND_PARSEL            0x20000000    /* Parity Select */
#define BITM_DTEST_COMMAND_WAYSEL            0x04000000    /* Access Way/Instruction Address Bit 11 */
#define BITM_DTEST_COMMAND_IDSEL             0x01000000    /* Instruction/Data Access */
#define BITM_DTEST_COMMAND_BNKSEL            0x00800000    /* Data Bank Access */
#define BITM_DTEST_COMMAND_SBNK              0x00030000    /* Subbank Access */
#define BITM_DTEST_COMMAND_SEL16K            0x00004000    /* Address bit 14 */
#define BITM_DTEST_COMMAND_SET               0x000007E0    /* Set Index */
#define BITM_DTEST_COMMAND_DW                0x00000018    /* Double Word Index */
#define BITM_DTEST_COMMAND_TAGSELB           0x00000004    /* Array Access */
#define BITM_DTEST_COMMAND_RW                0x00000002    /* Read/Write Access */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_L1_DBNKA_PELOC                  Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L1DBNKA_PELOC_SCRATCH_MEM       12            /* Scratch Memory Parity Status */
#define BITP_L1DBNKA_PELOC_TAGPAIR            8            /* Tag Parity Status */
#define BITP_L1DBNKA_PELOC_MEMBLK             0            /* Memory Parity Status */
#define BITM_L1DBNKA_PELOC_SCRATCH_MEM       0x00001000    /* Scratch Memory Parity Status */
#define BITM_L1DBNKA_PELOC_TAGPAIR           0x00000300    /* Tag Parity Status */
#define BITM_L1DBNKA_PELOC_MEMBLK            0x000000FF    /* Memory Parity Status */

/* ------------------------------------------------------------------------------------------------------------------------
        L1DM_L1_DBNKB_PELOC                  Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L1DBNKB_PELOC_TAGPAIR            8            /* Tag Parity Status */
#define BITP_L1DBNKB_PELOC_MEMBLK             0            /* Memory Parity Status */
#define BITM_L1DBNKB_PELOC_TAGPAIR           0x00000300    /* Tag Parity Status */
#define BITM_L1DBNKB_PELOC_MEMBLK            0x000000FF    /* Memory Parity Status */

/* =========================
        L1_IM Registers
   ========================= */

/* =========================
        L1IM0
   ========================= */
#define IMEM_CONTROL                    0xFFE01004         /* Instruction memory control */
#define ICPLB_STATUS                    0xFFE01008         /* Instruction Cacheability Protection Lookaside Buffer Status */
#define CODE_FAULT_STATUS               0xFFE01008         /*     Older definition or alias of above */
#define ICPLB_FAULT_ADDR                0xFFE0100C         /* Instruction Cacheability Protection Lookaside Buffer Fault Address */
#define CODE_FAULT_ADDR                 0xFFE0100C         /*     Older definition or alias of above */
#define ICPLB_ADDR0                     0xFFE01100         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR1                     0xFFE01104         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR2                     0xFFE01108         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR3                     0xFFE0110C         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR4                     0xFFE01110         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR5                     0xFFE01114         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR6                     0xFFE01118         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR7                     0xFFE0111C         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR8                     0xFFE01120         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR9                     0xFFE01124         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR10                    0xFFE01128         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR11                    0xFFE0112C         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR12                    0xFFE01130         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR13                    0xFFE01134         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR14                    0xFFE01138         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_ADDR15                    0xFFE0113C         /* Instruction Cacheability Protection Lookaside Buffer Descriptor Address */
#define ICPLB_DATA0                     0xFFE01200         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA1                     0xFFE01204         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA2                     0xFFE01208         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA3                     0xFFE0120C         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA4                     0xFFE01210         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA5                     0xFFE01214         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA6                     0xFFE01218         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA7                     0xFFE0121C         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA8                     0xFFE01220         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA9                     0xFFE01224         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA10                    0xFFE01228         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA11                    0xFFE0122C         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA12                    0xFFE01230         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA13                    0xFFE01234         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA14                    0xFFE01238         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ICPLB_DATA15                    0xFFE0123C         /* Cacheability Protection Lookaside Buffer Descriptor Status */
#define ITEST_COMMAND                   0xFFE01300         /* Instruction Test Command Register */
#define ITEST_DATA0                     0xFFE01400         /* Instruction Test Data Register */
#define ITEST_DATA1                     0xFFE01404         /* Instruction Test Data Register */
#define L1IBNKA_PELOC                   0xFFE01408         /* Instruction Bank A Parity Error Location */
#define L1IBNKB_PELOC                   0xFFE0140C         /* Instruction Bank B Parity Error Location */
#define L1IBNKC_PELOC                   0xFFE01410         /* Instruction Bank C Parity Error Location */

/* =========================
        L1IM
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_CTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_IMEM_CONTROL_LRUPRIORST         13            /* LRU Priority Reset */
#define BITP_IMEM_CONTROL_RDCHK               9            /* Read Parity Checking */
#define BITP_IMEM_CONTROL_CBYPASS             8            /* Cache Bypass */
#define BITP_IMEM_CONTROL_LOC                 3            /* Cache Way Lock */
#define BITP_IMEM_CONTROL_CFG                 2            /* Configure L1 code memory as cache */
#define BITP_IMEM_CONTROL_ENCPLB              1            /* Enable ICPLB */
#define BITM_IMEM_CONTROL_LRUPRIORST         0x00002000    /* LRU Priority Reset */
#define BITM_IMEM_CONTROL_RDCHK              0x00000200    /* Read Parity Checking */
#define BITM_IMEM_CONTROL_CBYPASS            0x00000100    /* Cache Bypass */
#define BITM_IMEM_CONTROL_LOC                0x00000078    /* Cache Way Lock */
#define BITM_IMEM_CONTROL_CFG                0x00000004    /* Configure L1 code memory as cache */
#define BITM_IMEM_CONTROL_ENCPLB             0x00000002    /* Enable ICPLB */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_STAT                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ICPLB_STATUS_ILLADDR            19            /* Illegal Address */
#define BITP_ICPLB_STATUS_MODE               17            /* Access Mode */
#define BITP_ICPLB_STATUS_FAULT               0            /* Fault Status */
#define BITM_ICPLB_STATUS_ILLADDR            0x00080000    /* Illegal Address */
#define BITM_ICPLB_STATUS_MODE               0x00020000    /* Access Mode */
#define BITM_ICPLB_STATUS_FAULT              0x0000FFFF    /* Fault Status */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_CPLB_ADDR                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ICPLB_ADDR_ADDR                 10            /* Address for match */
#define BITM_ICPLB_ADDR_ADDR                 0xFFFFFC00    /* Address for match */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_CPLB_DATA                       Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ICPLB_DATA_PSIZE                16            /* Page Size */
#define BITP_ICPLB_DATA_L1_CHBL              12            /* L1 Cacheable */
#define BITP_ICPLB_DATA_LRUPRIO               8            /* Least Recently Used Priority */
#define BITP_ICPLB_DATA_UREAD                 2            /* Allow User Read */
#define BITP_ICPLB_DATA_LOCK                  1            /* CPLB Lock */
#define BITP_ICPLB_DATA_VALID                 0            /* CPLB Valid */

#define BITM_ICPLB_DATA_PSIZE                0x00070000    /* Page Size */
#define ENUM_ICPLB_DATA_PAGE_SIZE_1KB        0x00000000    /* PSIZE: 1 KB Page Size */
#define ENUM_ICPLB_DATA_4KB                  0x00010000    /* PSIZE: 4 KB Page Size */
#define ENUM_ICPLB_DATA_1MB                  0x00020000    /* PSIZE: 1 MB Page Size */
#define ENUM_ICPLB_DATA_4MB                  0x00030000    /* PSIZE: 4 MB Page Size */
#define ENUM_ICPLB_DATA_16KB                 0x00040000    /* PSIZE: 16 KB Page Size */
#define ENUM_ICPLB_DATA_64KB                 0x00050000    /* PSIZE: 64 KB Page Size */
#define ENUM_ICPLB_DATA_16MB                 0x00060000    /* PSIZE: 16 MB Page Size */
#define ENUM_ICPLB_DATA_64MB                 0x00070000    /* PSIZE: 64 MB Page Size */
#define BITM_ICPLB_DATA_L1_CHBL              0x00001000    /* L1 Cacheable */
#define BITM_ICPLB_DATA_LRUPRIO              0x00000100    /* Least Recently Used Priority */
#define BITM_ICPLB_DATA_UREAD                0x00000004    /* Allow User Read */
#define BITM_ICPLB_DATA_LOCK                 0x00000002    /* CPLB Lock */
#define BITM_ICPLB_DATA_VALID                0x00000001    /* CPLB Valid */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_TEST_CMD                        Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ITEST_COMMAND_PARCTL            30            /* Parity Control */
#define BITP_ITEST_COMMAND_PARSEL            29            /* Parity Select */
#define BITP_ITEST_COMMAND_WAYSEL            26            /* Access Way/Instruction Address Bits 11:10 */
#define BITP_ITEST_COMMAND_SBNK              16            /* Subbank Access */
#define BITP_ITEST_COMMAND_SET                5            /* Set Index */
#define BITP_ITEST_COMMAND_DW                 3            /* Double Word Index */
#define BITP_ITEST_COMMAND_TAGSELB            2            /* Array Access */
#define BITP_ITEST_COMMAND_RW                 1            /* Read/Write Access */
#define BITM_ITEST_COMMAND_PARCTL            0x40000000    /* Parity Control */
#define BITM_ITEST_COMMAND_PARSEL            0x20000000    /* Parity Select */
#define BITM_ITEST_COMMAND_WAYSEL            0x0C000000    /* Access Way/Instruction Address Bits 11:10 */
#define BITM_ITEST_COMMAND_SBNK              0x00030000    /* Subbank Access */
#define BITM_ITEST_COMMAND_SET               0x000003E0    /* Set Index */
#define BITM_ITEST_COMMAND_DW                0x00000018    /* Double Word Index */
#define BITM_ITEST_COMMAND_TAGSELB           0x00000004    /* Array Access */
#define BITM_ITEST_COMMAND_RW                0x00000002    /* Read/Write Access */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_L1_IBNKA_PELOC                  Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L1IBNKA_PELOC_MEMBLK             0            /* Memory Parity Status */
#define BITM_L1IBNKA_PELOC_MEMBLK            0x000000FF    /* Memory Parity Status */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_L1_IBNKB_PELOC                  Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L1IBNKB_PELOC_MEMBLK             0            /* Memory Parity Status */
#define BITM_L1IBNKB_PELOC_MEMBLK            0x000000FF    /* Memory Parity Status */

/* ------------------------------------------------------------------------------------------------------------------------
        L1IM_L1_IBNKC_PELOC                  Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_L1IBNKC_PELOC_TAGPAIR            8            /* Tag Parity Status */
#define BITP_L1IBNKC_PELOC_MEMBLK             0            /* Memory Parity Status */
#define BITM_L1IBNKC_PELOC_TAGPAIR           0x00000300    /* Tag Parity Status */
#define BITM_L1IBNKC_PELOC_MEMBLK            0x000000FF    /* Memory Parity Status */

/* =========================
        ICU Registers
   ========================= */

/* =========================
        ICU0
   ========================= */
#define EVT0                            0xFFE02000         /* Event Vector */
#define EVT1                            0xFFE02004         /* Event Vector */
#define EVT2                            0xFFE02008         /* Event Vector */
#define EVT3                            0xFFE0200C         /* Event Vector */
#define EVT4                            0xFFE02010         /* Event Vector */
#define EVT5                            0xFFE02014         /* Event Vector */
#define EVT6                            0xFFE02018         /* Event Vector */
#define EVT7                            0xFFE0201C         /* Event Vector */
#define EVT8                            0xFFE02020         /* Event Vector */
#define EVT9                            0xFFE02024         /* Event Vector */
#define EVT10                           0xFFE02028         /* Event Vector */
#define EVT11                           0xFFE0202C         /* Event Vector */
#define EVT12                           0xFFE02030         /* Event Vector */
#define EVT13                           0xFFE02034         /* Event Vector */
#define EVT14                           0xFFE02038         /* Event Vector */
#define EVT15                           0xFFE0203C         /* Event Vector */
#define IMASK                           0xFFE02104         /* Interrupt Mask Register */
#define IPEND                           0xFFE02108         /* Interrupts Pending Register */
#define ILAT                            0xFFE0210C         /* Interrupt Latch Register */
#define IPRIO                           0xFFE02110         /* Interrupt Priority Register */
#define CEC_SID                         0xFFE02118         /* Core System Interrupt ID */

/* =========================
        ICU
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        ICU_IMASK                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_IMASK_IVG15                     15            /* IVG15 interrupt bit position */
#define BITP_IMASK_IVG14                     14            /* IVG14 interrupt bit position */
#define BITP_IMASK_IVG13                     13            /* IVG13 interrupt bit position */
#define BITP_IMASK_IVG12                     12            /* IVG12 interrupt bit position */
#define BITP_IMASK_IVG11                     11            /* IVG11 interrupt bit position */
#define BITP_IMASK_IVG10                     10            /* IVG10 interrupt bit position */
#define BITP_IMASK_IVG9                       9            /* IVG9 interrupt bit position */
#define BITP_IMASK_IVG8                       8            /* IVG8 interrupt bit position */
#define BITP_IMASK_IVG7                       7            /* IVG7 interrupt bit position */
#define BITP_IMASK_IVTMR                      6            /* Timer interrupt bit position */
#define BITP_IMASK_IVHW                       5            /* Hardware Error interrupt bit position */
#define BITP_IMASK_UNMASKABLE                 0            /* Unmaskable interrupts */
#define BITM_IMASK_IVG15                     0x00008000    /* IVG15 interrupt bit position */
#define BITM_IMASK_IVG14                     0x00004000    /* IVG14 interrupt bit position */
#define BITM_IMASK_IVG13                     0x00002000    /* IVG13 interrupt bit position */
#define BITM_IMASK_IVG12                     0x00001000    /* IVG12 interrupt bit position */
#define BITM_IMASK_IVG11                     0x00000800    /* IVG11 interrupt bit position */
#define BITM_IMASK_IVG10                     0x00000400    /* IVG10 interrupt bit position */
#define BITM_IMASK_IVG9                      0x00000200    /* IVG9 interrupt bit position */
#define BITM_IMASK_IVG8                      0x00000100    /* IVG8 interrupt bit position */
#define BITM_IMASK_IVG7                      0x00000080    /* IVG7 interrupt bit position */
#define BITM_IMASK_IVTMR                     0x00000040    /* Timer interrupt bit position */
#define BITM_IMASK_IVHW                      0x00000020    /* Hardware Error interrupt bit position */
#define BITM_IMASK_UNMASKABLE                0x0000001F    /* Unmaskable interrupts */

/* ------------------------------------------------------------------------------------------------------------------------
        ICU_IPEND                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_IPEND_IVG15                     15            /* IVG15 interrupt bit position */
#define BITP_IPEND_IVG14                     14            /* IVG14 interrupt bit position */
#define BITP_IPEND_IVG13                     13            /* IVG13 interrupt bit position */
#define BITP_IPEND_IVG12                     12            /* IVG12 interrupt bit position */
#define BITP_IPEND_IVG11                     11            /* IVG11 interrupt bit position */
#define BITP_IPEND_IVG10                     10            /* IVG10 interrupt bit position */
#define BITP_IPEND_IVG9                       9            /* IVG9 interrupt bit position */
#define BITP_IPEND_IVG8                       8            /* IVG8 interrupt bit position */
#define BITP_IPEND_IVG7                       7            /* IVG7 interrupt bit position */
#define BITP_IPEND_IVTMR                      6            /* Timer interrupt bit position */
#define BITP_IPEND_IVHW                       5            /* Hardware Error interrupt bit position */
#define BITP_IPEND_IRPTEN                     4            /* Global interrupt enable bit position */
#define BITP_IPEND_EVX                        3            /* Exception bit position */
#define BITP_IPEND_NMI                        2            /* Non Maskable interrupt bit position */
#define BITP_IPEND_RST                        1            /* Reset interrupt bit position */
#define BITP_IPEND_EMU                        0            /* Emulator interrupt bit position */
#define BITM_IPEND_IVG15                     0x00008000    /* IVG15 interrupt bit position */
#define BITM_IPEND_IVG14                     0x00004000    /* IVG14 interrupt bit position */
#define BITM_IPEND_IVG13                     0x00002000    /* IVG13 interrupt bit position */
#define BITM_IPEND_IVG12                     0x00001000    /* IVG12 interrupt bit position */
#define BITM_IPEND_IVG11                     0x00000800    /* IVG11 interrupt bit position */
#define BITM_IPEND_IVG10                     0x00000400    /* IVG10 interrupt bit position */
#define BITM_IPEND_IVG9                      0x00000200    /* IVG9 interrupt bit position */
#define BITM_IPEND_IVG8                      0x00000100    /* IVG8 interrupt bit position */
#define BITM_IPEND_IVG7                      0x00000080    /* IVG7 interrupt bit position */
#define BITM_IPEND_IVTMR                     0x00000040    /* Timer interrupt bit position */
#define BITM_IPEND_IVHW                      0x00000020    /* Hardware Error interrupt bit position */
#define BITM_IPEND_IRPTEN                    0x00000010    /* Global interrupt enable bit position */
#define BITM_IPEND_EVX                       0x00000008    /* Exception bit position */
#define BITM_IPEND_NMI                       0x00000004    /* Non Maskable interrupt bit position */
#define BITM_IPEND_RST                       0x00000002    /* Reset interrupt bit position */
#define BITM_IPEND_EMU                       0x00000001    /* Emulator interrupt bit position */

/* ------------------------------------------------------------------------------------------------------------------------
        ICU_ILAT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_ILAT_IVG15                      15            /* IVG15 interrupt bit position */
#define BITP_ILAT_IVG14                      14            /* IVG14 interrupt bit position */
#define BITP_ILAT_IVG13                      13            /* IVG13 interrupt bit position */
#define BITP_ILAT_IVG12                      12            /* IVG12 interrupt bit position */
#define BITP_ILAT_IVG11                      11            /* IVG11 interrupt bit position */
#define BITP_ILAT_IVG10                      10            /* IVG10 interrupt bit position */
#define BITP_ILAT_IVG9                        9            /* IVG9 interrupt bit position */
#define BITP_ILAT_IVG8                        8            /* IVG8 interrupt bit position */
#define BITP_ILAT_IVG7                        7            /* IVG7 interrupt bit position */
#define BITP_ILAT_IVTMR                       6            /* Timer interrupt bit position */
#define BITP_ILAT_IVHW                        5            /* Hardware Error interrupt bit position */
#define BITP_ILAT_EVX                         3            /* Exception bit position */
#define BITP_ILAT_NMI                         2            /* Non Maskable interrupt bit position */
#define BITP_ILAT_RST                         1            /* Reset interrupt bit position */
#define BITP_ILAT_EMU                         0            /* Emulator interrupt bit position */
#define BITM_ILAT_IVG15                      0x00008000    /* IVG15 interrupt bit position */
#define BITM_ILAT_IVG14                      0x00004000    /* IVG14 interrupt bit position */
#define BITM_ILAT_IVG13                      0x00002000    /* IVG13 interrupt bit position */
#define BITM_ILAT_IVG12                      0x00001000    /* IVG12 interrupt bit position */
#define BITM_ILAT_IVG11                      0x00000800    /* IVG11 interrupt bit position */
#define BITM_ILAT_IVG10                      0x00000400    /* IVG10 interrupt bit position */
#define BITM_ILAT_IVG9                       0x00000200    /* IVG9 interrupt bit position */
#define BITM_ILAT_IVG8                       0x00000100    /* IVG8 interrupt bit position */
#define BITM_ILAT_IVG7                       0x00000080    /* IVG7 interrupt bit position */
#define BITM_ILAT_IVTMR                      0x00000040    /* Timer interrupt bit position */
#define BITM_ILAT_IVHW                       0x00000020    /* Hardware Error interrupt bit position */
#define BITM_ILAT_EVX                        0x00000008    /* Exception bit position */
#define BITM_ILAT_NMI                        0x00000004    /* Non Maskable interrupt bit position */
#define BITM_ILAT_RST                        0x00000002    /* Reset interrupt bit position */
#define BITM_ILAT_EMU                        0x00000001    /* Emulator interrupt bit position */

/* ------------------------------------------------------------------------------------------------------------------------
        ICU_IPRIO                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_IPRIO_IPRIO_MARK                 0            /* Priority Watermark */
#define BITM_IPRIO_IPRIO_MARK                0x0000000F    /* Priority Watermark */

/* ------------------------------------------------------------------------------------------------------------------------
        ICU_CEC_SID                          Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_CEC_SID_SID                      0            /* System Interrupt ID */
#define BITM_CEC_SID_SID                     0x000000FF    /* System Interrupt ID */

/* =========================
        TMR Registers
   ========================= */

/* =========================
        TMR0
   ========================= */
#define TCNTL                           0xFFE03000         /* Timer Control Register */
#define TPERIOD                         0xFFE03004         /* Timer Period Register */
#define TSCALE                          0xFFE03008         /* Timer Scale Register */
#define TCOUNT                          0xFFE0300C         /* Timer Count Register */

/* =========================
        TMR
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        TMR_CTL                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TCNTL_INT                        3            /* Timer generated interrupt (sticky) */
#define BITP_TCNTL_AUTORLD                    2            /* Timer auto reload */
#define BITP_TCNTL_EN                         1            /* Timer enable */
#define BITP_TCNTL_PWR                        0            /* Timer Low Power Control */
#define BITM_TCNTL_INT                       0x00000008    /* Timer generated interrupt (sticky) */
#define BITM_TCNTL_AUTORLD                   0x00000004    /* Timer auto reload */
#define BITM_TCNTL_EN                        0x00000002    /* Timer enable */
#define BITM_TCNTL_PWR                       0x00000001    /* Timer Low Power Control */

/* ------------------------------------------------------------------------------------------------------------------------
        TMR_SCALE                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TSCALE_SCALE                     0            /* Scaling factor */
#define BITM_TSCALE_SCALE                    0x000000FF    /* Scaling factor */

/* =========================
        DBG Registers
   ========================= */

/* =========================
        DBG0
   ========================= */
#define DSPID                           0xFFE05000         /* DSP Identification Register */

/* =========================
        DBG
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        DBG_DSPID                            Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_DSPID_COMPANY                   24            /* Analog Devices, Inc. */
#define BITP_DSPID_MAJOR                     16            /* Major Architectural Change */
#define BITP_DSPID_COREID                     0            /* Core ID */
#define BITM_DSPID_COMPANY                   0xFF000000    /* Analog Devices, Inc. */
#define BITM_DSPID_MAJOR                     0x00FF0000    /* Major Architectural Change */
#define BITM_DSPID_COREID                    0x000000FF    /* Core ID */

/* =========================
        TB Registers
   ========================= */

/* =========================
        TB0
   ========================= */
#define TBUFCTL                         0xFFE06000         /* Trace Buffer Control Register */
#define TBUFSTAT                        0xFFE06004         /* Trace Buffer Status Register */
#define TBUF                            0xFFE06100         /* Trace Buffer */

/* =========================
        TB
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        TB_CTL                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TBUFCTL_COMPRESS                 3            /* Trace Buffer Compression */
#define BITP_TBUFCTL_OVF                      2            /* Trace Buffer Overflow */
#define BITP_TBUFCTL_EN                       1            /* Trace Buffer Enable */
#define BITP_TBUFCTL_PWR                      0            /* Trace Buffer Power */
#define BITM_TBUFCTL_COMPRESS                0x00000018    /* Trace Buffer Compression */
#define BITM_TBUFCTL_OVF                     0x00000004    /* Trace Buffer Overflow */
#define BITM_TBUFCTL_EN                      0x00000002    /* Trace Buffer Enable */
#define BITM_TBUFCTL_PWR                     0x00000001    /* Trace Buffer Power */

/* ------------------------------------------------------------------------------------------------------------------------
        TB_STAT                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_TBUFSTAT_CNT                     0            /* Trace Buffer Count */
#define BITM_TBUFSTAT_CNT                    0x0000001F    /* Trace Buffer Count */

/* =========================
        WP Registers
   ========================= */

/* =========================
        WP0
   ========================= */
#define WPIACTL                         0xFFE07000         /* Watchpoint Instruction Address Control Register 01 */
#define WPIA0                           0xFFE07040         /* Watchpoint Instruction Address Register */
#define WPIA1                           0xFFE07044         /* Watchpoint Instruction Address Register */
#define WPIA2                           0xFFE07048         /* Watchpoint Instruction Address Register */
#define WPIA3                           0xFFE0704C         /* Watchpoint Instruction Address Register */
#define WPIA4                           0xFFE07050         /* Watchpoint Instruction Address Register */
#define WPIA5                           0xFFE07054         /* Watchpoint Instruction Address Register */
#define WPIACNT0                        0xFFE07080         /* Watchpoint Instruction Address Count Register */
#define WPIACNT1                        0xFFE07084         /* Watchpoint Instruction Address Count Register */
#define WPIACNT2                        0xFFE07088         /* Watchpoint Instruction Address Count Register */
#define WPIACNT3                        0xFFE0708C         /* Watchpoint Instruction Address Count Register */
#define WPIACNT4                        0xFFE07090         /* Watchpoint Instruction Address Count Register */
#define WPIACNT5                        0xFFE07094         /* Watchpoint Instruction Address Count Register */
#define WPDACTL                         0xFFE07100         /* Watchpoint Data Address Control Register */
#define WPDA0                           0xFFE07140         /* Watchpoint Data Address Register */
#define WPDA1                           0xFFE07144         /* Watchpoint Data Address Register */
#define WPDACNT0                        0xFFE07180         /* Watchpoint Data Address Count Value Register */
#define WPDACNT1                        0xFFE07184         /* Watchpoint Data Address Count Value Register */
#define WPSTAT                          0xFFE07200         /* Watchpoint Status Register */

/* =========================
        WP
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        WP_IACTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_WPIACTL_WPAND                   25            /* And Triggers */
#define BITP_WPIACTL_ACT5                    24            /* Action field for WPIA5 */
#define BITP_WPIACTL_ACT4                    23            /* Action field for WPIA4 */
#define BITP_WPIACTL_ENCNT5                  22            /* Enable Counter for WPIA5 */
#define BITP_WPIACTL_ENCNT4                  21            /* Enable Counter for WPIA4 */
#define BITP_WPIACTL_ENIA5                   20            /* Enable WPIA5 */
#define BITP_WPIACTL_ENIA4                   19            /* Enable WPIA4 */
#define BITP_WPIACTL_INVIR45                 18            /* Invert Instruction Range 45 */
#define BITP_WPIACTL_ENIR45                  17            /* Enable Instruction Range 45 */
#define BITP_WPIACTL_ACT3                    16            /* Action field for WPIA3 */
#define BITP_WPIACTL_ACT2                    15            /* Action field for WPIA2 */
#define BITP_WPIACTL_ENCNT3                  14            /* Enable Counter for WPIA3 */
#define BITP_WPIACTL_ENCNT2                  13            /* Enable Counter for WPIA2 */
#define BITP_WPIACTL_ENIA3                   12            /* Enable WPIA3 */
#define BITP_WPIACTL_ENIA2                   11            /* Enable WPIA2 */
#define BITP_WPIACTL_INVIR23                 10            /* Invert Instruction Range 23 */
#define BITP_WPIACTL_ENIR23                   9            /* Enable Instruction Range 23 */
#define BITP_WPIACTL_ACT1                     8            /* Action field for WPIA1 */
#define BITP_WPIACTL_ACT0                     7            /* Action field for WPIA0 */
#define BITP_WPIACTL_ENCNT1                   6            /* Enable Counter for WPIA1 */
#define BITP_WPIACTL_ENCNT0                   5            /* Enable Counter for WPIA0 */
#define BITP_WPIACTL_ENIA1                    4            /* Enable WPIA1 */
#define BITP_WPIACTL_ENIA0                    3            /* Enable WPIA0 */
#define BITP_WPIACTL_INVIR01                  2            /* Invert Instruction Range 01 */
#define BITP_WPIACTL_ENIR01                   1            /* Enable Instruction Range 01 */
#define BITP_WPIACTL_PWR                      0            /* Power */
#define BITM_WPIACTL_WPAND                   0x02000000    /* And Triggers */
#define BITM_WPIACTL_ACT5                    0x01000000    /* Action field for WPIA5 */
#define BITM_WPIACTL_ACT4                    0x00800000    /* Action field for WPIA4 */
#define BITM_WPIACTL_ENCNT5                  0x00400000    /* Enable Counter for WPIA5 */
#define BITM_WPIACTL_ENCNT4                  0x00200000    /* Enable Counter for WPIA4 */
#define BITM_WPIACTL_ENIA5                   0x00100000    /* Enable WPIA5 */
#define BITM_WPIACTL_ENIA4                   0x00080000    /* Enable WPIA4 */
#define BITM_WPIACTL_INVIR45                 0x00040000    /* Invert Instruction Range 45 */
#define BITM_WPIACTL_ENIR45                  0x00020000    /* Enable Instruction Range 45 */
#define BITM_WPIACTL_ACT3                    0x00010000    /* Action field for WPIA3 */
#define BITM_WPIACTL_ACT2                    0x00008000    /* Action field for WPIA2 */
#define BITM_WPIACTL_ENCNT3                  0x00004000    /* Enable Counter for WPIA3 */
#define BITM_WPIACTL_ENCNT2                  0x00002000    /* Enable Counter for WPIA2 */
#define BITM_WPIACTL_ENIA3                   0x00001000    /* Enable WPIA3 */
#define BITM_WPIACTL_ENIA2                   0x00000800    /* Enable WPIA2 */
#define BITM_WPIACTL_INVIR23                 0x00000400    /* Invert Instruction Range 23 */
#define BITM_WPIACTL_ENIR23                  0x00000200    /* Enable Instruction Range 23 */
#define BITM_WPIACTL_ACT1                    0x00000100    /* Action field for WPIA1 */
#define BITM_WPIACTL_ACT0                    0x00000080    /* Action field for WPIA0 */
#define BITM_WPIACTL_ENCNT1                  0x00000040    /* Enable Counter for WPIA1 */
#define BITM_WPIACTL_ENCNT0                  0x00000020    /* Enable Counter for WPIA0 */
#define BITM_WPIACTL_ENIA1                   0x00000010    /* Enable WPIA1 */
#define BITM_WPIACTL_ENIA0                   0x00000008    /* Enable WPIA0 */
#define BITM_WPIACTL_INVIR01                 0x00000004    /* Invert Instruction Range 01 */
#define BITM_WPIACTL_ENIR01                  0x00000002    /* Enable Instruction Range 01 */
#define BITM_WPIACTL_PWR                     0x00000001    /* Power */

/* ------------------------------------------------------------------------------------------------------------------------
        WP_IACNT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_WPIACNT_CNT                      0            /* Count Value */
#define BITM_WPIACNT_CNT                     0x0000FFFF    /* Count Value */

/* ------------------------------------------------------------------------------------------------------------------------
        WP_DACTL                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_WPDACTL_ACC1                    12            /* Access type for WPDA1 */
#define BITP_WPDACTL_SRC1                    10            /* DAG Source for WPDA1 */
#define BITP_WPDACTL_ACC0                     8            /* Access type for WPDA0 */
#define BITP_WPDACTL_SRC0                     6            /* DAG Source for WPDA0 */
#define BITP_WPDACTL_ENCNT1                   5            /* Enable WPDA1 Counter */
#define BITP_WPDACTL_ENCNT0                   4            /* Enable WPDA0 Counter */
#define BITP_WPDACTL_ENDA1                    3            /* Enable WPDA1 */
#define BITP_WPDACTL_ENDA0                    2            /* Enable WPDA0 */
#define BITP_WPDACTL_INVR                     1            /* Invert Range Comparision */
#define BITP_WPDACTL_ENR                      0            /* Enable Range Comparison */
#define BITM_WPDACTL_ACC1                    0x00003000    /* Access type for WPDA1 */
#define BITM_WPDACTL_SRC1                    0x00000C00    /* DAG Source for WPDA1 */
#define BITM_WPDACTL_ACC0                    0x00000300    /* Access type for WPDA0 */
#define BITM_WPDACTL_SRC0                    0x000000C0    /* DAG Source for WPDA0 */
#define BITM_WPDACTL_ENCNT1                  0x00000020    /* Enable WPDA1 Counter */
#define BITM_WPDACTL_ENCNT0                  0x00000010    /* Enable WPDA0 Counter */
#define BITM_WPDACTL_ENDA1                   0x00000008    /* Enable WPDA1 */
#define BITM_WPDACTL_ENDA0                   0x00000004    /* Enable WPDA0 */
#define BITM_WPDACTL_INVR                    0x00000002    /* Invert Range Comparision */
#define BITM_WPDACTL_ENR                     0x00000001    /* Enable Range Comparison */

/* ------------------------------------------------------------------------------------------------------------------------
        WP_DACNT                             Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_WPDACNT_CNT                      0            /* Count Value */
#define BITM_WPDACNT_CNT                     0x0000FFFF    /* Count Value */

/* ------------------------------------------------------------------------------------------------------------------------
        WP_STAT                              Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_WPSTAT_DA1                       7            /* WPDA1 match */
#define BITP_WPSTAT_DA0                       6            /* WPDA0 or WPDA0:1 range match */
#define BITP_WPSTAT_IA5                       5            /* WPIA5 match */
#define BITP_WPSTAT_IA4                       4            /* WPIA4 or WPIA4:5 range match */
#define BITP_WPSTAT_IA3                       3            /* WPIA3 match */
#define BITP_WPSTAT_IA2                       2            /* WPIA2 or WPIA2:3 range match */
#define BITP_WPSTAT_IA1                       1            /* WPIA1 match */
#define BITP_WPSTAT_IA0                       0            /* WPIA0 or WPIA0:1 range match */
#define BITM_WPSTAT_DA1                      0x00000080    /* WPDA1 match */
#define BITM_WPSTAT_DA0                      0x00000040    /* WPDA0 or WPDA0:1 range match */
#define BITM_WPSTAT_IA5                      0x00000020    /* WPIA5 match */
#define BITM_WPSTAT_IA4                      0x00000010    /* WPIA4 or WPIA4:5 range match */
#define BITM_WPSTAT_IA3                      0x00000008    /* WPIA3 match */
#define BITM_WPSTAT_IA2                      0x00000004    /* WPIA2 or WPIA2:3 range match */
#define BITM_WPSTAT_IA1                      0x00000002    /* WPIA1 match */
#define BITM_WPSTAT_IA0                      0x00000001    /* WPIA0 or WPIA0:1 range match */

/* =========================
        PF Registers
   ========================= */

/* =========================
        PF0
   ========================= */
#define PFCTL                           0xFFE08000         /* Performance Monitor Control Register */
#define PFCNTR0                         0xFFE08100         /* Performance Monitor Counter 0 */
#define PFCNTR1                         0xFFE08104         /* Performance Monitor Counter 1 */

/* =========================
        PF
   ========================= */
/* ------------------------------------------------------------------------------------------------------------------------
        PF_CTL                               Pos/Masks     Description
   ------------------------------------------------------------------------------------------------------------------------ */
#define BITP_PFCTL_CNT1                      25            /* Count Cycles or Edges 1 */
#define BITP_PFCTL_CNT0                      24            /* Count Cycles or Edges 0 */
#define BITP_PFCTL_MON1                      16            /* Monitor 1 Events */
#define BITP_PFCTL_ENA1                      14            /* Enable Monitor 1 */
#define BITP_PFCTL_EVENT1                    13            /* Emulator or Exception Event 1 */
#define BITP_PFCTL_MON0                       5            /* Monitor 0 Events */
#define BITP_PFCTL_ENA0                       3            /* Enable Monitor 0 */
#define BITP_PFCTL_EVENT0                     2            /* Emulator or Exception Event 0 */
#define BITP_PFCTL_PWR                        0            /* Power */
#define BITM_PFCTL_CNT1                      0x02000000    /* Count Cycles or Edges 1 */
#define BITM_PFCTL_CNT0                      0x01000000    /* Count Cycles or Edges 0 */
#define BITM_PFCTL_MON1                      0x00FF0000    /* Monitor 1 Events */
#define BITM_PFCTL_ENA1                      0x0000C000    /* Enable Monitor 1 */
#define BITM_PFCTL_EVENT1                    0x00002000    /* Emulator or Exception Event 1 */
#define BITM_PFCTL_MON0                      0x00001FE0    /* Monitor 0 Events */
#define BITM_PFCTL_ENA0                      0x00000018    /* Enable Monitor 0 */
#define BITM_PFCTL_EVENT0                    0x00000004    /* Emulator or Exception Event 0 */
#define BITM_PFCTL_PWR                       0x00000001    /* Power */


/********************************************************************************
    DMA Alias Definitions
 ********************************************************************************/
#define MDMA0_DST_CRC0_OUT_DSCPTR_NXT   (REG_DMA22_DSCPTR_NXT)
#define MDMA0_DST_CRC0_OUT_ADDRSTART    (REG_DMA22_ADDRSTART)
#define MDMA0_DST_CRC0_OUT_CFG          (REG_DMA22_CFG)
#define MDMA0_DST_CRC0_OUT_XCNT         (REG_DMA22_XCNT)
#define MDMA0_DST_CRC0_OUT_XMOD         (REG_DMA22_XMOD)
#define MDMA0_DST_CRC0_OUT_YCNT         (REG_DMA22_YCNT)
#define MDMA0_DST_CRC0_OUT_YMOD         (REG_DMA22_YMOD)
#define MDMA0_DST_CRC0_OUT_DSCPTR_CUR   (REG_DMA22_DSCPTR_CUR)
#define MDMA0_DST_CRC0_OUT_DSCPTR_PRV   (REG_DMA22_DSCPTR_PRV)
#define MDMA0_DST_CRC0_OUT_ADDR_CUR     (REG_DMA22_ADDR_CUR)
#define MDMA0_DST_CRC0_OUT_STAT         (REG_DMA22_STAT)
#define MDMA0_DST_CRC0_OUT_XCNT_CUR     (REG_DMA22_XCNT_CUR)
#define MDMA0_DST_CRC0_OUT_YCNT_CUR     (REG_DMA22_YCNT_CUR)
#define MDMA0_DST_CRC0_OUT_BWLCNT       (REG_DMA22_BWLCNT)
#define MDMA0_DST_CRC0_OUT_BWLCNT_CUR   (REG_DMA22_BWLCNT_CUR)
#define MDMA0_DST_CRC0_OUT_BWMCNT       (REG_DMA22_BWMCNT)
#define MDMA0_DST_CRC0_OUT_BWMCNT_CUR   (REG_DMA22_BWMCNT_CUR)
#define MDMA0_SRC_CRC0_IN_DSCPTR_NXT    (REG_DMA21_DSCPTR_NXT)
#define MDMA0_SRC_CRC0_IN_ADDRSTART     (REG_DMA21_ADDRSTART)
#define MDMA0_SRC_CRC0_IN_CFG           (REG_DMA21_CFG)
#define MDMA0_SRC_CRC0_IN_XCNT          (REG_DMA21_XCNT)
#define MDMA0_SRC_CRC0_IN_XMOD          (REG_DMA21_XMOD)
#define MDMA0_SRC_CRC0_IN_YCNT          (REG_DMA21_YCNT)
#define MDMA0_SRC_CRC0_IN_YMOD          (REG_DMA21_YMOD)
#define MDMA0_SRC_CRC0_IN_DSCPTR_CUR    (REG_DMA21_DSCPTR_CUR)
#define MDMA0_SRC_CRC0_IN_DSCPTR_PRV    (REG_DMA21_DSCPTR_PRV)
#define MDMA0_SRC_CRC0_IN_ADDR_CUR      (REG_DMA21_ADDR_CUR)
#define MDMA0_SRC_CRC0_IN_STAT          (REG_DMA21_STAT)
#define MDMA0_SRC_CRC0_IN_XCNT_CUR      (REG_DMA21_XCNT_CUR)
#define MDMA0_SRC_CRC0_IN_YCNT_CUR      (REG_DMA21_YCNT_CUR)
#define MDMA0_SRC_CRC0_IN_BWLCNT        (REG_DMA21_BWLCNT)
#define MDMA0_SRC_CRC0_IN_BWLCNT_CUR    (REG_DMA21_BWLCNT_CUR)
#define MDMA0_SRC_CRC0_IN_BWMCNT        (REG_DMA21_BWMCNT)
#define MDMA0_SRC_CRC0_IN_BWMCNT_CUR    (REG_DMA21_BWMCNT_CUR)
#define MDMA1_DST_CRC1_OUT_DSCPTR_NXT   (REG_DMA24_DSCPTR_NXT)
#define MDMA1_DST_CRC1_OUT_ADDRSTART    (REG_DMA24_ADDRSTART)
#define MDMA1_DST_CRC1_OUT_CFG          (REG_DMA24_CFG)
#define MDMA1_DST_CRC1_OUT_XCNT         (REG_DMA24_XCNT)
#define MDMA1_DST_CRC1_OUT_XMOD         (REG_DMA24_XMOD)
#define MDMA1_DST_CRC1_OUT_YCNT         (REG_DMA24_YCNT)
#define MDMA1_DST_CRC1_OUT_YMOD         (REG_DMA24_YMOD)
#define MDMA1_DST_CRC1_OUT_DSCPTR_CUR   (REG_DMA24_DSCPTR_CUR)
#define MDMA1_DST_CRC1_OUT_DSCPTR_PRV   (REG_DMA24_DSCPTR_PRV)
#define MDMA1_DST_CRC1_OUT_ADDR_CUR     (REG_DMA24_ADDR_CUR)
#define MDMA1_DST_CRC1_OUT_STAT         (REG_DMA24_STAT)
#define MDMA1_DST_CRC1_OUT_XCNT_CUR     (REG_DMA24_XCNT_CUR)
#define MDMA1_DST_CRC1_OUT_YCNT_CUR     (REG_DMA24_YCNT_CUR)
#define MDMA1_DST_CRC1_OUT_BWLCNT       (REG_DMA24_BWLCNT)
#define MDMA1_DST_CRC1_OUT_BWLCNT_CUR   (REG_DMA24_BWLCNT_CUR)
#define MDMA1_DST_CRC1_OUT_BWMCNT       (REG_DMA24_BWMCNT)
#define MDMA1_DST_CRC1_OUT_BWMCNT_CUR   (REG_DMA24_BWMCNT_CUR)
#define MDMA1_SRC_CRC1_IN_DSCPTR_NXT    (REG_DMA23_DSCPTR_NXT)
#define MDMA1_SRC_CRC1_IN_ADDRSTART     (REG_DMA23_ADDRSTART)
#define MDMA1_SRC_CRC1_IN_CFG           (REG_DMA23_CFG)
#define MDMA1_SRC_CRC1_IN_XCNT          (REG_DMA23_XCNT)
#define MDMA1_SRC_CRC1_IN_XMOD          (REG_DMA23_XMOD)
#define MDMA1_SRC_CRC1_IN_YCNT          (REG_DMA23_YCNT)
#define MDMA1_SRC_CRC1_IN_YMOD          (REG_DMA23_YMOD)
#define MDMA1_SRC_CRC1_IN_DSCPTR_CUR    (REG_DMA23_DSCPTR_CUR)
#define MDMA1_SRC_CRC1_IN_DSCPTR_PRV    (REG_DMA23_DSCPTR_PRV)
#define MDMA1_SRC_CRC1_IN_ADDR_CUR      (REG_DMA23_ADDR_CUR)
#define MDMA1_SRC_CRC1_IN_STAT          (REG_DMA23_STAT)
#define MDMA1_SRC_CRC1_IN_XCNT_CUR      (REG_DMA23_XCNT_CUR)
#define MDMA1_SRC_CRC1_IN_YCNT_CUR      (REG_DMA23_YCNT_CUR)
#define MDMA1_SRC_CRC1_IN_BWLCNT        (REG_DMA23_BWLCNT)
#define MDMA1_SRC_CRC1_IN_BWLCNT_CUR    (REG_DMA23_BWLCNT_CUR)
#define MDMA1_SRC_CRC1_IN_BWMCNT        (REG_DMA23_BWMCNT)
#define MDMA1_SRC_CRC1_IN_BWMCNT_CUR    (REG_DMA23_BWMCNT_CUR)
#define MDMA2_DST_DSCPTR_NXT            (REG_DMA26_DSCPTR_NXT)
#define MDMA2_DST_ADDRSTART             (REG_DMA26_ADDRSTART)
#define MDMA2_DST_CFG                   (REG_DMA26_CFG)
#define MDMA2_DST_XCNT                  (REG_DMA26_XCNT)
#define MDMA2_DST_XMOD                  (REG_DMA26_XMOD)
#define MDMA2_DST_YCNT                  (REG_DMA26_YCNT)
#define MDMA2_DST_YMOD                  (REG_DMA26_YMOD)
#define MDMA2_DST_DSCPTR_CUR            (REG_DMA26_DSCPTR_CUR)
#define MDMA2_DST_DSCPTR_PRV            (REG_DMA26_DSCPTR_PRV)
#define MDMA2_DST_ADDR_CUR              (REG_DMA26_ADDR_CUR)
#define MDMA2_DST_STAT                  (REG_DMA26_STAT)
#define MDMA2_DST_XCNT_CUR              (REG_DMA26_XCNT_CUR)
#define MDMA2_DST_YCNT_CUR              (REG_DMA26_YCNT_CUR)
#define MDMA2_DST_BWLCNT                (REG_DMA26_BWLCNT)
#define MDMA2_DST_BWLCNT_CUR            (REG_DMA26_BWLCNT_CUR)
#define MDMA2_DST_BWMCNT                (REG_DMA26_BWMCNT)
#define MDMA2_DST_BWMCNT_CUR            (REG_DMA26_BWMCNT_CUR)
#define MDMA2_SRC_DSCPTR_NXT            (REG_DMA25_DSCPTR_NXT)
#define MDMA2_SRC_ADDRSTART             (REG_DMA25_ADDRSTART)
#define MDMA2_SRC_CFG                   (REG_DMA25_CFG)
#define MDMA2_SRC_XCNT                  (REG_DMA25_XCNT)
#define MDMA2_SRC_XMOD                  (REG_DMA25_XMOD)
#define MDMA2_SRC_YCNT                  (REG_DMA25_YCNT)
#define MDMA2_SRC_YMOD                  (REG_DMA25_YMOD)
#define MDMA2_SRC_DSCPTR_CUR            (REG_DMA25_DSCPTR_CUR)
#define MDMA2_SRC_DSCPTR_PRV            (REG_DMA25_DSCPTR_PRV)
#define MDMA2_SRC_ADDR_CUR              (REG_DMA25_ADDR_CUR)
#define MDMA2_SRC_STAT                  (REG_DMA25_STAT)
#define MDMA2_SRC_XCNT_CUR              (REG_DMA25_XCNT_CUR)
#define MDMA2_SRC_YCNT_CUR              (REG_DMA25_YCNT_CUR)
#define MDMA2_SRC_BWLCNT                (REG_DMA25_BWLCNT)
#define MDMA2_SRC_BWLCNT_CUR            (REG_DMA25_BWLCNT_CUR)
#define MDMA2_SRC_BWMCNT                (REG_DMA25_BWMCNT)
#define MDMA2_SRC_BWMCNT_CUR            (REG_DMA25_BWMCNT_CUR)
#define MDMA3_DST_DSCPTR_NXT            (REG_DMA28_DSCPTR_NXT)
#define MDMA3_DST_ADDRSTART             (REG_DMA28_ADDRSTART)
#define MDMA3_DST_CFG                   (REG_DMA28_CFG)
#define MDMA3_DST_XCNT                  (REG_DMA28_XCNT)
#define MDMA3_DST_XMOD                  (REG_DMA28_XMOD)
#define MDMA3_DST_YCNT                  (REG_DMA28_YCNT)
#define MDMA3_DST_YMOD                  (REG_DMA28_YMOD)
#define MDMA3_DST_DSCPTR_CUR            (REG_DMA28_DSCPTR_CUR)
#define MDMA3_DST_DSCPTR_PRV            (REG_DMA28_DSCPTR_PRV)
#define MDMA3_DST_ADDR_CUR              (REG_DMA28_ADDR_CUR)
#define MDMA3_DST_STAT                  (REG_DMA28_STAT)
#define MDMA3_DST_XCNT_CUR              (REG_DMA28_XCNT_CUR)
#define MDMA3_DST_YCNT_CUR              (REG_DMA28_YCNT_CUR)
#define MDMA3_DST_BWLCNT                (REG_DMA28_BWLCNT)
#define MDMA3_DST_BWLCNT_CUR            (REG_DMA28_BWLCNT_CUR)
#define MDMA3_DST_BWMCNT                (REG_DMA28_BWMCNT)
#define MDMA3_DST_BWMCNT_CUR            (REG_DMA28_BWMCNT_CUR)
#define MDMA3_SRC_DSCPTR_NXT            (REG_DMA27_DSCPTR_NXT)
#define MDMA3_SRC_ADDRSTART             (REG_DMA27_ADDRSTART)
#define MDMA3_SRC_CFG                   (REG_DMA27_CFG)
#define MDMA3_SRC_XCNT                  (REG_DMA27_XCNT)
#define MDMA3_SRC_XMOD                  (REG_DMA27_XMOD)
#define MDMA3_SRC_YCNT                  (REG_DMA27_YCNT)
#define MDMA3_SRC_YMOD                  (REG_DMA27_YMOD)
#define MDMA3_SRC_DSCPTR_CUR            (REG_DMA27_DSCPTR_CUR)
#define MDMA3_SRC_DSCPTR_PRV            (REG_DMA27_DSCPTR_PRV)
#define MDMA3_SRC_ADDR_CUR              (REG_DMA27_ADDR_CUR)
#define MDMA3_SRC_STAT                  (REG_DMA27_STAT)
#define MDMA3_SRC_XCNT_CUR              (REG_DMA27_XCNT_CUR)
#define MDMA3_SRC_YCNT_CUR              (REG_DMA27_YCNT_CUR)
#define MDMA3_SRC_BWLCNT                (REG_DMA27_BWLCNT)
#define MDMA3_SRC_BWLCNT_CUR            (REG_DMA27_BWLCNT_CUR)
#define MDMA3_SRC_BWMCNT                (REG_DMA27_BWMCNT)
#define MDMA3_SRC_BWMCNT_CUR            (REG_DMA27_BWMCNT_CUR)
#define EPPI2_CH0_DMA_DSCPTR_NXT        (REG_DMA31_DSCPTR_NXT)
#define EPPI2_CH0_DMA_ADDRSTART         (REG_DMA31_ADDRSTART)
#define EPPI2_CH0_DMA_CFG               (REG_DMA31_CFG)
#define EPPI2_CH0_DMA_XCNT              (REG_DMA31_XCNT)
#define EPPI2_CH0_DMA_XMOD              (REG_DMA31_XMOD)
#define EPPI2_CH0_DMA_YCNT              (REG_DMA31_YCNT)
#define EPPI2_CH0_DMA_YMOD              (REG_DMA31_YMOD)
#define EPPI2_CH0_DMA_DSCPTR_CUR        (REG_DMA31_DSCPTR_CUR)
#define EPPI2_CH0_DMA_DSCPTR_PRV        (REG_DMA31_DSCPTR_PRV)
#define EPPI2_CH0_DMA_ADDR_CUR          (REG_DMA31_ADDR_CUR)
#define EPPI2_CH0_DMA_STAT              (REG_DMA31_STAT)
#define EPPI2_CH0_DMA_XCNT_CUR          (REG_DMA31_XCNT_CUR)
#define EPPI2_CH0_DMA_YCNT_CUR          (REG_DMA31_YCNT_CUR)
#define EPPI2_CH0_DMA_BWLCNT            (REG_DMA31_BWLCNT)
#define EPPI2_CH0_DMA_BWLCNT_CUR        (REG_DMA31_BWLCNT_CUR)
#define EPPI2_CH0_DMA_BWMCNT            (REG_DMA31_BWMCNT)
#define EPPI2_CH0_DMA_BWMCNT_CUR        (REG_DMA31_BWMCNT_CUR)
#define EPPI0_CH0_DMA_DSCPTR_NXT        (REG_DMA29_DSCPTR_NXT)
#define EPPI0_CH0_DMA_ADDRSTART         (REG_DMA29_ADDRSTART)
#define EPPI0_CH0_DMA_CFG               (REG_DMA29_CFG)
#define EPPI0_CH0_DMA_XCNT              (REG_DMA29_XCNT)
#define EPPI0_CH0_DMA_XMOD              (REG_DMA29_XMOD)
#define EPPI0_CH0_DMA_YCNT              (REG_DMA29_YCNT)
#define EPPI0_CH0_DMA_YMOD              (REG_DMA29_YMOD)
#define EPPI0_CH0_DMA_DSCPTR_CUR        (REG_DMA29_DSCPTR_CUR)
#define EPPI0_CH0_DMA_DSCPTR_PRV        (REG_DMA29_DSCPTR_PRV)
#define EPPI0_CH0_DMA_ADDR_CUR          (REG_DMA29_ADDR_CUR)
#define EPPI0_CH0_DMA_STAT              (REG_DMA29_STAT)
#define EPPI0_CH0_DMA_XCNT_CUR          (REG_DMA29_XCNT_CUR)
#define EPPI0_CH0_DMA_YCNT_CUR          (REG_DMA29_YCNT_CUR)
#define EPPI0_CH0_DMA_BWLCNT            (REG_DMA29_BWLCNT)
#define EPPI0_CH0_DMA_BWLCNT_CUR        (REG_DMA29_BWLCNT_CUR)
#define EPPI0_CH0_DMA_BWMCNT            (REG_DMA29_BWMCNT)
#define EPPI0_CH0_DMA_BWMCNT_CUR        (REG_DMA29_BWMCNT_CUR)
#define EPPI1_CH0_DMA_DSCPTR_NXT        (REG_DMA33_DSCPTR_NXT)
#define EPPI1_CH0_DMA_ADDRSTART         (REG_DMA33_ADDRSTART)
#define EPPI1_CH0_DMA_CFG               (REG_DMA33_CFG)
#define EPPI1_CH0_DMA_XCNT              (REG_DMA33_XCNT)
#define EPPI1_CH0_DMA_XMOD              (REG_DMA33_XMOD)
#define EPPI1_CH0_DMA_YCNT              (REG_DMA33_YCNT)
#define EPPI1_CH0_DMA_YMOD              (REG_DMA33_YMOD)
#define EPPI1_CH0_DMA_DSCPTR_CUR        (REG_DMA33_DSCPTR_CUR)
#define EPPI1_CH0_DMA_DSCPTR_PRV        (REG_DMA33_DSCPTR_PRV)
#define EPPI1_CH0_DMA_ADDR_CUR          (REG_DMA33_ADDR_CUR)
#define EPPI1_CH0_DMA_STAT              (REG_DMA33_STAT)
#define EPPI1_CH0_DMA_XCNT_CUR          (REG_DMA33_XCNT_CUR)
#define EPPI1_CH0_DMA_YCNT_CUR          (REG_DMA33_YCNT_CUR)
#define EPPI1_CH0_DMA_BWLCNT            (REG_DMA33_BWLCNT)
#define EPPI1_CH0_DMA_BWLCNT_CUR        (REG_DMA33_BWLCNT_CUR)
#define EPPI1_CH0_DMA_BWMCNT            (REG_DMA33_BWMCNT)
#define EPPI1_CH0_DMA_BWMCNT_CUR        (REG_DMA33_BWMCNT_CUR)
#define EPPI2_CH1_DMA_DSCPTR_NXT        (REG_DMA32_DSCPTR_NXT)
#define EPPI2_CH1_DMA_ADDRSTART         (REG_DMA32_ADDRSTART)
#define EPPI2_CH1_DMA_CFG               (REG_DMA32_CFG)
#define EPPI2_CH1_DMA_XCNT              (REG_DMA32_XCNT)
#define EPPI2_CH1_DMA_XMOD              (REG_DMA32_XMOD)
#define EPPI2_CH1_DMA_YCNT              (REG_DMA32_YCNT)
#define EPPI2_CH1_DMA_YMOD              (REG_DMA32_YMOD)
#define EPPI2_CH1_DMA_DSCPTR_CUR        (REG_DMA32_DSCPTR_CUR)
#define EPPI2_CH1_DMA_DSCPTR_PRV        (REG_DMA32_DSCPTR_PRV)
#define EPPI2_CH1_DMA_ADDR_CUR          (REG_DMA32_ADDR_CUR)
#define EPPI2_CH1_DMA_STAT              (REG_DMA32_STAT)
#define EPPI2_CH1_DMA_XCNT_CUR          (REG_DMA32_XCNT_CUR)
#define EPPI2_CH1_DMA_YCNT_CUR          (REG_DMA32_YCNT_CUR)
#define EPPI2_CH1_DMA_BWLCNT            (REG_DMA32_BWLCNT)
#define EPPI2_CH1_DMA_BWLCNT_CUR        (REG_DMA32_BWLCNT_CUR)
#define EPPI2_CH1_DMA_BWMCNT            (REG_DMA32_BWMCNT)
#define EPPI2_CH1_DMA_BWMCNT_CUR        (REG_DMA32_BWMCNT_CUR)
#define EPPI1_CH1_DMA_DSCPTR_NXT        (REG_DMA34_DSCPTR_NXT)
#define EPPI1_CH1_DMA_ADDRSTART         (REG_DMA34_ADDRSTART)
#define EPPI1_CH1_DMA_CFG               (REG_DMA34_CFG)
#define EPPI1_CH1_DMA_XCNT              (REG_DMA34_XCNT)
#define EPPI1_CH1_DMA_XMOD              (REG_DMA34_XMOD)
#define EPPI1_CH1_DMA_YCNT              (REG_DMA34_YCNT)
#define EPPI1_CH1_DMA_YMOD              (REG_DMA34_YMOD)
#define EPPI1_CH1_DMA_DSCPTR_CUR        (REG_DMA34_DSCPTR_CUR)
#define EPPI1_CH1_DMA_DSCPTR_PRV        (REG_DMA34_DSCPTR_PRV)
#define EPPI1_CH1_DMA_ADDR_CUR          (REG_DMA34_ADDR_CUR)
#define EPPI1_CH1_DMA_STAT              (REG_DMA34_STAT)
#define EPPI1_CH1_DMA_XCNT_CUR          (REG_DMA34_XCNT_CUR)
#define EPPI1_CH1_DMA_YCNT_CUR          (REG_DMA34_YCNT_CUR)
#define EPPI1_CH1_DMA_BWLCNT            (REG_DMA34_BWLCNT)
#define EPPI1_CH1_DMA_BWLCNT_CUR        (REG_DMA34_BWLCNT_CUR)
#define EPPI1_CH1_DMA_BWMCNT            (REG_DMA34_BWMCNT)
#define EPPI1_CH1_DMA_BWMCNT_CUR        (REG_DMA34_BWMCNT_CUR)
#define EPPI0_CH1_DMA_DSCPTR_NXT        (REG_DMA30_DSCPTR_NXT)
#define EPPI0_CH1_DMA_ADDRSTART         (REG_DMA30_ADDRSTART)
#define EPPI0_CH1_DMA_CFG               (REG_DMA30_CFG)
#define EPPI0_CH1_DMA_XCNT              (REG_DMA30_XCNT)
#define EPPI0_CH1_DMA_XMOD              (REG_DMA30_XMOD)
#define EPPI0_CH1_DMA_YCNT              (REG_DMA30_YCNT)
#define EPPI0_CH1_DMA_YMOD              (REG_DMA30_YMOD)
#define EPPI0_CH1_DMA_DSCPTR_CUR        (REG_DMA30_DSCPTR_CUR)
#define EPPI0_CH1_DMA_DSCPTR_PRV        (REG_DMA30_DSCPTR_PRV)
#define EPPI0_CH1_DMA_ADDR_CUR          (REG_DMA30_ADDR_CUR)
#define EPPI0_CH1_DMA_STAT              (REG_DMA30_STAT)
#define EPPI0_CH1_DMA_XCNT_CUR          (REG_DMA30_XCNT_CUR)
#define EPPI0_CH1_DMA_YCNT_CUR          (REG_DMA30_YCNT_CUR)
#define EPPI0_CH1_DMA_BWLCNT            (REG_DMA30_BWLCNT)
#define EPPI0_CH1_DMA_BWLCNT_CUR        (REG_DMA30_BWLCNT_CUR)
#define EPPI0_CH1_DMA_BWMCNT            (REG_DMA30_BWMCNT)
#define EPPI0_CH1_DMA_BWMCNT_CUR        (REG_DMA30_BWMCNT_CUR)
#define LP3_DMA_DSCPTR_NXT              (REG_DMA16_DSCPTR_NXT)
#define LP3_DMA_ADDRSTART               (REG_DMA16_ADDRSTART)
#define LP3_DMA_CFG                     (REG_DMA16_CFG)
#define LP3_DMA_XCNT                    (REG_DMA16_XCNT)
#define LP3_DMA_XMOD                    (REG_DMA16_XMOD)
#define LP3_DMA_YCNT                    (REG_DMA16_YCNT)
#define LP3_DMA_YMOD                    (REG_DMA16_YMOD)
#define LP3_DMA_DSCPTR_CUR              (REG_DMA16_DSCPTR_CUR)
#define LP3_DMA_DSCPTR_PRV              (REG_DMA16_DSCPTR_PRV)
#define LP3_DMA_ADDR_CUR                (REG_DMA16_ADDR_CUR)
#define LP3_DMA_STAT                    (REG_DMA16_STAT)
#define LP3_DMA_XCNT_CUR                (REG_DMA16_XCNT_CUR)
#define LP3_DMA_YCNT_CUR                (REG_DMA16_YCNT_CUR)
#define LP3_DMA_BWLCNT                  (REG_DMA16_BWLCNT)
#define LP3_DMA_BWLCNT_CUR              (REG_DMA16_BWLCNT_CUR)
#define LP3_DMA_BWMCNT                  (REG_DMA16_BWMCNT)
#define LP3_DMA_BWMCNT_CUR              (REG_DMA16_BWMCNT_CUR)
#define LP2_DMA_DSCPTR_NXT              (REG_DMA15_DSCPTR_NXT)
#define LP2_DMA_ADDRSTART               (REG_DMA15_ADDRSTART)
#define LP2_DMA_CFG                     (REG_DMA15_CFG)
#define LP2_DMA_XCNT                    (REG_DMA15_XCNT)
#define LP2_DMA_XMOD                    (REG_DMA15_XMOD)
#define LP2_DMA_YCNT                    (REG_DMA15_YCNT)
#define LP2_DMA_YMOD                    (REG_DMA15_YMOD)
#define LP2_DMA_DSCPTR_CUR              (REG_DMA15_DSCPTR_CUR)
#define LP2_DMA_DSCPTR_PRV              (REG_DMA15_DSCPTR_PRV)
#define LP2_DMA_ADDR_CUR                (REG_DMA15_ADDR_CUR)
#define LP2_DMA_STAT                    (REG_DMA15_STAT)
#define LP2_DMA_XCNT_CUR                (REG_DMA15_XCNT_CUR)
#define LP2_DMA_YCNT_CUR                (REG_DMA15_YCNT_CUR)
#define LP2_DMA_BWLCNT                  (REG_DMA15_BWLCNT)
#define LP2_DMA_BWLCNT_CUR              (REG_DMA15_BWLCNT_CUR)
#define LP2_DMA_BWMCNT                  (REG_DMA15_BWMCNT)
#define LP2_DMA_BWMCNT_CUR              (REG_DMA15_BWMCNT_CUR)
#define LP0_DMA_DSCPTR_NXT              (REG_DMA13_DSCPTR_NXT)
#define LP0_DMA_ADDRSTART               (REG_DMA13_ADDRSTART)
#define LP0_DMA_CFG                     (REG_DMA13_CFG)
#define LP0_DMA_XCNT                    (REG_DMA13_XCNT)
#define LP0_DMA_XMOD                    (REG_DMA13_XMOD)
#define LP0_DMA_YCNT                    (REG_DMA13_YCNT)
#define LP0_DMA_YMOD                    (REG_DMA13_YMOD)
#define LP0_DMA_DSCPTR_CUR              (REG_DMA13_DSCPTR_CUR)
#define LP0_DMA_DSCPTR_PRV              (REG_DMA13_DSCPTR_PRV)
#define LP0_DMA_ADDR_CUR                (REG_DMA13_ADDR_CUR)
#define LP0_DMA_STAT                    (REG_DMA13_STAT)
#define LP0_DMA_XCNT_CUR                (REG_DMA13_XCNT_CUR)
#define LP0_DMA_YCNT_CUR                (REG_DMA13_YCNT_CUR)
#define LP0_DMA_BWLCNT                  (REG_DMA13_BWLCNT)
#define LP0_DMA_BWLCNT_CUR              (REG_DMA13_BWLCNT_CUR)
#define LP0_DMA_BWMCNT                  (REG_DMA13_BWMCNT)
#define LP0_DMA_BWMCNT_CUR              (REG_DMA13_BWMCNT_CUR)
#define LP1_DMA_DSCPTR_NXT              (REG_DMA14_DSCPTR_NXT)
#define LP1_DMA_ADDRSTART               (REG_DMA14_ADDRSTART)
#define LP1_DMA_CFG                     (REG_DMA14_CFG)
#define LP1_DMA_XCNT                    (REG_DMA14_XCNT)
#define LP1_DMA_XMOD                    (REG_DMA14_XMOD)
#define LP1_DMA_YCNT                    (REG_DMA14_YCNT)
#define LP1_DMA_YMOD                    (REG_DMA14_YMOD)
#define LP1_DMA_DSCPTR_CUR              (REG_DMA14_DSCPTR_CUR)
#define LP1_DMA_DSCPTR_PRV              (REG_DMA14_DSCPTR_PRV)
#define LP1_DMA_ADDR_CUR                (REG_DMA14_ADDR_CUR)
#define LP1_DMA_STAT                    (REG_DMA14_STAT)
#define LP1_DMA_XCNT_CUR                (REG_DMA14_XCNT_CUR)
#define LP1_DMA_YCNT_CUR                (REG_DMA14_YCNT_CUR)
#define LP1_DMA_BWLCNT                  (REG_DMA14_BWLCNT)
#define LP1_DMA_BWLCNT_CUR              (REG_DMA14_BWLCNT_CUR)
#define LP1_DMA_BWMCNT                  (REG_DMA14_BWMCNT)
#define LP1_DMA_BWMCNT_CUR              (REG_DMA14_BWMCNT_CUR)
#define PIXC0_CH0_DMA_DSCPTR_NXT        (REG_DMA35_DSCPTR_NXT)
#define PIXC0_CH0_DMA_ADDRSTART         (REG_DMA35_ADDRSTART)
#define PIXC0_CH0_DMA_CFG               (REG_DMA35_CFG)
#define PIXC0_CH0_DMA_XCNT              (REG_DMA35_XCNT)
#define PIXC0_CH0_DMA_XMOD              (REG_DMA35_XMOD)
#define PIXC0_CH0_DMA_YCNT              (REG_DMA35_YCNT)
#define PIXC0_CH0_DMA_YMOD              (REG_DMA35_YMOD)
#define PIXC0_CH0_DMA_DSCPTR_CUR        (REG_DMA35_DSCPTR_CUR)
#define PIXC0_CH0_DMA_DSCPTR_PRV        (REG_DMA35_DSCPTR_PRV)
#define PIXC0_CH0_DMA_ADDR_CUR          (REG_DMA35_ADDR_CUR)
#define PIXC0_CH0_DMA_STAT              (REG_DMA35_STAT)
#define PIXC0_CH0_DMA_XCNT_CUR          (REG_DMA35_XCNT_CUR)
#define PIXC0_CH0_DMA_YCNT_CUR          (REG_DMA35_YCNT_CUR)
#define PIXC0_CH0_DMA_BWLCNT            (REG_DMA35_BWLCNT)
#define PIXC0_CH0_DMA_BWLCNT_CUR        (REG_DMA35_BWLCNT_CUR)
#define PIXC0_CH0_DMA_BWMCNT            (REG_DMA35_BWMCNT)
#define PIXC0_CH0_DMA_BWMCNT_CUR        (REG_DMA35_BWMCNT_CUR)
#define PIXC0_CH1_DMA_DSCPTR_NXT        (REG_DMA36_DSCPTR_NXT)
#define PIXC0_CH1_DMA_ADDRSTART         (REG_DMA36_ADDRSTART)
#define PIXC0_CH1_DMA_CFG               (REG_DMA36_CFG)
#define PIXC0_CH1_DMA_XCNT              (REG_DMA36_XCNT)
#define PIXC0_CH1_DMA_XMOD              (REG_DMA36_XMOD)
#define PIXC0_CH1_DMA_YCNT              (REG_DMA36_YCNT)
#define PIXC0_CH1_DMA_YMOD              (REG_DMA36_YMOD)
#define PIXC0_CH1_DMA_DSCPTR_CUR        (REG_DMA36_DSCPTR_CUR)
#define PIXC0_CH1_DMA_DSCPTR_PRV        (REG_DMA36_DSCPTR_PRV)
#define PIXC0_CH1_DMA_ADDR_CUR          (REG_DMA36_ADDR_CUR)
#define PIXC0_CH1_DMA_STAT              (REG_DMA36_STAT)
#define PIXC0_CH1_DMA_XCNT_CUR          (REG_DMA36_XCNT_CUR)
#define PIXC0_CH1_DMA_YCNT_CUR          (REG_DMA36_YCNT_CUR)
#define PIXC0_CH1_DMA_BWLCNT            (REG_DMA36_BWLCNT)
#define PIXC0_CH1_DMA_BWLCNT_CUR        (REG_DMA36_BWLCNT_CUR)
#define PIXC0_CH1_DMA_BWMCNT            (REG_DMA36_BWMCNT)
#define PIXC0_CH1_DMA_BWMCNT_CUR        (REG_DMA36_BWMCNT_CUR)
#define PIXC0_CH2_DMA_DSCPTR_NXT        (REG_DMA37_DSCPTR_NXT)
#define PIXC0_CH2_DMA_ADDRSTART         (REG_DMA37_ADDRSTART)
#define PIXC0_CH2_DMA_CFG               (REG_DMA37_CFG)
#define PIXC0_CH2_DMA_XCNT              (REG_DMA37_XCNT)
#define PIXC0_CH2_DMA_XMOD              (REG_DMA37_XMOD)
#define PIXC0_CH2_DMA_YCNT              (REG_DMA37_YCNT)
#define PIXC0_CH2_DMA_YMOD              (REG_DMA37_YMOD)
#define PIXC0_CH2_DMA_DSCPTR_CUR        (REG_DMA37_DSCPTR_CUR)
#define PIXC0_CH2_DMA_DSCPTR_PRV        (REG_DMA37_DSCPTR_PRV)
#define PIXC0_CH2_DMA_ADDR_CUR          (REG_DMA37_ADDR_CUR)
#define PIXC0_CH2_DMA_STAT              (REG_DMA37_STAT)
#define PIXC0_CH2_DMA_XCNT_CUR          (REG_DMA37_XCNT_CUR)
#define PIXC0_CH2_DMA_YCNT_CUR          (REG_DMA37_YCNT_CUR)
#define PIXC0_CH2_DMA_BWLCNT            (REG_DMA37_BWLCNT)
#define PIXC0_CH2_DMA_BWLCNT_CUR        (REG_DMA37_BWLCNT_CUR)
#define PIXC0_CH2_DMA_BWMCNT            (REG_DMA37_BWMCNT)
#define PIXC0_CH2_DMA_BWMCNT_CUR        (REG_DMA37_BWMCNT_CUR)
#define PVP0_CPCI_DMA_DSCPTR_NXT        (REG_DMA41_DSCPTR_NXT)
#define PVP0_CPCI_DMA_ADDRSTART         (REG_DMA41_ADDRSTART)
#define PVP0_CPCI_DMA_CFG               (REG_DMA41_CFG)
#define PVP0_CPCI_DMA_XCNT              (REG_DMA41_XCNT)
#define PVP0_CPCI_DMA_XMOD              (REG_DMA41_XMOD)
#define PVP0_CPCI_DMA_YCNT              (REG_DMA41_YCNT)
#define PVP0_CPCI_DMA_YMOD              (REG_DMA41_YMOD)
#define PVP0_CPCI_DMA_DSCPTR_CUR        (REG_DMA41_DSCPTR_CUR)
#define PVP0_CPCI_DMA_DSCPTR_PRV        (REG_DMA41_DSCPTR_PRV)
#define PVP0_CPCI_DMA_ADDR_CUR          (REG_DMA41_ADDR_CUR)
#define PVP0_CPCI_DMA_STAT              (REG_DMA41_STAT)
#define PVP0_CPCI_DMA_XCNT_CUR          (REG_DMA41_XCNT_CUR)
#define PVP0_CPCI_DMA_YCNT_CUR          (REG_DMA41_YCNT_CUR)
#define PVP0_CPCI_DMA_BWLCNT            (REG_DMA41_BWLCNT)
#define PVP0_CPCI_DMA_BWLCNT_CUR        (REG_DMA41_BWLCNT_CUR)
#define PVP0_CPCI_DMA_BWMCNT            (REG_DMA41_BWMCNT)
#define PVP0_CPCI_DMA_BWMCNT_CUR        (REG_DMA41_BWMCNT_CUR)
#define PVP0_CPDOA_DMA_DSCPTR_NXT       (REG_DMA46_DSCPTR_NXT)
#define PVP0_CPDOA_DMA_ADDRSTART        (REG_DMA46_ADDRSTART)
#define PVP0_CPDOA_DMA_CFG              (REG_DMA46_CFG)
#define PVP0_CPDOA_DMA_XCNT             (REG_DMA46_XCNT)
#define PVP0_CPDOA_DMA_XMOD             (REG_DMA46_XMOD)
#define PVP0_CPDOA_DMA_YCNT             (REG_DMA46_YCNT)
#define PVP0_CPDOA_DMA_YMOD             (REG_DMA46_YMOD)
#define PVP0_CPDOA_DMA_DSCPTR_CUR       (REG_DMA46_DSCPTR_CUR)
#define PVP0_CPDOA_DMA_DSCPTR_PRV       (REG_DMA46_DSCPTR_PRV)
#define PVP0_CPDOA_DMA_ADDR_CUR         (REG_DMA46_ADDR_CUR)
#define PVP0_CPDOA_DMA_STAT             (REG_DMA46_STAT)
#define PVP0_CPDOA_DMA_XCNT_CUR         (REG_DMA46_XCNT_CUR)
#define PVP0_CPDOA_DMA_YCNT_CUR         (REG_DMA46_YCNT_CUR)
#define PVP0_CPDOA_DMA_BWLCNT           (REG_DMA46_BWLCNT)
#define PVP0_CPDOA_DMA_BWLCNT_CUR       (REG_DMA46_BWLCNT_CUR)
#define PVP0_CPDOA_DMA_BWMCNT           (REG_DMA46_BWMCNT)
#define PVP0_CPDOA_DMA_BWMCNT_CUR       (REG_DMA46_BWMCNT_CUR)
#define PVP0_CPDOB_DMA_DSCPTR_NXT       (REG_DMA38_DSCPTR_NXT)
#define PVP0_CPDOB_DMA_ADDRSTART        (REG_DMA38_ADDRSTART)
#define PVP0_CPDOB_DMA_CFG              (REG_DMA38_CFG)
#define PVP0_CPDOB_DMA_XCNT             (REG_DMA38_XCNT)
#define PVP0_CPDOB_DMA_XMOD             (REG_DMA38_XMOD)
#define PVP0_CPDOB_DMA_YCNT             (REG_DMA38_YCNT)
#define PVP0_CPDOB_DMA_YMOD             (REG_DMA38_YMOD)
#define PVP0_CPDOB_DMA_DSCPTR_CUR       (REG_DMA38_DSCPTR_CUR)
#define PVP0_CPDOB_DMA_DSCPTR_PRV       (REG_DMA38_DSCPTR_PRV)
#define PVP0_CPDOB_DMA_ADDR_CUR         (REG_DMA38_ADDR_CUR)
#define PVP0_CPDOB_DMA_STAT             (REG_DMA38_STAT)
#define PVP0_CPDOB_DMA_XCNT_CUR         (REG_DMA38_XCNT_CUR)
#define PVP0_CPDOB_DMA_YCNT_CUR         (REG_DMA38_YCNT_CUR)
#define PVP0_CPDOB_DMA_BWLCNT           (REG_DMA38_BWLCNT)
#define PVP0_CPDOB_DMA_BWLCNT_CUR       (REG_DMA38_BWLCNT_CUR)
#define PVP0_CPDOB_DMA_BWMCNT           (REG_DMA38_BWMCNT)
#define PVP0_CPDOB_DMA_BWMCNT_CUR       (REG_DMA38_BWMCNT_CUR)
#define PVP0_CPDOC_DMA_DSCPTR_NXT       (REG_DMA39_DSCPTR_NXT)
#define PVP0_CPDOC_DMA_ADDRSTART        (REG_DMA39_ADDRSTART)
#define PVP0_CPDOC_DMA_CFG              (REG_DMA39_CFG)
#define PVP0_CPDOC_DMA_XCNT             (REG_DMA39_XCNT)
#define PVP0_CPDOC_DMA_XMOD             (REG_DMA39_XMOD)
#define PVP0_CPDOC_DMA_YCNT             (REG_DMA39_YCNT)
#define PVP0_CPDOC_DMA_YMOD             (REG_DMA39_YMOD)
#define PVP0_CPDOC_DMA_DSCPTR_CUR       (REG_DMA39_DSCPTR_CUR)
#define PVP0_CPDOC_DMA_DSCPTR_PRV       (REG_DMA39_DSCPTR_PRV)
#define PVP0_CPDOC_DMA_ADDR_CUR         (REG_DMA39_ADDR_CUR)
#define PVP0_CPDOC_DMA_STAT             (REG_DMA39_STAT)
#define PVP0_CPDOC_DMA_XCNT_CUR         (REG_DMA39_XCNT_CUR)
#define PVP0_CPDOC_DMA_YCNT_CUR         (REG_DMA39_YCNT_CUR)
#define PVP0_CPDOC_DMA_BWLCNT           (REG_DMA39_BWLCNT)
#define PVP0_CPDOC_DMA_BWLCNT_CUR       (REG_DMA39_BWLCNT_CUR)
#define PVP0_CPDOC_DMA_BWMCNT           (REG_DMA39_BWMCNT)
#define PVP0_CPDOC_DMA_BWMCNT_CUR       (REG_DMA39_BWMCNT_CUR)
#define PVP0_CPSTAT_DMA_DSCPTR_NXT      (REG_DMA40_DSCPTR_NXT)
#define PVP0_CPSTAT_DMA_ADDRSTART       (REG_DMA40_ADDRSTART)
#define PVP0_CPSTAT_DMA_CFG             (REG_DMA40_CFG)
#define PVP0_CPSTAT_DMA_XCNT            (REG_DMA40_XCNT)
#define PVP0_CPSTAT_DMA_XMOD            (REG_DMA40_XMOD)
#define PVP0_CPSTAT_DMA_YCNT            (REG_DMA40_YCNT)
#define PVP0_CPSTAT_DMA_YMOD            (REG_DMA40_YMOD)
#define PVP0_CPSTAT_DMA_DSCPTR_CUR      (REG_DMA40_DSCPTR_CUR)
#define PVP0_CPSTAT_DMA_DSCPTR_PRV      (REG_DMA40_DSCPTR_PRV)
#define PVP0_CPSTAT_DMA_ADDR_CUR        (REG_DMA40_ADDR_CUR)
#define PVP0_CPSTAT_DMA_STAT            (REG_DMA40_STAT)
#define PVP0_CPSTAT_DMA_XCNT_CUR        (REG_DMA40_XCNT_CUR)
#define PVP0_CPSTAT_DMA_YCNT_CUR        (REG_DMA40_YCNT_CUR)
#define PVP0_CPSTAT_DMA_BWLCNT          (REG_DMA40_BWLCNT)
#define PVP0_CPSTAT_DMA_BWLCNT_CUR      (REG_DMA40_BWLCNT_CUR)
#define PVP0_CPSTAT_DMA_BWMCNT          (REG_DMA40_BWMCNT)
#define PVP0_CPSTAT_DMA_BWMCNT_CUR      (REG_DMA40_BWMCNT_CUR)
#define PVP0_MPCI_DMA_DSCPTR_NXT        (REG_DMA45_DSCPTR_NXT)
#define PVP0_MPCI_DMA_ADDRSTART         (REG_DMA45_ADDRSTART)
#define PVP0_MPCI_DMA_CFG               (REG_DMA45_CFG)
#define PVP0_MPCI_DMA_XCNT              (REG_DMA45_XCNT)
#define PVP0_MPCI_DMA_XMOD              (REG_DMA45_XMOD)
#define PVP0_MPCI_DMA_YCNT              (REG_DMA45_YCNT)
#define PVP0_MPCI_DMA_YMOD              (REG_DMA45_YMOD)
#define PVP0_MPCI_DMA_DSCPTR_CUR        (REG_DMA45_DSCPTR_CUR)
#define PVP0_MPCI_DMA_DSCPTR_PRV        (REG_DMA45_DSCPTR_PRV)
#define PVP0_MPCI_DMA_ADDR_CUR          (REG_DMA45_ADDR_CUR)
#define PVP0_MPCI_DMA_STAT              (REG_DMA45_STAT)
#define PVP0_MPCI_DMA_XCNT_CUR          (REG_DMA45_XCNT_CUR)
#define PVP0_MPCI_DMA_YCNT_CUR          (REG_DMA45_YCNT_CUR)
#define PVP0_MPCI_DMA_BWLCNT            (REG_DMA45_BWLCNT)
#define PVP0_MPCI_DMA_BWLCNT_CUR        (REG_DMA45_BWLCNT_CUR)
#define PVP0_MPCI_DMA_BWMCNT            (REG_DMA45_BWMCNT)
#define PVP0_MPCI_DMA_BWMCNT_CUR        (REG_DMA45_BWMCNT_CUR)
#define PVP0_MPDI_DMA_DSCPTR_NXT        (REG_DMA43_DSCPTR_NXT)
#define PVP0_MPDI_DMA_ADDRSTART         (REG_DMA43_ADDRSTART)
#define PVP0_MPDI_DMA_CFG               (REG_DMA43_CFG)
#define PVP0_MPDI_DMA_XCNT              (REG_DMA43_XCNT)
#define PVP0_MPDI_DMA_XMOD              (REG_DMA43_XMOD)
#define PVP0_MPDI_DMA_YCNT              (REG_DMA43_YCNT)
#define PVP0_MPDI_DMA_YMOD              (REG_DMA43_YMOD)
#define PVP0_MPDI_DMA_DSCPTR_CUR        (REG_DMA43_DSCPTR_CUR)
#define PVP0_MPDI_DMA_DSCPTR_PRV        (REG_DMA43_DSCPTR_PRV)
#define PVP0_MPDI_DMA_ADDR_CUR          (REG_DMA43_ADDR_CUR)
#define PVP0_MPDI_DMA_STAT              (REG_DMA43_STAT)
#define PVP0_MPDI_DMA_XCNT_CUR          (REG_DMA43_XCNT_CUR)
#define PVP0_MPDI_DMA_YCNT_CUR          (REG_DMA43_YCNT_CUR)
#define PVP0_MPDI_DMA_BWLCNT            (REG_DMA43_BWLCNT)
#define PVP0_MPDI_DMA_BWLCNT_CUR        (REG_DMA43_BWLCNT_CUR)
#define PVP0_MPDI_DMA_BWMCNT            (REG_DMA43_BWMCNT)
#define PVP0_MPDI_DMA_BWMCNT_CUR        (REG_DMA43_BWMCNT_CUR)
#define PVP0_MPDO_DMA_DSCPTR_NXT        (REG_DMA42_DSCPTR_NXT)
#define PVP0_MPDO_DMA_ADDRSTART         (REG_DMA42_ADDRSTART)
#define PVP0_MPDO_DMA_CFG               (REG_DMA42_CFG)
#define PVP0_MPDO_DMA_XCNT              (REG_DMA42_XCNT)
#define PVP0_MPDO_DMA_XMOD              (REG_DMA42_XMOD)
#define PVP0_MPDO_DMA_YCNT              (REG_DMA42_YCNT)
#define PVP0_MPDO_DMA_YMOD              (REG_DMA42_YMOD)
#define PVP0_MPDO_DMA_DSCPTR_CUR        (REG_DMA42_DSCPTR_CUR)
#define PVP0_MPDO_DMA_DSCPTR_PRV        (REG_DMA42_DSCPTR_PRV)
#define PVP0_MPDO_DMA_ADDR_CUR          (REG_DMA42_ADDR_CUR)
#define PVP0_MPDO_DMA_STAT              (REG_DMA42_STAT)
#define PVP0_MPDO_DMA_XCNT_CUR          (REG_DMA42_XCNT_CUR)
#define PVP0_MPDO_DMA_YCNT_CUR          (REG_DMA42_YCNT_CUR)
#define PVP0_MPDO_DMA_BWLCNT            (REG_DMA42_BWLCNT)
#define PVP0_MPDO_DMA_BWLCNT_CUR        (REG_DMA42_BWLCNT_CUR)
#define PVP0_MPDO_DMA_BWMCNT            (REG_DMA42_BWMCNT)
#define PVP0_MPDO_DMA_BWMCNT_CUR        (REG_DMA42_BWMCNT_CUR)
#define PVP0_MPSTAT_DMA_DSCPTR_NXT      (REG_DMA44_DSCPTR_NXT)
#define PVP0_MPSTAT_DMA_ADDRSTART       (REG_DMA44_ADDRSTART)
#define PVP0_MPSTAT_DMA_CFG             (REG_DMA44_CFG)
#define PVP0_MPSTAT_DMA_XCNT            (REG_DMA44_XCNT)
#define PVP0_MPSTAT_DMA_XMOD            (REG_DMA44_XMOD)
#define PVP0_MPSTAT_DMA_YCNT            (REG_DMA44_YCNT)
#define PVP0_MPSTAT_DMA_YMOD            (REG_DMA44_YMOD)
#define PVP0_MPSTAT_DMA_DSCPTR_CUR      (REG_DMA44_DSCPTR_CUR)
#define PVP0_MPSTAT_DMA_DSCPTR_PRV      (REG_DMA44_DSCPTR_PRV)
#define PVP0_MPSTAT_DMA_ADDR_CUR        (REG_DMA44_ADDR_CUR)
#define PVP0_MPSTAT_DMA_STAT            (REG_DMA44_STAT)
#define PVP0_MPSTAT_DMA_XCNT_CUR        (REG_DMA44_XCNT_CUR)
#define PVP0_MPSTAT_DMA_YCNT_CUR        (REG_DMA44_YCNT_CUR)
#define PVP0_MPSTAT_DMA_BWLCNT          (REG_DMA44_BWLCNT)
#define PVP0_MPSTAT_DMA_BWLCNT_CUR      (REG_DMA44_BWLCNT_CUR)
#define PVP0_MPSTAT_DMA_BWMCNT          (REG_DMA44_BWMCNT)
#define PVP0_MPSTAT_DMA_BWMCNT_CUR      (REG_DMA44_BWMCNT_CUR)
#define RSI0_DMA_DSCPTR_NXT             (REG_DMA10_DSCPTR_NXT)
#define RSI0_DMA_ADDRSTART              (REG_DMA10_ADDRSTART)
#define RSI0_DMA_CFG                    (REG_DMA10_CFG)
#define RSI0_DMA_XCNT                   (REG_DMA10_XCNT)
#define RSI0_DMA_XMOD                   (REG_DMA10_XMOD)
#define RSI0_DMA_YCNT                   (REG_DMA10_YCNT)
#define RSI0_DMA_YMOD                   (REG_DMA10_YMOD)
#define RSI0_DMA_DSCPTR_CUR             (REG_DMA10_DSCPTR_CUR)
#define RSI0_DMA_DSCPTR_PRV             (REG_DMA10_DSCPTR_PRV)
#define RSI0_DMA_ADDR_CUR               (REG_DMA10_ADDR_CUR)
#define RSI0_DMA_STAT                   (REG_DMA10_STAT)
#define RSI0_DMA_XCNT_CUR               (REG_DMA10_XCNT_CUR)
#define RSI0_DMA_YCNT_CUR               (REG_DMA10_YCNT_CUR)
#define RSI0_DMA_BWLCNT                 (REG_DMA10_BWLCNT)
#define RSI0_DMA_BWLCNT_CUR             (REG_DMA10_BWLCNT_CUR)
#define RSI0_DMA_BWMCNT                 (REG_DMA10_BWMCNT)
#define RSI0_DMA_BWMCNT_CUR             (REG_DMA10_BWMCNT_CUR)
#define SDU0_DMA_DSCPTR_NXT             (REG_DMA11_DSCPTR_NXT)
#define SDU0_DMA_ADDRSTART              (REG_DMA11_ADDRSTART)
#define SDU0_DMA_CFG                    (REG_DMA11_CFG)
#define SDU0_DMA_XCNT                   (REG_DMA11_XCNT)
#define SDU0_DMA_XMOD                   (REG_DMA11_XMOD)
#define SDU0_DMA_YCNT                   (REG_DMA11_YCNT)
#define SDU0_DMA_YMOD                   (REG_DMA11_YMOD)
#define SDU0_DMA_DSCPTR_CUR             (REG_DMA11_DSCPTR_CUR)
#define SDU0_DMA_DSCPTR_PRV             (REG_DMA11_DSCPTR_PRV)
#define SDU0_DMA_ADDR_CUR               (REG_DMA11_ADDR_CUR)
#define SDU0_DMA_STAT                   (REG_DMA11_STAT)
#define SDU0_DMA_XCNT_CUR               (REG_DMA11_XCNT_CUR)
#define SDU0_DMA_YCNT_CUR               (REG_DMA11_YCNT_CUR)
#define SDU0_DMA_BWLCNT                 (REG_DMA11_BWLCNT)
#define SDU0_DMA_BWLCNT_CUR             (REG_DMA11_BWLCNT_CUR)
#define SDU0_DMA_BWMCNT                 (REG_DMA11_BWMCNT)
#define SDU0_DMA_BWMCNT_CUR             (REG_DMA11_BWMCNT_CUR)
#define SPI0_RXDMA_DSCPTR_NXT           (REG_DMA7_DSCPTR_NXT)
#define SPI0_RXDMA_ADDRSTART            (REG_DMA7_ADDRSTART)
#define SPI0_RXDMA_CFG                  (REG_DMA7_CFG)
#define SPI0_RXDMA_XCNT                 (REG_DMA7_XCNT)
#define SPI0_RXDMA_XMOD                 (REG_DMA7_XMOD)
#define SPI0_RXDMA_YCNT                 (REG_DMA7_YCNT)
#define SPI0_RXDMA_YMOD                 (REG_DMA7_YMOD)
#define SPI0_RXDMA_DSCPTR_CUR           (REG_DMA7_DSCPTR_CUR)
#define SPI0_RXDMA_DSCPTR_PRV           (REG_DMA7_DSCPTR_PRV)
#define SPI0_RXDMA_ADDR_CUR             (REG_DMA7_ADDR_CUR)
#define SPI0_RXDMA_STAT                 (REG_DMA7_STAT)
#define SPI0_RXDMA_XCNT_CUR             (REG_DMA7_XCNT_CUR)
#define SPI0_RXDMA_YCNT_CUR             (REG_DMA7_YCNT_CUR)
#define SPI0_RXDMA_BWLCNT               (REG_DMA7_BWLCNT)
#define SPI0_RXDMA_BWLCNT_CUR           (REG_DMA7_BWLCNT_CUR)
#define SPI0_RXDMA_BWMCNT               (REG_DMA7_BWMCNT)
#define SPI0_RXDMA_BWMCNT_CUR           (REG_DMA7_BWMCNT_CUR)
#define SPI1_RXDMA_DSCPTR_NXT           (REG_DMA9_DSCPTR_NXT)
#define SPI1_RXDMA_ADDRSTART            (REG_DMA9_ADDRSTART)
#define SPI1_RXDMA_CFG                  (REG_DMA9_CFG)
#define SPI1_RXDMA_XCNT                 (REG_DMA9_XCNT)
#define SPI1_RXDMA_XMOD                 (REG_DMA9_XMOD)
#define SPI1_RXDMA_YCNT                 (REG_DMA9_YCNT)
#define SPI1_RXDMA_YMOD                 (REG_DMA9_YMOD)
#define SPI1_RXDMA_DSCPTR_CUR           (REG_DMA9_DSCPTR_CUR)
#define SPI1_RXDMA_DSCPTR_PRV           (REG_DMA9_DSCPTR_PRV)
#define SPI1_RXDMA_ADDR_CUR             (REG_DMA9_ADDR_CUR)
#define SPI1_RXDMA_STAT                 (REG_DMA9_STAT)
#define SPI1_RXDMA_XCNT_CUR             (REG_DMA9_XCNT_CUR)
#define SPI1_RXDMA_YCNT_CUR             (REG_DMA9_YCNT_CUR)
#define SPI1_RXDMA_BWLCNT               (REG_DMA9_BWLCNT)
#define SPI1_RXDMA_BWLCNT_CUR           (REG_DMA9_BWLCNT_CUR)
#define SPI1_RXDMA_BWMCNT               (REG_DMA9_BWMCNT)
#define SPI1_RXDMA_BWMCNT_CUR           (REG_DMA9_BWMCNT_CUR)
#define SPI0_TXDMA_DSCPTR_NXT           (REG_DMA6_DSCPTR_NXT)
#define SPI0_TXDMA_ADDRSTART            (REG_DMA6_ADDRSTART)
#define SPI0_TXDMA_CFG                  (REG_DMA6_CFG)
#define SPI0_TXDMA_XCNT                 (REG_DMA6_XCNT)
#define SPI0_TXDMA_XMOD                 (REG_DMA6_XMOD)
#define SPI0_TXDMA_YCNT                 (REG_DMA6_YCNT)
#define SPI0_TXDMA_YMOD                 (REG_DMA6_YMOD)
#define SPI0_TXDMA_DSCPTR_CUR           (REG_DMA6_DSCPTR_CUR)
#define SPI0_TXDMA_DSCPTR_PRV           (REG_DMA6_DSCPTR_PRV)
#define SPI0_TXDMA_ADDR_CUR             (REG_DMA6_ADDR_CUR)
#define SPI0_TXDMA_STAT                 (REG_DMA6_STAT)
#define SPI0_TXDMA_XCNT_CUR             (REG_DMA6_XCNT_CUR)
#define SPI0_TXDMA_YCNT_CUR             (REG_DMA6_YCNT_CUR)
#define SPI0_TXDMA_BWLCNT               (REG_DMA6_BWLCNT)
#define SPI0_TXDMA_BWLCNT_CUR           (REG_DMA6_BWLCNT_CUR)
#define SPI0_TXDMA_BWMCNT               (REG_DMA6_BWMCNT)
#define SPI0_TXDMA_BWMCNT_CUR           (REG_DMA6_BWMCNT_CUR)
#define SPI1_TXDMA_DSCPTR_NXT           (REG_DMA8_DSCPTR_NXT)
#define SPI1_TXDMA_ADDRSTART            (REG_DMA8_ADDRSTART)
#define SPI1_TXDMA_CFG                  (REG_DMA8_CFG)
#define SPI1_TXDMA_XCNT                 (REG_DMA8_XCNT)
#define SPI1_TXDMA_XMOD                 (REG_DMA8_XMOD)
#define SPI1_TXDMA_YCNT                 (REG_DMA8_YCNT)
#define SPI1_TXDMA_YMOD                 (REG_DMA8_YMOD)
#define SPI1_TXDMA_DSCPTR_CUR           (REG_DMA8_DSCPTR_CUR)
#define SPI1_TXDMA_DSCPTR_PRV           (REG_DMA8_DSCPTR_PRV)
#define SPI1_TXDMA_ADDR_CUR             (REG_DMA8_ADDR_CUR)
#define SPI1_TXDMA_STAT                 (REG_DMA8_STAT)
#define SPI1_TXDMA_XCNT_CUR             (REG_DMA8_XCNT_CUR)
#define SPI1_TXDMA_YCNT_CUR             (REG_DMA8_YCNT_CUR)
#define SPI1_TXDMA_BWLCNT               (REG_DMA8_BWLCNT)
#define SPI1_TXDMA_BWLCNT_CUR           (REG_DMA8_BWLCNT_CUR)
#define SPI1_TXDMA_BWMCNT               (REG_DMA8_BWMCNT)
#define SPI1_TXDMA_BWMCNT_CUR           (REG_DMA8_BWMCNT_CUR)
#define SPORT2_A_DMA_DSCPTR_NXT         (REG_DMA4_DSCPTR_NXT)
#define SPORT2_A_DMA_ADDRSTART          (REG_DMA4_ADDRSTART)
#define SPORT2_A_DMA_CFG                (REG_DMA4_CFG)
#define SPORT2_A_DMA_XCNT               (REG_DMA4_XCNT)
#define SPORT2_A_DMA_XMOD               (REG_DMA4_XMOD)
#define SPORT2_A_DMA_YCNT               (REG_DMA4_YCNT)
#define SPORT2_A_DMA_YMOD               (REG_DMA4_YMOD)
#define SPORT2_A_DMA_DSCPTR_CUR         (REG_DMA4_DSCPTR_CUR)
#define SPORT2_A_DMA_DSCPTR_PRV         (REG_DMA4_DSCPTR_PRV)
#define SPORT2_A_DMA_ADDR_CUR           (REG_DMA4_ADDR_CUR)
#define SPORT2_A_DMA_STAT               (REG_DMA4_STAT)
#define SPORT2_A_DMA_XCNT_CUR           (REG_DMA4_XCNT_CUR)
#define SPORT2_A_DMA_YCNT_CUR           (REG_DMA4_YCNT_CUR)
#define SPORT2_A_DMA_BWLCNT             (REG_DMA4_BWLCNT)
#define SPORT2_A_DMA_BWLCNT_CUR         (REG_DMA4_BWLCNT_CUR)
#define SPORT2_A_DMA_BWMCNT             (REG_DMA4_BWMCNT)
#define SPORT2_A_DMA_BWMCNT_CUR         (REG_DMA4_BWMCNT_CUR)
#define SPORT0_A_DMA_DSCPTR_NXT         (REG_DMA0_DSCPTR_NXT)
#define SPORT0_A_DMA_ADDRSTART          (REG_DMA0_ADDRSTART)
#define SPORT0_A_DMA_CFG                (REG_DMA0_CFG)
#define SPORT0_A_DMA_XCNT               (REG_DMA0_XCNT)
#define SPORT0_A_DMA_XMOD               (REG_DMA0_XMOD)
#define SPORT0_A_DMA_YCNT               (REG_DMA0_YCNT)
#define SPORT0_A_DMA_YMOD               (REG_DMA0_YMOD)
#define SPORT0_A_DMA_DSCPTR_CUR         (REG_DMA0_DSCPTR_CUR)
#define SPORT0_A_DMA_DSCPTR_PRV         (REG_DMA0_DSCPTR_PRV)
#define SPORT0_A_DMA_ADDR_CUR           (REG_DMA0_ADDR_CUR)
#define SPORT0_A_DMA_STAT               (REG_DMA0_STAT)
#define SPORT0_A_DMA_XCNT_CUR           (REG_DMA0_XCNT_CUR)
#define SPORT0_A_DMA_YCNT_CUR           (REG_DMA0_YCNT_CUR)
#define SPORT0_A_DMA_BWLCNT             (REG_DMA0_BWLCNT)
#define SPORT0_A_DMA_BWLCNT_CUR         (REG_DMA0_BWLCNT_CUR)
#define SPORT0_A_DMA_BWMCNT             (REG_DMA0_BWMCNT)
#define SPORT0_A_DMA_BWMCNT_CUR         (REG_DMA0_BWMCNT_CUR)
#define SPORT1_A_DMA_DSCPTR_NXT         (REG_DMA2_DSCPTR_NXT)
#define SPORT1_A_DMA_ADDRSTART          (REG_DMA2_ADDRSTART)
#define SPORT1_A_DMA_CFG                (REG_DMA2_CFG)
#define SPORT1_A_DMA_XCNT               (REG_DMA2_XCNT)
#define SPORT1_A_DMA_XMOD               (REG_DMA2_XMOD)
#define SPORT1_A_DMA_YCNT               (REG_DMA2_YCNT)
#define SPORT1_A_DMA_YMOD               (REG_DMA2_YMOD)
#define SPORT1_A_DMA_DSCPTR_CUR         (REG_DMA2_DSCPTR_CUR)
#define SPORT1_A_DMA_DSCPTR_PRV         (REG_DMA2_DSCPTR_PRV)
#define SPORT1_A_DMA_ADDR_CUR           (REG_DMA2_ADDR_CUR)
#define SPORT1_A_DMA_STAT               (REG_DMA2_STAT)
#define SPORT1_A_DMA_XCNT_CUR           (REG_DMA2_XCNT_CUR)
#define SPORT1_A_DMA_YCNT_CUR           (REG_DMA2_YCNT_CUR)
#define SPORT1_A_DMA_BWLCNT             (REG_DMA2_BWLCNT)
#define SPORT1_A_DMA_BWLCNT_CUR         (REG_DMA2_BWLCNT_CUR)
#define SPORT1_A_DMA_BWMCNT             (REG_DMA2_BWMCNT)
#define SPORT1_A_DMA_BWMCNT_CUR         (REG_DMA2_BWMCNT_CUR)
#define SPORT0_B_DMA_DSCPTR_NXT         (REG_DMA1_DSCPTR_NXT)
#define SPORT0_B_DMA_ADDRSTART          (REG_DMA1_ADDRSTART)
#define SPORT0_B_DMA_CFG                (REG_DMA1_CFG)
#define SPORT0_B_DMA_XCNT               (REG_DMA1_XCNT)
#define SPORT0_B_DMA_XMOD               (REG_DMA1_XMOD)
#define SPORT0_B_DMA_YCNT               (REG_DMA1_YCNT)
#define SPORT0_B_DMA_YMOD               (REG_DMA1_YMOD)
#define SPORT0_B_DMA_DSCPTR_CUR         (REG_DMA1_DSCPTR_CUR)
#define SPORT0_B_DMA_DSCPTR_PRV         (REG_DMA1_DSCPTR_PRV)
#define SPORT0_B_DMA_ADDR_CUR           (REG_DMA1_ADDR_CUR)
#define SPORT0_B_DMA_STAT               (REG_DMA1_STAT)
#define SPORT0_B_DMA_XCNT_CUR           (REG_DMA1_XCNT_CUR)
#define SPORT0_B_DMA_YCNT_CUR           (REG_DMA1_YCNT_CUR)
#define SPORT0_B_DMA_BWLCNT             (REG_DMA1_BWLCNT)
#define SPORT0_B_DMA_BWLCNT_CUR         (REG_DMA1_BWLCNT_CUR)
#define SPORT0_B_DMA_BWMCNT             (REG_DMA1_BWMCNT)
#define SPORT0_B_DMA_BWMCNT_CUR         (REG_DMA1_BWMCNT_CUR)
#define SPORT2_B_DMA_DSCPTR_NXT         (REG_DMA5_DSCPTR_NXT)
#define SPORT2_B_DMA_ADDRSTART          (REG_DMA5_ADDRSTART)
#define SPORT2_B_DMA_CFG                (REG_DMA5_CFG)
#define SPORT2_B_DMA_XCNT               (REG_DMA5_XCNT)
#define SPORT2_B_DMA_XMOD               (REG_DMA5_XMOD)
#define SPORT2_B_DMA_YCNT               (REG_DMA5_YCNT)
#define SPORT2_B_DMA_YMOD               (REG_DMA5_YMOD)
#define SPORT2_B_DMA_DSCPTR_CUR         (REG_DMA5_DSCPTR_CUR)
#define SPORT2_B_DMA_DSCPTR_PRV         (REG_DMA5_DSCPTR_PRV)
#define SPORT2_B_DMA_ADDR_CUR           (REG_DMA5_ADDR_CUR)
#define SPORT2_B_DMA_STAT               (REG_DMA5_STAT)
#define SPORT2_B_DMA_XCNT_CUR           (REG_DMA5_XCNT_CUR)
#define SPORT2_B_DMA_YCNT_CUR           (REG_DMA5_YCNT_CUR)
#define SPORT2_B_DMA_BWLCNT             (REG_DMA5_BWLCNT)
#define SPORT2_B_DMA_BWLCNT_CUR         (REG_DMA5_BWLCNT_CUR)
#define SPORT2_B_DMA_BWMCNT             (REG_DMA5_BWMCNT)
#define SPORT2_B_DMA_BWMCNT_CUR         (REG_DMA5_BWMCNT_CUR)
#define SPORT1_B_DMA_DSCPTR_NXT         (REG_DMA3_DSCPTR_NXT)
#define SPORT1_B_DMA_ADDRSTART          (REG_DMA3_ADDRSTART)
#define SPORT1_B_DMA_CFG                (REG_DMA3_CFG)
#define SPORT1_B_DMA_XCNT               (REG_DMA3_XCNT)
#define SPORT1_B_DMA_XMOD               (REG_DMA3_XMOD)
#define SPORT1_B_DMA_YCNT               (REG_DMA3_YCNT)
#define SPORT1_B_DMA_YMOD               (REG_DMA3_YMOD)
#define SPORT1_B_DMA_DSCPTR_CUR         (REG_DMA3_DSCPTR_CUR)
#define SPORT1_B_DMA_DSCPTR_PRV         (REG_DMA3_DSCPTR_PRV)
#define SPORT1_B_DMA_ADDR_CUR           (REG_DMA3_ADDR_CUR)
#define SPORT1_B_DMA_STAT               (REG_DMA3_STAT)
#define SPORT1_B_DMA_XCNT_CUR           (REG_DMA3_XCNT_CUR)
#define SPORT1_B_DMA_YCNT_CUR           (REG_DMA3_YCNT_CUR)
#define SPORT1_B_DMA_BWLCNT             (REG_DMA3_BWLCNT)
#define SPORT1_B_DMA_BWLCNT_CUR         (REG_DMA3_BWLCNT_CUR)
#define SPORT1_B_DMA_BWMCNT             (REG_DMA3_BWMCNT)
#define SPORT1_B_DMA_BWMCNT_CUR         (REG_DMA3_BWMCNT_CUR)
#define UART0_RXDMA_DSCPTR_NXT          (REG_DMA18_DSCPTR_NXT)
#define UART0_RXDMA_ADDRSTART           (REG_DMA18_ADDRSTART)
#define UART0_RXDMA_CFG                 (REG_DMA18_CFG)
#define UART0_RXDMA_XCNT                (REG_DMA18_XCNT)
#define UART0_RXDMA_XMOD                (REG_DMA18_XMOD)
#define UART0_RXDMA_YCNT                (REG_DMA18_YCNT)
#define UART0_RXDMA_YMOD                (REG_DMA18_YMOD)
#define UART0_RXDMA_DSCPTR_CUR          (REG_DMA18_DSCPTR_CUR)
#define UART0_RXDMA_DSCPTR_PRV          (REG_DMA18_DSCPTR_PRV)
#define UART0_RXDMA_ADDR_CUR            (REG_DMA18_ADDR_CUR)
#define UART0_RXDMA_STAT                (REG_DMA18_STAT)
#define UART0_RXDMA_XCNT_CUR            (REG_DMA18_XCNT_CUR)
#define UART0_RXDMA_YCNT_CUR            (REG_DMA18_YCNT_CUR)
#define UART0_RXDMA_BWLCNT              (REG_DMA18_BWLCNT)
#define UART0_RXDMA_BWLCNT_CUR          (REG_DMA18_BWLCNT_CUR)
#define UART0_RXDMA_BWMCNT              (REG_DMA18_BWMCNT)
#define UART0_RXDMA_BWMCNT_CUR          (REG_DMA18_BWMCNT_CUR)
#define UART1_RXDMA_DSCPTR_NXT          (REG_DMA20_DSCPTR_NXT)
#define UART1_RXDMA_ADDRSTART           (REG_DMA20_ADDRSTART)
#define UART1_RXDMA_CFG                 (REG_DMA20_CFG)
#define UART1_RXDMA_XCNT                (REG_DMA20_XCNT)
#define UART1_RXDMA_XMOD                (REG_DMA20_XMOD)
#define UART1_RXDMA_YCNT                (REG_DMA20_YCNT)
#define UART1_RXDMA_YMOD                (REG_DMA20_YMOD)
#define UART1_RXDMA_DSCPTR_CUR          (REG_DMA20_DSCPTR_CUR)
#define UART1_RXDMA_DSCPTR_PRV          (REG_DMA20_DSCPTR_PRV)
#define UART1_RXDMA_ADDR_CUR            (REG_DMA20_ADDR_CUR)
#define UART1_RXDMA_STAT                (REG_DMA20_STAT)
#define UART1_RXDMA_XCNT_CUR            (REG_DMA20_XCNT_CUR)
#define UART1_RXDMA_YCNT_CUR            (REG_DMA20_YCNT_CUR)
#define UART1_RXDMA_BWLCNT              (REG_DMA20_BWLCNT)
#define UART1_RXDMA_BWLCNT_CUR          (REG_DMA20_BWLCNT_CUR)
#define UART1_RXDMA_BWMCNT              (REG_DMA20_BWMCNT)
#define UART1_RXDMA_BWMCNT_CUR          (REG_DMA20_BWMCNT_CUR)
#define UART1_TXDMA_DSCPTR_NXT          (REG_DMA19_DSCPTR_NXT)
#define UART1_TXDMA_ADDRSTART           (REG_DMA19_ADDRSTART)
#define UART1_TXDMA_CFG                 (REG_DMA19_CFG)
#define UART1_TXDMA_XCNT                (REG_DMA19_XCNT)
#define UART1_TXDMA_XMOD                (REG_DMA19_XMOD)
#define UART1_TXDMA_YCNT                (REG_DMA19_YCNT)
#define UART1_TXDMA_YMOD                (REG_DMA19_YMOD)
#define UART1_TXDMA_DSCPTR_CUR          (REG_DMA19_DSCPTR_CUR)
#define UART1_TXDMA_DSCPTR_PRV          (REG_DMA19_DSCPTR_PRV)
#define UART1_TXDMA_ADDR_CUR            (REG_DMA19_ADDR_CUR)
#define UART1_TXDMA_STAT                (REG_DMA19_STAT)
#define UART1_TXDMA_XCNT_CUR            (REG_DMA19_XCNT_CUR)
#define UART1_TXDMA_YCNT_CUR            (REG_DMA19_YCNT_CUR)
#define UART1_TXDMA_BWLCNT              (REG_DMA19_BWLCNT)
#define UART1_TXDMA_BWLCNT_CUR          (REG_DMA19_BWLCNT_CUR)
#define UART1_TXDMA_BWMCNT              (REG_DMA19_BWMCNT)
#define UART1_TXDMA_BWMCNT_CUR          (REG_DMA19_BWMCNT_CUR)
#define UART0_TXDMA_DSCPTR_NXT          (REG_DMA17_DSCPTR_NXT)
#define UART0_TXDMA_ADDRSTART           (REG_DMA17_ADDRSTART)
#define UART0_TXDMA_CFG                 (REG_DMA17_CFG)
#define UART0_TXDMA_XCNT                (REG_DMA17_XCNT)
#define UART0_TXDMA_XMOD                (REG_DMA17_XMOD)
#define UART0_TXDMA_YCNT                (REG_DMA17_YCNT)
#define UART0_TXDMA_YMOD                (REG_DMA17_YMOD)
#define UART0_TXDMA_DSCPTR_CUR          (REG_DMA17_DSCPTR_CUR)
#define UART0_TXDMA_DSCPTR_PRV          (REG_DMA17_DSCPTR_PRV)
#define UART0_TXDMA_ADDR_CUR            (REG_DMA17_ADDR_CUR)
#define UART0_TXDMA_STAT                (REG_DMA17_STAT)
#define UART0_TXDMA_XCNT_CUR            (REG_DMA17_XCNT_CUR)
#define UART0_TXDMA_YCNT_CUR            (REG_DMA17_YCNT_CUR)
#define UART0_TXDMA_BWLCNT              (REG_DMA17_BWLCNT)
#define UART0_TXDMA_BWLCNT_CUR          (REG_DMA17_BWLCNT_CUR)
#define UART0_TXDMA_BWMCNT              (REG_DMA17_BWMCNT)
#define UART0_TXDMA_BWMCNT_CUR          (REG_DMA17_BWMCNT_CUR)

/********************************************************************************
    DMA Error CHID Definitions
 ********************************************************************************/
#define CHID_SPORT0_A_DMA               0
#define CHID_SPORT0_B_DMA               1
#define CHID_SPORT1_A_DMA               2
#define CHID_SPORT1_B_DMA               3
#define CHID_SPORT2_A_DMA               4
#define CHID_SPORT2_B_DMA               5
#define CHID_SPI0_TXDMA                 6
#define CHID_SPI0_RXDMA                 7
#define CHID_SPI1_TXDMA                 8
#define CHID_SPI1_RXDMA                 9
#define CHID_RSI0_DMA                   10
#define CHID_SDU0_DMA                   11
#define CHID_LP0_DMA                    13
#define CHID_LP1_DMA                    14
#define CHID_LP2_DMA                    15
#define CHID_LP3_DMA                    16
#define CHID_UART0_TXDMA                17
#define CHID_UART0_RXDMA                18
#define CHID_UART1_TXDMA                19
#define CHID_UART1_RXDMA                20
#define CHID_MDMA0_SRC_CRC0_IN          21
#define CHID_MDMA0_DST_CRC0_OUT         22
#define CHID_MDMA1_SRC_CRC1_IN          23
#define CHID_MDMA1_DST_CRC1_OUT         24
#define CHID_MDMA2_SRC                  25
#define CHID_MDMA2_DST                  26
#define CHID_MDMA3_SRC                  27
#define CHID_MDMA3_DST                  28
#define CHID_EPPI0_CH0_DMA              29
#define CHID_EPPI0_CH1_DMA              30
#define CHID_EPPI2_CH0_DMA              31
#define CHID_EPPI2_CH1_DMA              32
#define CHID_EPPI1_CH0_DMA              33
#define CHID_EPPI1_CH1_DMA              34
#define CHID_PIXC0_CH0_DMA              35
#define CHID_PIXC0_CH1_DMA              36
#define CHID_PIXC0_CH2_DMA              37
#define CHID_PVP0_CPDOB_DMA             38
#define CHID_PVP0_CPDOC_DMA             39
#define CHID_PVP0_CPSTAT_DMA            40
#define CHID_PVP0_CPCI_DMA              41
#define CHID_PVP0_MPDO_DMA              42
#define CHID_PVP0_MPDI_DMA              43
#define CHID_PVP0_MPSTAT_DMA            44
#define CHID_PVP0_MPCI_DMA              45
#define CHID_PVP0_CPDOA_DMA             46

/********************************************************************************
    Interrupt Definitions
 ********************************************************************************/
#define INTR_SEC0_ERR               0		/* SEC0 Error */
#define INTR_CGU0_EVT               1		/* CGU0 Event */
#define INTR_WDOG0_EXP              2		/* Watchdog Timer 0 Expiration */
#define INTR_WDOG1_EXP              3		/* Watchdog Timer 1 Expiration */
#define INTR_L2CTL0_ECC_ERR         4		/* L2 ECC Error */
#define INTR_L2CTL0_ECC_WARNING     5		/* L2 ECC Warning */
#define INTR_C0_DBL_FAULT           6		/* Core 0 Double Fault */
#define INTR_C1_DBL_FAULT           7		/* Core 1 Double Fault */
#define INTR_C0_HW_ERR              8		/* Core 0 Hardware Error */
#define INTR_C1_HW_ERR              9		/* Core 1 Hardware Error */
#define INTR_C0_NMI_L1_PARITY_ERR   10		/* Core 0 Unhandled NMI or L1 Memory Parity Error */
#define INTR_C1_NMI_L1_PARITY_ERR   11		/* Core 1 Unhandled NMI or L1 Memory Parity Error */
#define INTR_TIMER0_TMR0            12		/* GP Timer 0 */
#define INTR_TIMER0_TMR1            13		/* GP Timer 1 */
#define INTR_TIMER0_TMR2            14		/* GP Timer 2 */
#define INTR_TIMER0_TMR3            15		/* GP Timer 3 */
#define INTR_TIMER0_TMR4            16		/* GP Timer 4 */
#define INTR_TIMER0_TMR5            17		/* GP Timer 5 */
#define INTR_TIMER0_TMR6            18		/* GP Timer 6 */
#define INTR_TIMER0_TMR7            19		/* GP Timer 7 */
#define INTR_TIMER0_STAT            20		/* Timer0 Block Status */
#define INTR_PINT0                  21		/* Pin Interrupt Block 0 */
#define INTR_PINT1                  22		/* Pin Interrupt Block 1 */
#define INTR_PINT2                  23		/* Pin Interrupt Block 2 */
#define INTR_PINT3                  24		/* Pin Interrupt Block 3 */
#define INTR_PINT4                  25		/* Pin Interrupt Block 4 */
#define INTR_PINT5                  26		/* Pin Interrupt Block 5 */
#define INTR_CNT0                   27		/* GP Counter 0 */
#define INTR_PWM0_SYNC              28		/* PWM0 Sync */
#define INTR_PWM0_TRIP              29		/* PWM0 Trip */
#define INTR_PWM1_SYNC              30		/* PWM1 Sync */
#define INTR_PWM1_TRIP              31		/* PWM1 Trip */
#define INTR_TWI0                   32		/* TWI0 */
#define INTR_TWI1                   33		/* TWI1 */
#define INTR_SOFT0                  34		/* Software-Driven Interrupt 0 */
#define INTR_SOFT1                  35		/* Software-Driven Interrupt 1 */
#define INTR_SOFT2                  36		/* Software-Driven Interrupt 2 */
#define INTR_SOFT3                  37		/* Software-Driven Interrupt 3 */
#define INTR_ACM0_EVT_MISS          38		/* ACM0 Event Miss */
#define INTR_ACM0_EVT_COMPLETE      39		/* ACM0 Event Complete */
#define INTR_CAN0_RX                40		/* CAN0 RX */
#define INTR_CAN0_TX                41		/* CAN0 TX */
#define INTR_CAN0_STAT              42		/* CAN0 Status  */
#define INTR_SPORT0_A_DMA           43		/* DMA0 Data (SPORT0A) */
#define INTR_SPORT0_A_STAT          44		/* SPORT0A Status */
#define INTR_SPORT0_B_DMA           45		/* DMA1 Data (SPORT0B) */
#define INTR_SPORT0_B_STAT          46		/* SPORT0B Status */
#define INTR_SPORT1_A_DMA           47		/* DMA2 Data (SPORT1A) */
#define INTR_SPORT1_A_STAT          48		/* SPORT1A Status */
#define INTR_SPORT1_B_DMA           49		/* DMA3 Data (SPORT1B) */
#define INTR_SPORT1_B_STAT          50		/* SPORT1B Status */
#define INTR_SPORT2_A_DMA           51		/* DMA4 Data (SPORT2A) */
#define INTR_SPORT2_A_STAT          52		/* SPORT2A Status */
#define INTR_SPORT2_B_DMA           53		/* DMA5 Data (SPORT2B) */
#define INTR_SPORT2_B_STAT          54		/* SPORT2B Status */
#define INTR_SPI0_TXDMA             55		/* DMA6 Data (SPI0 TX) */
#define INTR_SPI0_RXDMA             56		/* DMA7 Data (SPI0 RX) */
#define INTR_SPI0_STAT              57		/* SPI0 Status */
#define INTR_SPI1_TXDMA             58		/* DMA8 Data (SPI1 TX) */
#define INTR_SPI1_RXDMA             59		/* DMA9 Data (SPI1 RX) */
#define INTR_SPI1_STAT              60		/* SPI1 Status */
#define INTR_RSI0_DMA               61		/* DMA10 Data (RSI) */
#define INTR_RSI0_INT0              62		/* RSI Interrupt 0 */
#define INTR_RSI0_INT1              63		/* RSI Interrupt 1 */
#define INTR_SDU0_DMA               64		/* DMA11 Data (SDU) */
/*       -- RESERVED --             65		   DMA12 Data (Reserved) */
/*       -- RESERVED --             66		   Reserved */
/*       -- RESERVED --             67		   Reserved */
#define INTR_EMAC0_STAT             68		/* Ethernet MAC 0 Status */
/*       -- RESERVED --             69		   EMAC0 Power (Reserved) */
#define INTR_EMAC1_STAT             70		/* Ethernet MAC 1 Status */
/*       -- RESERVED --             71		   EMAC1 Power (Reserved) */
#define INTR_LP0_DMA                72		/* DMA13 Data (Link Port 0) */
#define INTR_LP0_STAT               73		/* Link Port 0 Status */
#define INTR_LP1_DMA                74		/* DMA14 Data (Link Port 1) */
#define INTR_LP1_STAT               75		/* Link Port 1 Status */
#define INTR_LP2_DMA                76		/* DMA15 Data (Link Port 2) */
#define INTR_LP2_STAT               77		/* Link Port 2 Status */
#define INTR_LP3_DMA                78		/* DMA16 Data(Link Port 3) */
#define INTR_LP3_STAT               79		/* Link Port 3 Status */
#define INTR_UART0_TXDMA            80		/* DMA17 Data (UART0 TX) */
#define INTR_UART0_RXDMA            81		/* DMA18 Data (UART0 RX) */
#define INTR_UART0_STAT             82		/* UART0 Status */
#define INTR_UART1_TXDMA            83		/* DMA19 Data (UART1_TX) */
#define INTR_UART1_RXDMA            84		/* DMA20 Data (UART1 RX) */
#define INTR_UART1_STAT             85		/* UART1 Status */
#define INTR_MDMA0_SRC_CRC0_IN      86		/* DMA21 Data (MDMA Stream 0 Source/CRC0 Input Channel) */
#define INTR_MDMA0_DST_CRC0_OUT     87		/* DMA22 Data (MDMA Stream 0 Destination/CRC0 Output Channel) */
#define INTR_CRC0_DCNTEXP           88		/* CRC0 DATACOUNT Expiration */
#define INTR_CRC0_ERR               89		/* CRC0 Error */
#define INTR_MDMA1_SRC_CRC1_IN      90		/* DMA23 Data (MDMA Stream 1 Source/CRC1 Input Channel) */
#define INTR_MDMA1_DST_CRC1_OUT     91		/* DMA24 Data (MDMA Stream 1 Destination/CRC1 Output Channel) */
#define INTR_CRC1_DCNTEXP           92		/* CRC1 DATACOUNT Expiration */
#define INTR_CRC1_ERR               93		/* CRC1 Error */
#define INTR_MDMA2_SRC              94		/* DMA25 Data (MDMA Stream 2 Source Channel) */
#define INTR_MDMA2_DST              95		/* DMA26 Data (MDMA Stream 2 Destination Channel) */
#define INTR_MDMA3_SRC              96		/* DMA27 Data (MDMA Stream 3 Source Channel) */
#define INTR_MDMA3_DST              97		/* DMA28 Data (MDMA Stream 3 Destination Channel) */
#define INTR_EPPI0_CH0_DMA          98		/* DMA29 Data (EPPI0 Channel 0) */
#define INTR_EPPI0_CH1_DMA          99		/* DMA30 Data (EPPI0 Channel 1) */
#define INTR_EPPI0_STAT             100		/* EPPI0 Status */
#define INTR_EPPI2_CH0_DMA          101		/* DMA31 Data (EPPI2 Channel 0) */
#define INTR_EPPI2_CH1_DMA          102		/* DMA32 Data (EPPI2 Channel 1) */
#define INTR_EPPI2_STAT             103		/* EPPI2 Status */
#define INTR_EPPI1_CH0_DMA          104		/* DMA33 Data (EPPI1 Channel 0) */
#define INTR_EPPI1_CH1_DMA          105		/* DMA34 Data (EPPI1 Channel 1) */
#define INTR_EPPI1_STAT             106		/* EPPI1 Status */
#define INTR_PIXC0_CH0_DMA          107		/* DMA35 Data (PIXC Channel 0) */
#define INTR_PIXC0_CH1_DMA          108		/* DMA36 Data (PIXC Channel 1) */
#define INTR_PIXC0_CH2_DMA          109		/* DMA37 Data (PIXC Channel 2) */
#define INTR_PIXC0_STAT             110		/* PIXC Status */
#define INTR_PVP0_CPDOB_DMA         111		/* DMA38 Data (PVP0 Camera Pipe Data Out B) */
#define INTR_PVP0_CPDOC_DMA         112		/* DMA39 Data (PVP0 Camera Pipe Data Out C) */
#define INTR_PVP0_CPSTAT_DMA        113		/* DMA40 Data (PVP0 Camera Pipe Status Out) */
#define INTR_PVP0_CPCI_DMA          114		/* DMA41 Data (PVP0 Camera Pipe Control In) */
#define INTR_PVP0_STAT0             115		/* PVP0 Status 0 */
#define INTR_PVP0_MPDO_DMA          116		/* DMA42 Data (PVP0 Memory Pipe Data Out) */
#define INTR_PVP0_MPDI_DMA          117		/* DMA43 Data (PVP0 Memory Pipe Data In) */
#define INTR_PVP0_MPSTAT_DMA        118		/* DMA44 Data (PVP0 Memory Pipe Status Out) */
#define INTR_PVP0_MPCI_DMA          119		/* DMA45 Data (PVP0 Memory Pipe Control In) */
#define INTR_PVP0_CPDOA_DMA         120		/* DMA46 Data (PVP0 Camera Pipe Data Out A) */
#define INTR_PVP0_STAT1             121		/* PVP0 Status 1 */
#define INTR_USB0_STAT              122		/* USB0 Status/FIFO Data Ready */
#define INTR_USB0_DATA              123		/* USB0 DMA Status/Transfer Complete */
#define INTR_TRU0_INT0              124		/* TRU0 Interrupt 0 */
#define INTR_TRU0_INT1              125		/* TRU0 Interrupt 1 */
#define INTR_TRU0_INT2              126		/* TRU0 Interrupt 2 */
#define INTR_TRU0_INT3              127		/* TRU0 Interrupt 3 */
#define INTR_DMAC_ERR               128		/* DMA0-DMA46 Error */
#define INTR_CGU0_ERR               129		/* CGU0 Error */
/*       -- RESERVED --             130		   Reserved */
#define INTR_DPM0_EVT               131		/* DPM0 Event */
/*       -- RESERVED --             132		   Reserved */
#define INTR_SWU0                   133		/* SWU0 */
#define INTR_SWU1                   134		/* SWU1 */
#define INTR_SWU2                   135		/* SWU2 */
#define INTR_SWU3                   136		/* SWU3 */
#define INTR_SWU4                   137		/* SWU4 */
#define INTR_SWU5                   138		/* SWU5 */
#define INTR_SWU6                   139		/* SWU6 */

/********************************************************************************
    Module Parameter Definitions
 ********************************************************************************/
#define PARAM_SCB0_NUM_MASTERS               6
#define PARAM_SCB1_NUM_MASTERS               1
#define PARAM_SCB2_NUM_MASTERS               1
#define PARAM_SCB3_NUM_MASTERS               1
#define PARAM_SCB4_NUM_MASTERS               1
#define PARAM_SCB5_NUM_MASTERS               1
#define PARAM_SCB6_NUM_MASTERS               1
#define PARAM_SCB7_NUM_MASTERS               1
#define PARAM_SCB8_NUM_MASTERS               1
#define PARAM_SCB9_NUM_MASTERS               1
#define PARAM_SCB10_NUM_MASTERS              3
#define PARAM_SCB11_NUM_MASTERS              7
#define PARAM_USB0_DMA_CHAN                  8
#define PARAM_USB0_NUM_ENDPTS               12
#define PARAM_USB0_NUM_ENDPTS_MINUS_1       11
#define PARAM_CGU0_CSEL_DEFAULT              4
#define PARAM_CGU0_DSEL_DEFAULT              8
#define PARAM_CGU0_MSEL_DEFAULT             16
#define PARAM_CGU0_OSEL_DEFAULT             16
#define PARAM_CGU0_PLLBP_DEFAULT             0
#define PARAM_CGU0_S0SEL_DEFAULT             2
#define PARAM_CGU0_S1SEL_DEFAULT             2
#define PARAM_CGU0_SYSSEL_DEFAULT            8
#define PARAM_TRU0_SSRCOUNT                 87
#define PARAM_L1DM0_L1_BASE_ADDRESS       1022
#define PARAM_RCU0_CCOUNT                    2
#define PARAM_RCU0_CRCTL_CR_INIT             2
#define PARAM_RCU0_CRSTAT_CR_INIT            3
#define PARAM_RCU0_SICOUNT                   2
#define PARAM_RCU0_SVECT_INIT            65440
#define PARAM_DPM0_NUM_CCLK                  2
#define PARAM_DPM0_NUM_HV                    8
#define PARAM_DPM0_NUM_SCLK                  4
#define PARAM_DPM0_NUM_WAKE                  8
#define PARAM_SEC0_CCOUNT                    2
#define PARAM_SEC0_SCOUNT                  140
#define PARAM_SPU0_CM_COUNT                  2
#define PARAM_SPU0_END_POINT_COUNT          86
#define PARAM_SPU0_SM_COUNT                  2
#define PARAM_SDU0_IDCODE_PRID               0
#define PARAM_SDU0_IDCODE_REVID              0
#define PARAM_TIMER0_NUMTIMERS               8

/********************************************************************************
    Trigger Master Definitions
 ********************************************************************************/
/*      -- RESERVED --                 0 		   Reserved */
#define TRGM_CGU0_EVT                  1 		/* CGU Event */
#define TRGM_TIMER0_TMR0               2 		/* TMR0 */
#define TRGM_TIMER0_TMR1               3 		/* TMR1 */
#define TRGM_TIMER0_TMR2               4 		/* TMR2 */
#define TRGM_TIMER0_TMR3               5 		/* TMR3 */
#define TRGM_TIMER0_TMR4               6 		/* TMR4 */
#define TRGM_TIMER0_TMR5               7 		/* TMR5 */
#define TRGM_TIMER0_TMR6               8 		/* TMR6 */
#define TRGM_TIMER0_TMR7               9 		/* TMR7 */
#define TRGM_PINT0                     10 		/* PINT0 */
#define TRGM_PINT1                     11 		/* PINT1 */
#define TRGM_PINT2                     12 		/* PINT2 */
#define TRGM_PINT3                     13 		/* PINT3 */
#define TRGM_PINT4                     14 		/* PINT4 */
#define TRGM_PINT5                     15 		/* PINT5 */
#define TRGM_CNT0                      16 		/* COUNTER */
#define TRGM_PWM0_SYNC                 17 		/* EPWM0_SYNC */
#define TRGM_PWM1_SYNC                 18 		/* EPWM1_SYNC */
#define TRGM_ACM0_EVT_COMPLETE         19 		/* ACM Event Complete */
#define TRGM_SPORT0_A_DMA              20 		/* DMA0 Data (SPORT0A) */
#define TRGM_SPORT0_B_DMA              21 		/* DMA1 Data (SPORT0B) */
#define TRGM_SPORT1_A_DMA              22 		/* DMA2 Data (SPORT1A) */
#define TRGM_SPORT1_B_DMA              23 		/* DMA3 Data (SPORT1B) */
#define TRGM_SPORT2_A_DMA              24 		/* DMA4 Data (SPORT2A) */
#define TRGM_SPORT2_B_DMA              25 		/* DMA5 Data (SPORT2B) */
#define TRGM_SPI0_TXDMA                26 		/* DMA6 Data (SPI0 TX) */
#define TRGM_SPI0_RXDMA                27 		/* DMA7 Data (SPI0 RX) */
#define TRGM_SPI1_TXDMA                28 		/* DMA8 Data (SPI1 TX) */
#define TRGM_SPI1_RXDMA                29 		/* DMA9 Data (SPI1 RX) */
#define TRGM_RSI0_DMA                  30 		/* DMA10 Data (RSI) */
#define TRGM_SDU0_DMA                  31 		/* DMA11 Data (SDU) */
/*      -- RESERVED --                 32 		   DMA12 Data (Reserved) */
#define TRGM_EMAC0_STAT                33 		/* EMAC0 Status */
#define TRGM_EMAC1_STAT                34 		/* EMAC1 Status */
#define TRGM_LP0_DMA                   35 		/* DMA13 Data (Link Port 0) */
#define TRGM_LP1_DMA                   36 		/* DMA14 Data (Link Port 1) */
#define TRGM_LP2_DMA                   37 		/* DMA15 Data (Link Port 2) */
#define TRGM_LP3_DMA                   38 		/* DMA16 Data(Link Port 3) */
#define TRGM_UART0_TXDMA               39 		/* DMA17 Data (UART0 TX) */
#define TRGM_UART0_RXDMA               40 		/* DMA18 Data (UART0 RX) */
#define TRGM_UART1_TXDMA               41 		/* DMA19 Data (UART1_TX) */
#define TRGM_UART1_RXDMA               42 		/* DMA20 Data (UART1 RX) */
#define TRGM_MDMA0_SRC_CRC0_IN         43 		/* DMA21 Data (MDMA Stream 0 Source/CRC0 Input Channel) */
#define TRGM_MDMA0_DST_CRC0_OUT        44 		/* DMA22 Data (MDMA Stream 0 Destination/CRC0 Output Channel) */
#define TRGM_MDMA1_SRC_CRC1_IN         45 		/* DMA23 Data (MDMA Stream 1 Source/CRC1 Input Channel) */
#define TRGM_MDMA1_DST_CRC1_OUT        46 		/* DMA24 Data (MDMA Stream 1 Destination/CRC1 Output Channel) */
#define TRGM_MDMA2_SRC                 47 		/* DMA25 Data (MDMA Stream 2 Source Channel) */
#define TRGM_MDMA2_DST                 48 		/* DMA26 Data (MDMA Stream 2 Destination Channel) */
#define TRGM_MDMA3_SRC                 49 		/* DMA27 Data (MDMA Stream 3 Source Channel) */
#define TRGM_MDMA3_DST                 50 		/* DMA28 Data (MDMA Stream 3 Destination Channel) */
#define TRGM_EPPI0_CH0_DMA             51 		/* DMA29 Data (EPPI0 Channel 0) */
#define TRGM_EPPI0_CH1_DMA             52 		/* DMA30 Data (EPPI0 Channel 1) */
#define TRGM_EPPI2_CH0_DMA             53 		/* DMA31 Data (EPPI2 Channel 0) */
#define TRGM_EPPI2_CH1_DMA             54 		/* DMA32 Data (EPPI2 Channel 1) */
#define TRGM_EPPI1_CH0_DMA             55 		/* DMA33 Data (EPPI1 Channel 0) */
#define TRGM_EPPI1_CH1_DMA             56 		/* DMA34 Data (EPPI1 Channel 1) */
#define TRGM_PIXC0_CH0_DMA             57 		/* DMA35 Data (PIXC Channel 0) */
#define TRGM_PIXC0_CH1_DMA             58 		/* DMA36 Data (PIXC Channel 1) */
#define TRGM_PIXC0_CH2_DMA             59 		/* DMA37 Data (PIXC Channel 2) */
#define TRGM_PVP0_CPDOB_DMA            60 		/* DMA38 Data (PVP0 Camera Pipe Data Out B) */
#define TRGM_PVP0_CPDOC_DMA            61 		/* DMA39 Data (PVP0 Camera Pipe Data Out C) */
#define TRGM_PVP0_CPSTAT_DMA           62 		/* DMA40 Data (PVP0 Camera Pipe Status Out) */
#define TRGM_PVP0_CPCI_DMA             63 		/* DMA41 Data (PVP0 Camera Pipe Control In) */
#define TRGM_PVP0_MPDO_DMA             64 		/* DMA42 Data (PVP0 Memory Pipe Data Out) */
#define TRGM_PVP0_MPDI_DMA             65 		/* DMA43 Data (PVP0 Memory Pipe Data In) */
#define TRGM_PVP0_MPSTAT_DMA           66 		/* DMA44 Data (PVP0 Memory Pipe Status Out) */
#define TRGM_PVP0_MPCI_DMA             67 		/* DMA45 Data (PVP0 Memory Pipe Control In) */
#define TRGM_PVP0_CPDOA_DMA            68 		/* DMA46 Data (PVP0 Camera Pipe Data Out A) */
#define TRGM_USB0_DATA                 69 		/* USB DMA Status/Transfer Complete */
/*      -- RESERVED --                 70 		   Reserved */
#define TRGM_SEC0_FAULT                71 		/* SEC Fault Interface */
#define TRGM_SOFT0                     72 		/* Software-Driven Trigger 0 */
#define TRGM_SOFT1                     73 		/* Software-Driven Trigger 1 */
#define TRGM_SOFT2                     74 		/* Software-Driven Trigger 2 */
#define TRGM_SOFT3                     75 		/* Software-Driven Trigger 3 */
#define TRGM_SOFT4                     76 		/* Software-Driven Trigger 4 */
#define TRGM_SOFT5                     77 		/* Software-Driven Trigger 5 */
#define TRGM_PVP0_STAT0                78 		/* PVP Status 0 */
#define TRGM_PVP0_STAT1                79 		/* PVP Status 1 */
#define TRGM_SWU0                      80 		/* SWU0 */
#define TRGM_SWU1                      81 		/* SWU1 */
#define TRGM_SWU2                      82 		/* SWU2 */
#define TRGM_SWU3                      83 		/* SWU3 */
#define TRGM_SWU4                      84 		/* SWU4 */
#define TRGM_SWU5                      85 		/* SWU5 */
#define TRGM_SWU6                      86 		/* SWU6 */

/********************************************************************************
    Trigger Slave Definitions
 ********************************************************************************/
#define TRGS_RCU0_SYSRST0              0 		/* RCU System Reset Slave 0 */
#define TRGS_RCU0_SYSRST1              1 		/* RCU System Reset Slave 1 */
#define TRGS_TIMER0_TMR0               2 		/* TMR0 */
#define TRGS_TIMER0_TMR1               3 		/* TMR1 */
#define TRGS_TIMER0_TMR2               4 		/* TMR2 */
#define TRGS_TIMER0_TMR3               5 		/* TMR3 */
#define TRGS_TIMER0_TMR4               6 		/* TMR4 */
#define TRGS_TIMER0_TMR5               7 		/* TMR5 */
#define TRGS_TIMER0_TMR6               8 		/* TMR6 */
#define TRGS_TIMER0_TMR7               9 		/* TMR7 */
/*      -- RESERVED --                 10 		   Reserved */
/*      -- RESERVED --                 11 		   Reserved */
#define TRGS_C0_NMI_S0                 12 		/* NMI (Core 0) Slave 0 */
#define TRGS_C0_NMI_S1                 13 		/* NMI (Core 0) Slave 1 */
#define TRGS_C1_NMI_S0                 14 		/* NMI (Core 1) Slave 0 */
#define TRGS_C1_NMI_S1                 15 		/* NMI (Core 1) Slave 1 */
#define TRGS_TRU0_IRQ0                 16 		/* TRU Master Interrupt Request 0 */
#define TRGS_TRU0_IRQ1                 17 		/* TRU Master Interrupt Request 1 */
#define TRGS_TRU0_IRQ2                 18 		/* TRU Master Interrupt Request 2 */
#define TRGS_TRU0_IRQ3                 19 		/* TRU Master Interrupt Request 3 */
#define TRGS_SPORT0_A_DMA              20 		/* DMA0 Data (SPORT0A) */
#define TRGS_SPORT0_B_DMA              21 		/* DMA1 Data (SPORT0B) */
#define TRGS_SPORT1_A_DMA              22 		/* DMA2 Data (SPORT1A) */
#define TRGS_SPORT1_B_DMA              23 		/* DMA3 Data (SPORT1B) */
#define TRGS_SPORT2_A_DMA              24 		/* DMA4 Data (SPORT2A) */
#define TRGS_SPORT2_B_DMA              25 		/* DMA5 Data (SPORT2B) */
#define TRGS_SPI0_TXDMA                26 		/* DMA6 Data (SPI0 TX) */
#define TRGS_SPI0_RXDMA                27 		/* DMA7 Data (SPI0 RX) */
#define TRGS_SPI1_TXDMA                28 		/* DMA8 Data (SPI1 TX) */
#define TRGS_SPI1_RXDMA                29 		/* DMA9 Data (SPI1 RX) */
#define TRGS_RSI0_DMA                  30 		/* DMA10 Data (RSI) */
#define TRGS_SDU0_DMA                  31 		/* DMA11 Data (SDU) */
/*      -- RESERVED --                 32 		   DMA12 Data (Reserved) */
#define TRGS_ACM0_TRIG2                33 		/* ACM Trigger Input 2 */
#define TRGS_ACM0_TRIG3                34 		/* ACM Trigger Input 3 */
#define TRGS_LP0_DMA                   35 		/* DMA13 Data (Link Port 0) */
#define TRGS_LP1_DMA                   36 		/* DMA14 Data (Link Port 1) */
#define TRGS_LP2_DMA                   37 		/* DMA15 Data (Link Port 2) */
#define TRGS_LP3_DMA                   38 		/* DMA16 Data(Link Port 3) */
#define TRGS_UART0_TXDMA               39 		/* DMA17 Data (UART0 TX) */
#define TRGS_UART0_RXDMA               40 		/* DMA18 Data (UART0 RX) */
#define TRGS_UART1_TXDMA               41 		/* DMA19 Data (UART1_TX) */
#define TRGS_UART1_RXDMA               42 		/* DMA20 Data (UART1 RX) */
#define TRGS_MDMA0_SRC_CRC0_IN         43 		/* DMA21 Data (MDMA Stream 0 Source/CRC0 Input Channel) */
#define TRGS_MDMA0_DST_CRC0_OUT        44 		/* DMA22 Data (MDMA Stream 0 Destination/CRC0 Output Channel) */
#define TRGS_MDMA1_SRC_CRC1_IN         45 		/* DMA23 Data (MDMA Stream 1 Source/CRC1 Input Channel) */
#define TRGS_MDMA1_DST_CRC1_OUT        46 		/* DMA24 Data (MDMA Stream 1 Destination/CRC1 Output Channel) */
#define TRGS_MDMA2_SRC                 47 		/* DMA25 Data (MDMA Stream 2 Source Channel) */
#define TRGS_MDMA2_DST                 48 		/* DMA26 Data (MDMA Stream 2 Destination Channel) */
#define TRGS_MDMA3_SRC                 49 		/* DMA27 Data (MDMA Stream 3 Source Channel) */
#define TRGS_MDMA3_DST                 50 		/* DMA28 Data (MDMA Stream 3 Destination Channel) */
#define TRGS_EPPI0_CH0_DMA             51 		/* DMA29 Data (EPPI0 Channel 0) */
#define TRGS_EPPI0_CH1_DMA             52 		/* DMA30 Data (EPPI0 Channel 1) */
#define TRGS_EPPI2_CH0_DMA             53 		/* DMA31 Data (EPPI2 Channel 0) */
#define TRGS_EPPI2_CH1_DMA             54 		/* DMA32 Data (EPPI2 Channel 1) */
#define TRGS_EPPI1_CH0_DMA             55 		/* DMA33 Data (EPPI1 Channel 0) */
#define TRGS_EPPI1_CH1_DMA             56 		/* DMA34 Data (EPPI1 Channel 1) */
#define TRGS_PIXC0_CH0_DMA             57 		/* DMA35 Data (PIXC Channel 0) */
#define TRGS_PIXC0_CH1_DMA             58 		/* DMA36 Data (PIXC Channel 1) */
#define TRGS_PIXC0_CH2_DMA             59 		/* DMA37 Data (PIXC Channel 2) */
#define TRGS_PVP0_CPDOB_DMA            60 		/* DMA38 Data (PVP0 Camera Pipe Data Out B) */
#define TRGS_PVP0_CPDOC_DMA            61 		/* DMA39 Data (PVP0 Camera Pipe Data Out C) */
#define TRGS_PVP0_CPSTAT_DMA           62 		/* DMA40 Data (PVP0 Camera Pipe Status Out) */
#define TRGS_PVP0_CPCI_DMA             63 		/* DMA41 Data (PVP0 Camera Pipe Control In) */
#define TRGS_PVP0_MPDO_DMA             64 		/* DMA42 Data (PVP0 Memory Pipe Data Out) */
#define TRGS_PVP0_MPDI_DMA             65 		/* DMA43 Data (PVP0 Memory Pipe Data In) */
#define TRGS_PVP0_MPSTAT_DMA           66 		/* DMA44 Data (PVP0 Memory Pipe Status Out) */
#define TRGS_PVP0_MPCI_DMA             67 		/* DMA45 Data (PVP0 Memory Pipe Control In) */
#define TRGS_PVP0_CPDOA_DMA            68 		/* DMA46 Data (PVP0 Camera Pipe Data Out A) */
#define TRGS_SDU0                      69 		/* SDU Slave */
/*      -- RESERVED --                 70 		   Reserved */
#define TRGS_C0_WAKE0                  71 		/* Core 0 Wakeup Input 0 */
#define TRGS_C0_WAKE1                  72 		/* Core 0 Wakeup Input 1 */
#define TRGS_C0_WAKE2                  73 		/* Core 0 Wakeup Input 2 */
#define TRGS_C0_WAKE3                  74 		/* Core 0 Wakeup Input 3 */
#define TRGS_C1_WAKE0                  75 		/* Core 1 Wakeup Input 0 */
#define TRGS_C1_WAKE1                  76 		/* Core 1 Wakeup Input 1 */
#define TRGS_C1_WAKE2                  77 		/* Core 1 Wakeup Input 2 */
#define TRGS_C1_WAKE3                  78 		/* Core 1 Wakeup Input 3 */
/*      -- RESERVED --                 79 		   Reserved */
#define TRGS_SWU0                      80 		/* SWU0 */
#define TRGS_SWU1                      81 		/* SWU1 */
#define TRGS_SWU2                      82 		/* SWU2 */
#define TRGS_SWU3                      83 		/* SWU3 */
#define TRGS_SWU4                      84 		/* SWU4 */
#define TRGS_SWU5                      85 		/* SWU5 */
#define TRGS_SWU6                      86 		/* SWU6 */

/* ============================================================================
       Memory Map Macros
   ============================================================================ */

/* ADSP-DEVON-FPGA is a multi-core processor */

#define MEM_NUM_CORES                   2

/* Internal memory range */

#define MEM_BASE_INTERNAL               0xC0000000
#define MEM_END_INTERNAL                0xFFFFFFFF
#define MEM_SIZE_INTERNAL               0x40000000

/* External memory range */

#define MEM_BASE_EXTERNAL               0x00000000
#define MEM_END_EXTERNAL                0xBFFFFFFF
#define MEM_SIZE_EXTERNAL               0xC0000000

/* Shared DDR Memory (256 MB) */

#define MEM_BASE_DDR                    0x00000000
#define MEM_END_DDR                     0x0FFFFFFF
#define MEM_SIZE_DDR                    0x10000000

/* Shared Async Memory (256 MB) */

#define MEM_BASE_ASYNC                  0xB0000000
#define MEM_END_ASYNC                   0xBFFFFFFF
#define MEM_SIZE_ASYNC                  0x10000000

/* Shared Async Memory Bank 0 (64 MB) */

#define MEM_BASE_ASYNC_0                0xB0000000
#define MEM_END_ASYNC_0                 0xB3FFFFFF
#define MEM_SIZE_ASYNC_0                0x4000000

/* Shared Async Memory Bank 1 (64 MB) */

#define MEM_BASE_ASYNC_1                0xB4000000
#define MEM_END_ASYNC_1                 0xB7FFFFFF
#define MEM_SIZE_ASYNC_1                0x4000000

/* Shared Async Memory Bank 2 (64 MB) */

#define MEM_BASE_ASYNC_2                0xB8000000
#define MEM_END_ASYNC_2                 0xBBFFFFFF
#define MEM_SIZE_ASYNC_2                0x4000000

/* Shared Async Memory Bank 3 (64 MB) */

#define MEM_BASE_ASYNC_3                0xBC000000
#define MEM_END_ASYNC_3                 0xBFFFFFFF
#define MEM_SIZE_ASYNC_3                0x4000000

/* Shared L2 ROM (32 KB) */

#define MEM_BASE_L2_ROM                 0xC8000000
#define MEM_END_L2_ROM                  0xC8007FFF
#define MEM_SIZE_L2_ROM                 0x8000

/* Shared L2 SRAM (256 KB) */

#define MEM_BASE_L2_SRAM                0xC8080000
#define MEM_END_L2_SRAM                 0xC80BFFFF
#define MEM_SIZE_L2_SRAM                0x40000

/* Core 1 L1 Data Bank A (32 KB) */

#define MEM_C1_BASE_L1DM_A              0xFF400000
#define MEM_C1_END_L1DM_A               0xFF407FFF
#define MEM_C1_SIZE_L1DM_A              0x8000

/* Core 1 L1 Data Bank A SRAM (16 KB) */

#define MEM_C1_BASE_L1DM_A_SRAM         0xFF400000
#define MEM_C1_END_L1DM_A_SRAM          0xFF403FFF
#define MEM_C1_SIZE_L1DM_A_SRAM         0x4000

/* Core 1 L1 Data Bank A SRAM/Cache (16 KB) */

#define MEM_C1_BASE_L1DM_A_SRAM_CACHE   0xFF404000
#define MEM_C1_END_L1DM_A_SRAM_CACHE    0xFF407FFF
#define MEM_C1_SIZE_L1DM_A_SRAM_CACHE   0x4000

/* Core 1 L1 Data Bank B (32 KB) */

#define MEM_C1_BASE_L1DM_B              0xFF500000
#define MEM_C1_END_L1DM_B               0xFF507FFF
#define MEM_C1_SIZE_L1DM_B              0x8000

/* Core 1 L1 Data Bank B SRAM (16 KB) */

#define MEM_C1_BASE_L1DM_B_SRAM         0xFF500000
#define MEM_C1_END_L1DM_B_SRAM          0xFF503FFF
#define MEM_C1_SIZE_L1DM_B_SRAM         0x4000

/* Core 1 L1 Data Bank B SRAM/Cache (16 KB) */

#define MEM_C1_BASE_L1DM_B_SRAM_CACHE   0xFF504000
#define MEM_C1_END_L1DM_B_SRAM_CACHE    0xFF507FFF
#define MEM_C1_SIZE_L1DM_B_SRAM_CACHE   0x4000

/* Core 1 L1 Instruction (80 KB) */

#define MEM_C1_BASE_L1IM                0xFF600000
#define MEM_C1_END_L1IM                 0xFF613FFF
#define MEM_C1_SIZE_L1IM                0x14000

/* Core 1 L1 Instruction SRAM (64 KB) */

#define MEM_C1_BASE_L1IM_SRAM           0xFF600000
#define MEM_C1_END_L1IM_SRAM            0xFF60FFFF
#define MEM_C1_SIZE_L1IM_SRAM           0x10000

/* Core 1 L1 Instruction SRAM/Cache (16 KB) */

#define MEM_C1_BASE_L1IM_SRAM_CACHE     0xFF610000
#define MEM_C1_END_L1IM_SRAM_CACHE      0xFF613FFF
#define MEM_C1_SIZE_L1IM_SRAM_CACHE     0x4000

/* Core 1 L1 Scratchpad SRAM (4 KB) */

#define MEM_C1_BASE_L1_XPAD_SRAM        0xFF700000
#define MEM_C1_END_L1_XPAD_SRAM         0xFF700FFF
#define MEM_C1_SIZE_L1_XPAD_SRAM        0x1000

/* Core 0 L1 Data Bank A (32 KB) */

#define MEM_C0_BASE_L1DM_A              0xFF800000
#define MEM_C0_END_L1DM_A               0xFF807FFF
#define MEM_C0_SIZE_L1DM_A              0x8000

/* Core 0 L1 Data Bank A SRAM (16 KB) */

#define MEM_C0_BASE_L1DM_A_SRAM         0xFF800000
#define MEM_C0_END_L1DM_A_SRAM          0xFF803FFF
#define MEM_C0_SIZE_L1DM_A_SRAM         0x4000

/* Core 0 L1 Data Bank A SRAM/Cache (16 KB) */

#define MEM_C0_BASE_L1DM_A_SRAM_CACHE   0xFF804000
#define MEM_C0_END_L1DM_A_SRAM_CACHE    0xFF807FFF
#define MEM_C0_SIZE_L1DM_A_SRAM_CACHE   0x4000

/* Core 0 L1 Data Bank B (32 KB) */

#define MEM_C0_BASE_L1DM_B              0xFF900000
#define MEM_C0_END_L1DM_B               0xFF907FFF
#define MEM_C0_SIZE_L1DM_B              0x8000

/* Core 0 L1 Data Bank B SRAM (16 KB) */

#define MEM_C0_BASE_L1DM_B_SRAM         0xFF900000
#define MEM_C0_END_L1DM_B_SRAM          0xFF903FFF
#define MEM_C0_SIZE_L1DM_B_SRAM         0x4000

/* Core 0 L1 Data Bank B SRAM/Cache (16 KB) */

#define MEM_C0_BASE_L1DM_B_SRAM_CACHE   0xFF904000
#define MEM_C0_END_L1DM_B_SRAM_CACHE    0xFF907FFF
#define MEM_C0_SIZE_L1DM_B_SRAM_CACHE   0x4000

/* Core 0 L1 Instruction (80 KB) */

#define MEM_C0_BASE_L1IM                0xFFA00000
#define MEM_C0_END_L1IM                 0xFFA13FFF
#define MEM_C0_SIZE_L1IM                0x14000

/* Core 0 L1 Instruction SRAM (64 KB) */

#define MEM_C0_BASE_L1IM_SRAM           0xFFA00000
#define MEM_C0_END_L1IM_SRAM            0xFFA0FFFF
#define MEM_C0_SIZE_L1IM_SRAM           0x10000

/* Core 0 L1 Instruction SRAM/Cache (16 KB) */

#define MEM_C0_BASE_L1IM_SRAM_CACHE     0xFFA10000
#define MEM_C0_END_L1IM_SRAM_CACHE      0xFFA13FFF
#define MEM_C0_SIZE_L1IM_SRAM_CACHE     0x4000

/* Core 0 L1 Scratchpad SRAM (4 KB) */

#define MEM_C0_BASE_L1_XPAD_SRAM        0xFFB00000
#define MEM_C0_END_L1_XPAD_SRAM         0xFFB00FFF
#define MEM_C0_SIZE_L1_XPAD_SRAM        0x1000

/* Shared System MMR Registers (2 MB) */

#define MEM_BASE_MMR_SYSTEM             0xFFC00000
#define MEM_END_MMR_SYSTEM              0xFFDFFFFF
#define MEM_SIZE_MMR_SYSTEM             0x200000

/* Core 0 Core MMR Registers (2 MB) */

#define MEM_C0_BASE_MMR_CORE            0xFFE00000
#define MEM_C0_END_MMR_CORE             0xFFFFFFFF
#define MEM_C0_SIZE_MMR_CORE            0x200000

/* Core 1 Core MMR Registers (2 MB) */

#define MEM_C1_BASE_MMR_CORE            0xFFE00000
#define MEM_C1_END_MMR_CORE             0xFFFFFFFF
#define MEM_C1_SIZE_MMR_CORE            0x200000


#endif	/* end ifndef _DEF_DEVON_FPGA_H */
